/*
 * GoJS v2.1.11 JavaScript Library for HTML Diagrams, https://gojs.net
 * GoJS and Northwoods Software are registered trademarks of Northwoods Software Corporation, https://www.nwoods.com.
 * Copyright (C) 1998-2020 by Northwoods Software Corporation.  All Rights Reserved.
 * THIS SOFTWARE IS LICENSED.  THE LICENSE AGREEMENT IS AT: https://gojs.net/2.1.11/license.html.
 * DO NOT MODIFY THIS FILE.  DO NOT DISTRIBUTE A MODIFIED COPY OF THE CONTENTS OF THIS FILE.
 */
(function () {
    var t;

    function aa(a) {
        var b = 0;
        return function () {
            return b < a.length ? {
                done: !1,
                value: a[b++]
            } : {
                done: !0
            }
        }
    }

    function ba(a) {
        var b = "undefined" != typeof Symbol && Symbol.iterator && a[Symbol.iterator];
        return b ? b.call(a) : {
            next: aa(a)
        }
    }

    function da(a) {
        for (var b, c = []; !(b = a.next()).done;) c.push(b.value);
        return c
    }
    var ea = "function" == typeof Object.create ? Object.create : function (a) {
            function b() {}
            b.prototype = a;
            return new b
        },
        fa;
    if ("function" == typeof Object.setPrototypeOf) fa = Object.setPrototypeOf;
    else {
        var ha;
        a: {
            var ia = {
                    a: !0
                },
                ja = {};
            try {
                ja.__proto__ = ia;
                ha = ja.a;
                break a
            } catch (a) {}
            ha = !1
        }
        fa = ha ? function (a, b) {
            a.__proto__ = b;
            if (a.__proto__ !== b) throw new TypeError(a + " is not extensible");
            return a
        } : null
    }
    var ka = fa;

    function la(a, b) {
        a.prototype = ea(b.prototype);
        a.prototype.constructor = a;
        if (ka) ka(a, b);
        else
            for (var c in b)
                if ("prototype" != c)
                    if (Object.defineProperties) {
                        var d = Object.getOwnPropertyDescriptor(b, c);
                        d && Object.defineProperty(a, c, d)
                    } else a[c] = b[c];
        a.LA = b.prototype
    }
    var ma = "undefined" != typeof window && window === self ? self : "undefined" != typeof global && null != global ? global : self,
        na = "function" == typeof Object.defineProperties ? Object.defineProperty : function (a, b, c) {
            a != Array.prototype && a != Object.prototype && (a[b] = c.value)
        };

    function oa(a) {
        if (a) {
            for (var b = ma, c = ["Array", "prototype", "fill"], d = 0; d < c.length - 1; d++) {
                var e = c[d];
                e in b || (b[e] = {});
                b = b[e]
            }
            c = c[c.length - 1];
            d = b[c];
            a = a(d);
            a != d && null != a && na(b, c, {
                writable: !0,
                value: a
            })
        }
    }
    oa(function (a) {
        return a ? a : function (a, c, d) {
            var b = this.length || 0;
            0 > c && (c = Math.max(0, b + c));
            if (null == d || d > b) d = b;
            d = Number(d);
            0 > d && (d = Math.max(0, b + d));
            for (c = Number(c || 0); c < d; c++) this[c] = a;
            return this
        }
    });
    var x = "object" === typeof self && self.self === self && self || "object" === typeof global && global.global === global && global || "object" === typeof window && window.window === window && window || {};
    void 0 === x.requestAnimationFrame && (x.requestAnimationFrame = x.setImmediate);

    function qa() {}

    function ra(a, b) {
        var c = -1;
        return function () {
            var d = this,
                e = arguments; - 1 !== c && x.clearTimeout(c);
            c = sa(function () {
                c = -1;
                a.apply(d, e)
            }, b)
        }
    }

    function sa(a, b) {
        return x.setTimeout(a, b)
    }

    function ta(a) {
        return x.document.createElement(a)
    }

    function B(a) {
        throw Error(a);
    }

    function ua(a, b) {
        a = "The object is frozen, so its properties cannot be set: " + a.toString();
        void 0 !== b && (a += "  to value: " + b);
        B(a)
    }

    function va(a, b, c, d) {
        c = null === c ? "*" : "string" === typeof c ? c : "function" === typeof c && "string" === typeof c.className ? c.className : "";
        void 0 !== d && (c += "." + d);
        B(c + " is not in the range " + b + ": " + a)
    }

    function wa(a) {
        x.console && x.console.log(a)
    }

    function ya() {
        x.console && x.console.log("Warning: List/Map/Set constructors no longer take an argument that enforces type.Instead they take an optional collection of Values to add to the collection. See 2.0 changelog for details.")
    }

    function za(a) {
        return "object" === typeof a && null !== a
    }

    function Aa(a) {
        return Array.isArray(a) || x.NodeList && a instanceof x.NodeList || x.HTMLCollection && a instanceof x.HTMLCollection
    }

    function Ba(a) {
        return Array.prototype.slice.call(a)
    }

    function Ca(a, b, c) {
        Array.isArray(a) ? b >= a.length ? a.push(c) : a.splice(b, 0, c) : B("Cannot insert an object into an HTMLCollection or NodeList: " + c + " at " + b)
    }

    function Da(a, b) {
        Array.isArray(a) ? b >= a.length ? a.pop() : a.splice(b, 1) : B("Cannot remove an object from an HTMLCollection or NodeList at " + b)
    }

    function Fa() {
        var a = Ga.pop();
        return void 0 === a ? [] : a
    }

    function Ha(a) {
        a.length = 0;
        Ga.push(a)
    }

    function Ia(a) {
        if ("function" === typeof a) {
            if (a.className) return a.className;
            if (a.name) return a.name;
            var b = a.toString();
            b = b.substring(9, b.indexOf("(")).trim();
            if ("" !== b) return a._className = b
        } else if (za(a) && a.constructor) return Ia(a.constructor);
        return typeof a
    }

    function Ja(a) {
        var b = a;
        za(a) && (a.text ? b = a.text : a.name ? b = a.name : void 0 !== a.key ? b = a.key : void 0 !== a.id ? b = a.id : a.constructor === Object && (a.Text ? b = a.Text : a.Name ? b = a.Name : void 0 !== a.Key ? b = a.Key : void 0 !== a.Id ? b = a.Id : void 0 !== a.ID && (b = a.ID)));
        return void 0 === b ? "undefined" : null === b ? "null" : b.toString()
    }

    function Ka(a, b) {
        if (a.hasOwnProperty(b)) return !0;
        for (a = Object.getPrototypeOf(a); a && a !== Function;) {
            if (a.hasOwnProperty(b)) return !0;
            var c = a.FA;
            if (c && c[b]) return !0;
            a = Object.getPrototypeOf(a)
        }
        return !1
    }

    function La(a, b, c) {
        Object.defineProperty(Oa.prototype, a, {
            get: b,
            set: c
        })
    }

    function Pa() {
        var a = Qa;
        if (0 === a.length)
            for (var b = x.document.getElementsByTagName("canvas"), c = b.length, d = 0; d < c; d++) {
                var e = b[d];
                e.parentElement && e.parentElement.B && a.push(e.parentElement.B)
            }
        return a
    }

    function Ra(a) {
        for (var b = [], c = 0; 256 > c; c++) b["0123456789abcdef".charAt(c >> 4) + "0123456789abcdef".charAt(c & 15)] = String.fromCharCode(c);
        a.length % 2 && (a = "0" + a);
        c = [];
        for (var d = 0, e = 0; e < a.length; e += 2) c[d++] = b[a.substr(e, 2)];
        a = c.join("");
        a = "" === a ? "0" : a;
        b = [];
        for (c = 0; 256 > c; c++) b[c] = c;
        for (c = d = 0; 256 > c; c++) d = (d + b[c] + 119) % 256, e = b[c], b[c] = b[d], b[d] = e;
        d = c = 0;
        for (var f = "", g = 0; g < a.length; g++) c = (c + 1) % 256, d = (d + b[c]) % 256, e = b[c], b[c] = b[d], b[d] = e, f += String.fromCharCode(a.charCodeAt(g) ^ b[(b[c] + b[d]) % 256]);
        return f
    }
    var Sa = void 0 !== x.navigator && 0 < x.navigator.userAgent.indexOf("MSIE 9.0"),
        Ta = void 0 !== x.navigator && 0 < x.navigator.userAgent.indexOf("MSIE 10.0"),
        Ua = void 0 !== x.navigator && 0 < x.navigator.userAgent.indexOf("Trident/7"),
        Va = void 0 !== x.navigator && 0 < x.navigator.userAgent.indexOf("Edge/"),
        Wa = void 0 !== x.navigator && void 0 !== x.navigator.platform && 0 <= x.navigator.platform.toUpperCase().indexOf("MAC"),
        Xa = void 0 !== x.navigator && void 0 !== x.navigator.platform && null !== x.navigator.platform.match(/(iPhone|iPod|iPad)/i),
        Ga = [];
    Object.freeze([]);
    var Qa = [];
    qa.className = "Util";
    qa.Dx = "32ab5ff3b26f42dc0ed90f21442913b5";
    qa.adym = "gojs.net";
    qa.vfo = "28e647fdb267";
    qa.className = "Util";

    function D(a, b, c) {
        Ya(this);
        this.l = a;
        this.Ra = b;
        this.u = c
    }
    D.prototype.toString = function () {
        return "EnumValue." + this.Ra
    };

    function Za(a, b) {
        return void 0 === b || null === b || "" === b ? null : a[b]
    }
    ma.Object.defineProperties(D.prototype, {
        classType: {
            get: function () {
                return this.l
            }
        },
        name: {
            get: function () {
                return this.Ra
            }
        },
        value: {
            get: function () {
                return this.u
            }
        }
    });
    D.className = "EnumValue";

    function cb() {
        this.Ow = []
    }
    cb.prototype.toString = function () {
        return this.Ow.join("")
    };
    cb.prototype.add = function (a) {
        "" !== a && this.Ow.push(a)
    };
    cb.className = "StringBuilder";

    function db() {}
    db.className = "PropertyCollection";

    function eb() {}
    eb.prototype.reset = function () {};
    eb.prototype.next = function () {
        return !1
    };
    eb.prototype.ed = function () {
        return !1
    };
    eb.prototype.first = function () {
        return null
    };
    eb.prototype.any = function () {
        return !1
    };
    eb.prototype.all = function () {
        return !0
    };
    eb.prototype.each = function () {
        return this
    };
    eb.prototype.map = function () {
        return this
    };
    eb.prototype.filter = function () {
        return this
    };
    eb.prototype.Bd = function () {};
    eb.prototype.toString = function () {
        return "EmptyIterator"
    };
    ma.Object.defineProperties(eb.prototype, {
        iterator: {
            get: function () {
                return this
            }
        },
        count: {
            get: function () {
                return 0
            }
        }
    });
    eb.prototype.first = eb.prototype.first;
    eb.prototype.hasNext = eb.prototype.ed;
    eb.prototype.next = eb.prototype.next;
    eb.prototype.reset = eb.prototype.reset;
    var fb = null;
    eb.className = "EmptyIterator";
    fb = new eb;

    function gb(a) {
        this.key = -1;
        this.value = a
    }
    gb.prototype.reset = function () {
        this.key = -1
    };
    gb.prototype.next = function () {
        return -1 === this.key ? (this.key = 0, !0) : !1
    };
    gb.prototype.ed = function () {
        return this.next()
    };
    gb.prototype.first = function () {
        this.key = 0;
        return this.value
    };
    gb.prototype.any = function (a) {
        this.key = -1;
        return a(this.value)
    };
    gb.prototype.all = function (a) {
        this.key = -1;
        return a(this.value)
    };
    gb.prototype.each = function (a) {
        this.key = -1;
        a(this.value);
        return this
    };
    gb.prototype.map = function (a) {
        return new gb(a(this.value))
    };
    gb.prototype.filter = function (a) {
        return a(this.value) ? new gb(this.value) : fb
    };
    gb.prototype.Bd = function () {
        this.value = null
    };
    gb.prototype.toString = function () {
        return "SingletonIterator(" + this.value + ")"
    };
    ma.Object.defineProperties(gb.prototype, {
        iterator: {
            get: function () {
                return this
            }
        },
        count: {
            get: function () {
                return 1
            }
        }
    });
    gb.prototype.first = gb.prototype.first;
    gb.prototype.hasNext = gb.prototype.ed;
    gb.prototype.next = gb.prototype.next;
    gb.prototype.reset = gb.prototype.reset;
    gb.className = "SingletonIterator";

    function jb(a) {
        this.nb = a;
        this.$e = null;
        a.Fa = null;
        this.ia = a.Aa;
        this.Pa = -1
    }
    jb.prototype.reset = function () {
        var a = this.nb;
        a.Fa = null;
        this.ia = a.Aa;
        this.Pa = -1
    };
    jb.prototype.next = function () {
        var a = this.nb;
        if (a.Aa !== this.ia && 0 > this.key) return !1;
        a = a.j;
        var b = a.length,
            c = ++this.Pa,
            d = this.$e;
        if (null !== d)
            for (; c < b;) {
                var e = a[c];
                if (d(e)) return this.key = this.Pa = c, this.value = e, !0;
                c++
            } else {
                if (c < b) return this.key = c, this.value = a[c], !0;
                this.Bd()
            }
        return !1
    };
    jb.prototype.ed = function () {
        return this.next()
    };
    jb.prototype.first = function () {
        var a = this.nb;
        this.ia = a.Aa;
        this.Pa = 0;
        a = a.j;
        var b = a.length,
            c = this.$e;
        if (null !== c) {
            for (var d = 0; d < b;) {
                var e = a[d];
                if (c(e)) return this.key = this.Pa = d, this.value = e;
                d++
            }
            return null
        }
        return 0 < b ? (a = a[0], this.key = 0, this.value = a) : null
    };
    jb.prototype.any = function (a) {
        var b = this.nb;
        b.Fa = null;
        this.Pa = -1;
        b = b.j;
        for (var c = b.length, d = this.$e, e = 0; e < c; e++) {
            var f = b[e];
            if ((null === d || d(f)) && a(f)) return !0
        }
        return !1
    };
    jb.prototype.all = function (a) {
        var b = this.nb;
        b.Fa = null;
        this.Pa = -1;
        b = b.j;
        for (var c = b.length, d = this.$e, e = 0; e < c; e++) {
            var f = b[e];
            if ((null === d || d(f)) && !a(f)) return !1
        }
        return !0
    };
    jb.prototype.each = function (a) {
        var b = this.nb;
        b.Fa = null;
        this.Pa = -1;
        b = b.j;
        for (var c = b.length, d = this.$e, e = 0; e < c; e++) {
            var f = b[e];
            (null === d || d(f)) && a(f)
        }
        return this
    };
    jb.prototype.map = function (a) {
        var b = this.nb;
        b.Fa = null;
        this.Pa = -1;
        var c = [];
        b = b.j;
        for (var d = b.length, e = this.$e, f = 0; f < d; f++) {
            var g = b[f];
            (null === e || e(g)) && c.push(a(g))
        }
        a = new E;
        a.j = c;
        a.ib();
        return a.iterator
    };
    jb.prototype.filter = function (a) {
        var b = this.nb;
        b.Fa = null;
        this.Pa = -1;
        var c = [];
        b = b.j;
        for (var d = b.length, e = this.$e, f = 0; f < d; f++) {
            var g = b[f];
            (null === e || e(g)) && a(g) && c.push(g)
        }
        a = new E;
        a.j = c;
        a.ib();
        return a.iterator
    };
    jb.prototype.Bd = function () {
        this.key = -1;
        this.value = null;
        this.ia = -1;
        this.$e = null;
        this.nb.Fa = this
    };
    jb.prototype.toString = function () {
        return "ListIterator@" + this.Pa + "/" + this.nb.count
    };
    ma.Object.defineProperties(jb.prototype, {
        iterator: {
            get: function () {
                return this
            }
        },
        predicate: {
            get: function () {
                return this.$e
            },
            set: function (a) {
                this.$e = a
            }
        },
        count: {
            get: function () {
                var a = this.$e;
                if (null !== a) {
                    for (var b = 0, c = this.nb.j, d = c.length, e = 0; e < d; e++) a(c[e]) && b++;
                    return b
                }
                return this.nb.j.length
            }
        }
    });
    jb.prototype.first = jb.prototype.first;
    jb.prototype.hasNext = jb.prototype.ed;
    jb.prototype.next = jb.prototype.next;
    jb.prototype.reset = jb.prototype.reset;
    jb.className = "ListIterator";

    function kb(a) {
        this.nb = a;
        a.bh = null;
        this.ia = a.Aa;
        this.Pa = a.j.length
    }
    kb.prototype.reset = function () {
        var a = this.nb;
        a.bh = null;
        this.ia = a.Aa;
        this.Pa = a.j.length
    };
    kb.prototype.next = function () {
        var a = this.nb;
        if (a.Aa !== this.ia && 0 > this.key) return !1;
        var b = --this.Pa;
        if (0 <= b) return this.key = b, this.value = a.j[b], !0;
        this.Bd();
        return !1
    };
    kb.prototype.ed = function () {
        return this.next()
    };
    kb.prototype.first = function () {
        var a = this.nb;
        this.ia = a.Aa;
        var b = a.j;
        this.Pa = a = b.length - 1;
        return 0 <= a ? (b = b[a], this.key = a, this.value = b) : null
    };
    kb.prototype.any = function (a) {
        var b = this.nb;
        b.bh = null;
        b = b.j;
        var c = b.length;
        this.Pa = c;
        for (--c; 0 <= c; c--)
            if (a(b[c])) return !0;
        return !1
    };
    kb.prototype.all = function (a) {
        var b = this.nb;
        b.bh = null;
        b = b.j;
        var c = b.length;
        this.Pa = c;
        for (--c; 0 <= c; c--)
            if (!a(b[c])) return !1;
        return !0
    };
    kb.prototype.each = function (a) {
        var b = this.nb;
        b.bh = null;
        b = b.j;
        var c = b.length;
        this.Pa = c;
        for (--c; 0 <= c; c--) a(b[c]);
        return this
    };
    kb.prototype.map = function (a) {
        var b = this.nb;
        b.bh = null;
        var c = [];
        b = b.j;
        var d = b.length;
        this.Pa = d;
        for (--d; 0 <= d; d--) c.push(a(b[d]));
        a = new E;
        a.j = c;
        a.ib();
        return a.iterator
    };
    kb.prototype.filter = function (a) {
        var b = this.nb;
        b.bh = null;
        var c = [];
        b = b.j;
        var d = b.length;
        this.Pa = d;
        for (--d; 0 <= d; d--) {
            var e = b[d];
            a(e) && c.push(e)
        }
        a = new E;
        a.j = c;
        a.ib();
        return a.iterator
    };
    kb.prototype.Bd = function () {
        this.key = -1;
        this.value = null;
        this.ia = -1;
        this.nb.bh = this
    };
    kb.prototype.toString = function () {
        return "ListIteratorBackwards(" + this.Pa + "/" + this.nb.count + ")"
    };
    ma.Object.defineProperties(kb.prototype, {
        iterator: {
            get: function () {
                return this
            }
        },
        count: {
            get: function () {
                return this.nb.j.length
            }
        }
    });
    kb.prototype.first = kb.prototype.first;
    kb.prototype.hasNext = kb.prototype.ed;
    kb.prototype.next = kb.prototype.next;
    kb.prototype.reset = kb.prototype.reset;
    kb.className = "ListIteratorBackwards";

    function E(a) {
        Ya(this);
        this.s = !1;
        this.j = [];
        this.Aa = 0;
        this.bh = this.Fa = null;
        void 0 !== a && ("function" === typeof a || "string" === typeof a ? ya() : this.addAll(a))
    }
    t = E.prototype;
    t.ib = function () {
        var a = this.Aa;
        a++;
        999999999 < a && (a = 0);
        this.Aa = a
    };
    t.freeze = function () {
        this.s = !0;
        return this
    };
    t.ea = function () {
        this.s = !1;
        return this
    };
    t.toString = function () {
        return "List()#" + lb(this)
    };
    t.add = function (a) {
        if (null === a) return this;
        this.s && ua(this, a);
        this.j.push(a);
        this.ib();
        return this
    };
    t.push = function (a) {
        this.add(a)
    };
    t.addAll = function (a) {
        if (null === a) return this;
        this.s && ua(this);
        var b = this.j;
        if (Aa(a))
            for (var c = a.length, d = 0; d < c; d++) b.push(a[d]);
        else
            for (a = a.iterator; a.next();) b.push(a.value);
        this.ib();
        return this
    };
    t.clear = function () {
        this.s && ua(this);
        this.j.length = 0;
        this.ib()
    };
    t.contains = function (a) {
        return null === a ? !1 : -1 !== this.j.indexOf(a)
    };
    t.has = function (a) {
        return this.contains(a)
    };
    t.indexOf = function (a) {
        return null === a ? -1 : this.j.indexOf(a)
    };
    t.L = function (a) {
        var b = this.j;
        (0 > a || a >= b.length) && va(a, "0 <= i < length", E, "elt:i");
        return b[a]
    };
    t.get = function (a) {
        return this.L(a)
    };
    t.gd = function (a, b) {
        var c = this.j;
        (0 > a || a >= c.length) && va(a, "0 <= i < length", E, "setElt:i");
        this.s && ua(this, a);
        c[a] = b
    };
    t.set = function (a, b) {
        this.gd(a, b)
    };
    t.first = function () {
        var a = this.j;
        return 0 === a.length ? null : a[0]
    };
    t.Xb = function () {
        var a = this.j,
            b = a.length;
        return 0 < b ? a[b - 1] : null
    };
    t.pop = function () {
        this.s && ua(this);
        var a = this.j;
        return 0 < a.length ? a.pop() : null
    };
    E.prototype.any = function (a) {
        for (var b = this.j, c = b.length, d = 0; d < c; d++)
            if (a(b[d])) return !0;
        return !1
    };
    E.prototype.all = function (a) {
        for (var b = this.j, c = b.length, d = 0; d < c; d++)
            if (!a(b[d])) return !1;
        return !0
    };
    E.prototype.each = function (a) {
        for (var b = this.j, c = b.length, d = 0; d < c; d++) a(b[d]);
        return this
    };
    E.prototype.map = function (a) {
        for (var b = new E, c = [], d = this.j, e = d.length, f = 0; f < e; f++) c.push(a(d[f]));
        b.j = c;
        b.ib();
        return b
    };
    E.prototype.filter = function (a) {
        for (var b = new E, c = [], d = this.j, e = d.length, f = 0; f < e; f++) {
            var g = d[f];
            a(g) && c.push(g)
        }
        b.j = c;
        b.ib();
        return b
    };
    t = E.prototype;
    t.Kb = function (a, b) {
        0 > a && va(a, ">= 0", E, "insertAt:i");
        this.s && ua(this, a);
        var c = this.j;
        a >= c.length ? c.push(b) : c.splice(a, 0, b);
        this.ib()
    };
    t.remove = function (a) {
        if (null === a) return !1;
        this.s && ua(this, a);
        var b = this.j;
        a = b.indexOf(a);
        if (-1 === a) return !1;
        a === b.length - 1 ? b.pop() : b.splice(a, 1);
        this.ib();
        return !0
    };
    t.delete = function (a) {
        return this.remove(a)
    };
    t.lb = function (a) {
        var b = this.j;
        (0 > a || a >= b.length) && va(a, "0 <= i < length", E, "removeAt:i");
        this.s && ua(this, a);
        a === b.length - 1 ? b.pop() : b.splice(a, 1);
        this.ib()
    };
    t.removeRange = function (a, b) {
        var c = this.j,
            d = c.length;
        if (0 > a) a = 0;
        else if (a >= d) return this;
        if (0 > b) return this;
        b >= d && (b = d - 1);
        if (a > b) return this;
        this.s && ua(this);
        for (var e = a, f = b + 1; f < d;) c[e++] = c[f++];
        c.length = d - (b - a + 1);
        this.ib();
        return this
    };
    E.prototype.copy = function () {
        var a = new E,
            b = this.j;
        0 < b.length && (a.j = Array.prototype.slice.call(b));
        return a
    };
    t = E.prototype;
    t.na = function () {
        for (var a = this.j, b = this.count, c = Array(b), d = 0; d < b; d++) c[d] = a[d];
        return c
    };
    t.mw = function () {
        for (var a = new F, b = this.j, c = this.count, d = 0; d < c; d++) a.add(b[d]);
        return a
    };
    t.sort = function (a) {
        this.s && ua(this);
        this.j.sort(a);
        this.ib();
        return this
    };
    t.ej = function (a, b, c) {
        var d = this.j,
            e = d.length;
        void 0 === b && (b = 0);
        void 0 === c && (c = e);
        this.s && ua(this);
        var f = c - b;
        if (1 >= f) return this;
        (0 > b || b >= e - 1) && va(b, "0 <= from < length", E, "sortRange:from");
        if (2 === f) return c = d[b], e = d[b + 1], 0 < a(c, e) && (d[b] = e, d[b + 1] = c, this.ib()), this;
        if (0 === b)
            if (c >= e) d.sort(a);
            else
                for (b = d.slice(0, c), b.sort(a), a = 0; a < c; a++) d[a] = b[a];
        else if (c >= e)
            for (c = d.slice(b), c.sort(a), a = b; a < e; a++) d[a] = c[a - b];
        else
            for (e = d.slice(b, c), e.sort(a), a = b; a < c; a++) d[a] = e[a - b];
        this.ib();
        return this
    };
    t.reverse = function () {
        this.s && ua(this);
        this.j.reverse();
        this.ib();
        return this
    };
    ma.Object.defineProperties(E.prototype, {
        _dataArray: {
            get: function () {
                return this.j
            }
        },
        count: {
            get: function () {
                return this.j.length
            }
        },
        size: {
            get: function () {
                return this.j.length
            }
        },
        length: {
            get: function () {
                return this.j.length
            }
        },
        iterator: {
            get: function () {
                if (0 >= this.j.length) return fb;
                var a = this.Fa;
                return null !== a ? (a.reset(), a) : new jb(this)
            }
        },
        iteratorBackwards: {
            get: function () {
                if (0 >= this.j.length) return fb;
                var a = this.bh;
                return null !== a ? (a.reset(), a) : new kb(this)
            }
        }
    });
    E.prototype.reverse = E.prototype.reverse;
    E.prototype.sortRange = E.prototype.ej;
    E.prototype.sort = E.prototype.sort;
    E.prototype.toSet = E.prototype.mw;
    E.prototype.toArray = E.prototype.na;
    E.prototype.removeRange = E.prototype.removeRange;
    E.prototype.removeAt = E.prototype.lb;
    E.prototype["delete"] = E.prototype.delete;
    E.prototype.remove = E.prototype.remove;
    E.prototype.insertAt = E.prototype.Kb;
    E.prototype.pop = E.prototype.pop;
    E.prototype.last = E.prototype.Xb;
    E.prototype.first = E.prototype.first;
    E.prototype.set = E.prototype.set;
    E.prototype.setElt = E.prototype.gd;
    E.prototype.get = E.prototype.get;
    E.prototype.elt = E.prototype.L;
    E.prototype.indexOf = E.prototype.indexOf;
    E.prototype.has = E.prototype.has;
    E.prototype.contains = E.prototype.contains;
    E.prototype.clear = E.prototype.clear;
    E.prototype.addAll = E.prototype.addAll;
    E.prototype.push = E.prototype.push;
    E.prototype.add = E.prototype.add;
    E.prototype.thaw = E.prototype.ea;
    E.prototype.freeze = E.prototype.freeze;
    E.className = "List";

    function mb(a) {
        this.rg = a;
        a.Fa = null;
        this.ia = a.Aa;
        this.la = null
    }
    mb.prototype.reset = function () {
        var a = this.rg;
        a.Fa = null;
        this.ia = a.Aa;
        this.la = null
    };
    mb.prototype.next = function () {
        var a = this.rg;
        if (a.Aa !== this.ia && null === this.key) return !1;
        var b = this.la;
        b = null === b ? a.ba : b.oa;
        if (null !== b) return this.la = b, this.value = b.value, this.key = b.key, !0;
        this.Bd();
        return !1
    };
    mb.prototype.ed = function () {
        return this.next()
    };
    mb.prototype.first = function () {
        var a = this.rg;
        this.ia = a.Aa;
        a = a.ba;
        if (null !== a) {
            this.la = a;
            var b = a.value;
            this.key = a.key;
            return this.value = b
        }
        return null
    };
    mb.prototype.any = function (a) {
        var b = this.rg;
        this.la = b.Fa = null;
        for (b = b.ba; null !== b;) {
            if (a(b.value)) return !0;
            b = b.oa
        }
        return !1
    };
    mb.prototype.all = function (a) {
        var b = this.rg;
        this.la = b.Fa = null;
        for (b = b.ba; null !== b;) {
            if (!a(b.value)) return !1;
            b = b.oa
        }
        return !0
    };
    mb.prototype.each = function (a) {
        var b = this.rg;
        this.la = b.Fa = null;
        for (b = b.ba; null !== b;) a(b.value), b = b.oa;
        return this
    };
    mb.prototype.map = function (a) {
        var b = this.rg;
        b.Fa = null;
        var c = new E;
        for (b = b.ba; null !== b;) c.add(a(b.value)), b = b.oa;
        return c.iterator
    };
    mb.prototype.filter = function (a) {
        var b = this.rg;
        b.Fa = null;
        var c = new E;
        for (b = b.ba; null !== b;) {
            var d = b.value;
            a(d) && c.add(d);
            b = b.oa
        }
        return c.iterator
    };
    mb.prototype.Bd = function () {
        this.value = this.key = null;
        this.ia = -1;
        this.rg.Fa = this
    };
    mb.prototype.toString = function () {
        return null !== this.la ? "SetIterator@" + this.la.value : "SetIterator"
    };
    ma.Object.defineProperties(mb.prototype, {
        iterator: {
            get: function () {
                return this
            }
        },
        count: {
            get: function () {
                return this.rg.Cb
            }
        }
    });
    mb.prototype.first = mb.prototype.first;
    mb.prototype.hasNext = mb.prototype.ed;
    mb.prototype.next = mb.prototype.next;
    mb.prototype.reset = mb.prototype.reset;
    mb.className = "SetIterator";

    function F(a) {
        Ya(this);
        this.s = !1;
        this.Eb = {};
        this.Cb = 0;
        this.Fa = null;
        this.Aa = 0;
        this.Ue = this.ba = null;
        void 0 !== a && ("function" === typeof a || "string" === typeof a ? ya() : this.addAll(a))
    }
    t = F.prototype;
    t.ib = function () {
        var a = this.Aa;
        a++;
        999999999 < a && (a = 0);
        this.Aa = a
    };
    t.freeze = function () {
        this.s = !0;
        return this
    };
    t.ea = function () {
        this.s = !1;
        return this
    };
    t.toString = function () {
        return "Set()#" + lb(this)
    };
    t.add = function (a) {
        if (null === a) return this;
        this.s && ua(this, a);
        var b = a;
        za(a) && (b = nb(a));
        void 0 === this.Eb[b] && (this.Cb++, a = new ob(a, a), this.Eb[b] = a, b = this.Ue, null === b ? this.ba = a : (a.Dl = b, b.oa = a), this.Ue = a, this.ib());
        return this
    };
    t.addAll = function (a) {
        if (null === a) return this;
        this.s && ua(this);
        if (Aa(a))
            for (var b = a.length, c = 0; c < b; c++) this.add(a[c]);
        else
            for (a = a.iterator; a.next();) this.add(a.value);
        return this
    };
    t.contains = function (a) {
        if (null === a) return !1;
        var b = a;
        return za(a) && (b = lb(a), void 0 === b) ? !1 : void 0 !== this.Eb[b]
    };
    t.has = function (a) {
        return this.contains(a)
    };
    t.Uy = function (a) {
        if (null === a) return !0;
        for (a = a.iterator; a.next();)
            if (!this.contains(a.value)) return !1;
        return !0
    };
    t.Vy = function (a) {
        if (null === a) return !0;
        for (a = a.iterator; a.next();)
            if (this.contains(a.value)) return !0;
        return !1
    };
    t.first = function () {
        var a = this.ba;
        return null === a ? null : a.value
    };
    F.prototype.any = function (a) {
        for (var b = this.ba; null !== b;) {
            if (a(b.value)) return !0;
            b = b.oa
        }
        return !1
    };
    F.prototype.all = function (a) {
        for (var b = this.ba; null !== b;) {
            if (!a(b.value)) return !1;
            b = b.oa
        }
        return !0
    };
    F.prototype.each = function (a) {
        for (var b = this.ba; null !== b;) a(b.value), b = b.oa;
        return this
    };
    F.prototype.map = function (a) {
        for (var b = new F, c = this.ba; null !== c;) b.add(a(c.value)), c = c.oa;
        return b
    };
    F.prototype.filter = function (a) {
        for (var b = new F, c = this.ba; null !== c;) {
            var d = c.value;
            a(d) && b.add(d);
            c = c.oa
        }
        return b
    };
    t = F.prototype;
    t.remove = function (a) {
        if (null === a) return !1;
        this.s && ua(this, a);
        var b = a;
        if (za(a) && (b = lb(a), void 0 === b)) return !1;
        a = this.Eb[b];
        if (void 0 === a) return !1;
        var c = a.oa,
            d = a.Dl;
        null !== c && (c.Dl = d);
        null !== d && (d.oa = c);
        this.ba === a && (this.ba = c);
        this.Ue === a && (this.Ue = d);
        delete this.Eb[b];
        this.Cb--;
        this.ib();
        return !0
    };
    t.delete = function (a) {
        return this.remove(a)
    };
    t.Fq = function (a) {
        if (null === a) return this;
        this.s && ua(this);
        if (Aa(a))
            for (var b = a.length, c = 0; c < b; c++) this.remove(a[c]);
        else
            for (a = a.iterator; a.next();) this.remove(a.value);
        return this
    };
    t.qA = function (a) {
        if (null === a || 0 === this.count) return this;
        this.s && ua(this);
        var b = new F;
        b.addAll(a);
        a = [];
        for (var c = this.iterator; c.next();) {
            var d = c.value;
            b.contains(d) || a.push(d)
        }
        this.Fq(a);
        return this
    };
    t.clear = function () {
        this.s && ua(this);
        this.Eb = {};
        this.Cb = 0;
        null !== this.Fa && this.Fa.reset();
        this.Ue = this.ba = null;
        this.ib()
    };
    F.prototype.copy = function () {
        var a = new F,
            b = this.Eb,
            c;
        for (c in b) a.add(b[c].value);
        return a
    };
    F.prototype.na = function () {
        var a = Array(this.Cb),
            b = this.Eb,
            c = 0,
            d;
        for (d in b) a[c] = b[d].value, c++;
        return a
    };
    F.prototype.lw = function () {
        var a = new E,
            b = this.Eb,
            c;
        for (c in b) a.add(b[c].value);
        return a
    };

    function Ya(a) {
        a.__gohashid = pb++
    }

    function nb(a) {
        var b = a.__gohashid;
        void 0 === b && (b = pb++, a.__gohashid = b);
        return b
    }

    function lb(a) {
        return a.__gohashid
    }
    ma.Object.defineProperties(F.prototype, {
        count: {
            get: function () {
                return this.Cb
            }
        },
        size: {
            get: function () {
                return this.Cb
            }
        },
        iterator: {
            get: function () {
                if (0 >= this.Cb) return fb;
                var a = this.Fa;
                return null !== a ? (a.reset(), a) : new mb(this)
            }
        }
    });
    F.prototype.toList = F.prototype.lw;
    F.prototype.toArray = F.prototype.na;
    F.prototype.clear = F.prototype.clear;
    F.prototype.retainAll = F.prototype.qA;
    F.prototype.removeAll = F.prototype.Fq;
    F.prototype["delete"] = F.prototype.delete;
    F.prototype.remove = F.prototype.remove;
    F.prototype.first = F.prototype.first;
    F.prototype.containsAny = F.prototype.Vy;
    F.prototype.containsAll = F.prototype.Uy;
    F.prototype.has = F.prototype.has;
    F.prototype.contains = F.prototype.contains;
    F.prototype.addAll = F.prototype.addAll;
    F.prototype.add = F.prototype.add;
    F.prototype.thaw = F.prototype.ea;
    F.prototype.freeze = F.prototype.freeze;
    var pb = 1;
    F.className = "Set";
    F.uniqueHash = Ya;
    F.hashIdUnique = nb;
    F.hashId = lb;

    function rb(a) {
        this.fa = a;
        this.ia = a.Aa;
        this.la = null
    }
    rb.prototype.reset = function () {
        this.ia = this.fa.Aa;
        this.la = null
    };
    rb.prototype.next = function () {
        var a = this.fa;
        if (a.Aa !== this.ia && null === this.key) return !1;
        var b = this.la;
        b = null === b ? a.ba : b.oa;
        if (null !== b) return this.la = b, this.value = this.key = a = b.key, !0;
        this.Bd();
        return !1
    };
    rb.prototype.ed = function () {
        return this.next()
    };
    rb.prototype.first = function () {
        var a = this.fa;
        this.ia = a.Aa;
        a = a.ba;
        return null !== a ? (this.la = a, this.value = this.key = a = a.key) : null
    };
    rb.prototype.any = function (a) {
        var b = this.fa;
        this.la = null;
        for (b = b.ba; null !== b;) {
            if (a(b.key)) return !0;
            b = b.oa
        }
        return !1
    };
    rb.prototype.all = function (a) {
        var b = this.fa;
        this.la = null;
        for (b = b.ba; null !== b;) {
            if (!a(b.key)) return !1;
            b = b.oa
        }
        return !0
    };
    rb.prototype.each = function (a) {
        var b = this.fa;
        this.la = null;
        for (b = b.ba; null !== b;) a(b.key), b = b.oa;
        return this
    };
    rb.prototype.map = function (a) {
        var b = this.fa;
        this.la = null;
        var c = new E;
        for (b = b.ba; null !== b;) c.add(a(b.key)), b = b.oa;
        return c.iterator
    };
    rb.prototype.filter = function (a) {
        var b = this.fa;
        this.la = null;
        var c = new E;
        for (b = b.ba; null !== b;) {
            var d = b.key;
            a(d) && c.add(d);
            b = b.oa
        }
        return c.iterator
    };
    rb.prototype.Bd = function () {
        this.value = this.key = null;
        this.ia = -1
    };
    rb.prototype.toString = function () {
        return null !== this.la ? "MapKeySetIterator@" + this.la.value : "MapKeySetIterator"
    };
    ma.Object.defineProperties(rb.prototype, {
        iterator: {
            get: function () {
                return this
            }
        },
        count: {
            get: function () {
                return this.fa.Cb
            }
        }
    });
    rb.prototype.first = rb.prototype.first;
    rb.prototype.hasNext = rb.prototype.ed;
    rb.prototype.next = rb.prototype.next;
    rb.prototype.reset = rb.prototype.reset;
    rb.className = "MapKeySetIterator";

    function sb(a) {
        F.call(this);
        Ya(this);
        this.s = !0;
        this.fa = a
    }
    la(sb, F);
    t = sb.prototype;
    t.freeze = function () {
        return this
    };
    t.ea = function () {
        return this
    };
    t.toString = function () {
        return "MapKeySet(" + this.fa.toString() + ")"
    };
    t.add = function () {
        B("This Set is read-only: " + this.toString());
        return this
    };
    t.contains = function (a) {
        return this.fa.contains(a)
    };
    t.has = function (a) {
        return this.contains(a)
    };
    t.remove = function () {
        B("This Set is read-only: " + this.toString());
        return !1
    };
    t.delete = function (a) {
        return this.remove(a)
    };
    t.clear = function () {
        B("This Set is read-only: " + this.toString())
    };
    t.first = function () {
        var a = this.fa.ba;
        return null !== a ? a.key : null
    };
    sb.prototype.any = function (a) {
        for (var b = this.fa.ba; null !== b;) {
            if (a(b.key)) return !0;
            b = b.oa
        }
        return !1
    };
    sb.prototype.all = function (a) {
        for (var b = this.fa.ba; null !== b;) {
            if (!a(b.key)) return !1;
            b = b.oa
        }
        return !0
    };
    sb.prototype.each = function (a) {
        for (var b = this.fa.ba; null !== b;) a(b.key), b = b.oa;
        return this
    };
    sb.prototype.map = function (a) {
        for (var b = new F, c = this.fa.ba; null !== c;) b.add(a(c.key)), c = c.oa;
        return b
    };
    sb.prototype.filter = function (a) {
        for (var b = new F, c = this.fa.ba; null !== c;) {
            var d = c.key;
            a(d) && b.add(d);
            c = c.oa
        }
        return b
    };
    sb.prototype.copy = function () {
        return new sb(this.fa)
    };
    sb.prototype.mw = function () {
        var a = new F,
            b = this.fa.Eb,
            c;
        for (c in b) a.add(b[c].key);
        return a
    };
    sb.prototype.na = function () {
        var a = this.fa.Eb,
            b = Array(this.fa.Cb),
            c = 0,
            d;
        for (d in a) b[c] = a[d].key, c++;
        return b
    };
    sb.prototype.lw = function () {
        var a = new E,
            b = this.fa.Eb,
            c;
        for (c in b) a.add(b[c].key);
        return a
    };
    ma.Object.defineProperties(sb.prototype, {
        count: {
            get: function () {
                return this.fa.Cb
            }
        },
        size: {
            get: function () {
                return this.fa.Cb
            }
        },
        iterator: {
            get: function () {
                return 0 >= this.fa.Cb ? fb : new rb(this.fa)
            }
        }
    });
    sb.prototype.toList = sb.prototype.lw;
    sb.prototype.toArray = sb.prototype.na;
    sb.prototype.toSet = sb.prototype.mw;
    sb.prototype.first = sb.prototype.first;
    sb.prototype.clear = sb.prototype.clear;
    sb.prototype["delete"] = sb.prototype.delete;
    sb.prototype.remove = sb.prototype.remove;
    sb.prototype.has = sb.prototype.has;
    sb.prototype.contains = sb.prototype.contains;
    sb.prototype.add = sb.prototype.add;
    sb.prototype.thaw = sb.prototype.ea;
    sb.prototype.freeze = sb.prototype.freeze;
    sb.className = "MapKeySet";

    function tb(a) {
        this.fa = a;
        a.Te = null;
        this.ia = a.Aa;
        this.la = null
    }
    tb.prototype.reset = function () {
        var a = this.fa;
        a.Te = null;
        this.ia = a.Aa;
        this.la = null
    };
    tb.prototype.next = function () {
        var a = this.fa;
        if (a.Aa !== this.ia && null === this.key) return !1;
        var b = this.la;
        b = null === b ? a.ba : b.oa;
        if (null !== b) return this.la = b, this.value = b.value, this.key = b.key, !0;
        this.Bd();
        return !1
    };
    tb.prototype.ed = function () {
        return this.next()
    };
    tb.prototype.first = function () {
        var a = this.fa;
        this.ia = a.Aa;
        a = a.ba;
        if (null !== a) {
            this.la = a;
            var b = a.value;
            this.key = a.key;
            return this.value = b
        }
        return null
    };
    tb.prototype.any = function (a) {
        var b = this.fa;
        this.la = b.Te = null;
        for (b = b.ba; null !== b;) {
            if (a(b.value)) return !0;
            b = b.oa
        }
        return !1
    };
    tb.prototype.all = function (a) {
        var b = this.fa;
        this.la = b.Te = null;
        for (b = b.ba; null !== b;) {
            if (!a(b.value)) return !1;
            b = b.oa
        }
        return !0
    };
    tb.prototype.each = function (a) {
        var b = this.fa;
        this.la = b.Te = null;
        for (b = b.ba; null !== b;) a(b.value), b = b.oa;
        return this
    };
    tb.prototype.map = function (a) {
        var b = this.fa;
        this.la = b.Te = null;
        var c = new E;
        for (b = b.ba; null !== b;) c.add(a(b.value)), b = b.oa;
        return c.iterator
    };
    tb.prototype.filter = function (a) {
        var b = this.fa;
        this.la = b.Te = null;
        var c = new E;
        for (b = b.ba; null !== b;) {
            var d = b.value;
            a(d) && c.add(d);
            b = b.oa
        }
        return c.iterator
    };
    tb.prototype.Bd = function () {
        this.value = this.key = null;
        this.ia = -1;
        this.fa.Te = this
    };
    tb.prototype.toString = function () {
        return null !== this.la ? "MapValueSetIterator@" + this.la.value : "MapValueSetIterator"
    };
    ma.Object.defineProperties(tb.prototype, {
        iterator: {
            get: function () {
                return this
            }
        },
        count: {
            get: function () {
                return this.fa.Cb
            }
        }
    });
    tb.prototype.first = tb.prototype.first;
    tb.prototype.hasNext = tb.prototype.ed;
    tb.prototype.next = tb.prototype.next;
    tb.prototype.reset = tb.prototype.reset;
    tb.className = "MapValueSetIterator";

    function ob(a, b) {
        this.key = a;
        this.value = b;
        this.Dl = this.oa = null
    }
    ob.prototype.toString = function () {
        return "{" + this.key + ":" + this.value + "}"
    };
    ob.className = "KeyValuePair";

    function ub(a) {
        this.fa = a;
        a.Fa = null;
        this.ia = a.Aa;
        this.la = null
    }
    ub.prototype.reset = function () {
        var a = this.fa;
        a.Fa = null;
        this.ia = a.Aa;
        this.la = null
    };
    ub.prototype.next = function () {
        var a = this.fa;
        if (a.Aa !== this.ia && null === this.key) return !1;
        var b = this.la;
        b = null === b ? a.ba : b.oa;
        if (null !== b) return this.la = b, this.key = b.key, this.value = b.value, !0;
        this.Bd();
        return !1
    };
    ub.prototype.ed = function () {
        return this.next()
    };
    ub.prototype.first = function () {
        var a = this.fa;
        this.ia = a.Aa;
        a = a.ba;
        return null !== a ? (this.la = a, this.key = a.key, this.value = a.value, a) : null
    };
    ub.prototype.any = function (a) {
        var b = this.fa;
        this.la = b.Fa = null;
        for (b = b.ba; null !== b;) {
            if (a(b)) return !0;
            b = b.oa
        }
        return !1
    };
    ub.prototype.all = function (a) {
        var b = this.fa;
        this.la = b.Fa = null;
        for (b = b.ba; null !== b;) {
            if (!a(b)) return !1;
            b = b.oa
        }
        return !0
    };
    ub.prototype.each = function (a) {
        var b = this.fa;
        this.la = b.Fa = null;
        for (b = b.ba; null !== b;) a(b), b = b.oa;
        return this
    };
    ub.prototype.map = function (a) {
        var b = this.fa;
        this.la = b.Fa = null;
        var c = new E;
        for (b = b.ba; null !== b;) c.add(a(b)), b = b.oa;
        return c.iterator
    };
    ub.prototype.filter = function (a) {
        var b = this.fa;
        this.la = b.Fa = null;
        var c = new E;
        for (b = b.ba; null !== b;) a(b) && c.add(b), b = b.oa;
        return c.iterator
    };
    ub.prototype.Bd = function () {
        this.value = this.key = null;
        this.ia = -1;
        this.fa.Fa = this
    };
    ub.prototype.toString = function () {
        return null !== this.la ? "MapIterator@" + this.la : "MapIterator"
    };
    ma.Object.defineProperties(ub.prototype, {
        iterator: {
            get: function () {
                return this
            }
        },
        count: {
            get: function () {
                return this.fa.Cb
            }
        }
    });
    ub.prototype.first = ub.prototype.first;
    ub.prototype.hasNext = ub.prototype.ed;
    ub.prototype.next = ub.prototype.next;
    ub.prototype.reset = ub.prototype.reset;
    ub.className = "MapIterator";

    function H(a) {
        Ya(this);
        this.s = !1;
        this.Eb = {};
        this.Cb = 0;
        this.Te = this.Fa = null;
        this.Aa = 0;
        this.Ue = this.ba = null;
        void 0 !== a && ("function" === typeof a || "string" === typeof a ? ya() : this.addAll(a))
    }
    t = H.prototype;
    t.ib = function () {
        var a = this.Aa;
        a++;
        999999999 < a && (a = 0);
        this.Aa = a
    };
    t.freeze = function () {
        this.s = !0;
        return this
    };
    t.ea = function () {
        this.s = !1;
        return this
    };
    t.toString = function () {
        return "Map()#" + lb(this)
    };
    t.add = function (a, b) {
        this.s && ua(this, a);
        var c = a;
        za(a) && (c = nb(a));
        var d = this.Eb[c];
        void 0 === d ? (this.Cb++, a = new ob(a, b), this.Eb[c] = a, c = this.Ue, null === c ? this.ba = a : (a.Dl = c, c.oa = a), this.Ue = a, this.ib()) : d.value = b;
        return this
    };
    t.set = function (a, b) {
        return this.add(a, b)
    };
    t.addAll = function (a) {
        if (null === a) return this;
        if (Aa(a))
            for (var b = a.length, c = 0; c < b; c++) {
                var d = a[c];
                this.add(d.key, d.value)
            } else if (a instanceof H)
                for (a = a.iterator; a.next();) this.add(a.key, a.value);
            else
                for (a = a.iterator; a.next();) b = a.value, this.add(b.key, b.value);
        return this
    };
    t.first = function () {
        return this.ba
    };
    H.prototype.any = function (a) {
        for (var b = this.ba; null !== b;) {
            if (a(b)) return !0;
            b = b.oa
        }
        return !1
    };
    H.prototype.all = function (a) {
        for (var b = this.ba; null !== b;) {
            if (!a(b)) return !1;
            b = b.oa
        }
        return !0
    };
    H.prototype.each = function (a) {
        for (var b = this.ba; null !== b;) a(b), b = b.oa;
        return this
    };
    H.prototype.map = function (a) {
        for (var b = new H, c = this.ba; null !== c;) b.add(c.key, a(c)), c = c.oa;
        return b
    };
    H.prototype.filter = function (a) {
        for (var b = new H, c = this.ba; null !== c;) a(c) && b.add(c.key, c.value), c = c.oa;
        return b
    };
    t = H.prototype;
    t.contains = function (a) {
        var b = a;
        return za(a) && (b = lb(a), void 0 === b) ? !1 : void 0 !== this.Eb[b]
    };
    t.has = function (a) {
        return this.contains(a)
    };
    t.H = function (a) {
        var b = a;
        if (za(a) && (b = lb(a), void 0 === b)) return null;
        a = this.Eb[b];
        return void 0 === a ? null : a.value
    };
    t.get = function (a) {
        return this.H(a)
    };
    t.remove = function (a) {
        if (null === a) return !1;
        this.s && ua(this, a);
        var b = a;
        if (za(a) && (b = lb(a), void 0 === b)) return !1;
        a = this.Eb[b];
        if (void 0 === a) return !1;
        var c = a.oa,
            d = a.Dl;
        null !== c && (c.Dl = d);
        null !== d && (d.oa = c);
        this.ba === a && (this.ba = c);
        this.Ue === a && (this.Ue = d);
        delete this.Eb[b];
        this.Cb--;
        this.ib();
        return !0
    };
    t.delete = function (a) {
        return this.remove(a)
    };
    t.clear = function () {
        this.s && ua(this);
        this.Eb = {};
        this.Cb = 0;
        null !== this.Fa && this.Fa.reset();
        null !== this.Te && this.Te.reset();
        this.Ue = this.ba = null;
        this.ib()
    };
    H.prototype.copy = function () {
        var a = new H,
            b = this.Eb,
            c;
        for (c in b) {
            var d = b[c];
            a.add(d.key, d.value)
        }
        return a
    };
    H.prototype.na = function () {
        var a = this.Eb,
            b = Array(this.Cb),
            c = 0,
            d;
        for (d in a) {
            var e = a[d];
            b[c] = new ob(e.key, e.value);
            c++
        }
        return b
    };
    H.prototype.Df = function () {
        return new sb(this)
    };
    ma.Object.defineProperties(H.prototype, {
        count: {
            get: function () {
                return this.Cb
            }
        },
        size: {
            get: function () {
                return this.Cb
            }
        },
        iterator: {
            get: function () {
                if (0 >= this.count) return fb;
                var a = this.Fa;
                return null !== a ? (a.reset(), a) : new ub(this)
            }
        },
        iteratorKeys: {
            get: function () {
                return 0 >= this.count ? fb : new rb(this)
            }
        },
        iteratorValues: {
            get: function () {
                if (0 >= this.count) return fb;
                var a = this.Te;
                return null !== a ? (a.reset(), a) : new tb(this)
            }
        }
    });
    H.prototype.toKeySet = H.prototype.Df;
    H.prototype.toArray = H.prototype.na;
    H.prototype.clear = H.prototype.clear;
    H.prototype["delete"] = H.prototype.delete;
    H.prototype.remove = H.prototype.remove;
    H.prototype.get = H.prototype.get;
    H.prototype.getValue = H.prototype.H;
    H.prototype.has = H.prototype.has;
    H.prototype.contains = H.prototype.contains;
    H.prototype.first = H.prototype.first;
    H.prototype.addAll = H.prototype.addAll;
    H.prototype.set = H.prototype.set;
    H.prototype.add = H.prototype.add;
    H.prototype.thaw = H.prototype.ea;
    H.prototype.freeze = H.prototype.freeze;
    H.className = "Map";

    function I(a, b) {
        void 0 === a ? this.y = this.x = 0 : "number" === typeof a && "number" === typeof b ? (this.x = a, this.y = b) : B("Invalid arguments to Point constructor: " + a + ", " + b);
        this.s = !1
    }
    I.prototype.assign = function (a) {
        this.x = a.x;
        this.y = a.y;
        return this
    };
    I.prototype.h = function (a, b) {
        this.x = a;
        this.y = b;
        return this
    };
    I.prototype.Fg = function (a, b) {
        this.x = a;
        this.y = b;
        return this
    };
    I.prototype.set = function (a) {
        this.x = a.x;
        this.y = a.y;
        return this
    };
    I.prototype.copy = function () {
        var a = new I;
        a.x = this.x;
        a.y = this.y;
        return a
    };
    t = I.prototype;
    t.ca = function () {
        this.s = !0;
        Object.freeze(this);
        return this
    };
    t.G = function () {
        return this.s || Object.isFrozen(this) ? this : this.copy().freeze()
    };
    t.freeze = function () {
        this.s = !0;
        return this
    };
    t.ea = function () {
        Object.isFrozen(this) && B("cannot thaw constant: " + this);
        this.s = !1;
        return this
    };

    function vb(a) {
        if ("string" === typeof a) {
            a = a.split(" ");
            for (var b = 0, c = 0;
                "" === a[b];) b++;
            var d = a[b++];
            d && (c = parseFloat(d));
            for (var e = 0;
                "" === a[b];) b++;
            (d = a[b++]) && (e = parseFloat(d));
            return new I(c, e)
        }
        return new I
    }

    function wb(a) {
        return a.x.toString() + " " + a.y.toString()
    }
    t.toString = function () {
        return "Point(" + this.x + "," + this.y + ")"
    };
    t.w = function (a) {
        return a instanceof I ? this.x === a.x && this.y === a.y : !1
    };
    t.Ri = function (a, b) {
        return this.x === a && this.y === b
    };
    t.Ma = function (a) {
        return J.A(this.x, a.x) && J.A(this.y, a.y)
    };
    t.add = function (a) {
        this.x += a.x;
        this.y += a.y;
        return this
    };
    t.Zd = function (a) {
        this.x -= a.x;
        this.y -= a.y;
        return this
    };
    t.offset = function (a, b) {
        this.x += a;
        this.y += b;
        return this
    };
    I.prototype.rotate = function (a) {
        if (0 === a) return this;
        var b = this.x,
            c = this.y;
        if (0 === b && 0 === c) return this;
        360 <= a ? a -= 360 : 0 > a && (a += 360);
        if (90 === a) {
            a = 0;
            var d = 1
        } else 180 === a ? (a = -1, d = 0) : 270 === a ? (a = 0, d = -1) : (d = a * Math.PI / 180, a = Math.cos(d), d = Math.sin(d));
        this.x = a * b - d * c;
        this.y = d * b + a * c;
        return this
    };
    t = I.prototype;
    t.scale = function (a, b) {
        this.x *= a;
        this.y *= b;
        return this
    };
    t.Ae = function (a) {
        var b = a.x - this.x;
        a = a.y - this.y;
        return b * b + a * a
    };
    t.dd = function (a, b) {
        a -= this.x;
        b -= this.y;
        return a * a + b * b
    };
    t.normalize = function () {
        var a = this.x,
            b = this.y,
            c = Math.sqrt(a * a + b * b);
        0 < c && (this.x = a / c, this.y = b / c);
        return this
    };
    t.Ta = function (a) {
        return yb(a.x - this.x, a.y - this.y)
    };
    t.direction = function (a, b) {
        return yb(a - this.x, b - this.y)
    };

    function yb(a, b) {
        if (0 === a) return 0 < b ? 90 : 0 > b ? 270 : 0;
        if (0 === b) return 0 < a ? 0 : 180;
        if (isNaN(a) || isNaN(b)) return 0;
        var c = 180 * Math.atan(Math.abs(b / a)) / Math.PI;
        0 > a ? c = 0 > b ? c + 180 : 180 - c : 0 > b && (c = 360 - c);
        return c
    }
    t.kA = function (a, b, c, d) {
        J.Lh(a, b, c, d, this.x, this.y, this);
        return this
    };
    t.lA = function (a, b) {
        J.Lh(a.x, a.y, b.x, b.y, this.x, this.y, this);
        return this
    };
    t.wA = function (a, b, c, d) {
        J.mq(this.x, this.y, a, b, c, d, this);
        return this
    };
    t.xA = function (a, b) {
        J.mq(this.x, this.y, a.x, a.y, b.width, b.height, this);
        return this
    };
    t.dj = function (a, b) {
        this.x = a.x + b.x * a.width + b.offsetX;
        this.y = a.y + b.y * a.height + b.offsetY;
        return this
    };
    t.xk = function (a, b, c, d, e) {
        this.x = a + e.x * c + e.offsetX;
        this.y = b + e.y * d + e.offsetY;
        return this
    };
    t.transform = function (a) {
        a.ra(this);
        return this
    };

    function zb(a, b) {
        b.Vd(a);
        return a
    }

    function Ab(a, b, c, d, e, f) {
        var g = e - c,
            h = f - d,
            k = g * g + h * h;
        c -= a;
        d -= b;
        var l = -c * g - d * h;
        if (0 >= l || l >= k) return g = e - a, h = f - b, Math.min(c * c + d * d, g * g + h * h);
        a = g * d - h * c;
        return a * a / k
    }

    function Bb(a, b, c, d) {
        a = c - a;
        b = d - b;
        return a * a + b * b
    }

    function Cb(a, b, c, d) {
        a = c - a;
        b = d - b;
        if (0 === a) return 0 < b ? 90 : 0 > b ? 270 : 0;
        if (0 === b) return 0 < a ? 0 : 180;
        if (isNaN(a) || isNaN(b)) return 0;
        d = 180 * Math.atan(Math.abs(b / a)) / Math.PI;
        0 > a ? d = 0 > b ? d + 180 : 180 - d : 0 > b && (d = 360 - d);
        return d
    }
    t.v = function () {
        return isFinite(this.x) && isFinite(this.y)
    };
    I.alloc = function () {
        var a = Db.pop();
        return void 0 === a ? new I : a
    };
    I.allocAt = function (a, b) {
        var c = Db.pop();
        if (void 0 === c) return new I(a, b);
        c.x = a;
        c.y = b;
        return c
    };
    I.free = function (a) {
        Db.push(a)
    };
    I.prototype.isReal = I.prototype.v;
    I.prototype.setSpot = I.prototype.xk;
    I.prototype.setRectSpot = I.prototype.dj;
    I.prototype.snapToGridPoint = I.prototype.xA;
    I.prototype.snapToGrid = I.prototype.wA;
    I.prototype.projectOntoLineSegmentPoint = I.prototype.lA;
    I.prototype.projectOntoLineSegment = I.prototype.kA;
    I.intersectingLineSegments = function (a, b, c, d, e, f, g, h) {
        return J.sq(a, b, c, d, e, f, g, h)
    };
    I.prototype.direction = I.prototype.direction;
    I.prototype.directionPoint = I.prototype.Ta;
    I.prototype.normalize = I.prototype.normalize;
    I.prototype.distanceSquared = I.prototype.dd;
    I.prototype.distanceSquaredPoint = I.prototype.Ae;
    I.prototype.scale = I.prototype.scale;
    I.prototype.rotate = I.prototype.rotate;
    I.prototype.offset = I.prototype.offset;
    I.prototype.subtract = I.prototype.Zd;
    I.prototype.add = I.prototype.add;
    I.prototype.equalsApprox = I.prototype.Ma;
    I.prototype.equalTo = I.prototype.Ri;
    I.prototype.equals = I.prototype.w;
    I.prototype.set = I.prototype.set;
    I.prototype.setTo = I.prototype.Fg;
    var Fb = null,
        Gb = null,
        Hb = null,
        Ib = null,
        Jb = null,
        Db = [];
    I.className = "Point";
    I.parse = vb;
    I.stringify = wb;
    I.distanceLineSegmentSquared = Ab;
    I.distanceSquared = Bb;
    I.direction = Cb;
    I.Origin = Fb = (new I(0, 0)).ca();
    I.InfiniteTopLeft = Gb = (new I(-Infinity, -Infinity)).ca();
    I.InfiniteBottomRight = Hb = (new I(Infinity, Infinity)).ca();
    I.SixPoint = Ib = (new I(6, 6)).ca();
    I.NoPoint = Jb = (new I(NaN, NaN)).ca();
    I.parse = vb;
    I.stringify = wb;
    I.distanceLineSegmentSquared = Ab;
    I.distanceSquared = Bb;
    I.direction = Cb;

    function M(a, b) {
        void 0 === a ? this.height = this.width = 0 : "number" === typeof a && (0 <= a || isNaN(a)) && "number" === typeof b && (0 <= b || isNaN(b)) ? (this.width = a, this.height = b) : B("Invalid arguments to Size constructor: " + a + ", " + b);
        this.s = !1
    }
    var Kb, Lb, Mb, Nb, Ob, Pb, Rb;
    M.prototype.assign = function (a) {
        this.width = a.width;
        this.height = a.height;
        return this
    };
    M.prototype.h = function (a, b) {
        this.width = a;
        this.height = b;
        return this
    };
    M.prototype.Fg = function (a, b) {
        this.width = a;
        this.height = b;
        return this
    };
    M.prototype.set = function (a) {
        this.width = a.width;
        this.height = a.height;
        return this
    };
    M.prototype.copy = function () {
        var a = new M;
        a.width = this.width;
        a.height = this.height;
        return a
    };
    t = M.prototype;
    t.ca = function () {
        this.s = !0;
        Object.freeze(this);
        return this
    };
    t.G = function () {
        return this.s || Object.isFrozen(this) ? this : this.copy().freeze()
    };
    t.freeze = function () {
        this.s = !0;
        return this
    };
    t.ea = function () {
        Object.isFrozen(this) && B("cannot thaw constant: " + this);
        this.s = !1;
        return this
    };

    function Sb(a) {
        if ("string" === typeof a) {
            a = a.split(" ");
            for (var b = 0, c = 0;
                "" === a[b];) b++;
            var d = a[b++];
            d && (c = parseFloat(d));
            for (var e = 0;
                "" === a[b];) b++;
            (d = a[b++]) && (e = parseFloat(d));
            return new M(c, e)
        }
        return new M
    }

    function Tb(a) {
        return a.width.toString() + " " + a.height.toString()
    }
    t.toString = function () {
        return "Size(" + this.width + "," + this.height + ")"
    };
    t.w = function (a) {
        return a instanceof M ? this.width === a.width && this.height === a.height : !1
    };
    t.Ri = function (a, b) {
        return this.width === a && this.height === b
    };
    t.Ma = function (a) {
        return J.A(this.width, a.width) && J.A(this.height, a.height)
    };
    t.v = function () {
        return isFinite(this.width) && isFinite(this.height)
    };
    M.alloc = function () {
        var a = Ub.pop();
        return void 0 === a ? new M : a
    };
    M.free = function (a) {
        Ub.push(a)
    };
    M.prototype.isReal = M.prototype.v;
    M.prototype.equalsApprox = M.prototype.Ma;
    M.prototype.equalTo = M.prototype.Ri;
    M.prototype.equals = M.prototype.w;
    M.prototype.set = M.prototype.set;
    M.prototype.setTo = M.prototype.Fg;
    var Ub = [];
    M.className = "Size";
    M.parse = Sb;
    M.stringify = Tb;
    M.ZeroSize = Kb = (new M(0, 0)).ca();
    M.OneSize = Lb = (new M(1, 1)).ca();
    M.SixSize = Mb = (new M(6, 6)).ca();
    M.EightSize = Nb = (new M(8, 8)).ca();
    M.TenSize = Ob = (new M(10, 10)).ca();
    M.InfiniteSize = Pb = (new M(Infinity, Infinity)).ca();
    M.NoSize = Rb = (new M(NaN, NaN)).ca();
    M.parse = Sb;
    M.stringify = Tb;

    function N(a, b, c, d) {
        void 0 === a ? this.height = this.width = this.y = this.x = 0 : a instanceof I ? (c = a.x, a = a.y, b instanceof I ? (d = b.x, b = b.y, this.x = Math.min(c, d), this.y = Math.min(a, b), this.width = Math.abs(c - d), this.height = Math.abs(a - b)) : b instanceof M ? (this.x = c, this.y = a, this.width = b.width, this.height = b.height) : B("Incorrect arguments supplied to Rect constructor")) : "number" === typeof a && "number" === typeof b && "number" === typeof c && (0 <= c || isNaN(c)) && "number" === typeof d && (0 <= d || isNaN(d)) ? (this.x = a, this.y = b, this.width = c,
            this.height = d) : B("Invalid arguments to Rect constructor: " + a + ", " + b + ", " + c + ", " + d);
        this.s = !1
    }
    t = N.prototype;
    t.assign = function (a) {
        this.x = a.x;
        this.y = a.y;
        this.width = a.width;
        this.height = a.height;
        return this
    };
    t.h = function (a, b, c, d) {
        this.x = a;
        this.y = b;
        this.width = c;
        this.height = d;
        return this
    };

    function Vb(a, b, c) {
        a.width = b;
        a.height = c
    }
    t.Fg = function (a, b, c, d) {
        this.x = a;
        this.y = b;
        this.width = c;
        this.height = d;
        return this
    };
    t.set = function (a) {
        this.x = a.x;
        this.y = a.y;
        this.width = a.width;
        this.height = a.height;
        return this
    };
    t.hd = function (a) {
        this.x = a.x;
        this.y = a.y;
        return this
    };
    t.uA = function (a) {
        this.width = a.width;
        this.height = a.height;
        return this
    };
    N.prototype.copy = function () {
        var a = new N;
        a.x = this.x;
        a.y = this.y;
        a.width = this.width;
        a.height = this.height;
        return a
    };
    t = N.prototype;
    t.ca = function () {
        this.s = !0;
        Object.freeze(this);
        return this
    };
    t.G = function () {
        return this.s || Object.isFrozen(this) ? this : this.copy().freeze()
    };
    t.freeze = function () {
        this.s = !0;
        return this
    };
    t.ea = function () {
        Object.isFrozen(this) && B("cannot thaw constant: " + this);
        this.s = !1;
        return this
    };

    function Wb(a) {
        if ("string" === typeof a) {
            a = a.split(" ");
            for (var b = 0, c = 0;
                "" === a[b];) b++;
            var d = a[b++];
            d && (c = parseFloat(d));
            for (var e = 0;
                "" === a[b];) b++;
            (d = a[b++]) && (e = parseFloat(d));
            for (var f = 0;
                "" === a[b];) b++;
            (d = a[b++]) && (f = parseFloat(d));
            for (var g = 0;
                "" === a[b];) b++;
            (d = a[b++]) && (g = parseFloat(d));
            return new N(c, e, f, g)
        }
        return new N
    }

    function Zb(a) {
        return a.x.toString() + " " + a.y.toString() + " " + a.width.toString() + " " + a.height.toString()
    }
    t.toString = function () {
        return "Rect(" + this.x + "," + this.y + "," + this.width + "," + this.height + ")"
    };
    t.w = function (a) {
        return a instanceof N ? this.x === a.x && this.y === a.y && this.width === a.width && this.height === a.height : !1
    };
    t.Ri = function (a, b, c, d) {
        return this.x === a && this.y === b && this.width === c && this.height === d
    };
    t.Ma = function (a) {
        return J.A(this.x, a.x) && J.A(this.y, a.y) && J.A(this.width, a.width) && J.A(this.height, a.height)
    };

    function $b(a, b) {
        return J.$(a.x, b.x) && J.$(a.y, b.y) && J.$(a.width, b.width) && J.$(a.height, b.height)
    }
    t.aa = function (a) {
        return this.x <= a.x && this.x + this.width >= a.x && this.y <= a.y && this.y + this.height >= a.y
    };
    t.ze = function (a) {
        return this.x <= a.x && a.x + a.width <= this.x + this.width && this.y <= a.y && a.y + a.height <= this.y + this.height
    };
    t.contains = function (a, b, c, d) {
        void 0 === c && (c = 0);
        void 0 === d && (d = 0);
        return this.x <= a && a + c <= this.x + this.width && this.y <= b && b + d <= this.y + this.height
    };
    t.offset = function (a, b) {
        this.x += a;
        this.y += b;
        return this
    };
    t.Vc = function (a, b) {
        return ac(this, b, a, b, a)
    };
    t.cq = function (a) {
        return ac(this, a.top, a.right, a.bottom, a.left)
    };
    t.kw = function (a) {
        return ac(this, -a.top, -a.right, -a.bottom, -a.left)
    };
    t.Oz = function (a, b, c, d) {
        return ac(this, a, b, c, d)
    };

    function ac(a, b, c, d, e) {
        var f = a.width;
        c + e <= -f ? (a.x += f / 2, a.width = 0) : (a.x -= e, a.width += c + e);
        c = a.height;
        b + d <= -c ? (a.y += c / 2, a.height = 0) : (a.y -= b, a.height += b + d);
        return a
    }
    t.Sz = function (a) {
        return bc(this, a.x, a.y, a.width, a.height)
    };
    t.Dv = function (a, b, c, d) {
        return bc(this, a, b, c, d)
    };

    function bc(a, b, c, d, e) {
        var f = Math.max(a.x, b),
            g = Math.max(a.y, c);
        b = Math.min(a.x + a.width, b + d);
        c = Math.min(a.y + a.height, c + e);
        a.x = f;
        a.y = g;
        a.width = Math.max(0, b - f);
        a.height = Math.max(0, c - g);
        return a
    }
    t.Gc = function (a) {
        return this.Ev(a.x, a.y, a.width, a.height)
    };
    t.Ev = function (a, b, c, d) {
        var e = this.width,
            f = this.x;
        if (Infinity !== e && Infinity !== c && (e += f, c += a, isNaN(c) || isNaN(e) || f > c || a > e)) return !1;
        a = this.height;
        c = this.y;
        return Infinity !== a && Infinity !== d && (a += c, d += b, isNaN(d) || isNaN(a) || c > d || b > a) ? !1 : !0
    };

    function dc(a, b) {
        var c = a.width,
            d = a.x,
            e = b.x - 10;
        if (d > b.width + 10 + 10 + e || e > c + d) return !1;
        c = a.height;
        a = a.y;
        d = b.y - 10;
        return a > b.height + 10 + 10 + d || d > c + a ? !1 : !0
    }
    t.He = function (a) {
        return ec(this, a.x, a.y, 0, 0)
    };
    t.Hc = function (a) {
        return ec(this, a.x, a.y, a.width, a.height)
    };
    t.rw = function (a, b, c, d) {
        void 0 === c && (c = 0);
        void 0 === d && (d = 0);
        return ec(this, a, b, c, d)
    };

    function ec(a, b, c, d, e) {
        var f = Math.min(a.x, b),
            g = Math.min(a.y, c);
        b = Math.max(a.x + a.width, b + d);
        c = Math.max(a.y + a.height, c + e);
        a.x = f;
        a.y = g;
        a.width = b - f;
        a.height = c - g;
        return a
    }
    t.xk = function (a, b, c) {
        this.x = a - c.offsetX - c.x * this.width;
        this.y = b - c.offsetY - c.y * this.height;
        return this
    };

    function fc(a, b, c, d, e, f, g, h) {
        void 0 === g && (g = 0);
        void 0 === h && (h = 0);
        return a <= e && e + g <= a + c && b <= f && f + h <= b + d
    }

    function gc(a, b, c, d, e, f, g, h) {
        return a > g + e || e > c + a ? !1 : b > h + f || f > d + b ? !1 : !0
    }
    t.v = function () {
        return isFinite(this.x) && isFinite(this.y) && isFinite(this.width) && isFinite(this.height)
    };
    t.Uz = function () {
        return 0 === this.width && 0 === this.height
    };
    N.alloc = function () {
        var a = hc.pop();
        return void 0 === a ? new N : a
    };
    N.allocAt = function (a, b, c, d) {
        var e = hc.pop();
        return void 0 === e ? new N(a, b, c, d) : e.h(a, b, c, d)
    };
    N.free = function (a) {
        hc.push(a)
    };
    ma.Object.defineProperties(N.prototype, {
        left: {
            get: function () {
                return this.x
            },
            set: function (a) {
                this.x = a
            }
        },
        top: {
            get: function () {
                return this.y
            },
            set: function (a) {
                this.y = a
            }
        },
        right: {
            get: function () {
                return this.x + this.width
            },
            set: function (a) {
                this.x += a - (this.x + this.width)
            }
        },
        bottom: {
            get: function () {
                return this.y + this.height
            },
            set: function (a) {
                this.y += a - (this.y + this.height)
            }
        },
        position: {
            get: function () {
                return new I(this.x, this.y)
            },
            set: function (a) {
                this.x = a.x;
                this.y = a.y
            }
        },
        size: {
            get: function () {
                return new M(this.width, this.height)
            },
            set: function (a) {
                this.width = a.width;
                this.height = a.height
            }
        },
        center: {
            get: function () {
                return new I(this.x + this.width / 2, this.y + this.height / 2)
            },
            set: function (a) {
                this.x = a.x - this.width / 2;
                this.y = a.y - this.height / 2
            }
        },
        centerX: {
            get: function () {
                return this.x + this.width / 2
            },
            set: function (a) {
                this.x = a - this.width / 2
            }
        },
        centerY: {
            get: function () {
                return this.y + this.height / 2
            },
            set: function (a) {
                this.y = a - this.height / 2
            }
        }
    });
    N.prototype.isEmpty = N.prototype.Uz;
    N.prototype.isReal = N.prototype.v;
    N.intersectsLineSegment = function (a, b, c, d, e, f, g, h) {
        return J.Rx(a, b, c, d, e, f, g, h)
    };
    N.prototype.setSpot = N.prototype.xk;
    N.prototype.union = N.prototype.rw;
    N.prototype.unionRect = N.prototype.Hc;
    N.prototype.unionPoint = N.prototype.He;
    N.prototype.intersects = N.prototype.Ev;
    N.prototype.intersectsRect = N.prototype.Gc;
    N.prototype.intersect = N.prototype.Dv;
    N.prototype.intersectRect = N.prototype.Sz;
    N.prototype.grow = N.prototype.Oz;
    N.prototype.subtractMargin = N.prototype.kw;
    N.prototype.addMargin = N.prototype.cq;
    N.prototype.inflate = N.prototype.Vc;
    N.prototype.offset = N.prototype.offset;
    N.prototype.contains = N.prototype.contains;
    N.prototype.containsRect = N.prototype.ze;
    N.prototype.containsPoint = N.prototype.aa;
    N.prototype.equalsApprox = N.prototype.Ma;
    N.prototype.equalTo = N.prototype.Ri;
    N.prototype.equals = N.prototype.w;
    N.prototype.setSize = N.prototype.uA;
    N.prototype.setPoint = N.prototype.hd;
    N.prototype.set = N.prototype.set;
    N.prototype.setTo = N.prototype.Fg;
    var ic = null,
        nc = null,
        hc = [];
    N.className = "Rect";
    N.parse = Wb;
    N.stringify = Zb;
    N.contains = fc;
    N.intersects = gc;
    N.ZeroRect = ic = (new N(0, 0, 0, 0)).ca();
    N.NoRect = nc = (new N(NaN, NaN, NaN, NaN)).ca();
    N.parse = Wb;
    N.stringify = Zb;
    N.contains = fc;
    N.intersects = gc;

    function oc(a, b, c, d) {
        void 0 === a ? this.left = this.bottom = this.right = this.top = 0 : void 0 === b ? this.left = this.bottom = this.right = this.top = a : void 0 === c ? (this.top = a, this.right = b, this.bottom = a, this.left = b) : void 0 !== d ? (this.top = a, this.right = b, this.bottom = c, this.left = d) : B("Invalid arguments to Margin constructor: " + a + ", " + b + ", " + c + ", " + d);
        this.s = !1
    }
    oc.prototype.assign = function (a) {
        this.top = a.top;
        this.right = a.right;
        this.bottom = a.bottom;
        this.left = a.left;
        return this
    };
    oc.prototype.Fg = function (a, b, c, d) {
        this.top = a;
        this.right = b;
        this.bottom = c;
        this.left = d;
        return this
    };
    oc.prototype.set = function (a) {
        this.top = a.top;
        this.right = a.right;
        this.bottom = a.bottom;
        this.left = a.left;
        return this
    };
    oc.prototype.copy = function () {
        var a = new oc;
        a.top = this.top;
        a.right = this.right;
        a.bottom = this.bottom;
        a.left = this.left;
        return a
    };
    t = oc.prototype;
    t.ca = function () {
        this.s = !0;
        Object.freeze(this);
        return this
    };
    t.G = function () {
        return this.s || Object.isFrozen(this) ? this : this.copy().freeze()
    };
    t.freeze = function () {
        this.s = !0;
        return this
    };
    t.ea = function () {
        Object.isFrozen(this) && B("cannot thaw constant: " + this);
        this.s = !1;
        return this
    };

    function pc(a) {
        if ("string" === typeof a) {
            a = a.split(" ");
            for (var b = 0, c = NaN;
                "" === a[b];) b++;
            var d = a[b++];
            d && (c = parseFloat(d));
            if (isNaN(c)) return new oc;
            for (var e = NaN;
                "" === a[b];) b++;
            (d = a[b++]) && (e = parseFloat(d));
            if (isNaN(e)) return new oc(c);
            for (var f = NaN;
                "" === a[b];) b++;
            (d = a[b++]) && (f = parseFloat(d));
            if (isNaN(f)) return new oc(c, e);
            for (var g = NaN;
                "" === a[b];) b++;
            (d = a[b++]) && (g = parseFloat(d));
            return isNaN(g) ? new oc(c, e) : new oc(c, e, f, g)
        }
        return new oc
    }

    function qc(a) {
        return a.top.toString() + " " + a.right.toString() + " " + a.bottom.toString() + " " + a.left.toString()
    }
    t.toString = function () {
        return "Margin(" + this.top + "," + this.right + "," + this.bottom + "," + this.left + ")"
    };
    t.w = function (a) {
        return a instanceof oc ? this.top === a.top && this.right === a.right && this.bottom === a.bottom && this.left === a.left : !1
    };
    t.Ri = function (a, b, c, d) {
        return this.top === a && this.right === b && this.bottom === c && this.left === d
    };
    t.Ma = function (a) {
        return J.A(this.top, a.top) && J.A(this.right, a.right) && J.A(this.bottom, a.bottom) && J.A(this.left, a.left)
    };
    t.v = function () {
        return isFinite(this.top) && isFinite(this.right) && isFinite(this.bottom) && isFinite(this.left)
    };
    oc.alloc = function () {
        var a = rc.pop();
        return void 0 === a ? new oc : a
    };
    oc.free = function (a) {
        rc.push(a)
    };
    oc.prototype.isReal = oc.prototype.v;
    oc.prototype.equalsApprox = oc.prototype.Ma;
    oc.prototype.equalTo = oc.prototype.Ri;
    oc.prototype.equals = oc.prototype.w;
    oc.prototype.set = oc.prototype.set;
    oc.prototype.setTo = oc.prototype.Fg;
    var sc = null,
        tc = null,
        rc = [];
    oc.className = "Margin";
    oc.parse = pc;
    oc.stringify = qc;
    oc.ZeroMargin = sc = (new oc(0, 0, 0, 0)).ca();
    oc.TwoMargin = tc = (new oc(2, 2, 2, 2)).ca();
    oc.parse = pc;
    oc.stringify = qc;

    function P(a, b, c, d) {
        void 0 === a ? this.offsetY = this.offsetX = this.y = this.x = 0 : (void 0 === b && (b = 0), void 0 === c && (c = 0), void 0 === d && (d = 0), this.x = a, this.y = b, this.offsetX = c, this.offsetY = d);
        this.s = !1
    }
    var uc, vc, xc, yc, zc, Ac, Bc, Cc, Fc, Gc, Hc, Ic, Jc, Kc, Lc, Mc, Nc, Pc, Qc, Rc, Sc, Tc, Uc, Vc, Yc, Zc, $c, ad, bd, cd, dd, ed, fd, gd, hd, id;
    P.prototype.assign = function (a) {
        this.x = a.x;
        this.y = a.y;
        this.offsetX = a.offsetX;
        this.offsetY = a.offsetY;
        return this
    };
    P.prototype.Fg = function (a, b, c, d) {
        this.x = a;
        this.y = b;
        this.offsetX = c;
        this.offsetY = d;
        return this
    };
    P.prototype.set = function (a) {
        this.x = a.x;
        this.y = a.y;
        this.offsetX = a.offsetX;
        this.offsetY = a.offsetY;
        return this
    };
    P.prototype.copy = function () {
        var a = new P;
        a.x = this.x;
        a.y = this.y;
        a.offsetX = this.offsetX;
        a.offsetY = this.offsetY;
        return a
    };
    t = P.prototype;
    t.ca = function () {
        this.s = !0;
        Object.freeze(this);
        return this
    };
    t.G = function () {
        return this.s || Object.isFrozen(this) ? this : this.copy().freeze()
    };
    t.freeze = function () {
        this.s = !0;
        return this
    };
    t.ea = function () {
        Object.isFrozen(this) && B("cannot thaw constant: " + this);
        this.s = !1;
        return this
    };

    function jd(a, b) {
        a.x = NaN;
        a.y = NaN;
        a.offsetX = b;
        return a
    }

    function kd(a) {
        if ("string" === typeof a) {
            a = a.trim();
            if ("None" === a) return uc;
            if ("TopLeft" === a) return vc;
            if ("Top" === a || "TopCenter" === a || "MiddleTop" === a) return xc;
            if ("TopRight" === a) return yc;
            if ("Left" === a || "LeftCenter" === a || "MiddleLeft" === a) return zc;
            if ("Center" === a) return Ac;
            if ("Right" === a || "RightCenter" === a || "MiddleRight" === a) return Bc;
            if ("BottomLeft" === a) return Cc;
            if ("Bottom" === a || "BottomCenter" === a || "MiddleBottom" === a) return Fc;
            if ("BottomRight" === a) return Gc;
            if ("TopSide" === a) return Hc;
            if ("LeftSide" ===
                a) return Ic;
            if ("RightSide" === a) return Jc;
            if ("BottomSide" === a) return Kc;
            if ("TopBottomSides" === a) return Lc;
            if ("LeftRightSides" === a) return Mc;
            if ("TopLeftSides" === a) return Nc;
            if ("TopRightSides" === a) return Pc;
            if ("BottomLeftSides" === a) return Qc;
            if ("BottomRightSides" === a) return Rc;
            if ("NotTopSide" === a) return Sc;
            if ("NotLeftSide" === a) return Tc;
            if ("NotRightSide" === a) return Uc;
            if ("NotBottomSide" === a) return Vc;
            if ("AllSides" === a) return Yc;
            if ("Default" === a) return Zc;
            a = a.split(" ");
            for (var b = 0, c = 0;
                "" === a[b];) b++;
            var d = a[b++];
            void 0 !== d && 0 < d.length && (c = parseFloat(d));
            for (var e = 0;
                "" === a[b];) b++;
            d = a[b++];
            void 0 !== d && 0 < d.length && (e = parseFloat(d));
            for (var f = 0;
                "" === a[b];) b++;
            d = a[b++];
            void 0 !== d && 0 < d.length && (f = parseFloat(d));
            for (var g = 0;
                "" === a[b];) b++;
            d = a[b++];
            void 0 !== d && 0 < d.length && (g = parseFloat(d));
            return new P(c, e, f, g)
        }
        return new P
    }

    function ld(a) {
        return a.eb() ? a.x.toString() + " " + a.y.toString() + " " + a.offsetX.toString() + " " + a.offsetY.toString() : a.toString()
    }
    t.toString = function () {
        return this.eb() ? 0 === this.offsetX && 0 === this.offsetY ? "Spot(" + this.x + "," + this.y + ")" : "Spot(" + this.x + "," + this.y + "," + this.offsetX + "," + this.offsetY + ")" : this.w(uc) ? "None" : this.w(vc) ? "TopLeft" : this.w(xc) ? "Top" : this.w(yc) ? "TopRight" : this.w(zc) ? "Left" : this.w(Ac) ? "Center" : this.w(Bc) ? "Right" : this.w(Cc) ? "BottomLeft" : this.w(Fc) ? "Bottom" : this.w(Gc) ? "BottomRight" : this.w(Hc) ? "TopSide" : this.w(Ic) ? "LeftSide" : this.w(Jc) ? "RightSide" : this.w(Kc) ? "BottomSide" : this.w(Lc) ? "TopBottomSides" : this.w(Mc) ?
            "LeftRightSides" : this.w(Nc) ? "TopLeftSides" : this.w(Pc) ? "TopRightSides" : this.w(Qc) ? "BottomLeftSides" : this.w(Rc) ? "BottomRightSides" : this.w(Sc) ? "NotTopSide" : this.w(Tc) ? "NotLeftSide" : this.w(Uc) ? "NotRightSide" : this.w(Vc) ? "NotBottomSide" : this.w(Yc) ? "AllSides" : this.w(Zc) ? "Default" : "None"
    };
    t.w = function (a) {
        return a instanceof P ? (this.x === a.x || isNaN(this.x) && isNaN(a.x)) && (this.y === a.y || isNaN(this.y) && isNaN(a.y)) && this.offsetX === a.offsetX && this.offsetY === a.offsetY : !1
    };
    t.Pv = function () {
        return new P(.5 - (this.x - .5), .5 - (this.y - .5), -this.offsetX, -this.offsetY)
    };
    t.wf = function (a) {
        if (!this.yf()) return !1;
        if (!a.yf())
            if (a.w($c)) a = Ic;
            else if (a.w(ad)) a = Jc;
        else if (a.w(bd)) a = Hc;
        else if (a.w(cd)) a = Kc;
        else return !1;
        a = a.offsetY;
        return (this.offsetY & a) === a
    };
    t.eb = function () {
        return !isNaN(this.x) && !isNaN(this.y)
    };
    t.jc = function () {
        return isNaN(this.x) || isNaN(this.y)
    };
    t.yf = function () {
        return isNaN(this.x) && isNaN(this.y) && 1 === this.offsetX && 0 !== this.offsetY
    };
    t.wt = function () {
        return isNaN(this.x) && isNaN(this.y) && 0 === this.offsetX && 0 === this.offsetY
    };
    t.Mb = function () {
        return isNaN(this.x) && isNaN(this.y) && -1 === this.offsetX && 0 === this.offsetY
    };
    P.alloc = function () {
        var a = qd.pop();
        return void 0 === a ? new P : a
    };
    P.free = function (a) {
        qd.push(a)
    };
    P.prototype.isDefault = P.prototype.Mb;
    P.prototype.isNone = P.prototype.wt;
    P.prototype.isSide = P.prototype.yf;
    P.prototype.isNoSpot = P.prototype.jc;
    P.prototype.isSpot = P.prototype.eb;
    P.prototype.includesSide = P.prototype.wf;
    P.prototype.opposite = P.prototype.Pv;
    P.prototype.equals = P.prototype.w;
    P.prototype.set = P.prototype.set;
    P.prototype.setTo = P.prototype.Fg;
    var qd = [];
    P.className = "Spot";
    P.parse = kd;
    P.stringify = ld;
    P.None = uc = jd(new P(0, 0, 0, 0), 0).ca();
    P.Default = Zc = jd(new P(0, 0, -1, 0), -1).ca();
    P.TopLeft = vc = (new P(0, 0, 0, 0)).ca();
    P.TopCenter = xc = (new P(.5, 0, 0, 0)).ca();
    P.TopRight = yc = (new P(1, 0, 0, 0)).ca();
    P.LeftCenter = zc = (new P(0, .5, 0, 0)).ca();
    P.Center = Ac = (new P(.5, .5, 0, 0)).ca();
    P.RightCenter = Bc = (new P(1, .5, 0, 0)).ca();
    P.BottomLeft = Cc = (new P(0, 1, 0, 0)).ca();
    P.BottomCenter = Fc = (new P(.5, 1, 0, 0)).ca();
    P.BottomRight = Gc = (new P(1, 1, 0, 0)).ca();
    P.MiddleTop = dd = xc;
    P.MiddleLeft = ed = zc;
    P.MiddleRight = fd = Bc;
    P.MiddleBottom = gd = Fc;
    P.Top = bd = xc;
    P.Left = $c = zc;
    P.Right = ad = Bc;
    P.Bottom = cd = Fc;
    P.TopSide = Hc = jd(new P(0, 0, 1, 1), 1).ca();
    P.LeftSide = Ic = jd(new P(0, 0, 1, 2), 1).ca();
    P.RightSide = Jc = jd(new P(0, 0, 1, 4), 1).ca();
    P.BottomSide = Kc = jd(new P(0, 0, 1, 8), 1).ca();
    P.TopBottomSides = Lc = jd(new P(0, 0, 1, 9), 1).ca();
    P.LeftRightSides = Mc = jd(new P(0, 0, 1, 6), 1).ca();
    P.TopLeftSides = Nc = jd(new P(0, 0, 1, 3), 1).ca();
    P.TopRightSides = Pc = jd(new P(0, 0, 1, 5), 1).ca();
    P.BottomLeftSides = Qc = jd(new P(0, 0, 1, 10), 1).ca();
    P.BottomRightSides = Rc = jd(new P(0, 0, 1, 12), 1).ca();
    P.NotTopSide = Sc = jd(new P(0, 0, 1, 14), 1).ca();
    P.NotLeftSide = Tc = jd(new P(0, 0, 1, 13), 1).ca();
    P.NotRightSide = Uc = jd(new P(0, 0, 1, 11), 1).ca();
    P.NotBottomSide = Vc = jd(new P(0, 0, 1, 7), 1).ca();
    P.AllSides = Yc = jd(new P(0, 0, 1, 15), 1).ca();
    hd = (new P(.156, .156)).ca();
    id = (new P(.844, .844)).ca();
    P.parse = kd;
    P.stringify = ld;

    function rd() {
        this.m11 = 1;
        this.m21 = this.m12 = 0;
        this.m22 = 1;
        this.dy = this.dx = 0
    }
    rd.prototype.set = function (a) {
        this.m11 = a.m11;
        this.m12 = a.m12;
        this.m21 = a.m21;
        this.m22 = a.m22;
        this.dx = a.dx;
        this.dy = a.dy;
        return this
    };
    rd.prototype.copy = function () {
        var a = new rd;
        a.m11 = this.m11;
        a.m12 = this.m12;
        a.m21 = this.m21;
        a.m22 = this.m22;
        a.dx = this.dx;
        a.dy = this.dy;
        return a
    };
    t = rd.prototype;
    t.toString = function () {
        return "Transform(" + this.m11 + "," + this.m12 + "," + this.m21 + "," + this.m22 + "," + this.dx + "," + this.dy + ")"
    };
    t.w = function (a) {
        return this.m11 === a.m11 && this.m12 === a.m12 && this.m21 === a.m21 && this.m22 === a.m22 && this.dx === a.dx && this.dy === a.dy
    };
    t.ut = function () {
        return 0 === this.dx && 0 === this.dy && 1 === this.m11 && 0 === this.m12 && 0 === this.m21 && 1 === this.m22
    };
    t.reset = function () {
        this.m11 = 1;
        this.m21 = this.m12 = 0;
        this.m22 = 1;
        this.dy = this.dx = 0;
        return this
    };
    t.multiply = function (a) {
        var b = this.m11 * a.m11 + this.m21 * a.m12,
            c = this.m12 * a.m11 + this.m22 * a.m12,
            d = this.m11 * a.m21 + this.m21 * a.m22,
            e = this.m12 * a.m21 + this.m22 * a.m22;
        this.dx = this.m11 * a.dx + this.m21 * a.dy + this.dx;
        this.dy = this.m12 * a.dx + this.m22 * a.dy + this.dy;
        this.m11 = b;
        this.m12 = c;
        this.m21 = d;
        this.m22 = e;
        return this
    };
    t.Lv = function (a) {
        var b = 1 / (a.m11 * a.m22 - a.m12 * a.m21),
            c = a.m22 * b,
            d = -a.m12 * b,
            e = -a.m21 * b,
            f = a.m11 * b,
            g = b * (a.m21 * a.dy - a.m22 * a.dx);
        a = b * (a.m12 * a.dx - a.m11 * a.dy);
        b = this.m11 * c + this.m21 * d;
        c = this.m12 * c + this.m22 * d;
        d = this.m11 * e + this.m21 * f;
        e = this.m12 * e + this.m22 * f;
        this.dx = this.m11 * g + this.m21 * a + this.dx;
        this.dy = this.m12 * g + this.m22 * a + this.dy;
        this.m11 = b;
        this.m12 = c;
        this.m21 = d;
        this.m22 = e;
        return this
    };
    t.tt = function () {
        var a = 1 / (this.m11 * this.m22 - this.m12 * this.m21),
            b = -this.m12 * a,
            c = -this.m21 * a,
            d = this.m11 * a,
            e = a * (this.m21 * this.dy - this.m22 * this.dx),
            f = a * (this.m12 * this.dx - this.m11 * this.dy);
        this.m11 = this.m22 * a;
        this.m12 = b;
        this.m21 = c;
        this.m22 = d;
        this.dx = e;
        this.dy = f;
        return this
    };
    rd.prototype.rotate = function (a, b, c) {
        360 <= a ? a -= 360 : 0 > a && (a += 360);
        if (0 === a) return this;
        this.translate(b, c);
        if (90 === a) {
            a = 0;
            var d = 1
        } else 180 === a ? (a = -1, d = 0) : 270 === a ? (a = 0, d = -1) : (d = a * Math.PI / 180, a = Math.cos(d), d = Math.sin(d));
        var e = this.m12 * a + this.m22 * d,
            f = this.m11 * -d + this.m21 * a,
            g = this.m12 * -d + this.m22 * a;
        this.m11 = this.m11 * a + this.m21 * d;
        this.m12 = e;
        this.m21 = f;
        this.m22 = g;
        this.translate(-b, -c);
        return this
    };
    t = rd.prototype;
    t.translate = function (a, b) {
        this.dx += this.m11 * a + this.m21 * b;
        this.dy += this.m12 * a + this.m22 * b;
        return this
    };
    t.scale = function (a, b) {
        void 0 === b && (b = a);
        this.m11 *= a;
        this.m12 *= a;
        this.m21 *= b;
        this.m22 *= b;
        return this
    };
    t.ra = function (a) {
        var b = a.x,
            c = a.y;
        return a.h(b * this.m11 + c * this.m21 + this.dx, b * this.m12 + c * this.m22 + this.dy)
    };
    t.Vd = function (a) {
        var b = 1 / (this.m11 * this.m22 - this.m12 * this.m21),
            c = a.x,
            d = a.y;
        return a.h(c * this.m22 * b + d * -this.m21 * b + b * (this.m21 * this.dy - this.m22 * this.dx), c * -this.m12 * b + d * this.m11 * b + b * (this.m12 * this.dx - this.m11 * this.dy))
    };
    t.qw = function (a) {
        var b = a.x,
            c = a.y,
            d = b + a.width,
            e = c + a.height,
            f = this.m11,
            g = this.m12,
            h = this.m21,
            k = this.m22,
            l = this.dx,
            m = this.dy,
            n = b * f + c * h + l,
            p = b * g + c * k + m,
            r = d * f + c * h + l,
            q = d * g + c * k + m;
        c = b * f + e * h + l;
        b = b * g + e * k + m;
        f = d * f + e * h + l;
        d = d * g + e * k + m;
        e = Math.min(n, r);
        n = Math.max(n, r);
        r = Math.min(p, q);
        p = Math.max(p, q);
        e = Math.min(e, c);
        n = Math.max(n, c);
        r = Math.min(r, b);
        p = Math.max(p, b);
        e = Math.min(e, f);
        n = Math.max(n, f);
        r = Math.min(r, d);
        p = Math.max(p, d);
        a.h(e, r, n - e, p - r);
        return a
    };
    rd.alloc = function () {
        var a = sd.pop();
        return void 0 === a ? new rd : a
    };
    rd.free = function (a) {
        sd.push(a)
    };
    rd.prototype.transformRect = rd.prototype.qw;
    rd.prototype.invertedTransformPoint = rd.prototype.Vd;
    rd.prototype.transformPoint = rd.prototype.ra;
    rd.prototype.scale = rd.prototype.scale;
    rd.prototype.translate = rd.prototype.translate;
    rd.prototype.rotate = rd.prototype.rotate;
    rd.prototype.invert = rd.prototype.tt;
    rd.prototype.multiplyInverted = rd.prototype.Lv;
    rd.prototype.multiply = rd.prototype.multiply;
    rd.prototype.reset = rd.prototype.reset;
    rd.prototype.isIdentity = rd.prototype.ut;
    rd.prototype.equals = rd.prototype.w;
    rd.prototype.set = rd.prototype.set;
    var sd = [];
    rd.className = "Transform";
    rd.xF = "54a702f3e53909c447824c6706603faf4c";
    var J = {
        DA: "7da71ca0ad381e90",
        Ig: (Math.sqrt(2) - 1) / 3 * 4,
        Hw: null,
        sqrt: function (a) {
            if (0 >= a) return 0;
            var b = J.Hw;
            if (null === b) {
                b = [];
                for (var c = 0; 2E3 >= c; c++) b[c] = Math.sqrt(c);
                J.Hw = b
            }
            return 1 > a ? (c = 1 / a, 2E3 >= c ? 1 / b[c | 0] : Math.sqrt(a)) : 2E3 >= a ? b[a | 0] : Math.sqrt(a)
        },
        A: function (a, b) {
            a -= b;
            return .5 > a && -.5 < a
        },
        $: function (a, b) {
            a -= b;
            return 5E-8 > a && -5E-8 < a
        },
        Nb: function (a, b, c, d, e, f, g) {
            0 >= e && (e = 1E-6);
            if (a < c) {
                var h = a;
                var k = c
            } else h = c, k = a;
            if (b < d) {
                var l = b;
                var m = d
            } else l = d, m = b;
            if (a === c) return l <= g && g <= m && a - e <= f && f <= a + e;
            if (b === d) return h <=
                f && f <= k && b - e <= g && g <= b + e;
            k += e;
            h -= e;
            if (h <= f && f <= k && (m += e, l -= e, l <= g && g <= m))
                if (k - h > m - l)
                    if (a - c > e || c - a > e) {
                        if (f = (d - b) / (c - a) * (f - a) + b, f - e <= g && g <= f + e) return !0
                    } else return !0;
            else if (b - d > e || d - b > e) {
                if (g = (c - a) / (d - b) * (g - b) + a, g - e <= f && f <= g + e) return !0
            } else return !0;
            return !1
        },
        at: function (a, b, c, d, e, f, g, h, k, l, m, n) {
            if (J.Nb(a, b, g, h, n, c, d) && J.Nb(a, b, g, h, n, e, f)) return J.Nb(a, b, g, h, n, l, m);
            var p = (a + c) / 2,
                r = (b + d) / 2,
                q = (c + e) / 2,
                u = (d + f) / 2;
            e = (e + g) / 2;
            f = (f + h) / 2;
            d = (p + q) / 2;
            c = (r + u) / 2;
            q = (q + e) / 2;
            u = (u + f) / 2;
            var v = (d + q) / 2,
                w = (c + u) / 2;
            return J.at(a,
                b, p, r, d, c, v, w, k, l, m, n) || J.at(v, w, q, u, e, f, g, h, k, l, m, n)
        },
        Qy: function (a, b, c, d, e, f, g, h, k) {
            var l = (c + e) / 2,
                m = (d + f) / 2;
            k.h((((a + c) / 2 + l) / 2 + (l + (e + g) / 2) / 2) / 2, (((b + d) / 2 + m) / 2 + (m + (f + h) / 2) / 2) / 2);
            return k
        },
        Py: function (a, b, c, d, e, f, g, h) {
            var k = (c + e) / 2,
                l = (d + f) / 2;
            return Cb(((a + c) / 2 + k) / 2, ((b + d) / 2 + l) / 2, (k + (e + g) / 2) / 2, (l + (f + h) / 2) / 2)
        },
        bm: function (a, b, c, d, e, f, g, h, k, l) {
            if (J.Nb(a, b, g, h, k, c, d) && J.Nb(a, b, g, h, k, e, f)) ec(l, a, b, 0, 0), ec(l, g, h, 0, 0);
            else {
                var m = (a + c) / 2,
                    n = (b + d) / 2,
                    p = (c + e) / 2,
                    r = (d + f) / 2;
                e = (e + g) / 2;
                f = (f + h) / 2;
                d = (m + p) / 2;
                c = (n + r) /
                    2;
                p = (p + e) / 2;
                r = (r + f) / 2;
                var q = (d + p) / 2,
                    u = (c + r) / 2;
                J.bm(a, b, m, n, d, c, q, u, k, l);
                J.bm(q, u, p, r, e, f, g, h, k, l)
            }
            return l
        },
        ye: function (a, b, c, d, e, f, g, h, k, l) {
            if (J.Nb(a, b, g, h, k, c, d) && J.Nb(a, b, g, h, k, e, f)) 0 === l.length && (l.push(a), l.push(b)), l.push(g), l.push(h);
            else {
                var m = (a + c) / 2,
                    n = (b + d) / 2,
                    p = (c + e) / 2,
                    r = (d + f) / 2;
                e = (e + g) / 2;
                f = (f + h) / 2;
                d = (m + p) / 2;
                c = (n + r) / 2;
                p = (p + e) / 2;
                r = (r + f) / 2;
                var q = (d + p) / 2,
                    u = (c + r) / 2;
                J.ye(a, b, m, n, d, c, q, u, k, l);
                J.ye(q, u, p, r, e, f, g, h, k, l)
            }
            return l
        },
        Sv: function (a, b, c, d, e, f, g, h, k, l) {
            if (J.Nb(a, b, e, f, l, c, d)) return J.Nb(a,
                b, e, f, l, h, k);
            var m = (a + c) / 2,
                n = (b + d) / 2;
            c = (c + e) / 2;
            d = (d + f) / 2;
            var p = (m + c) / 2,
                r = (n + d) / 2;
            return J.Sv(a, b, m, n, p, r, g, h, k, l) || J.Sv(p, r, c, d, e, f, g, h, k, l)
        },
        JA: function (a, b, c, d, e, f, g) {
            g.h(((a + c) / 2 + (c + e) / 2) / 2, ((b + d) / 2 + (d + f) / 2) / 2);
            return g
        },
        Rv: function (a, b, c, d, e, f, g, h) {
            if (J.Nb(a, b, e, f, g, c, d)) ec(h, a, b, 0, 0), ec(h, e, f, 0, 0);
            else {
                var k = (a + c) / 2,
                    l = (b + d) / 2;
                c = (c + e) / 2;
                d = (d + f) / 2;
                var m = (k + c) / 2,
                    n = (l + d) / 2;
                J.Rv(a, b, k, l, m, n, g, h);
                J.Rv(m, n, c, d, e, f, g, h)
            }
            return h
        },
        Cq: function (a, b, c, d, e, f, g, h) {
            if (J.Nb(a, b, e, f, g, c, d)) 0 === h.length && (h.push(a),
                h.push(b)), h.push(e), h.push(f);
            else {
                var k = (a + c) / 2,
                    l = (b + d) / 2;
                c = (c + e) / 2;
                d = (d + f) / 2;
                var m = (k + c) / 2,
                    n = (l + d) / 2;
                J.Cq(a, b, k, l, m, n, g, h);
                J.Cq(m, n, c, d, e, f, g, h)
            }
            return h
        },
        eq: function (a, b, c, d, e, f, g, h, k, l, m, n, p, r) {
            if (J.Nb(a, b, g, h, p, c, d) && J.Nb(a, b, g, h, p, e, f)) {
                var q = (a - g) * (l - n) - (b - h) * (k - m);
                if (0 === q) return !1;
                p = ((a * h - b * g) * (k - m) - (a - g) * (k * n - l * m)) / q;
                q = ((a * h - b * g) * (l - n) - (b - h) * (k * n - l * m)) / q;
                if ((k > m ? k - m : m - k) < (l > n ? l - n : n - l)) {
                    if (b < h ? g = b : (g = h, h = b), q < g || q > h) return !1
                } else if (a < g ? h = a : (h = g, g = a), p < h || p > g) return !1;
                r.h(p, q);
                return !0
            }
            q =
                (a + c) / 2;
            var u = (b + d) / 2;
            c = (c + e) / 2;
            d = (d + f) / 2;
            e = (e + g) / 2;
            f = (f + h) / 2;
            var v = (q + c) / 2,
                w = (u + d) / 2;
            c = (c + e) / 2;
            d = (d + f) / 2;
            var y = (v + c) / 2,
                z = (w + d) / 2,
                A = (m - k) * (m - k) + (n - l) * (n - l),
                C = !1;
            J.eq(a, b, q, u, v, w, y, z, k, l, m, n, p, r) && (a = (r.x - k) * (r.x - k) + (r.y - l) * (r.y - l), a < A && (A = a, C = !0));
            a = r.x;
            b = r.y;
            J.eq(y, z, c, d, e, f, g, h, k, l, m, n, p, r) && ((r.x - k) * (r.x - k) + (r.y - l) * (r.y - l) < A ? C = !0 : r.h(a, b));
            return C
        },
        fq: function (a, b, c, d, e, f, g, h, k, l, m, n, p) {
            var r = 0;
            if (J.Nb(a, b, g, h, p, c, d) && J.Nb(a, b, g, h, p, e, f)) {
                p = (a - g) * (l - n) - (b - h) * (k - m);
                if (0 === p) return r;
                var q = ((a *
                        h - b * g) * (k - m) - (a - g) * (k * n - l * m)) / p,
                    u = ((a * h - b * g) * (l - n) - (b - h) * (k * n - l * m)) / p;
                if (q >= m) return r;
                if ((k > m ? k - m : m - k) < (l > n ? l - n : n - l)) {
                    if (b < h ? (a = b, b = h) : a = h, u < a || u > b) return r
                } else if (a < g ? (b = a, a = g) : b = g, q < b || q > a) return r;
                0 < p ? r++ : 0 > p && r--
            } else {
                q = (a + c) / 2;
                u = (b + d) / 2;
                var v = (c + e) / 2,
                    w = (d + f) / 2;
                e = (e + g) / 2;
                f = (f + h) / 2;
                d = (q + v) / 2;
                c = (u + w) / 2;
                v = (v + e) / 2;
                w = (w + f) / 2;
                var y = (d + v) / 2,
                    z = (c + w) / 2;
                r += J.fq(a, b, q, u, d, c, y, z, k, l, m, n, p);
                r += J.fq(y, z, v, w, e, f, g, h, k, l, m, n, p)
            }
            return r
        },
        Lh: function (a, b, c, d, e, f, g) {
            if (J.$(a, c)) {
                b < d ? (c = b, b = d) : c = d;
                if (f < c) return g.h(a,
                    c), !1;
                if (f > b) return g.h(a, b), !1;
                g.h(a, f);
                return !0
            }
            if (J.$(b, d)) {
                a < c ? (d = a, a = c) : d = c;
                if (e < d) return g.h(d, b), !1;
                if (e > a) return g.h(a, b), !1;
                g.h(e, b);
                return !0
            }
            e = ((a - e) * (a - c) + (b - f) * (b - d)) / ((c - a) * (c - a) + (d - b) * (d - b));
            if (-5E-6 > e) return g.h(a, b), !1;
            if (1.000005 < e) return g.h(c, d), !1;
            g.h(a + e * (c - a), b + e * (d - b));
            return !0
        },
        De: function (a, b, c, d, e, f, g, h, k) {
            if (J.A(a, c) && J.A(b, d)) return k.h(a, b), !1;
            if (J.$(e, g)) return J.$(a, c) ? (J.Lh(a, b, c, d, e, f, k), !1) : J.Lh(a, b, c, d, e, (d - b) / (c - a) * (e - a) + b, k);
            h = (h - f) / (g - e);
            if (J.$(a, c)) {
                c = h * (a - e) +
                    f;
                b < d ? (e = b, b = d) : e = d;
                if (c < e) return k.h(a, e), !1;
                if (c > b) return k.h(a, b), !1;
                k.h(a, c);
                return !0
            }
            g = (d - b) / (c - a);
            if (J.$(h, g)) return J.Lh(a, b, c, d, e, f, k), !1;
            e = (g * a - h * e + f - b) / (g - h);
            if (J.$(g, 0)) {
                a < c ? (d = a, a = c) : d = c;
                if (e < d) return k.h(d, b), !1;
                if (e > a) return k.h(a, b), !1;
                k.h(e, b);
                return !0
            }
            return J.Lh(a, b, c, d, e, g * (e - a) + b, k)
        },
        IA: function (a, b, c, d, e) {
            return J.De(c.x, c.y, d.x, d.y, a.x, a.y, b.x, b.y, e)
        },
        HA: function (a, b, c, d, e, f, g, h, k, l) {
            function m(c, d) {
                var e = (c - a) * (c - a) + (d - b) * (d - b);
                e < n && (n = e, k.h(c, d))
            }
            var n = Infinity;
            m(k.x, k.y);
            var p = 0,
                r = 0,
                q = 0,
                u = 0;
            e < g ? (p = e, r = g) : (p = g, r = e);
            f < h ? (q = e, u = g) : (q = g, u = e);
            p = (r - p) / 2 + l;
            l = (u - q) / 2 + l;
            e = (e + g) / 2;
            f = (f + h) / 2;
            if (0 === p || 0 === l) return k;
            if (.5 > (c > a ? c - a : a - c)) {
                p = 1 - (c - e) * (c - e) / (p * p);
                if (0 > p) return k;
                p = Math.sqrt(p);
                d = -l * p + f;
                m(c, l * p + f);
                m(c, d)
            } else {
                c = (d - b) / (c - a);
                d = 1 / (p * p) + c * c / (l * l);
                h = 2 * c * (b - c * a) / (l * l) - 2 * c * f / (l * l) - 2 * e / (p * p);
                p = h * h - 4 * d * (2 * c * a * f / (l * l) - 2 * b * f / (l * l) + f * f / (l * l) + e * e / (p * p) - 1 + (b - c * a) * (b - c * a) / (l * l));
                if (0 > p) return k;
                p = Math.sqrt(p);
                l = (-h + p) / (2 * d);
                m(l, c * l - c * a + b);
                p = (-h - p) / (2 * d);
                m(p, c * p - c * a + b)
            }
            return k
        },
        Uc: function (a, b, c, d, e, f, g, h, k) {
            var l = 1E21,
                m = a,
                n = b;
            if (J.De(a, b, a, d, e, f, g, h, k)) {
                var p = (k.x - e) * (k.x - e) + (k.y - f) * (k.y - f);
                p < l && (l = p, m = k.x, n = k.y)
            }
            J.De(c, b, c, d, e, f, g, h, k) && (p = (k.x - e) * (k.x - e) + (k.y - f) * (k.y - f), p < l && (l = p, m = k.x, n = k.y));
            J.De(a, b, c, b, e, f, g, h, k) && (b = (k.x - e) * (k.x - e) + (k.y - f) * (k.y - f), b < l && (l = b, m = k.x, n = k.y));
            J.De(a, d, c, d, e, f, g, h, k) && (a = (k.x - e) * (k.x - e) + (k.y - f) * (k.y - f), a < l && (l = a, m = k.x, n = k.y));
            k.h(m, n);
            return 1E21 > l
        },
        GA: function (a, b, c, d, e, f, g, h, k) {
            c = a - c;
            g = e - g;
            0 === c || 0 === g ? 0 === c ? (b = (f - h) / g, h = a, e = b * h + (f -
                b * e)) : (f = (b - d) / c, h = e, e = f * h + (b - f * a)) : (d = (b - d) / c, h = (f - h) / g, a = b - d * a, h = (f - h * e - a) / (d - h), e = d * h + a);
            k.h(h, e);
            return k
        },
        rt: function (a, b, c) {
            return J.Rx(a.x, a.y, a.width, a.height, b.x, b.y, c.x, c.y)
        },
        Rx: function (a, b, c, d, e, f, g, h) {
            var k = a + c,
                l = b + d;
            return e === g ? (f < h ? (g = f, f = h) : g = h, a <= e && e <= k && g <= l && f >= b) : f === h ? (e < g ? (h = e, e = g) : h = g, b <= f && f <= l && h <= k && e >= a) : fc(a, b, c, d, e, f) || fc(a, b, c, d, g, h) || J.sq(a, b, k, b, e, f, g, h) || J.sq(k, b, k, l, e, f, g, h) || J.sq(k, l, a, l, e, f, g, h) || J.sq(a, l, a, b, e, f, g, h) ? !0 : !1
        },
        sq: function (a, b, c, d, e, f, g, h) {
            return 0 >=
                J.dt(a, b, c, d, e, f) * J.dt(a, b, c, d, g, h) && 0 >= J.dt(e, f, g, h, a, b) * J.dt(e, f, g, h, c, d)
        },
        dt: function (a, b, c, d, e, f) {
            c -= a;
            d -= b;
            a = e - a;
            b = f - b;
            f = a * d - b * c;
            0 === f && (f = a * c + b * d, 0 < f && (f = (a - c) * c + (b - d) * d, 0 > f && (f = 0)));
            return 0 > f ? -1 : 0 < f ? 1 : 0
        },
        zq: function (a) {
            0 > a && (a += 360);
            360 <= a && (a -= 360);
            return a
        },
        Cx: function (a, b, c, d, e, f) {
            var g = Math.PI;
            f || (d *= g / 180, e *= g / 180);
            var h = d > e ? -1 : 1;
            f = [];
            var k = g / 2,
                l = d;
            d = Math.min(2 * g, Math.abs(e - d));
            if (1E-5 > d) return k = l + h * Math.min(d, k), h = a + c * Math.cos(l), l = b + c * Math.sin(l), a += c * Math.cos(k), b += c * Math.sin(k),
                c = (h + a) / 2, k = (l + b) / 2, f.push([h, l, c, k, c, k, a, b]), f;
            for (; 1E-5 < d;) e = l + h * Math.min(d, k), f.push(J.Xy(c, l, e, a, b)), d -= Math.abs(e - l), l = e;
            return f
        },
        Xy: function (a, b, c, d, e) {
            var f = (c - b) / 2,
                g = a * Math.cos(f),
                h = a * Math.sin(f),
                k = -h,
                l = g * g + k * k,
                m = l + g * g + k * h;
            l = 4 / 3 * (Math.sqrt(2 * l * m) - m) / (g * h - k * g);
            h = g - l * k;
            g = k + l * g;
            k = -g;
            l = f + b;
            f = Math.cos(l);
            l = Math.sin(l);
            return [d + a * Math.cos(b), e + a * Math.sin(b), d + h * f - g * l, e + h * l + g * f, d + h * f - k * l, e + h * l + k * f, d + a * Math.cos(c), e + a * Math.sin(c)]
        },
        mq: function (a, b, c, d, e, f, g) {
            c = Math.floor((a - c) / e) * e + c;
            d = Math.floor((b -
                d) / f) * f + d;
            var h = c;
            c + e - a < e / 2 && (h = c + e);
            a = d;
            d + f - b < f / 2 && (a = d + f);
            g.h(h, a);
            return g
        },
        Nx: function (a, b) {
            var c = Math.max(a, b);
            a = Math.min(a, b);
            var d;
            do b = c % a, c = d = a, a = b; while (0 < b);
            return d
        },
        bz: function (a, b, c, d) {
            var e = 0 > c,
                f = 0 > d;
            if (a < b) {
                var g = 1;
                var h = 0
            } else g = 0, h = 1;
            var k = 0 === g ? a : b;
            var l = 0 === g ? c : d;
            if (0 === g ? e : f) l = -l;
            g = h;
            c = 0 === g ? c : d;
            if (0 === g ? e : f) c = -c;
            return J.cz(k, 0 === g ? a : b, l, c, 0, 0)
        },
        cz: function (a, b, c, d, e, f) {
            if (0 < d)
                if (0 < c) {
                    e = a * a;
                    f = b * b;
                    a *= c;
                    var g = b * d,
                        h = -f + g,
                        k = -f + Math.sqrt(a * a + g * g);
                    b = h;
                    for (var l = 0; 9999999999 > l; ++l) {
                        b =
                            .5 * (h + k);
                        if (b === h || b === k) break;
                        var m = a / (b + e),
                            n = g / (b + f);
                        m = m * m + n * n - 1;
                        if (0 < m) h = b;
                        else if (0 > m) k = b;
                        else break
                    }
                    c = e * c / (b + e) - c;
                    d = f * d / (b + f) - d;
                    c = Math.sqrt(c * c + d * d)
                } else c = Math.abs(d - b);
            else d = a * a - b * b, f = a * c, f < d ? (d = f / d, f = b * Math.sqrt(Math.abs(1 - d * d)), c = a * d - c, c = Math.sqrt(c * c + f * f)) : c = Math.abs(c - a);
            return c
        },
        Je: new db,
        Nm: new db,
        Ff: new db,
        Gf: 0
    };
    J.za = J.DA;

    function td(a) {
        Ya(this);
        this.s = !1;
        void 0 === a && (a = ud);
        this.pa = a;
        this.mc = this.ec = this.Sc = this.Rc = 0;
        this.rj = new E;
        this.Dr = this.rj.Aa;
        this.kr = (new N).freeze();
        this.qa = !0;
        this.Tm = this.Gk = null;
        this.Um = NaN;
        this.hf = vc;
        this.jf = Gc;
        this.jl = this.kl = NaN;
        this.Qf = vd
    }
    td.prototype.copy = function () {
        var a = new td;
        a.pa = this.pa;
        a.Rc = this.Rc;
        a.Sc = this.Sc;
        a.ec = this.ec;
        a.mc = this.mc;
        for (var b = this.rj.j, c = b.length, d = a.rj, e = 0; e < c; e++) {
            var f = b[e].copy();
            d.add(f)
        }
        a.Dr = this.Dr;
        a.kr.assign(this.kr);
        a.qa = this.qa;
        a.Gk = this.Gk;
        a.Tm = this.Tm;
        a.Um = this.Um;
        a.hf = this.hf.G();
        a.jf = this.jf.G();
        a.kl = this.kl;
        a.jl = this.jl;
        a.Qf = this.Qf;
        return a
    };
    t = td.prototype;
    t.ca = function () {
        this.freeze();
        Object.freeze(this);
        return this
    };
    t.freeze = function () {
        this.s = !0;
        var a = this.figures;
        a.freeze();
        a = a.j;
        for (var b = a.length, c = 0; c < b; c++) a[c].freeze();
        return this
    };
    t.ea = function () {
        Object.isFrozen(this) && B("cannot thaw constant: " + this);
        this.s = !1;
        var a = this.figures;
        a.ea();
        a = a.j;
        for (var b = a.length, c = 0; c < b; c++) a[c].ea();
        return this
    };
    t.Ma = function (a) {
        if (!(a instanceof td)) return !1;
        if (this.type !== a.type) return this.type === wd && a.type === ud ? xd(this, a) : a.type === wd && this.type === ud ? xd(a, this) : !1;
        if (this.type === ud) {
            var b = this.figures.j;
            a = a.figures.j;
            var c = b.length;
            if (c !== a.length) return !1;
            for (var d = 0; d < c; d++)
                if (!b[d].Ma(a[d])) return !1;
            return !0
        }
        return J.A(this.startX, a.startX) && J.A(this.startY, a.startY) && J.A(this.endX, a.endX) && J.A(this.endY, a.endY)
    };

    function xd(a, b) {
        return a.type !== wd || b.type !== ud ? !1 : 1 === b.figures.count && (b = b.figures.L(0), 1 === b.segments.count && J.A(a.startX, b.startX) && J.A(a.startY, b.startY) && (b = b.segments.L(0), b.type === yd && J.A(a.endX, b.endX) && J.A(a.endY, b.endY))) ? !0 : !1
    }

    function zd(a) {
        return a.toString()
    }
    t.cb = function (a) {
        a.classType === td && (this.type = a)
    };
    t.toString = function (a) {
        void 0 === a && (a = -1);
        switch (this.type) {
            case wd:
                return 0 > a ? "M" + this.startX.toString() + " " + this.startY.toString() + "L" + this.endX.toString() + " " + this.endY.toString() : "M" + this.startX.toFixed(a) + " " + this.startY.toFixed(a) + "L" + this.endX.toFixed(a) + " " + this.endY.toFixed(a);
            case Gd:
                var b = new N(this.startX, this.startY, 0, 0);
                b.rw(this.endX, this.endY, 0, 0);
                return 0 > a ? "M" + b.x.toString() + " " + b.y.toString() + "H" + b.right.toString() + "V" + b.bottom.toString() + "H" + b.left.toString() + "z" : "M" + b.x.toFixed(a) +
                    " " + b.y.toFixed(a) + "H" + b.right.toFixed(a) + "V" + b.bottom.toFixed(a) + "H" + b.left.toFixed(a) + "z";
            case Hd:
                b = new N(this.startX, this.startY, 0, 0);
                b.rw(this.endX, this.endY, 0, 0);
                if (0 > a) return a = b.left.toString() + " " + (b.y + b.height / 2).toString(), "M" + a + "A" + (b.width / 2).toString() + " " + (b.height / 2).toString() + " 0 0 1 " + (b.right.toString() + " " + (b.y + b.height / 2).toString()) + "A" + (b.width / 2).toString() + " " + (b.height / 2).toString() + " 0 0 1 " + a;
                var c = b.left.toFixed(a) + " " + (b.y + b.height / 2).toFixed(a);
                return "M" + c + "A" + (b.width /
                    2).toFixed(a) + " " + (b.height / 2).toFixed(a) + " 0 0 1 " + (b.right.toFixed(a) + " " + (b.y + b.height / 2).toFixed(a)) + "A" + (b.width / 2).toFixed(a) + " " + (b.height / 2).toFixed(a) + " 0 0 1 " + c;
            case ud:
                b = "";
                c = this.figures.j;
                for (var d = c.length, e = 0; e < d; e++) {
                    var f = c[e];
                    0 < e && (b += " x ");
                    f.isFilled && (b += "F ");
                    b += f.toString(a)
                }
                return b;
            default:
                return this.type.toString()
        }
    };

    function Id(a, b) {
        function c() {
            return u >= A - 1 ? !0 : null !== k[u + 1].match(/[UuBbMmZzLlHhVvCcSsQqTtAaFfXx]/)
        }

        function d() {
            u++;
            return k[u]
        }

        function e() {
            var a = new I(parseFloat(d()), parseFloat(d()));
            v === v.toLowerCase() && (a.x = z.x + a.x, a.y = z.y + a.y);
            return a
        }

        function f() {
            return z = e()
        }

        function g() {
            return y = e()
        }

        function h() {
            var a = w.toLowerCase();
            return "c" !== a && "s" !== a && "q" !== a && "t" !== a ? z : new I(2 * z.x - y.x, 2 * z.y - y.y)
        }
        void 0 === b && (b = !1);
        a = a.replace(/,/gm, " ");
        a = a.replace(/([UuBbMmZzLlHhVvCcSsQqTtAaFfXx])([UuBbMmZzLlHhVvCcSsQqTtAaFfXx])/gm,
            "$1 $2");
        a = a.replace(/([UuBbMmZzLlHhVvCcSsQqTtAaFfXx])([UuBbMmZzLlHhVvCcSsQqTtAaFfXx])/gm, "$1 $2");
        a = a.replace(/([UuBbMmZzLlHhVvCcSsQqTtAaFfXx])([^\s])/gm, "$1 $2");
        a = a.replace(/([^\s])([UuBbMmZzLlHhVvCcSsQqTtAaFfXx])/gm, "$1 $2");
        a = a.replace(/([0-9])([+\-])/gm, "$1 $2");
        a = a.replace(/([Aa](\s+[0-9]+){3})\s+([01])\s*([01])/gm, "$1 $3 $4 ");
        a = a.replace(/[\s\r\t\n]+/gm, " ");
        a = a.replace(/^\s+|\s+$/g, "");
        var k = a.split(" ");
        for (a = 0; a < k.length; a++) {
            var l = k[a];
            if (null !== l.match(/(\.[0-9]*)(\.)/gm)) {
                for (var m =
                        Fa(), n = "", p = !1, r = 0; r < l.length; r++) {
                    var q = l[r];
                    "." !== q || p ? "." === q ? (m.push(n), n = ".") : n += q : (p = !0, n += q)
                }
                m.push(n);
                k.splice(a, 1);
                for (l = 0; l < m.length; l++) k.splice(a + l, 0, m[l]);
                a += m.length - 1;
                Ha(m)
            }
        }
        var u = -1,
            v = "",
            w = "";
        m = new I(0, 0);
        var y = new I(0, 0),
            z = new I(0, 0),
            A = k.length;
        a = Jd(null);
        n = l = !1;
        p = !0;
        for (r = null; !(u >= A - 1);)
            if (w = v, v = d(), "" !== v) switch (v.toUpperCase()) {
                case "X":
                    p = !0;
                    n = l = !1;
                    break;
                case "M":
                    r = f();
                    null === a.fc || !0 === p ? (Kd(a, r.x, r.y, l, !n), p = !1) : a.moveTo(r.x, r.y);
                    for (m = z; !c();) r = f(), a.lineTo(r.x, r.y);
                    break;
                case "L":
                    for (; !c();) r = f(), a.lineTo(r.x, r.y);
                    break;
                case "H":
                    for (; !c();) z = new I((v === v.toLowerCase() ? z.x : 0) + parseFloat(d()), z.y), a.lineTo(z.x, z.y);
                    break;
                case "V":
                    for (; !c();) z = new I(z.x, (v === v.toLowerCase() ? z.y : 0) + parseFloat(d())), a.lineTo(z.x, z.y);
                    break;
                case "C":
                    for (; !c();) {
                        r = e();
                        q = g();
                        var C = f();
                        Ld(a, r.x, r.y, q.x, q.y, C.x, C.y)
                    }
                    break;
                case "S":
                    for (; !c();) r = h(), q = g(), C = f(), Ld(a, r.x, r.y, q.x, q.y, C.x, C.y);
                    break;
                case "Q":
                    for (; !c();) r = g(), q = f(), Qd(a, r.x, r.y, q.x, q.y);
                    break;
                case "T":
                    for (; !c();) y = r = h(), q = f(), Qd(a,
                        r.x, r.y, q.x, q.y);
                    break;
                case "B":
                    for (; !c();) {
                        r = parseFloat(d());
                        q = parseFloat(d());
                        C = parseFloat(d());
                        var G = parseFloat(d()),
                            L = parseFloat(d()),
                            K = L,
                            V = !1;
                        c() || (K = parseFloat(d()), c() || (V = 0 !== parseFloat(d())));
                        v === v.toLowerCase() && (C += z.x, G += z.y);
                        a.arcTo(r, q, C, G, L, K, V)
                    }
                    break;
                case "A":
                    for (; !c();) r = Math.abs(parseFloat(d())), q = Math.abs(parseFloat(d())), C = parseFloat(d()), G = !!parseFloat(d()), L = !!parseFloat(d()), K = f(), Rd(a, r, q, C, G, L, K.x, K.y);
                    break;
                case "Z":
                    Sd(a);
                    z = m;
                    break;
                case "F":
                    r = "";
                    for (q = 1; k[u + q];)
                        if (null !==
                            k[u + q].match(/[Uu]/)) q++;
                        else if (null === k[u + q].match(/[UuBbMmZzLlHhVvCcSsQqTtAaFfXx]/)) q++;
                    else {
                        r = k[u + q];
                        break
                    }
                    r.match(/[Mm]/) ? l = !0 : 0 < a.fc.segments.length && (a.fc.isFilled = !0);
                    break;
                case "U":
                    r = "";
                    for (q = 1; k[u + q];)
                        if (null !== k[u + q].match(/[Ff]/)) q++;
                        else if (null === k[u + q].match(/[UuBbMmZzLlHhVvCcSsQqTtAaFfXx]/)) q++;
                    else {
                        r = k[u + q];
                        break
                    }
                    r.match(/[Mm]/) ? n = !0 : a.Lq(!1)
            }
        m = a.mt;
        Td = a;
        if (b)
            for (b = m.figures.iterator; b.next();) b.value.isFilled = !0;
        return m
    }

    function Ud(a, b) {
        for (var c = a.length, d = I.alloc(), e = 0; e < c; e++) {
            var f = a[e];
            d.x = f[0];
            d.y = f[1];
            b.ra(d);
            f[0] = d.x;
            f[1] = d.y;
            d.x = f[2];
            d.y = f[3];
            b.ra(d);
            f[2] = d.x;
            f[3] = d.y;
            d.x = f[4];
            d.y = f[5];
            b.ra(d);
            f[4] = d.x;
            f[5] = d.y;
            d.x = f[6];
            d.y = f[7];
            b.ra(d);
            f[6] = d.x;
            f[7] = d.y
        }
        I.free(d)
    }
    t.Iv = function () {
        if (this.qa || this.Dr !== this.figures.Aa) return !0;
        for (var a = this.figures.j, b = a.length, c = 0; c < b; c++)
            if (a[c].Iv()) return !0;
        return !1
    };
    td.prototype.computeBounds = function () {
        this.qa = !1;
        this.Tm = this.Gk = null;
        this.Um = NaN;
        this.Dr = this.figures.Aa;
        for (var a = this.figures.j, b = a.length, c = 0; c < b; c++) {
            var d = a[c];
            d.qa = !1;
            var e = d.segments;
            d.Is = e.Aa;
            d = e.j;
            e = d.length;
            for (var f = 0; f < e; f++) {
                var g = d[f];
                g.qa = !1;
                g.Le = null
            }
        }
        a = this.kr;
        a.ea();
        isNaN(this.kl) || isNaN(this.jl) ? a.h(0, 0, 0, 0) : a.h(0, 0, this.kl, this.jl);
        Vd(this, a, !1);
        ec(a, 0, 0, 0, 0);
        a.freeze()
    };
    td.prototype.Bx = function () {
        var a = new N;
        Vd(this, a, !0);
        return a
    };

    function Vd(a, b, c) {
        switch (a.type) {
            case wd:
            case Gd:
            case Hd:
                c ? b.h(a.Rc, a.Sc, 0, 0) : ec(b, a.Rc, a.Sc, 0, 0);
                ec(b, a.ec, a.mc, 0, 0);
                break;
            case ud:
                var d = a.figures;
                a = d.j;
                d = d.length;
                for (var e = 0; e < d; e++) {
                    var f = a[e];
                    c && 0 === e ? b.h(f.startX, f.startY, 0, 0) : ec(b, f.startX, f.startY, 0, 0);
                    for (var g = f.segments.j, h = g.length, k = f.startX, l = f.startY, m = 0; m < h; m++) {
                        var n = g[m];
                        switch (n.type) {
                            case yd:
                            case Wd:
                                k = n.endX;
                                l = n.endY;
                                ec(b, k, l, 0, 0);
                                break;
                            case Xd:
                                J.bm(k, l, n.point1X, n.point1Y, n.point2X, n.point2Y, n.endX, n.endY, .5, b);
                                k = n.endX;
                                l = n.endY;
                                break;
                            case Yd:
                                J.Rv(k, l, n.point1X, n.point1Y, n.endX, n.endY, .5, b);
                                k = n.endX;
                                l = n.endY;
                                break;
                            case Zd:
                            case $d:
                                var p = n.type === Zd ? ae(n, f) : be(n, f, k, l),
                                    r = p.length;
                                if (0 === r) {
                                    k = n.centerX;
                                    l = n.centerY;
                                    ec(b, k, l, 0, 0);
                                    break
                                }
                                n = null;
                                for (var q = 0; q < r; q++) n = p[q], J.bm(n[0], n[1], n[2], n[3], n[4], n[5], n[6], n[7], .5, b);
                                null !== n && (k = n[6], l = n[7]);
                                break;
                            default:
                                B("Unknown Segment type: " + n.type)
                        }
                    }
                }
                break;
            default:
                B("Unknown Geometry type: " + a.type)
        }
    }
    td.prototype.normalize = function () {
        this.s && ua(this);
        var a = this.Bx();
        this.offset(-a.x, -a.y);
        return new I(-a.x, -a.y)
    };
    td.prototype.offset = function (a, b) {
        this.s && ua(this);
        this.transform(1, 0, 0, 1, a, b);
        return this
    };
    td.prototype.scale = function (a, b) {
        this.s && ua(this);
        this.transform(a, 0, 0, b, 0, 0);
        return this
    };
    td.prototype.rotate = function (a, b, c) {
        this.s && ua(this);
        void 0 === b && (b = 0);
        void 0 === c && (c = 0);
        var d = rd.alloc();
        d.reset();
        d.rotate(a, b, c);
        this.transform(d.m11, d.m12, d.m21, d.m22, d.dx, d.dy);
        rd.free(d);
        return this
    };
    t = td.prototype;
    t.transform = function (a, b, c, d, e, f) {
        switch (this.type) {
            case wd:
            case Gd:
            case Hd:
                var g = this.Rc;
                var h = this.Sc;
                this.Rc = g * a + h * c + e;
                this.Sc = g * b + h * d + f;
                g = this.ec;
                h = this.mc;
                this.ec = g * a + h * c + e;
                this.mc = g * b + h * d + f;
                break;
            case ud:
                for (var k = this.figures.j, l = k.length, m = 0; m < l; m++) {
                    var n = k[m];
                    g = n.startX;
                    h = n.startY;
                    n.startX = g * a + h * c + e;
                    n.startY = g * b + h * d + f;
                    n = n.segments.j;
                    for (var p = n.length, r = 0; r < p; r++) {
                        var q = n[r];
                        switch (q.type) {
                            case yd:
                            case Wd:
                                g = q.endX;
                                h = q.endY;
                                q.endX = g * a + h * c + e;
                                q.endY = g * b + h * d + f;
                                break;
                            case Xd:
                                g = q.point1X;
                                h = q.point1Y;
                                q.point1X = g * a + h * c + e;
                                q.point1Y = g * b + h * d + f;
                                g = q.point2X;
                                h = q.point2Y;
                                q.point2X = g * a + h * c + e;
                                q.point2Y = g * b + h * d + f;
                                g = q.endX;
                                h = q.endY;
                                q.endX = g * a + h * c + e;
                                q.endY = g * b + h * d + f;
                                break;
                            case Yd:
                                g = q.point1X;
                                h = q.point1Y;
                                q.point1X = g * a + h * c + e;
                                q.point1Y = g * b + h * d + f;
                                g = q.endX;
                                h = q.endY;
                                q.endX = g * a + h * c + e;
                                q.endY = g * b + h * d + f;
                                break;
                            case Zd:
                                g = q.centerX;
                                h = q.centerY;
                                q.centerX = g * a + h * c + e;
                                q.centerY = g * b + h * d + f;
                                0 !== b && (g = 180 * Math.atan2(b, a) / Math.PI, 0 > g && (g += 360), q.startAngle += g);
                                0 > a && (q.startAngle = 180 - q.startAngle, q.sweepAngle = -q.sweepAngle);
                                0 > d &&
                                    (q.startAngle = -q.startAngle, q.sweepAngle = -q.sweepAngle);
                                q.radiusX *= Math.sqrt(a * a + c * c);
                                void 0 !== q.radiusY && (q.radiusY *= Math.sqrt(b * b + d * d));
                                break;
                            case $d:
                                g = q.endX;
                                h = q.endY;
                                q.endX = g * a + h * c + e;
                                q.endY = g * b + h * d + f;
                                0 !== b && (g = 180 * Math.atan2(b, a) / Math.PI, 0 > g && (g += 360), q.xAxisRotation += g);
                                0 > a && (q.xAxisRotation = 180 - q.xAxisRotation, q.isClockwiseArc = !q.isClockwiseArc);
                                0 > d && (q.xAxisRotation = -q.xAxisRotation, q.isClockwiseArc = !q.isClockwiseArc);
                                q.radiusX *= Math.sqrt(a * a + c * c);
                                q.radiusY *= Math.sqrt(b * b + d * d);
                                break;
                            default:
                                B("Unknown Segment type: " +
                                    q.type)
                        }
                    }
                }
        }
        this.qa = !0;
        return this
    };
    t.aa = function (a, b) {
        void 0 === b && (b = 0);
        var c = this.Rc,
            d = this.Sc,
            e = this.ec,
            f = this.mc;
        switch (this.type) {
            case wd:
                return J.Nb(c, d, e, f, b, a.x, a.y);
            case Gd:
                var g = N.allocAt(Math.min(c, e) - b, Math.min(d, f) - b, Math.abs(e - c) + 2 * b, Math.abs(f - d) + 2 * b);
                a = g.aa(a);
                N.free(g);
                return a;
            case Hd:
                g = Math.min(c, e) - b;
                var h = Math.min(d, f) - b;
                c = (Math.abs(e - c) + 2 * b) / 2;
                b = (Math.abs(f - d) + 2 * b) / 2;
                if (0 >= c || 0 >= b) return !1;
                g = a.x - (g + c);
                h = a.y - (h + b);
                return 1 >= g * g / (c * c) + h * h / (b * b);
            case ud:
                return ce(this, a, b, !0, !1);
            default:
                return !1
        }
    };

    function ce(a, b, c, d, e) {
        var f = b.x;
        b = b.y;
        for (var g = a.bounds.x - 20, h = 0, k, l, m, n, p = a.figures.j, r = p.length, q = 0; q < r; q++) {
            var u = p[q];
            if (u.isFilled) {
                if (d && u.aa(f, b, c)) return !0;
                var v = u.segments;
                k = u.startX;
                l = u.startY;
                for (var w = k, y = l, z = v.j, A = 0; A <= v.length; A++) {
                    var C = void 0;
                    if (A !== v.length) {
                        C = z[A];
                        var G = C.type;
                        a = C.endX;
                        n = C.endY
                    } else G = yd, a = w, n = y;
                    switch (G) {
                        case Wd:
                            w = de(f, b, g, b, k, l, w, y);
                            if (isNaN(w)) return !0;
                            h += w;
                            w = a;
                            y = n;
                            break;
                        case yd:
                            k = de(f, b, g, b, k, l, a, n);
                            if (isNaN(k)) return !0;
                            h += k;
                            break;
                        case Xd:
                            m = J.fq(k, l, C.point1X,
                                C.point1Y, C.point2X, C.point2Y, a, n, g, b, f, b, .5);
                            h += m;
                            break;
                        case Yd:
                            m = J.fq(k, l, (k + 2 * C.point1X) / 3, (l + 2 * C.point1Y) / 3, (2 * C.point1X + a) / 3, (2 * C.point1Y + n) / 3, a, n, g, b, f, b, .5);
                            h += m;
                            break;
                        case Zd:
                        case $d:
                            G = C.type === Zd ? ae(C, u) : be(C, u, k, l);
                            var L = G.length;
                            if (0 === L) {
                                k = de(f, b, g, b, k, l, C.centerX, C.centerY);
                                if (isNaN(k)) return !0;
                                h += k;
                                break
                            }
                            C = null;
                            for (var K = 0; K < L; K++) {
                                C = G[K];
                                if (0 === K) {
                                    m = de(f, b, g, b, k, l, C[0], C[1]);
                                    if (isNaN(m)) return !0;
                                    h += m
                                }
                                m = J.fq(C[0], C[1], C[2], C[3], C[4], C[5], C[6], C[7], g, b, f, b, .5);
                                h += m
                            }
                            null !== C && (a = C[6],
                                n = C[7]);
                            break;
                        default:
                            B("Unknown Segment type: " + C.type)
                    }
                    k = a;
                    l = n
                }
                if (0 !== h) return !0;
                h = 0
            } else if (u.aa(f, b, e ? c : c + 2)) return !0
        }
        return 0 !== h
    }

    function de(a, b, c, d, e, f, g, h) {
        if (J.Nb(e, f, g, h, .05, a, b)) return NaN;
        var k = (a - c) * (f - h);
        if (0 === k) return 0;
        var l = ((a * d - b * c) * (e - g) - (a - c) * (e * h - f * g)) / k;
        b = (a * d - b * c) * (f - h) / k;
        if (l >= a) return 0;
        if ((e > g ? e - g : g - e) < (f > h ? f - h : h - f))
            if (f < h) {
                if (b < f || b > h) return 0
            } else {
                if (b < h || b > f) return 0
            }
        else if (e < g) {
            if (l < e || l > g) return 0
        } else if (l < g || l > e) return 0;
        return 0 < k ? 1 : -1
    }

    function ee(a, b, c, d) {
        a = a.figures.j;
        for (var e = a.length, f = 0; f < e; f++)
            if (a[f].aa(b, c, d)) return !0;
        return !1
    }
    t.yv = function (a, b) {
        0 > a ? a = 0 : 1 < a && (a = 1);
        void 0 === b && (b = new I);
        if (this.type === wd) return b.h(this.startX + a * (this.endX - this.startX), this.startY + a * (this.endY - this.startY)), b;
        for (var c = this.flattenedSegments, d = this.flattenedLengths, e = c.length, f = this.flattenedTotalLength * a, g = 0, h = 0; h < e; h++) {
            var k = d[h],
                l = k.length;
            for (a = 0; a < l; a++) {
                var m = k[a];
                if (g + m >= f) return d = f - g, d = 0 === m ? 0 : d / m, c = c[h], h = c[2 * a], e = c[2 * a + 1], b.h(h + (c[2 * a + 2] - h) * d, e + (c[2 * a + 3] - e) * d), b;
                g += m
            }
        }
        return b
    };
    t.Ox = function (a) {
        0 > a ? a = 0 : 1 < a && (a = 1);
        if (this.type === wd) return 180 * Math.atan2(this.endY - this.startY, this.endX - this.startX) / Math.PI;
        for (var b = this.flattenedSegments, c = this.flattenedLengths, d = b.length, e = this.flattenedTotalLength * a, f = 0, g = 0; g < d; g++) {
            var h = c[g],
                k = h.length;
            for (a = 0; a < k; a++) {
                var l = h[a];
                if (f + l >= e) return e = b[g], b = e[2 * a], c = e[2 * a + 1], d = e[2 * a + 2], a = e[2 * a + 3], 1 > Math.abs(d - b) && 1 > Math.abs(a - c) ? 0 : 1 > Math.abs(d - b) ? 0 <= a - c ? 90 : 270 : 1 > Math.abs(a - c) ? 0 <= d - b ? 0 : 180 : 180 * Math.atan2(a - c, d - b) / Math.PI;
                f += l
            }
        }
        return NaN
    };
    t.zv = function (a, b) {
        0 > a ? a = 0 : 1 < a && (a = 1);
        void 0 === b && (b = []);
        b.length = 3;
        if (this.type === wd) return b[0] = this.startX + a * (this.endX - this.startX), b[1] = this.startY + a * (this.endY - this.startY), b[2] = 180 * Math.atan2(this.endY - this.startY, this.endX - this.startX) / Math.PI, b;
        for (var c = this.flattenedSegments, d = this.flattenedLengths, e = c.length, f = this.flattenedTotalLength * a, g = 0, h = 0; h < e; h++) {
            var k = d[h],
                l = k.length;
            for (a = 0; a < l; a++) {
                var m = k[a];
                if (g + m >= f) return d = f - g, d = 0 === m ? 0 : d / m, m = c[h], c = m[2 * a], h = m[2 * a + 1], e = m[2 * a + 2], a = m[2 * a +
                    3], b[0] = c + (e - c) * d, b[1] = h + (a - h) * d, b[2] = 1 > Math.abs(e - c) && 1 > Math.abs(a - h) ? 0 : 1 > Math.abs(e - c) ? 0 <= a - h ? 90 : 270 : 1 > Math.abs(a - h) ? 0 <= e - c ? 0 : 180 : 180 * Math.atan2(a - h, e - c) / Math.PI, b;
                g += m
            }
        }
        return b
    };
    t.Px = function (a) {
        if (this.type === wd) {
            var b = this.startX,
                c = this.startY,
                d = this.endX,
                e = this.endY;
            if (b !== d || c !== e) {
                var f = a.x;
                a = a.y;
                if (b === d) {
                    if (c < e) {
                        var g = c;
                        d = e
                    } else g = e, d = c;
                    return a <= g ? g === c ? 0 : 1 : a >= d ? d === c ? 0 : 1 : Math.abs(a - c) / (d - g)
                }
                if (c === e) return b < d ? g = b : (g = d, d = b), f <= g ? g === b ? 0 : 1 : f >= d ? d === b ? 0 : 1 : Math.abs(f - b) / (d - g);
                g = (d - b) * (d - b) + (e - c) * (e - c);
                var h = I.alloc();
                J.Lh(b, c, d, e, f, a, h);
                a = h.x;
                f = h.y;
                I.free(h);
                return Math.sqrt(((a - b) * (a - b) + (f - c) * (f - c)) / g)
            }
        } else if (this.type === Gd) {
            g = this.startX;
            h = this.startY;
            var k = this.endX;
            e = this.endY;
            if (g !== k || h !== e) {
                b = k - g;
                c = e - h;
                f = 2 * b + 2 * c;
                d = a.x;
                a = a.y;
                d = Math.min(Math.max(d, g), k);
                a = Math.min(Math.max(a, h), e);
                g = Math.abs(d - g);
                k = Math.abs(d - k);
                h = Math.abs(a - h);
                e = Math.abs(a - e);
                var l = Math.min(g, k, h, e);
                if (l === h) return d / f;
                if (l === k) return (b + a) / f;
                if (l === e) return (2 * b + c - d) / f;
                if (l === g) return (2 * b + 2 * c - a) / f
            }
        } else {
            b = this.flattenedSegments;
            c = this.flattenedLengths;
            f = this.flattenedTotalLength;
            d = I.alloc();
            e = Infinity;
            h = g = 0;
            k = b.length;
            for (var m = l = 0, n = 0; n < k; n++)
                for (var p = b[n], r = c[n], q = p.length, u = 0; u < q; u += 2) {
                    var v =
                        p[u],
                        w = p[u + 1];
                    if (0 !== u) {
                        J.Lh(l, m, v, w, a.x, a.y, d);
                        var y = (d.x - a.x) * (d.x - a.x) + (d.y - a.y) * (d.y - a.y);
                        y < e && (e = y, g = h, g += Math.sqrt((d.x - l) * (d.x - l) + (d.y - m) * (d.y - m)));
                        h += r[(u - 2) / 2]
                    }
                    l = v;
                    m = w
                }
            I.free(d);
            a = g / f;
            return 0 > a ? 0 : 1 < a ? 1 : a
        }
        return 0
    };

    function fe(a) {
        if (null === a.Gk) {
            var b = a.Gk = [],
                c = a.Tm = [],
                d = [],
                e = [];
            if (a.type === wd) d.push(a.startX), d.push(a.startY), d.push(a.endX), d.push(a.endY), b.push(d), e.push(Math.sqrt((a.startX - a.endX) * (a.startX - a.endX) + (a.startY - a.endY) * (a.startY - a.endY))), c.push(e);
            else if (a.type === Gd) d.push(a.startX), d.push(a.startY), d.push(a.endX), d.push(a.startY), d.push(a.endX), d.push(a.endY), d.push(a.startX), d.push(a.endY), d.push(a.startX), d.push(a.startY), b.push(d), e.push(Math.abs(a.startX - a.endX)), e.push(Math.abs(a.startY -
                a.endY)), e.push(Math.abs(a.startX - a.endX)), e.push(Math.abs(a.startY - a.endY)), c.push(e);
            else if (a.type === Hd) {
                var f = new ke;
                f.startX = a.endX;
                f.startY = (a.startY + a.endY) / 2;
                var g = new le(Zd);
                g.startAngle = 0;
                g.sweepAngle = 360;
                g.centerX = (a.startX + a.endX) / 2;
                g.centerY = (a.startY + a.endY) / 2;
                g.radiusX = Math.abs(a.startX - a.endX) / 2;
                g.radiusY = Math.abs(a.startY - a.endY) / 2;
                f.add(g);
                a = ae(g, f);
                e = a.length;
                if (0 === e) d.push(g.centerX), d.push(g.centerY);
                else {
                    g = f.startX;
                    f = f.startY;
                    for (var h = 0; h < e; h++) {
                        var k = a[h];
                        J.ye(g, f, k[2], k[3],
                            k[4], k[5], k[6], k[7], .5, d);
                        g = k[6];
                        f = k[7]
                    }
                }
                b.push(d);
                c.push(me(d))
            } else
                for (a = a.figures.iterator; a.next();) {
                    e = a.value;
                    d = [];
                    d.push(e.startX);
                    d.push(e.startY);
                    g = e.startX;
                    f = e.startY;
                    h = g;
                    k = f;
                    for (var l = e.segments.j, m = l.length, n = 0; n < m; n++) {
                        var p = l[n];
                        switch (p.type) {
                            case Wd:
                                4 <= d.length && (b.push(d), c.push(me(d)));
                                d = [];
                                d.push(p.endX);
                                d.push(p.endY);
                                g = p.endX;
                                f = p.endY;
                                h = g;
                                k = f;
                                break;
                            case yd:
                                d.push(p.endX);
                                d.push(p.endY);
                                g = p.endX;
                                f = p.endY;
                                break;
                            case Xd:
                                J.ye(g, f, p.point1X, p.point1Y, p.point2X, p.point2Y, p.endX, p.endY,
                                    .5, d);
                                g = p.endX;
                                f = p.endY;
                                break;
                            case Yd:
                                J.Cq(g, f, p.point1X, p.point1Y, p.endX, p.endY, .5, d);
                                g = p.endX;
                                f = p.endY;
                                break;
                            case Zd:
                                var r = ae(p, e),
                                    q = r.length;
                                if (0 === q) {
                                    d.push(p.centerX);
                                    d.push(p.centerY);
                                    g = p.centerX;
                                    f = p.centerY;
                                    break
                                }
                                for (var u = 0; u < q; u++) {
                                    var v = r[u];
                                    J.ye(g, f, v[2], v[3], v[4], v[5], v[6], v[7], .5, d);
                                    g = v[6];
                                    f = v[7]
                                }
                                break;
                            case $d:
                                r = be(p, e, g, f);
                                q = r.length;
                                if (0 === q) {
                                    d.push(p.centerX);
                                    d.push(p.centerY);
                                    g = p.centerX;
                                    f = p.centerY;
                                    break
                                }
                                for (u = 0; u < q; u++) v = r[u], J.ye(g, f, v[2], v[3], v[4], v[5], v[6], v[7], .5, d), g = v[6],
                                    f = v[7];
                                break;
                            default:
                                B("Segment not of valid type: " + p.type)
                        }
                        p.isClosed && (d.push(h), d.push(k))
                    }
                    4 <= d.length && (b.push(d), c.push(me(d)))
                }
        }
    }

    function me(a) {
        for (var b = [], c = 0, d = 0, e = a.length, f = 0; f < e; f += 2) {
            var g = a[f],
                h = a[f + 1];
            0 !== f && b.push(Math.sqrt(Bb(c, d, g, h)));
            c = g;
            d = h
        }
        return b
    }
    t.add = function (a) {
        this.rj.add(a);
        return this
    };
    t.Jm = function (a, b, c, d, e, f, g, h) {
        this.s && ua(this);
        this.hf = (new P(a, b, e, f)).freeze();
        this.jf = (new P(c, d, g, h)).freeze();
        return this
    };
    ma.Object.defineProperties(td.prototype, {
        flattenedSegments: {
            get: function () {
                fe(this);
                return this.Gk
            }
        },
        flattenedLengths: {
            get: function () {
                fe(this);
                return this.Tm
            }
        },
        flattenedTotalLength: {
            get: function () {
                var a = this.Um;
                if (isNaN(a)) {
                    if (this.type === wd) {
                        a = Math.abs(this.endX - this.startX);
                        var b = Math.abs(this.endY - this.startY);
                        a = Math.sqrt(a * a + b * b)
                    } else if (this.type === Gd) a = 2 * Math.abs(this.endX - this.startX) + 2 * Math.abs(this.endY -
                        this.startY);
                    else {
                        b = this.flattenedLengths;
                        for (var c = b.length, d = a = 0; d < c; d++)
                            for (var e = b[d], f = e.length, g = 0; g < f; g++) a += e[g]
                    }
                    this.Um = a
                }
                return a
            }
        },
        type: {
            get: function () {
                return this.pa
            },
            set: function (a) {
                this.pa !== a && (this.s && ua(this, a), this.pa = a, this.qa = !0)
            }
        },
        startX: {
            get: function () {
                return this.Rc
            },
            set: function (a) {
                this.Rc !== a && (this.s && ua(this, a), this.Rc = a, this.qa = !0)
            }
        },
        startY: {
            get: function () {
                return this.Sc
            },
            set: function (a) {
                this.Sc !==
                    a && (this.s && ua(this, a), this.Sc = a, this.qa = !0)
            }
        },
        endX: {
            get: function () {
                return this.ec
            },
            set: function (a) {
                this.ec !== a && (this.s && ua(this, a), this.ec = a, this.qa = !0)
            }
        },
        endY: {
            get: function () {
                return this.mc
            },
            set: function (a) {
                this.mc !== a && (this.s && ua(this, a), this.mc = a, this.qa = !0)
            }
        },
        figures: {
            get: function () {
                return this.rj
            },
            set: function (a) {
                this.rj !== a && (this.s && ua(this, a), this.rj = a, this.qa = !0)
            }
        },
        spot1: {
            get: function () {
                return this.hf
            },
            set: function (a) {
                this.s && ua(this, a);
                this.hf = a.G()
            }
        },
        spot2: {
            get: function () {
                return this.jf
            },
            set: function (a) {
                this.s && ua(this, a);
                this.jf = a.G()
            }
        },
        defaultStretch: {
            get: function () {
                return this.Qf
            },
            set: function (a) {
                this.s && ua(this, a);
                this.Qf = a
            }
        },
        bounds: {
            get: function () {
                this.Iv() && this.computeBounds();
                return this.kr
            }
        }
    });
    td.prototype.setSpots = td.prototype.Jm;
    td.prototype.add = td.prototype.add;
    td.prototype.getFractionForPoint = td.prototype.Px;
    td.prototype.getPointAndAngleAlongPath = td.prototype.zv;
    td.prototype.getAngleAlongPath = td.prototype.Ox;
    td.prototype.getPointAlongPath = td.prototype.yv;
    td.prototype.containsPoint = td.prototype.aa;
    td.prototype.transform = td.prototype.transform;
    td.prototype.rotate = td.prototype.rotate;
    td.prototype.scale = td.prototype.scale;
    td.prototype.offset = td.prototype.offset;
    td.prototype.normalize = td.prototype.normalize;
    td.prototype.computeBoundsWithoutOrigin = td.prototype.Bx;
    td.prototype.equalsApprox = td.prototype.Ma;
    var wd = new D(td, "Line", 0),
        Gd = new D(td, "Rectangle", 1),
        Hd = new D(td, "Ellipse", 2),
        ud = new D(td, "Path", 3);
    td.className = "Geometry";
    td.stringify = zd;
    td.fillPath = function (a) {
        a = a.split(/[Xx]/);
        for (var b = a.length, c = "", d = 0; d < b; d++) {
            var e = a[d];
            c = null !== e.match(/[Ff]/) ? 0 === d ? c + e : c + ("X" + (" " === e[0] ? "" : " ") + e) : c + ((0 === d ? "" : "X ") + "F" + (" " === e[0] ? "" : " ") + e)
        }
        return c
    };
    td.parse = Id;
    td.Line = wd;
    td.Rectangle = Gd;
    td.Ellipse = Hd;
    td.Path = ud;

    function ke(a, b, c, d) {
        Ya(this);
        this.s = !1;
        void 0 === c && (c = !0);
        this.Or = c;
        void 0 === d && (d = !0);
        this.Sr = d;
        void 0 !== a ? this.Rc = a : this.Rc = 0;
        void 0 !== b ? this.Sc = b : this.Sc = 0;
        this.Kl = new E;
        this.Is = this.Kl.Aa;
        this.qa = !0
    }
    ke.prototype.copy = function () {
        var a = new ke;
        a.Or = this.Or;
        a.Sr = this.Sr;
        a.Rc = this.Rc;
        a.Sc = this.Sc;
        for (var b = this.Kl.j, c = b.length, d = a.Kl, e = 0; e < c; e++) {
            var f = b[e].copy();
            d.add(f)
        }
        a.Is = this.Is;
        a.qa = this.qa;
        return a
    };
    t = ke.prototype;
    t.Ma = function (a) {
        if (!(a instanceof ke && J.A(this.startX, a.startX) && J.A(this.startY, a.startY))) return !1;
        var b = this.segments.j;
        a = a.segments.j;
        var c = b.length;
        if (c !== a.length) return !1;
        for (var d = 0; d < c; d++)
            if (!b[d].Ma(a[d])) return !1;
        return !0
    };
    t.toString = function (a) {
        void 0 === a && (a = -1);
        var b = 0 > a ? "M" + this.startX.toString() + " " + this.startY.toString() : "M" + this.startX.toFixed(a) + " " + this.startY.toFixed(a);
        for (var c = this.segments.j, d = c.length, e = 0; e < d; e++) b += " " + c[e].toString(a);
        return b
    };
    t.freeze = function () {
        this.s = !0;
        var a = this.segments;
        a.freeze();
        var b = a.j;
        a = a.length;
        for (var c = 0; c < a; c++) b[c].freeze();
        return this
    };
    t.ea = function () {
        this.s = !1;
        var a = this.segments;
        a.ea();
        a = a.j;
        for (var b = a.length, c = 0; c < b; c++) a[c].ea();
        return this
    };
    t.Iv = function () {
        if (this.qa) return !0;
        var a = this.segments;
        if (this.Is !== a.Aa) return !0;
        a = a.j;
        for (var b = a.length, c = 0; c < b; c++)
            if (a[c].qa) return !0;
        return !1
    };
    t.add = function (a) {
        this.Kl.add(a);
        return this
    };
    t.aa = function (a, b, c) {
        for (var d = this.startX, e = this.startY, f = d, g = e, h = this.segments.j, k = h.length, l = 0; l < k; l++) {
            var m = h[l];
            switch (m.type) {
                case Wd:
                    f = m.endX;
                    g = m.endY;
                    d = m.endX;
                    e = m.endY;
                    break;
                case yd:
                    if (J.Nb(d, e, m.endX, m.endY, c, a, b)) return !0;
                    d = m.endX;
                    e = m.endY;
                    break;
                case Xd:
                    if (J.at(d, e, m.point1X, m.point1Y, m.point2X, m.point2Y, m.endX, m.endY, .5, a, b, c)) return !0;
                    d = m.endX;
                    e = m.endY;
                    break;
                case Yd:
                    if (J.Sv(d, e, m.point1X, m.point1Y, m.endX, m.endY, .5, a, b, c)) return !0;
                    d = m.endX;
                    e = m.endY;
                    break;
                case Zd:
                case $d:
                    var n = m.type ===
                        Zd ? ae(m, this) : be(m, this, d, e),
                        p = n.length;
                    if (0 === p) {
                        if (J.Nb(d, e, m.centerX, m.centerY, c, a, b)) return !0;
                        d = m.centerX;
                        e = m.centerY;
                        break
                    }
                    for (var r = null, q = 0; q < p; q++)
                        if (r = n[q], 0 === q && J.Nb(d, e, r[0], r[1], c, a, b) || J.at(r[0], r[1], r[2], r[3], r[4], r[5], r[6], r[7], .5, a, b, c)) return !0;
                    null !== r && (d = r[6], e = r[7]);
                    break;
                default:
                    B("Unknown Segment type: " + m.type)
            }
            if (m.isClosed && (d !== f || e !== g) && J.Nb(d, e, f, g, c, a, b)) return !0
        }
        return !1
    };
    ma.Object.defineProperties(ke.prototype, {
        isFilled: {
            get: function () {
                return this.Or
            },
            set: function (a) {
                this.s && ua(this, a);
                this.Or = a
            }
        },
        isShadowed: {
            get: function () {
                return this.Sr
            },
            set: function (a) {
                this.s && ua(this, a);
                this.Sr = a
            }
        },
        startX: {
            get: function () {
                return this.Rc
            },
            set: function (a) {
                this.s && ua(this, a);
                this.Rc = a;
                this.qa = !0
            }
        },
        startY: {
            get: function () {
                return this.Sc
            },
            set: function (a) {
                this.s && ua(this,
                    a);
                this.Sc = a;
                this.qa = !0
            }
        },
        segments: {
            get: function () {
                return this.Kl
            },
            set: function (a) {
                this.s && ua(this, a);
                this.Kl = a;
                this.qa = !0
            }
        }
    });
    ke.prototype.add = ke.prototype.add;
    ke.prototype.equalsApprox = ke.prototype.Ma;
    ke.className = "PathFigure";

    function le(a, b, c, d, e, f, g, h) {
        Ya(this);
        this.s = !1;
        void 0 === a && (a = yd);
        this.pa = a;
        void 0 !== b ? this.ec = b : this.ec = 0;
        void 0 !== c ? this.mc = c : this.mc = 0;
        void 0 === d && (d = 0);
        void 0 === e && (e = 0);
        void 0 === f && (f = 0);
        void 0 === g && (g = 0);
        a === $d ? (a = f % 360, 0 > a && (a += 360), this.ue = a, this.Di = 0, this.Ei = Math.max(d, 0), this.kh = Math.max(e, 0), this.sl = "boolean" === typeof g ? !!g : !1, this.Kk = !!h) : (this.ue = d, this.Di = e, a === Zd && (f = Math.max(f, 0)), this.Ei = f, "number" === typeof g ? (a === Zd && (g = Math.max(g, 0)), this.kh = g) : this.kh = 0, this.Kk = this.sl = !1);
        this.wj = !1;
        this.qa = !0;
        this.Le = null
    }
    le.prototype.copy = function () {
        var a = new le;
        a.pa = this.pa;
        a.ec = this.ec;
        a.mc = this.mc;
        a.ue = this.ue;
        a.Di = this.Di;
        a.Ei = this.Ei;
        a.kh = this.kh;
        a.sl = this.sl;
        a.Kk = this.Kk;
        a.wj = this.wj;
        a.qa = this.qa;
        return a
    };
    t = le.prototype;
    t.Ma = function (a) {
        if (!(a instanceof le) || this.type !== a.type || this.isClosed !== a.isClosed) return !1;
        switch (this.type) {
            case Wd:
            case yd:
                return J.A(this.endX, a.endX) && J.A(this.endY, a.endY);
            case Xd:
                return J.A(this.endX, a.endX) && J.A(this.endY, a.endY) && J.A(this.point1X, a.point1X) && J.A(this.point1Y, a.point1Y) && J.A(this.point2X, a.point2X) && J.A(this.point2Y, a.point2Y);
            case Yd:
                return J.A(this.endX, a.endX) && J.A(this.endY, a.endY) && J.A(this.point1X, a.point1X) && J.A(this.point1Y, a.point1Y);
            case Zd:
                return J.A(this.startAngle,
                    a.startAngle) && J.A(this.sweepAngle, a.sweepAngle) && J.A(this.centerX, a.centerX) && J.A(this.centerY, a.centerY) && J.A(this.radiusX, a.radiusX) && J.A(this.radiusY, a.radiusY);
            case $d:
                return this.isClockwiseArc === a.isClockwiseArc && this.isLargeArc === a.isLargeArc && J.A(this.xAxisRotation, a.xAxisRotation) && J.A(this.endX, a.endX) && J.A(this.endY, a.endY) && J.A(this.radiusX, a.radiusX) && J.A(this.radiusY, a.radiusY);
            default:
                return !1
        }
    };
    t.cb = function (a) {
        a.classType === le && (this.type = a)
    };
    t.toString = function (a) {
        void 0 === a && (a = -1);
        switch (this.type) {
            case Wd:
                a = 0 > a ? "M" + this.endX.toString() + " " + this.endY.toString() : "M" + this.endX.toFixed(a) + " " + this.endY.toFixed(a);
                break;
            case yd:
                a = 0 > a ? "L" + this.endX.toString() + " " + this.endY.toString() : "L" + this.endX.toFixed(a) + " " + this.endY.toFixed(a);
                break;
            case Xd:
                a = 0 > a ? "C" + this.point1X.toString() + " " + this.point1Y.toString() + " " + this.point2X.toString() + " " + this.point2Y.toString() + " " + this.endX.toString() + " " + this.endY.toString() : "C" + this.point1X.toFixed(a) +
                    " " + this.point1Y.toFixed(a) + " " + this.point2X.toFixed(a) + " " + this.point2Y.toFixed(a) + " " + this.endX.toFixed(a) + " " + this.endY.toFixed(a);
                break;
            case Yd:
                a = 0 > a ? "Q" + this.point1X.toString() + " " + this.point1Y.toString() + " " + this.endX.toString() + " " + this.endY.toString() : "Q" + this.point1X.toFixed(a) + " " + this.point1Y.toFixed(a) + " " + this.endX.toFixed(a) + " " + this.endY.toFixed(a);
                break;
            case Zd:
                a = 0 > a ? "B" + this.startAngle.toString() + " " + this.sweepAngle.toString() + " " + this.centerX.toString() + " " + this.centerY.toString() +
                    " " + this.radiusX.toString() + " " + this.radiusY.toString() : "B" + this.startAngle.toFixed(a) + " " + this.sweepAngle.toFixed(a) + " " + this.centerX.toFixed(a) + " " + this.centerY.toFixed(a) + " " + this.radiusX.toFixed(a) + " " + this.radiusY.toFixed(a);
                break;
            case $d:
                a = 0 > a ? "A" + this.radiusX.toString() + " " + this.radiusY.toString() + " " + this.xAxisRotation.toString() + " " + (this.isLargeArc ? 1 : 0) + " " + (this.isClockwiseArc ? 1 : 0) + " " + this.endX.toString() + " " + this.endY.toString() : "A" + this.radiusX.toFixed(a) + " " + this.radiusY.toFixed(a) +
                    " " + this.xAxisRotation.toFixed(a) + " " + (this.isLargeArc ? 1 : 0) + " " + (this.isClockwiseArc ? 1 : 0) + " " + this.endX.toFixed(a) + " " + this.endY.toFixed(a);
                break;
            default:
                a = this.type.toString()
        }
        return a + (this.wj ? "z" : "")
    };
    t.freeze = function () {
        this.s = !0;
        return this
    };
    t.ea = function () {
        this.s = !1;
        return this
    };
    t.close = function () {
        this.wj = !0;
        return this
    };

    function ae(a, b) {
        if (null !== a.Le && !1 === b.qa) return a.Le;
        var c = a.radiusX,
            d = a.radiusY;
        void 0 === d && (d = c);
        if (0 === c || 0 === d) return a.Le = [], a.Le;
        b = a.ue;
        var e = a.Di,
            f = J.Cx(0, 0, c < d ? c : d, a.startAngle, a.startAngle + a.sweepAngle, !1);
        if (c !== d) {
            var g = rd.alloc();
            g.reset();
            c < d ? g.scale(1, d / c) : g.scale(c / d, 1);
            Ud(f, g);
            rd.free(g)
        }
        c = f.length;
        for (d = 0; d < c; d++) g = f[d], g[0] += b, g[1] += e, g[2] += b, g[3] += e, g[4] += b, g[5] += e, g[6] += b, g[7] += e;
        a.Le = f;
        return a.Le
    }

    function be(a, b, c, d) {
        function e(a, b, c, d) {
            return (a * d < b * c ? -1 : 1) * Math.acos((a * c + b * d) / (Math.sqrt(a * a + b * b) * Math.sqrt(c * c + d * d)))
        }
        if (null !== a.Le && !1 === b.qa) return a.Le;
        b = a.Ei;
        var f = a.kh;
        0 === b && (b = 1E-4);
        0 === f && (f = 1E-4);
        var g = Math.PI / 180 * a.ue,
            h = a.sl,
            k = a.Kk,
            l = a.ec,
            m = a.mc,
            n = Math.cos(g),
            p = Math.sin(g),
            r = n * (c - l) / 2 + p * (d - m) / 2;
        g = -p * (c - l) / 2 + n * (d - m) / 2;
        var q = r * r / (b * b) + g * g / (f * f);
        1 < q && (b *= Math.sqrt(q), f *= Math.sqrt(q));
        q = (h === k ? -1 : 1) * Math.sqrt((b * b * f * f - b * b * g * g - f * f * r * r) / (b * b * g * g + f * f * r * r));
        isNaN(q) && (q = 0);
        h = q * b * g / f;
        q = q * -f *
            r / b;
        isNaN(h) && (h = 0);
        isNaN(q) && (q = 0);
        c = (c + l) / 2 + n * h - p * q;
        d = (d + m) / 2 + p * h + n * q;
        m = e(1, 0, (r - h) / b, (g - q) / f);
        n = (r - h) / b;
        l = (g - q) / f;
        r = (-r - h) / b;
        h = (-g - q) / f;
        g = e(n, l, r, h);
        r = (n * r + l * h) / (Math.sqrt(n * n + l * l) * Math.sqrt(r * r + h * h)); - 1 >= r ? g = Math.PI : 1 <= r && (g = 0);
        !k && 0 < g && (g -= 2 * Math.PI);
        k && 0 > g && (g += 2 * Math.PI);
        k = b > f ? 1 : b / f;
        r = b > f ? f / b : 1;
        b = J.Cx(0, 0, b > f ? b : f, m, m + g, !0);
        f = rd.alloc();
        f.reset();
        f.translate(c, d);
        f.rotate(a.ue, 0, 0);
        f.scale(k, r);
        Ud(b, f);
        rd.free(f);
        a.Le = b;
        return a.Le
    }
    ma.Object.defineProperties(le.prototype, {
        isClosed: {
            get: function () {
                return this.wj
            },
            set: function (a) {
                this.wj !== a && (this.wj = a, this.qa = !0)
            }
        },
        type: {
            get: function () {
                return this.pa
            },
            set: function (a) {
                this.s && ua(this, a);
                this.pa = a;
                this.qa = !0
            }
        },
        endX: {
            get: function () {
                return this.ec
            },
            set: function (a) {
                this.s && ua(this, a);
                this.ec = a;
                this.qa = !0
            }
        },
        endY: {
            get: function () {
                return this.mc
            },
            set: function (a) {
                this.s &&
                    ua(this, a);
                this.mc = a;
                this.qa = !0
            }
        },
        point1X: {
            get: function () {
                return this.ue
            },
            set: function (a) {
                this.s && ua(this, a);
                this.ue = a;
                this.qa = !0
            }
        },
        point1Y: {
            get: function () {
                return this.Di
            },
            set: function (a) {
                this.s && ua(this, a);
                this.Di = a;
                this.qa = !0
            }
        },
        point2X: {
            get: function () {
                return this.Ei
            },
            set: function (a) {
                this.s && ua(this, a);
                this.Ei = a;
                this.qa = !0
            }
        },
        point2Y: {
            get: function () {
                return this.kh
            },
            set: function (a) {
                this.s &&
                    ua(this, a);
                this.kh = a;
                this.qa = !0
            }
        },
        centerX: {
            get: function () {
                return this.ue
            },
            set: function (a) {
                this.s && ua(this, a);
                this.ue = a;
                this.qa = !0
            }
        },
        centerY: {
            get: function () {
                return this.Di
            },
            set: function (a) {
                this.s && ua(this, a);
                this.Di = a;
                this.qa = !0
            }
        },
        radiusX: {
            get: function () {
                return this.Ei
            },
            set: function (a) {
                0 > a && va(a, ">= zero", le, "radiusX");
                this.s && ua(this, a);
                this.Ei = a;
                this.qa = !0
            }
        },
        radiusY: {
            get: function () {
                return this.kh
            },
            set: function (a) {
                0 > a && va(a, ">= zero", le, "radiusY");
                this.s && ua(this, a);
                this.kh = a;
                this.qa = !0
            }
        },
        startAngle: {
            get: function () {
                return this.ec
            },
            set: function (a) {
                this.ec !== a && (this.s && ua(this, a), a %= 360, 0 > a && (a += 360), this.ec = a, this.qa = !0)
            }
        },
        sweepAngle: {
            get: function () {
                return this.mc
            },
            set: function (a) {
                this.s && ua(this, a);
                360 < a && (a = 360); - 360 > a && (a = -360);
                this.mc = a;
                this.qa = !0
            }
        },
        isClockwiseArc: {
            get: function () {
                return this.Kk
            },
            set: function (a) {
                this.s &&
                    ua(this, a);
                this.Kk = a;
                this.qa = !0
            }
        },
        isLargeArc: {
            get: function () {
                return this.sl
            },
            set: function (a) {
                this.s && ua(this, a);
                this.sl = a;
                this.qa = !0
            }
        },
        xAxisRotation: {
            get: function () {
                return this.ue
            },
            set: function (a) {
                a %= 360;
                0 > a && (a += 360);
                this.s && ua(this, a);
                this.ue = a;
                this.qa = !0
            }
        }
    });
    le.prototype.equalsApprox = le.prototype.Ma;
    var Wd = new D(le, "Move", 0),
        yd = new D(le, "Line", 1),
        Xd = new D(le, "Bezier", 2),
        Yd = new D(le, "QuadraticBezier", 3),
        Zd = new D(le, "Arc", 4),
        $d = new D(le, "SvgArc", 4);
    le.className = "PathSegment";
    le.Move = Wd;
    le.Line = yd;
    le.Bezier = Xd;
    le.QuadraticBezier = Yd;
    le.Arc = Zd;
    le.SvgArc = $d;

    function ne() {
        this.B = null;
        this.Yu = (new I(0, 0)).freeze();
        this.iu = (new I(0, 0)).freeze();
        this.cr = this.fs = 0;
        this.dr = 1;
        this.Wr = "";
        this.Ws = this.xr = !1;
        this.ur = this.fr = 0;
        this.Mg = this.Hr = this.Qr = !1;
        this.Cr = null;
        this.Rs = 0;
        this.bd = this.Qs = null
    }
    ne.prototype.copy = function () {
        var a = new ne;
        return this.clone(a)
    };
    ne.prototype.clone = function (a) {
        a.B = this.B;
        a.Yu.assign(this.viewPoint);
        a.iu.assign(this.documentPoint);
        a.fs = this.fs;
        a.cr = this.cr;
        a.dr = this.dr;
        a.Wr = this.Wr;
        a.xr = this.xr;
        a.Ws = this.Ws;
        a.fr = this.fr;
        a.ur = this.ur;
        a.Qr = this.Qr;
        a.Hr = this.Hr;
        a.Mg = this.Mg;
        a.Cr = this.Cr;
        a.Rs = this.Rs;
        a.Qs = this.Qs;
        a.bd = this.bd;
        return a
    };
    ne.prototype.toString = function () {
        var a = "^";
        0 !== this.modifiers && (a += "M:" + this.modifiers);
        0 !== this.button && (a += "B:" + this.button);
        "" !== this.key && (a += "K:" + this.key);
        0 !== this.clickCount && (a += "C:" + this.clickCount);
        0 !== this.delta && (a += "D:" + this.delta);
        this.handled && (a += "h");
        this.bubbles && (a += "b");
        null !== this.documentPoint && (a += "@" + this.documentPoint.toString());
        return a
    };
    ne.prototype.oq = function (a, b) {
        var c = this.diagram;
        if (null === c) return b;
        oe(c, this.event, a, b);
        return b
    };
    ne.prototype.Ez = function (a, b) {
        var c = this.diagram;
        if (null === c) return b;
        oe(c, this.event, a, b);
        b.assign(c.Pt(b));
        return b
    };
    ma.Object.defineProperties(ne.prototype, {
        diagram: {
            get: function () {
                return this.B
            },
            set: function (a) {
                this.B = a
            }
        },
        viewPoint: {
            get: function () {
                return this.Yu
            },
            set: function (a) {
                this.Yu.assign(a)
            }
        },
        documentPoint: {
            get: function () {
                return this.iu
            },
            set: function (a) {
                this.iu.assign(a)
            }
        },
        modifiers: {
            get: function () {
                return this.fs
            },
            set: function (a) {
                this.fs = a
            }
        },
        button: {
            get: function () {
                return this.cr
            },
            set: function (a) {
                this.cr = a;
                if (null === this.event) switch (a) {
                    case 0:
                        this.buttons = 1;
                        break;
                    case 1:
                        this.buttons = 4;
                        break;
                    case 2:
                        this.buttons = 2
                }
            }
        },
        buttons: {
            get: function () {
                return this.dr
            },
            set: function (a) {
                this.dr = a
            }
        },
        key: {
            get: function () {
                return this.Wr
            },
            set: function (a) {
                this.Wr = a
            }
        },
        down: {
            get: function () {
                return this.xr
            },
            set: function (a) {
                this.xr = a
            }
        },
        up: {
            get: function () {
                return this.Ws
            },
            set: function (a) {
                this.Ws =
                    a
            }
        },
        clickCount: {
            get: function () {
                return this.fr
            },
            set: function (a) {
                this.fr = a
            }
        },
        delta: {
            get: function () {
                return this.ur
            },
            set: function (a) {
                this.ur = a
            }
        },
        isMultiTouch: {
            get: function () {
                return this.Qr
            },
            set: function (a) {
                this.Qr = a
            }
        },
        handled: {
            get: function () {
                return this.Hr
            },
            set: function (a) {
                this.Hr = a
            }
        },
        bubbles: {
            get: function () {
                return this.Mg
            },
            set: function (a) {
                this.Mg = a
            }
        },
        event: {
            get: function () {
                return this.Cr
            },
            set: function (a) {
                this.Cr = a
            }
        },
        isTouchEvent: {
            get: function () {
                var a = x.TouchEvent,
                    b = this.event;
                return a && b instanceof a ? !0 : (a = x.PointerEvent) && b instanceof a && ("touch" === b.pointerType || "pen" === b.pointerType)
            }
        },
        timestamp: {
            get: function () {
                return this.Rs
            },
            set: function (a) {
                this.Rs = a
            }
        },
        targetDiagram: {
            get: function () {
                return this.Qs
            },
            set: function (a) {
                this.Qs = a
            }
        },
        targetObject: {
            get: function () {
                return this.bd
            },
            set: function (a) {
                this.bd = a
            }
        },
        control: {
            get: function () {
                return 0 !== (this.modifiers & 1)
            },
            set: function (a) {
                this.modifiers = a ? this.modifiers | 1 : this.modifiers & -2
            }
        },
        shift: {
            get: function () {
                return 0 !== (this.modifiers & 4)
            },
            set: function (a) {
                this.modifiers = a ? this.modifiers | 4 : this.modifiers & -5
            }
        },
        alt: {
            get: function () {
                return 0 !== (this.modifiers & 2)
            },
            set: function (a) {
                this.modifiers = a ? this.modifiers |
                    2 : this.modifiers & -3
            }
        },
        meta: {
            get: function () {
                return 0 !== (this.modifiers & 8)
            },
            set: function (a) {
                this.modifiers = a ? this.modifiers | 8 : this.modifiers & -9
            }
        },
        left: {
            get: function () {
                var a = this.event;
                return null === a || "mousedown" !== a.type && "mouseup" !== a.type && "pointerdown" !== a.type && "pointerup" !== a.type ? 0 !== (this.buttons & 1) : 0 === this.button
            },
            set: function (a) {
                this.buttons = a ? this.buttons | 1 : this.buttons & -2
            }
        },
        right: {
            get: function () {
                var a =
                    this.event;
                return null === a || "mousedown" !== a.type && "mouseup" !== a.type && "pointerdown" !== a.type && "pointerup" !== a.type ? 0 !== (this.buttons & 2) : 2 === this.button
            },
            set: function (a) {
                this.buttons = a ? this.buttons | 2 : this.buttons & -3
            }
        },
        middle: {
            get: function () {
                var a = this.event;
                return null === a || "mousedown" !== a.type && "mouseup" !== a.type && "pointerdown" !== a.type && "pointerup" !== a.type ? 0 !== (this.buttons & 4) : 1 === this.button
            },
            set: function (a) {
                this.buttons = a ? this.buttons | 4 : this.buttons & -5
            }
        }
    });
    ne.prototype.getMultiTouchDocumentPoint = ne.prototype.Ez;
    ne.prototype.getMultiTouchViewPoint = ne.prototype.oq;
    ne.className = "InputEvent";

    function pe() {
        this.B = null;
        this.Ra = "";
        this.qs = this.Ps = null
    }
    pe.prototype.copy = function () {
        var a = new pe;
        a.B = this.B;
        a.Ra = this.Ra;
        a.Ps = this.Ps;
        a.qs = this.qs;
        return a
    };
    pe.prototype.toString = function () {
        var a = "*" + this.name;
        null !== this.subject && (a += ":" + this.subject.toString());
        null !== this.parameter && (a += "(" + this.parameter.toString() + ")");
        return a
    };
    ma.Object.defineProperties(pe.prototype, {
        diagram: {
            get: function () {
                return this.B
            },
            set: function (a) {
                this.B = a
            }
        },
        name: {
            get: function () {
                return this.Ra
            },
            set: function (a) {
                this.Ra = a
            }
        },
        subject: {
            get: function () {
                return this.Ps
            },
            set: function (a) {
                this.Ps = a
            }
        },
        parameter: {
            get: function () {
                return this.qs
            },
            set: function (a) {
                this.qs = a
            }
        }
    });
    pe.className = "DiagramEvent";

    function qe() {
        this.dn = re;
        this.af = this.es = "";
        this.Oo = this.Po = this.Vo = this.Wo = this.Uo = this.B = this.ac = null
    }
    qe.prototype.clear = function () {
        this.Oo = this.Po = this.Vo = this.Wo = this.Uo = this.B = this.ac = null
    };
    qe.prototype.copy = function () {
        var a = new qe;
        a.dn = this.dn;
        a.es = this.es;
        a.af = this.af;
        a.ac = this.ac;
        a.B = this.B;
        a.Uo = this.Uo;
        var b = this.Wo;
        a.Wo = za(b) && "function" === typeof b.G ? b.G() : b;
        b = this.Vo;
        a.Vo = za(b) && "function" === typeof b.G ? b.G() : b;
        b = this.Po;
        a.Po = za(b) && "function" === typeof b.G ? b.G() : b;
        b = this.Oo;
        a.Oo = za(b) && "function" === typeof b.G ? b.G() : b;
        return a
    };
    qe.prototype.cb = function (a) {
        a.classType === qe && (this.change = a)
    };
    qe.prototype.toString = function () {
        var a = "";
        a = this.change === se ? a + "* " : this.change === re ? a + (null !== this.model ? "!m" : "!d") : a + ((null !== this.model ? "!m" : "!d") + this.change);
        this.propertyName && "string" === typeof this.propertyName && (a += " " + this.propertyName);
        this.modelChange && this.modelChange !== this.propertyName && (a += " " + this.modelChange);
        a += ": ";
        this.change === se ? null !== this.oldValue && (a += " " + this.oldValue) : (null !== this.object && (a += Ja(this.object)), null !== this.oldValue && (a += "  old: " + Ja(this.oldValue)), null !==
            this.oldParam && (a += " " + this.oldParam), null !== this.newValue && (a += "  new: " + Ja(this.newValue)), null !== this.newParam && (a += " " + this.newParam));
        return a
    };
    qe.prototype.H = function (a) {
        return a ? this.oldValue : this.newValue
    };
    qe.prototype.Gz = function (a) {
        return a ? this.oldParam : this.newParam
    };
    qe.prototype.canUndo = function () {
        return null !== this.model || null !== this.diagram ? !0 : !1
    };
    qe.prototype.undo = function () {
        this.canUndo() && (null !== this.model ? this.model.changeState(this, !0) : null !== this.diagram && this.diagram.changeState(this, !0))
    };
    qe.prototype.canRedo = function () {
        return null !== this.model || null !== this.diagram ? !0 : !1
    };
    qe.prototype.redo = function () {
        this.canRedo() && (null !== this.model ? this.model.changeState(this, !1) : null !== this.diagram && this.diagram.changeState(this, !1))
    };
    ma.Object.defineProperties(qe.prototype, {
        model: {
            get: function () {
                return this.ac
            },
            set: function (a) {
                this.ac = a
            }
        },
        diagram: {
            get: function () {
                return this.B
            },
            set: function (a) {
                this.B = a
            }
        },
        change: {
            get: function () {
                return this.dn
            },
            set: function (a) {
                this.dn = a
            }
        },
        modelChange: {
            get: function () {
                return this.es
            },
            set: function (a) {
                this.es = a
            }
        },
        propertyName: {
            get: function () {
                return this.af
            },
            set: function (a) {
                this.af = a
            }
        },
        isTransactionFinished: {
            get: function () {
                return this.dn === se && ("CommittedTransaction" === this.af || "FinishedUndo" === this.af || "FinishedRedo" === this.af)
            }
        },
        object: {
            get: function () {
                return this.Uo
            },
            set: function (a) {
                this.Uo = a
            }
        },
        oldValue: {
            get: function () {
                return this.Wo
            },
            set: function (a) {
                this.Wo = a
            }
        },
        oldParam: {
            get: function () {
                return this.Vo
            },
            set: function (a) {
                this.Vo = a
            }
        },
        newValue: {
            get: function () {
                return this.Po
            },
            set: function (a) {
                this.Po = a
            }
        },
        newParam: {
            get: function () {
                return this.Oo
            },
            set: function (a) {
                this.Oo = a
            }
        }
    });
    qe.prototype.redo = qe.prototype.redo;
    qe.prototype.canRedo = qe.prototype.canRedo;
    qe.prototype.undo = qe.prototype.undo;
    qe.prototype.canUndo = qe.prototype.canUndo;
    qe.prototype.getParam = qe.prototype.Gz;
    qe.prototype.getValue = qe.prototype.H;
    qe.prototype.clear = qe.prototype.clear;
    var se = new D(qe, "Transaction", -1),
        re = new D(qe, "Property", 0),
        te = new D(qe, "Insert", 1),
        ue = new D(qe, "Remove", 2);
    qe.className = "ChangedEvent";
    qe.Transaction = se;
    qe.Property = re;
    qe.Insert = te;
    qe.Remove = ue;

    function ve() {
        this.u = (new E).freeze();
        this.Ra = "";
        this.l = !1
    }
    ve.prototype.toString = function (a) {
        var b = "Transaction: " + this.name + " " + this.changes.count.toString() + (this.isComplete ? "" : ", incomplete");
        if (void 0 !== a && 0 < a) {
            a = this.changes.count;
            for (var c = 0; c < a; c++) {
                var d = this.changes.L(c);
                null !== d && (b += "\n  " + d.toString())
            }
        }
        return b
    };
    ve.prototype.clear = function () {
        var a = this.changes;
        a.ea();
        for (var b = a.count - 1; 0 <= b; b--) {
            var c = a.L(b);
            null !== c && c.clear()
        }
        a.clear();
        a.freeze()
    };
    ve.prototype.canUndo = function () {
        return this.isComplete
    };
    ve.prototype.undo = function () {
        if (this.canUndo())
            for (var a = this.changes.count - 1; 0 <= a; a--) {
                var b = this.changes.L(a);
                null !== b && b.undo()
            }
    };
    ve.prototype.canRedo = function () {
        return this.isComplete
    };
    ve.prototype.redo = function () {
        if (this.canRedo())
            for (var a = this.changes.count, b = 0; b < a; b++) {
                var c = this.changes.L(b);
                null !== c && c.redo()
            }
    };
    ma.Object.defineProperties(ve.prototype, {
        changes: {
            get: function () {
                return this.u
            }
        },
        name: {
            get: function () {
                return this.Ra
            },
            set: function (a) {
                this.Ra = a
            }
        },
        isComplete: {
            get: function () {
                return this.l
            },
            set: function (a) {
                this.l = a
            }
        }
    });
    ve.prototype.redo = ve.prototype.redo;
    ve.prototype.canRedo = ve.prototype.canRedo;
    ve.prototype.undo = ve.prototype.undo;
    ve.prototype.canUndo = ve.prototype.canUndo;
    ve.prototype.clear = ve.prototype.clear;
    ve.className = "Transaction";

    function we() {
        this.Fu = new F;
        this.Mc = !1;
        this.I = (new E).freeze();
        this.Gd = -1;
        this.u = 999;
        this.ke = !1;
        this.rr = null;
        this.Li = 0;
        this.l = !1;
        this.qe = (new E).freeze();
        this.Al = new E;
        this.pu = !0;
        this.zu = !1
    }
    we.prototype.toString = function (a) {
        var b = "UndoManager " + this.historyIndex + "<" + this.history.count + "<=" + this.maxHistoryLength;
        b += "[";
        for (var c = this.nestedTransactionNames.count, d = 0; d < c; d++) 0 < d && (b += " "), b += this.nestedTransactionNames.L(d);
        b += "]";
        if (void 0 !== a && 0 < a)
            for (c = this.history.count, d = 0; d < c; d++) b += "\n " + this.history.L(d).toString(a - 1);
        return b
    };
    we.prototype.clear = function () {
        var a = this.history;
        a.ea();
        for (var b = a.count - 1; 0 <= b; b--) {
            var c = a.L(b);
            null !== c && c.clear()
        }
        a.clear();
        this.Gd = -1;
        a.freeze();
        this.ke = !1;
        this.rr = null;
        this.Li = 0;
        this.qe.ea();
        this.qe.clear();
        this.qe.freeze();
        this.Al.clear()
    };
    we.prototype.copyProperties = function (a) {
        this.isEnabled = a.isEnabled;
        this.maxHistoryLength = a.maxHistoryLength;
        this.checksTransactionLevel = a.checksTransactionLevel
    };
    t = we.prototype;
    t.ux = function (a) {
        this.Fu.add(a)
    };
    t.by = function (a) {
        this.Fu.remove(a)
    };
    t.ua = function (a) {
        void 0 === a && (a = "");
        null === a && (a = "");
        if (this.isUndoingRedoing) return !1;
        !0 === this.pu && (this.pu = !1, this.Li++, this.xb("StartingFirstTransaction", a, this.currentTransaction), 0 < this.Li && this.Li--);
        this.isEnabled && (this.qe.ea(), this.qe.add(a), this.qe.freeze(), null === this.currentTransaction ? this.Al.add(0) : this.Al.add(this.currentTransaction.changes.count));
        this.Li++;
        var b = 1 === this.transactionLevel;
        b && this.xb("StartedTransaction", a, this.currentTransaction);
        return b
    };
    t.Ua = function (a) {
        void 0 === a && (a = "");
        return xe(this, !0, a)
    };
    t.Bf = function () {
        return xe(this, !1, "")
    };

    function xe(a, b, c) {
        if (a.isUndoingRedoing) return !1;
        a.checksTransactionLevel && 1 > a.transactionLevel && wa("Ending transaction without having started a transaction: " + c);
        var d = 1 === a.transactionLevel;
        d && b && a.xb("CommittingTransaction", c, a.currentTransaction);
        var e = 0;
        if (0 < a.transactionLevel && (a.Li--, a.isEnabled)) {
            var f = a.qe.count;
            0 < f && ("" === c && (c = a.qe.L(0)), a.qe.ea(), a.qe.lb(f - 1), a.qe.freeze());
            f = a.Al.count;
            0 < f && (e = a.Al.L(f - 1), a.Al.lb(f - 1))
        }
        f = a.currentTransaction;
        if (d) {
            if (b) {
                a.zu = !1;
                if (a.isEnabled && null !==
                    f) {
                    b = f;
                    b.isComplete = !0;
                    b.name = c;
                    d = a.history;
                    d.ea();
                    for (e = d.count - 1; e > a.historyIndex; e--) f = d.L(e), null !== f && f.clear(), d.lb(e), a.zu = !0;
                    e = a.maxHistoryLength;
                    0 <= e && (0 === e ? d.clear() : d.count >= e && (f = d.L(0), null !== f && f.clear(), d.lb(0), a.Gd--));
                    0 !== e && (d.add(b), a.Gd++);
                    d.freeze();
                    f = b
                }
                a.xb("CommittedTransaction", c, f)
            } else {
                a.ke = !0;
                try {
                    a.isEnabled && null !== f && (f.isComplete = !0, f.undo())
                } finally {
                    a.xb("RolledBackTransaction", c, f), a.ke = !1
                }
                null !== f && f.clear()
            }
            a.rr = null;
            return !0
        }
        if (a.isEnabled && !b && null !== f) {
            a = e;
            c =
                f.changes;
            for (b = c.count - 1; b >= a; b--) d = c.L(b), null !== d && d.undo(), c.ea(), c.lb(b);
            c.freeze()
        }
        return !1
    }
    we.prototype.canUndo = function () {
        if (!this.isEnabled || 0 < this.transactionLevel) return !1;
        var a = this.transactionToUndo;
        return null !== a && a.canUndo() ? !0 : !1
    };
    we.prototype.undo = function () {
        if (this.canUndo()) {
            var a = this.transactionToUndo;
            try {
                this.ke = !0, this.xb("StartingUndo", "Undo", a), this.Gd--, a.undo()
            } catch (b) {
                wa("undo error: " + b.toString())
            } finally {
                this.xb("FinishedUndo", "Undo", a), this.ke = !1
            }
        }
    };
    we.prototype.canRedo = function () {
        if (!this.isEnabled || 0 < this.transactionLevel) return !1;
        var a = this.transactionToRedo;
        return null !== a && a.canRedo() ? !0 : !1
    };
    we.prototype.redo = function () {
        if (this.canRedo()) {
            var a = this.transactionToRedo;
            try {
                this.ke = !0, this.xb("StartingRedo", "Redo", a), this.Gd++, a.redo()
            } catch (b) {
                wa("redo error: " + b.toString())
            } finally {
                this.xb("FinishedRedo", "Redo", a), this.ke = !1
            }
        }
    };
    we.prototype.xb = function (a, b, c) {
        void 0 === c && (c = null);
        var d = new qe;
        d.change = se;
        d.propertyName = a;
        d.object = c;
        d.oldValue = b;
        for (a = this.models; a.next();) b = a.value, d.model = b, b.bt(d)
    };
    we.prototype.Cv = function (a) {
        if (this.isEnabled && !this.isUndoingRedoing && !this.skipsEvent(a)) {
            var b = this.currentTransaction;
            null === b && (this.rr = b = new ve);
            var c = a.copy();
            b = b.changes;
            b.ea();
            b.add(c);
            b.freeze();
            this.checksTransactionLevel && 0 >= this.transactionLevel && !this.pu && (a = a.diagram, null !== a && !1 === a.kk || wa("Change not within a transaction: " + c.toString()))
        }
    };
    we.prototype.skipsEvent = function (a) {
        if (null === a || 0 > a.change.value) return !0;
        a = a.object;
        if (null === a) return !1;
        if (void 0 !== a.layer) {
            if (a = a.layer, null !== a && a.isTemporary) return !0
        } else if (a.isTemporary) return !0;
        return !1
    };
    ma.Object.defineProperties(we.prototype, {
        models: {
            get: function () {
                return this.Fu.iterator
            }
        },
        isEnabled: {
            get: function () {
                return this.Mc
            },
            set: function (a) {
                this.Mc = a
            }
        },
        transactionToUndo: {
            get: function () {
                return 0 <= this.historyIndex && this.historyIndex <= this.history.count - 1 ? this.history.L(this.historyIndex) : null
            }
        },
        transactionToRedo: {
            get: function () {
                return this.historyIndex < this.history.count -
                    1 ? this.history.L(this.historyIndex + 1) : null
            }
        },
        isUndoingRedoing: {
            get: function () {
                return this.ke
            }
        },
        history: {
            get: function () {
                return this.I
            }
        },
        maxHistoryLength: {
            get: function () {
                return this.u
            },
            set: function (a) {
                this.u = a
            }
        },
        historyIndex: {
            get: function () {
                return this.Gd
            }
        },
        currentTransaction: {
            get: function () {
                return this.rr
            }
        },
        transactionLevel: {
            get: function () {
                return this.Li
            }
        },
        isInTransaction: {
            get: function () {
                return 0 < this.Li
            }
        },
        checksTransactionLevel: {
            get: function () {
                return this.l
            },
            set: function (a) {
                this.l = a
            }
        },
        nestedTransactionNames: {
            get: function () {
                return this.qe
            }
        }
    });
    we.prototype.handleChanged = we.prototype.Cv;
    we.prototype.redo = we.prototype.redo;
    we.prototype.undo = we.prototype.undo;
    we.prototype.canUndo = we.prototype.canUndo;
    we.prototype.rollbackTransaction = we.prototype.Bf;
    we.prototype.commitTransaction = we.prototype.Ua;
    we.prototype.startTransaction = we.prototype.ua;
    we.prototype.removeModel = we.prototype.by;
    we.prototype.addModel = we.prototype.ux;
    we.prototype.clear = we.prototype.clear;
    we.className = "UndoManager";

    function ye() {
        Ya(this);
        this.B = ze;
        this.Ra = "";
        this.Mc = !0;
        this.jd = !1;
        this.Gw = null;
        this.Ey = new ne;
        this.Zs = -1
    }
    ye.prototype.toString = function () {
        return "" !== this.name ? this.name + " Tool" : Ia(this.constructor)
    };
    ye.prototype.updateAdornments = function () {};
    ye.prototype.canStart = function () {
        return this.isEnabled
    };
    ye.prototype.doStart = function () {};
    ye.prototype.doActivate = function () {
        this.isActive = !0
    };
    ye.prototype.doDeactivate = function () {
        this.isActive = !1
    };
    ye.prototype.doStop = function () {};
    ye.prototype.doCancel = function () {
        this.transactionResult = null;
        this.stopTool()
    };
    ye.prototype.stopTool = function () {
        var a = this.diagram;
        a.currentTool === this && (a.currentTool = null, a.currentCursor = "")
    };
    ye.prototype.doMouseDown = function () {
        !this.isActive && this.canStart() && this.doActivate()
    };
    ye.prototype.doMouseMove = function () {};
    ye.prototype.doMouseUp = function () {
        this.stopTool()
    };
    ye.prototype.doMouseWheel = function () {};
    ye.prototype.canStartMultiTouch = function () {
        return !0
    };
    ye.prototype.standardPinchZoomStart = function () {
        var a = this.diagram,
            b = a.lastInput,
            c = b.oq(0, I.allocAt(NaN, NaN)),
            d = b.oq(1, I.allocAt(NaN, NaN));
        if (c.v() && d.v() && (this.doCancel(), a.mm("hasGestureZoom"))) {
            a.Cl = a.scale;
            var e = d.x - c.x,
                f = d.y - c.y;
            a.Su = Math.sqrt(e * e + f * f);
            b.bubbles = !1
        }
        I.free(c);
        I.free(d)
    };
    ye.prototype.standardPinchZoomMove = function () {
        var a = this.diagram,
            b = a.lastInput,
            c = b.oq(0, I.allocAt(NaN, NaN)),
            d = b.oq(1, I.allocAt(NaN, NaN));
        if (c.v() && d.v() && (this.doCancel(), a.mm("hasGestureZoom"))) {
            var e = d.x - c.x,
                f = d.y - c.y;
            f = Math.sqrt(e * e + f * f) / a.Su;
            e = new I((Math.min(d.x, c.x) + Math.max(d.x, c.x)) / 2, (Math.min(d.y, c.y) + Math.max(d.y, c.y)) / 2);
            f *= a.Cl;
            var g = a.commandHandler;
            if (f !== a.scale && g.canResetZoom(f)) {
                var h = a.zoomPoint;
                a.zoomPoint = e;
                g.resetZoom(f);
                a.zoomPoint = h
            }
            b.bubbles = !1
        }
        I.free(c);
        I.free(d)
    };
    ye.prototype.doKeyDown = function () {
        "Esc" === this.diagram.lastInput.key && this.doCancel()
    };
    ye.prototype.doKeyUp = function () {};
    ye.prototype.ua = function (a) {
        void 0 === a && (a = this.name);
        this.transactionResult = null;
        return this.diagram.ua(a)
    };
    ye.prototype.Hg = function () {
        var a = this.diagram;
        return null === this.transactionResult ? a.Bf() : a.Ua(this.transactionResult)
    };
    ye.prototype.standardMouseSelect = function () {
        var a = this.diagram;
        if (a.allowSelect) {
            var b = a.lastInput,
                c = a.jm(b.documentPoint, !1);
            if (null !== c)
                if (Wa ? b.meta : b.control) {
                    a.R("ChangingSelection", a.selection);
                    for (b = c; null !== b && !b.canSelect();) b = b.containingGroup;
                    null !== b && (b.isSelected = !b.isSelected);
                    a.R("ChangedSelection", a.selection)
                } else if (b.shift) {
                if (!c.isSelected) {
                    a.R("ChangingSelection", a.selection);
                    for (b = c; null !== b && !b.canSelect();) b = b.containingGroup;
                    null !== b && (b.isSelected = !0);
                    a.R("ChangedSelection",
                        a.selection)
                }
            } else {
                if (!c.isSelected) {
                    for (b = c; null !== b && !b.canSelect();) b = b.containingGroup;
                    null !== b && a.select(b)
                }
            } else !b.left || (Wa ? b.meta : b.control) || b.shift || a.clearSelection()
        }
    };
    ye.prototype.standardMouseClick = function (a, b) {
        void 0 === a && (a = null);
        void 0 === b && (b = function (a) {
            return !a.layer.isTemporary
        });
        var c = this.diagram,
            d = c.lastInput;
        a = c.Ub(d.documentPoint, a, b);
        d.targetObject = a;
        Ae(a, d, c);
        return d.handled
    };

    function Ae(a, b, c) {
        b.handled = !1;
        if (null === a || a.Eg()) {
            var d = 0;
            b.left ? d = 1 === b.clickCount ? 1 : 2 === b.clickCount ? 2 : 1 : b.right && 1 === b.clickCount && (d = 3);
            var e = "ObjectSingleClicked";
            if (null !== a) {
                switch (d) {
                    case 1:
                        e = "ObjectSingleClicked";
                        break;
                    case 2:
                        e = "ObjectDoubleClicked";
                        break;
                    case 3:
                        e = "ObjectContextClicked"
                }
                0 !== d && c.R(e, a)
            } else {
                switch (d) {
                    case 1:
                        e = "BackgroundSingleClicked";
                        break;
                    case 2:
                        e = "BackgroundDoubleClicked";
                        break;
                    case 3:
                        e = "BackgroundContextClicked"
                }
                0 !== d && c.R(e)
            }
            if (null !== a)
                for (; null !== a;) {
                    c = null;
                    switch (d) {
                        case 1:
                            c =
                                a.click;
                            break;
                        case 2:
                            c = a.doubleClick ? a.doubleClick : a.click;
                            break;
                        case 3:
                            c = a.contextClick
                    }
                    if (null !== c && (c(b, a), b.handled)) break;
                    a = a.panel
                } else {
                    a = null;
                    switch (d) {
                        case 1:
                            a = c.click;
                            break;
                        case 2:
                            a = c.doubleClick ? c.doubleClick : c.click;
                            break;
                        case 3:
                            a = c.contextClick
                    }
                    null !== a && a(b)
                }
        }
    }
    ye.prototype.standardMouseOver = function () {
        var a = this.diagram,
            b = a.lastInput;
        if (!0 !== a.animationManager.qc) {
            var c = a.skipsUndoManager;
            a.skipsUndoManager = !0;
            var d = a.viewportBounds.aa(b.documentPoint) ? a.Ub(b.documentPoint, null, null) : null;
            b.targetObject = d;
            var e = !1;
            if (d !== a.mj) {
                var f = a.mj,
                    g = f;
                a.mj = d;
                this.doCurrentObjectChanged(f, d);
                for (b.handled = !1; null !== f;) {
                    var h = f.mouseLeave;
                    if (null !== h) {
                        if (d === f) break;
                        if (null !== d && d.Dg(f)) break;
                        h(b, f, d);
                        e = !0;
                        if (b.handled) break
                    }
                    f = f.panel
                }
                f = g;
                for (b.handled = !1; null !== d;) {
                    g =
                        d.mouseEnter;
                    if (null !== g) {
                        if (f === d) break;
                        if (null !== f && f.Dg(d)) break;
                        g(b, d, f);
                        e = !0;
                        if (b.handled) break
                    }
                    d = d.panel
                }
                d = a.mj
            }
            if (null !== d) {
                f = d;
                for (g = ""; null !== f;) {
                    g = f.cursor;
                    if ("" !== g) break;
                    f = f.panel
                }
                a.currentCursor = g;
                b.handled = !1;
                for (f = d; null !== f;) {
                    d = f.mouseOver;
                    if (null !== d && (d(b, f), e = !0, b.handled)) break;
                    f = f.panel
                }
            } else a.currentCursor = "", d = a.mouseOver, null !== d && (d(b), e = !0);
            e && a.Pb();
            a.skipsUndoManager = c
        }
    };
    ye.prototype.doCurrentObjectChanged = function () {};
    ye.prototype.standardMouseWheel = function () {
        var a = this.diagram,
            b = a.lastInput,
            c = b.delta;
        if (0 !== c && a.documentBounds.v()) {
            var d = a.commandHandler,
                e = a.toolManager.mouseWheelBehavior;
            if (null !== d && (e === Be && !b.shift || e === Ce && b.control)) {
                if (0 < c ? d.canIncreaseZoom() : d.canDecreaseZoom()) e = a.zoomPoint, a.zoomPoint = b.viewPoint, 0 < c ? d.increaseZoom() : d.decreaseZoom(), a.zoomPoint = e;
                b.bubbles = !1
            } else if (e === Be && b.shift || e === Ce && !b.control) {
                d = a.position.copy();
                var f = 0 < c ? c : -c,
                    g = b.event,
                    h = g.deltaMode;
                e = g.deltaX;
                g = g.deltaY;
                if (Ta || Ua || Va) h = 1, 0 < e && (e = 3), 0 > e && (e = -3), 0 < g && (g = 3), 0 > g && (g = -3);
                if (void 0 === h || void 0 === e || void 0 === g || 0 === e && 0 === g || b.shift) !b.shift && a.allowVerticalScroll ? (f = 3 * f * a.scrollVerticalLineChange, 0 < c ? a.scroll("pixel", "up", f) : a.scroll("pixel", "down", f)) : b.shift && a.allowHorizontalScroll && (f = 3 * f * a.scrollHorizontalLineChange, 0 < c ? a.scroll("pixel", "left", f) : a.scroll("pixel", "right", f));
                else {
                    switch (h) {
                        case 0:
                            c = "pixel";
                            break;
                        case 1:
                            c = "line";
                            break;
                        case 2:
                            c = "page";
                            break;
                        default:
                            c = "pixel"
                    }
                    0 !== e && a.allowHorizontalScroll &&
                        (e *= a.scrollHorizontalLineChange / 16, 0 < e ? a.scroll(c, "left", -e) : a.scroll(c, "right", e));
                    0 !== g && a.allowVerticalScroll && (g *= a.scrollVerticalLineChange / 16, 0 < g ? a.scroll(c, "up", -g) : a.scroll(c, "down", g))
                }
                a.position.w(d) || (b.bubbles = !1)
            }
        }
    };
    ye.prototype.standardWaitAfter = function (a, b) {
        void 0 === b && (b = this.diagram.lastInput);
        this.cancelWaitAfter();
        var c = this,
            d = b.clone(this.Ey);
        this.Zs = sa(function () {
            c.doWaitAfter(d)
        }, a)
    };
    ye.prototype.cancelWaitAfter = function () {
        -1 !== this.Zs && x.clearTimeout(this.Zs);
        this.Zs = -1
    };
    ye.prototype.doWaitAfter = function () {};
    ye.prototype.findToolHandleAt = function (a, b) {
        a = this.diagram.Ub(a, function (a) {
            for (; null !== a && !(a.panel instanceof Je);) a = a.panel;
            return a
        });
        return null === a ? null : a.part.category === b ? a : null
    };
    ye.prototype.isBeyondDragSize = function (a, b) {
        var c = this.diagram;
        void 0 === a && (a = c.firstInput.viewPoint);
        void 0 === b && (b = c.lastInput.viewPoint);
        var d = c.toolManager.dragSize,
            e = d.width;
        d = d.height;
        c.firstInput.isTouchEvent && (e += 6, d += 6);
        return Math.abs(b.x - a.x) > e || Math.abs(b.y - a.y) > d
    };
    ma.Object.defineProperties(ye.prototype, {
        diagram: {
            get: function () {
                return this.B
            },
            set: function (a) {
                a instanceof R && (this.B = a)
            }
        },
        name: {
            get: function () {
                return this.Ra
            },
            set: function (a) {
                this.Ra = a
            }
        },
        isEnabled: {
            get: function () {
                return this.Mc
            },
            set: function (a) {
                this.Mc = a
            }
        },
        isActive: {
            get: function () {
                return this.jd
            },
            set: function (a) {
                this.jd = a
            }
        },
        transactionResult: {
            get: function () {
                return this.Gw
            },
            set: function (a) {
                this.Gw = a
            }
        }
    });
    ye.prototype.stopTransaction = ye.prototype.Hg;
    ye.prototype.startTransaction = ye.prototype.ua;
    ye.className = "Tool";

    function Oa() {
        ye.call(this);
        this.name = "ToolManager";
        this.Ic = new E;
        this.Yc = new E;
        this.Ef = new E;
        this.Y = this.Ha = 850;
        this.u = (new M(2, 2)).ca();
        this.Za = 5E3;
        this.Ia = Ce;
        this.I = Ke;
        this.qr = this.l = null;
        this.Qj = -1
    }
    la(Oa, ye);
    Oa.prototype.initializeStandardTools = function () {};
    Oa.prototype.updateAdornments = function (a) {
        var b = this.currentToolTip;
        if (b instanceof Je && this.qr === a) {
            var c = b.adornedObject;
            (null !== a ? c.part === a : null === c) ? this.showToolTip(b, c): this.hideToolTip()
        }
    };
    Oa.prototype.doMouseDown = function () {
        var a = this.diagram,
            b = a.lastInput;
        b.isTouchEvent && this.gestureBehavior === Le && (b.bubbles = !1);
        if (b.isMultiTouch) {
            this.cancelWaitAfter();
            if (this.gestureBehavior === Me) {
                b.bubbles = !0;
                return
            }
            if (this.gestureBehavior === Le) return;
            if (a.currentTool.canStartMultiTouch()) {
                a.currentTool.standardPinchZoomStart();
                return
            }
        }
        for (var c = this.mouseDownTools.length, d = 0; d < c; d++) {
            var e = this.mouseDownTools.L(d);
            e.diagram = this.diagram;
            if (e.canStart()) {
                a.doFocus();
                a.currentTool = e;
                a.currentTool ===
                    e && (e.isActive || e.doActivate(), e.doMouseDown());
                return
            }
        }
        1 === a.lastInput.button && (this.mouseWheelBehavior === Ce ? this.mouseWheelBehavior = Be : this.mouseWheelBehavior === Be && (this.mouseWheelBehavior = Ce));
        this.doActivate();
        this.standardWaitAfter(this.holdDelay, b)
    };
    Oa.prototype.doMouseMove = function () {
        var a = this.diagram,
            b = a.lastInput;
        if (b.isMultiTouch) {
            if (this.gestureBehavior === Me) {
                b.bubbles = !0;
                return
            }
            if (this.gestureBehavior === Le) return;
            if (a.currentTool.canStartMultiTouch()) {
                a.currentTool.standardPinchZoomMove();
                return
            }
        }
        if (this.isActive)
            for (var c = this.mouseMoveTools.length, d = 0; d < c; d++) {
                var e = this.mouseMoveTools.L(d);
                e.diagram = this.diagram;
                if (e.canStart()) {
                    a.doFocus();
                    a.currentTool = e;
                    a.currentTool === e && (e.isActive || e.doActivate(), e.doMouseMove());
                    return
                }
            }
        Ne(this,
            a);
        a = b.event;
        null === a || "mousemove" !== a.type && "pointermove" !== a.type && a.cancelable || (b.bubbles = !0)
    };

    function Ne(a, b) {
        a.standardMouseOver();
        a.isBeyondDragSize() && a.standardWaitAfter(a.isActive ? a.holdDelay : a.hoverDelay, b.lastInput)
    }
    Oa.prototype.doCurrentObjectChanged = function (a, b) {
        a = this.currentToolTip;
        null === a || null !== b && a instanceof Je && (b === a || b.Dg(a)) || this.hideToolTip()
    };
    Oa.prototype.doWaitAfter = function (a) {
        var b = this.diagram;
        b.sa && (this.doMouseHover(), this.isActive || this.doToolTip(), a.isTouchEvent && !b.lastInput.handled && (a = a.copy(), a.button = 2, a.buttons = 2, b.lastInput = a, b.Pj = !0, b.doMouseUp()))
    };
    Oa.prototype.doMouseHover = function () {
        var a = this.diagram,
            b = a.lastInput;
        null === b.targetObject && (b.targetObject = a.Ub(b.documentPoint, null, null));
        var c = b.targetObject;
        if (null !== c)
            for (b.handled = !1; null !== c;) {
                a = this.isActive ? c.mouseHold : c.mouseHover;
                if (null !== a && (a(b, c), b.handled)) break;
                c = c.panel
            } else c = this.isActive ? a.mouseHold : a.mouseHover, null !== c && c(b)
    };
    Oa.prototype.doToolTip = function () {
        var a = this.diagram,
            b = a.lastInput;
        null === b.targetObject && (b.targetObject = a.Ub(b.documentPoint, null, null));
        b = b.targetObject;
        if (null !== b) {
            if (a = this.currentToolTip, !(a instanceof Je) || b !== a && !b.Dg(a)) {
                for (; null !== b;) {
                    a = b.toolTip;
                    if (null !== a) {
                        this.showToolTip(a, b);
                        return
                    }
                    b = b.panel
                }
                this.hideToolTip()
            }
        } else b = a.toolTip, null !== b ? this.showToolTip(b, null) : this.hideToolTip()
    };
    Oa.prototype.showToolTip = function (a, b) {
        var c = this.diagram;
        a !== this.currentToolTip && this.hideToolTip();
        if (a instanceof Je) {
            a.layerName = "Tool";
            a.selectable = !1;
            a.scale = 1 / c.scale;
            a.category = "ToolTip";
            null !== a.placeholder && (a.placeholder.scale = c.scale);
            var d = a.diagram;
            null !== d && d !== c && d.remove(a);
            c.add(a);
            null !== b ? a.adornedObject = b : a.data = c.model;
            a.yb();
            this.positionToolTip(a, b)
        } else a instanceof Oe && a !== this.currentToolTip && a.show(b, c, this);
        this.currentToolTip = a; - 1 !== this.Qj && (x.clearTimeout(this.Qj),
            this.Qj = -1);
        a = this.toolTipDuration;
        if (0 < a && Infinity !== a) {
            var e = this;
            this.Qj = sa(function () {
                e.hideToolTip()
            }, a)
        }
    };
    Oa.prototype.positionToolTip = function (a) {
        if (null === a.placeholder) {
            var b = this.diagram,
                c = b.lastInput.documentPoint.copy(),
                d = a.measuredBounds,
                e = b.viewportBounds;
            b.lastInput.isTouchEvent && (c.x -= d.width);
            c.x + d.width > e.right && (c.x -= d.width + 5 / b.scale);
            c.x < e.x && (c.x = e.x);
            c.y = c.y + 20 / b.scale + d.height > e.bottom ? c.y - (d.height + 5 / b.scale) : c.y + 20 / b.scale;
            c.y < e.y && (c.y = e.y);
            a.position = c
        }
    };
    Oa.prototype.hideToolTip = function () {
        -1 !== this.Qj && (x.clearTimeout(this.Qj), this.Qj = -1);
        var a = this.diagram,
            b = this.currentToolTip;
        null !== b && (b instanceof Je ? (a.remove(b), null !== this.qr && this.qr.Af(b.category), b.data = null, b.adornedObject = null) : b instanceof Oe && null !== b.hide && b.hide(a, this), this.currentToolTip = null)
    };
    Oa.prototype.doMouseUp = function () {
        this.cancelWaitAfter();
        var a = this.diagram;
        if (this.isActive)
            for (var b = this.mouseUpTools.length, c = 0; c < b; c++) {
                var d = this.mouseUpTools.L(c);
                d.diagram = this.diagram;
                if (d.canStart()) {
                    a.doFocus();
                    a.currentTool = d;
                    a.currentTool === d && (d.isActive || d.doActivate(), d.doMouseUp());
                    return
                }
            }
        a.doFocus();
        this.doDeactivate()
    };
    Oa.prototype.doMouseWheel = function () {
        this.standardMouseWheel()
    };
    Oa.prototype.doKeyDown = function () {
        var a = this.diagram;
        null !== a.commandHandler && a.commandHandler.doKeyDown()
    };
    Oa.prototype.doKeyUp = function () {
        var a = this.diagram;
        null !== a.commandHandler && a.commandHandler.doKeyUp()
    };
    Oa.prototype.findTool = function (a) {
        for (var b = this.mouseDownTools.length, c = 0; c < b; c++) {
            var d = this.mouseDownTools.L(c);
            if (d.name === a) return d
        }
        b = this.mouseMoveTools.length;
        for (c = 0; c < b; c++)
            if (d = this.mouseMoveTools.L(c), d.name === a) return d;
        b = this.mouseUpTools.length;
        for (c = 0; c < b; c++)
            if (d = this.mouseUpTools.L(c), d.name === a) return d;
        return null
    };
    Oa.prototype.replaceTool = function (a, b) {
        null !== b && (b.diagram = this.diagram);
        for (var c = this.mouseDownTools.length, d = 0; d < c; d++) {
            var e = this.mouseDownTools.L(d);
            if (e.name === a) return null !== b ? this.mouseDownTools.gd(d, b) : this.mouseDownTools.lb(d), e
        }
        c = this.mouseMoveTools.length;
        for (d = 0; d < c; d++)
            if (e = this.mouseMoveTools.L(d), e.name === a) return null !== b ? this.mouseMoveTools.gd(d, b) : this.mouseMoveTools.lb(d), e;
        c = this.mouseUpTools.length;
        for (d = 0; d < c; d++)
            if (e = this.mouseUpTools.L(d), e.name === a) return null !== b ? this.mouseUpTools.gd(d,
                b) : this.mouseUpTools.lb(d), e;
        return null
    };
    Oa.prototype.Va = function (a, b, c) {
        null !== b && (b.name = a, b.diagram = this.diagram);
        this.findTool(a) ? this.replaceTool(a, b) : null !== b && c.add(b)
    };
    ma.Object.defineProperties(Oa.prototype, {
        mouseWheelBehavior: {
            get: function () {
                return this.Ia
            },
            set: function (a) {
                this.Ia = a
            }
        },
        gestureBehavior: {
            get: function () {
                return this.I
            },
            set: function (a) {
                this.I = a
            }
        },
        currentToolTip: {
            get: function () {
                return this.l
            },
            set: function (a) {
                this.l = a;
                this.qr = null !== a && a instanceof Je ? a.adornedPart : null
            }
        },
        mouseDownTools: {
            get: function () {
                return this.Ic
            }
        },
        mouseMoveTools: {
            get: function () {
                return this.Yc
            }
        },
        mouseUpTools: {
            get: function () {
                return this.Ef
            }
        },
        hoverDelay: {
            get: function () {
                return this.Ha
            },
            set: function (a) {
                this.Ha = a
            }
        },
        holdDelay: {
            get: function () {
                return this.Y
            },
            set: function (a) {
                this.Y = a
            }
        },
        dragSize: {
            get: function () {
                return this.u
            },
            set: function (a) {
                this.u = a.G()
            }
        },
        toolTipDuration: {
            get: function () {
                return this.Za
            },
            set: function (a) {
                this.Za =
                    a
            }
        }
    });
    Oa.prototype.replaceStandardTool = Oa.prototype.Va;
    var Ce = new D(Oa, "WheelScroll", 0),
        Be = new D(Oa, "WheelZoom", 1),
        Pe = new D(Oa, "WheelNone", 2),
        Ke = new D(Oa, "GestureZoom", 3),
        Le = new D(Oa, "GestureCancel", 4),
        Me = new D(Oa, "GestureNone", 5);
    Oa.className = "ToolManager";
    Oa.WheelScroll = Ce;
    Oa.WheelZoom = Be;
    Oa.WheelNone = Pe;
    Oa.GestureZoom = Ke;
    Oa.GestureCancel = Le;
    Oa.GestureNone = Me;

    function Qe() {
        ye.call(this);
        this.name = "Dragging";
        this.I = this.Yc = !0;
        this.u = this.Za = this.Ha = this.og = null;
        this.Bn = this.Ef = !1;
        this.Ql = new I(NaN, NaN);
        this.Ns = new I;
        this.Ic = !0;
        this.Vk = 100;
        this.Tg = [];
        this.Sq = (new F).freeze();
        this.Ia = new Re;
        this.ko = null;
        this.Y = "copy";
        this.Oh = "";
        this.Ie = "no-drop"
    }
    la(Qe, ye);
    Qe.prototype.canStart = function () {
        if (!this.isEnabled) return !1;
        var a = this.diagram;
        if (a.isReadOnly && !a.allowDragOut || !a.allowMove && !a.allowCopy && !a.allowDragOut || !a.allowSelect) return !1;
        var b = a.lastInput;
        return !b.left || a.currentTool !== this && (!this.isBeyondDragSize() || b.isTouchEvent && b.timestamp - a.firstInput.timestamp < this.Vk) ? !1 : null !== this.findDraggablePart()
    };
    Qe.prototype.findDraggablePart = function () {
        var a = this.diagram;
        a = a.jm(a.firstInput.documentPoint, !1);
        if (null === a) return null;
        for (; null !== a && !a.canSelect();) a = a.containingGroup;
        return null !== a && (a.canMove() || a.canCopy()) ? a : null
    };
    Qe.prototype.standardMouseSelect = function () {
        var a = this.diagram;
        if (a.allowSelect) {
            var b = a.jm(a.firstInput.documentPoint, !1);
            if (null !== b) {
                for (; null !== b && !b.canSelect();) b = b.containingGroup;
                this.currentPart = b;
                null === this.currentPart || this.currentPart.isSelected || (a.R("ChangingSelection", a.selection), b = a.lastInput, (Wa ? b.meta : b.control) || b.shift || a.clearSelection(!0), this.currentPart.isSelected = !0, a.R("ChangedSelection", a.selection))
            }
        }
    };
    Qe.prototype.doActivate = function () {
        var a = this.diagram;
        this.ko = null;
        null === this.currentPart && this.standardMouseSelect();
        var b = this.currentPart;
        null !== b && (b.canMove() || b.canCopy()) && (Se = null, this.isActive = !0, this.Ql.set(a.position), Te(this, a.selection), this.Tg.length = 0, this.draggedParts = this.computeEffectiveCollection(a.selection, this.dragOptions), a.Ot = !0, !0 === a.Be("temporaryPixelRatio") && 30 < a.xx && Ue(a), Ve(a, this.draggedParts), this.ua("Drag"), this.startPoint = a.firstInput.documentPoint, a.isMouseCaptured = !0, a.allowDragOut && (this.isDragOutStarted = !0, this.Bn = !1, Se = this, We = this.diagram, this.doSimulatedDragOut()))
    };

    function Te(a, b) {
        if (a.dragsLink) {
            var c = a.diagram;
            c.allowRelink && (c.model.ik() && 1 === b.count && b.first() instanceof S ? (a.draggedLink = b.first(), a.draggedLink.canRelinkFrom() && a.draggedLink.canRelinkTo() && a.draggedLink.Yj(), a.og = c.toolManager.findTool("Relinking"), null === a.og && (a.og = new Xe, a.og.diagram = c)) : (a.draggedLink = null, a.og = null))
        }
    }
    Qe.prototype.computeEffectiveCollection = function (a, b) {
        return this.diagram.commandHandler.computeEffectiveCollection(a, b)
    };
    Qe.prototype.sd = function (a) {
        return void 0 === a ? new df(Fb) : this.isGridSnapEnabled ? new df(new I(Math.round(a.x), Math.round(a.y))) : new df(a.copy())
    };
    Qe.prototype.doDeactivate = function () {
        this.isActive = !1;
        var a = this.diagram;
        a.Cf();
        ef(this);
        ff(a, this.draggedParts);
        this.draggedParts = this.currentPart = this.ko = null;
        this.Bn = this.isDragOutStarted = !1;
        if (0 < gf.count) {
            for (var b = gf, c = b.length, d = 0; d < c; d++) {
                var e = b.L(d);
                hf(e);
                jf(e);
                ef(e);
                e.diagram.Cf()
            }
            b.clear()
        }
        hf(this);
        this.Ql.h(NaN, NaN);
        Se = We = null;
        jf(this);
        a.isMouseCaptured = !1;
        a.currentCursor = "";
        a.Ot = !1;
        this.Hg();
        kf(a, !0)
    };

    function ef(a) {
        var b = a.diagram,
            c = b.skipsUndoManager;
        b.skipsUndoManager = !0;
        lf(a, b.lastInput, null);
        b.skipsUndoManager = c;
        a.Tg.length = 0
    }

    function mf() {
        var a = Se;
        jf(a);
        nf(a);
        var b = a.diagram;
        a.Ql.v() && (b.position = a.Ql);
        b.Cf()
    }
    Qe.prototype.doCancel = function () {
        jf(this);
        nf(this);
        var a = this.diagram;
        this.Ql.v() && (a.position = this.Ql);
        this.stopTool()
    };
    Qe.prototype.doKeyDown = function () {
        this.isActive && ("Esc" === this.diagram.lastInput.key ? this.doCancel() : this.doMouseMove())
    };
    Qe.prototype.doKeyUp = function () {
        this.isActive && this.doMouseMove()
    };

    function of (a, b) {
        var c = Infinity,
            d = Infinity,
            e = -Infinity,
            f = -Infinity;
        for (a = a.iterator; a.next();) {
            var g = a.value;
            if (g.Wb() && g.isVisible()) {
                var h = g.location;
                g = h.x;
                h = h.y;
                isNaN(g) || isNaN(h) || (g < c && (c = g), h < d && (d = h), g > e && (e = g), h > f && (f = h))
            }
        }
        Infinity === c ? b.h(0, 0, 0, 0) : b.h(c, d, e - c, f - d)
    }

    function pf(a, b) {
        if (null === a.copiedParts) {
            var c = a.diagram;
            if ((!b || !c.isReadOnly && !c.isModelReadOnly) && null !== a.draggedParts) {
                var d = c.undoManager;
                d.isEnabled && d.isInTransaction ? null !== d.currentTransaction && 0 < d.currentTransaction.changes.count && (c.undoManager.Bf(), c.ua("Drag")) : nf(a);
                c.skipsUndoManager = !b;
                c.partManager.addsToTemporaryLayer = !b;
                a.startPoint = c.firstInput.documentPoint;
                b = a.copiesEffectiveCollection ? a.draggedParts.Df() : c.selection;
                c = c.ck(b, c, !0);
                for (b = c.iterator; b.next();) b.value.location =
                    b.key.location;
                b = N.alloc(); of (c, b);
                N.free(b);
                b = new H;
                for (d = a.draggedParts.iterator; d.next();) {
                    var e = d.key;
                    e.Wb() && e.canCopy() && (e = c.H(e), null !== e && (e.yb(), b.add(e, a.sd(e.location))))
                }
                for (c = c.iterator; c.next();) d = c.value, d instanceof S && d.canCopy() && b.add(d, a.sd());
                a.copiedParts = b;
                Te(a, b.Df());
                null !== a.draggedLink && (c = a.draggedLink, b = c.routeBounds, qf(c, a.startPoint.x - (b.x + b.width / 2), a.startPoint.y - (b.y + b.height / 2)))
            }
        }
    }

    function jf(a) {
        var b = a.diagram;
        if (null !== a.copiedParts && (b.Jt(a.copiedParts.Df(), !1), a.copiedParts = null, null !== a.draggedParts))
            for (var c = a.draggedParts.iterator; c.next();) c.key instanceof S && (c.value.point = new I(0, 0));
        b.skipsUndoManager = !1;
        b.partManager.addsToTemporaryLayer = !1;
        a.startPoint = b.firstInput.documentPoint
    }

    function hf(a) {
        if (null !== a.draggedLink) {
            if (a.dragsLink && null !== a.og) {
                var b = a.og;
                b.diagram.remove(b.temporaryFromNode);
                b.diagram.remove(b.temporaryToNode)
            }
            a.draggedLink = null;
            a.og = null
        }
    }

    function rf(a, b, c) {
        var d = a.diagram,
            e = a.startPoint,
            f = I.alloc();
        f.assign(d.lastInput.documentPoint);
        a.moveParts(b, f.Zd(e), c);
        I.free(f);
        !0 === d.Be("temporaryPixelRatio") && null === d.uh && 30 < d.xx && (Ue(d), d.Ht())
    }
    Qe.prototype.moveParts = function (a, b, c) {
        var d = this.diagram;
        null !== d && sf(d, a, b, this.dragOptions, c)
    };

    function nf(a) {
        if (null !== a.draggedParts) {
            for (var b = a.diagram, c = a.draggedParts.iterator; c.next();) {
                var d = c.key;
                d.Wb() && (d.location = c.value.point)
            }
            for (c = a.draggedParts.iterator; c.next();)
                if (d = c.key, d instanceof S && d.suspendsRouting) {
                    var e = c.value.point;
                    a.draggedParts.add(d, a.sd());
                    qf(d, -e.x, -e.y)
                } b.Wc()
        }
    }

    function tf(a, b) {
        var c = a.diagram;
        a.dragsLink && (null !== a.draggedLink && (a.draggedLink.fromNode = null, a.draggedLink.toNode = null), uf(a, !1));
        var d = a.findDragOverObject(b),
            e = c.lastInput;
        e.targetObject = d;
        a.doUpdateCursor(d);
        var f = c.skipsUndoManager,
            g = !1;
        try {
            c.skipsUndoManager = !0;
            g = lf(a, e, d);
            if (!a.isActive && null === Se) return;
            var h = null !== d ? d.part : null;
            if (null === h || c.handlesDragDropForTopLevelParts && h.isTopLevel && !(h instanceof T)) {
                var k = c.mouseDragOver;
                null !== k && (k(e), g = !0)
            }
            if (!a.isActive && null === Se) return;
            a.doDragOver(b, d);
            if (!a.isActive && null === Se) return
        } finally {
            c.skipsUndoManager = f, g && c.Wc()
        }
        a.ko = d;
        c.isReadOnly || !c.allowMove && !c.allowCopy || !c.allowHorizontalScroll && !c.allowVerticalScroll || c.gt(e.viewPoint)
    }
    Qe.prototype.findDragOverObject = function (a) {
        var b = this;
        return vf(this.diagram, a, null, function (a) {
            null === a ? a = !0 : (a = a.part, a = null === a || a instanceof Je || a.layer.isTemporary || b.draggedParts && b.draggedParts.contains(a) || b.copiedParts && b.copiedParts.contains(a) ? !0 : !1);
            return !a
        })
    };
    Qe.prototype.doUpdateCursor = function (a) {
        var b = this.diagram;
        this.ko !== a && (!this.diagram.currentTool.isActive || this.mayCopy() ? b.currentCursor = this.copyCursor : this.mayMove() ? b.currentCursor = this.moveCursor : this.mayDragOut() && (b.currentCursor = this.nodropCursor))
    };

    function lf(a, b, c) {
        var d = !1,
            e = a.Tg.length,
            f = 0 < e ? a.Tg[0] : null;
        if (c === f) return !1;
        b.handled = !1;
        for (var g = 0; g < e; g++) {
            var h = a.Tg[g],
                k = h.mouseDragLeave;
            if (null !== k && (k(b, h, c), d = !0, b.handled)) break
        }
        a.Tg.length = 0;
        if (!a.isActive && null === Se || null === c) return d;
        b.handled = !1;
        for (e = c; null !== e;) a.Tg.push(e), e = wf(e);
        e = a.Tg.length;
        for (c = 0; c < e && (g = a.Tg[c], h = g.mouseDragEnter, null === h || (h(b, g, f), d = !0, !b.handled)); c++);
        return d
    }

    function wf(a) {
        var b = a.panel;
        return null !== b ? b : a instanceof U && !(a instanceof T) && (a = a.containingGroup, null !== a && a.handlesDragDropForMembers) ? a : null
    }

    function xf(a, b, c) {
        var d = a.og;
        if (null === d) return null;
        var e = a.diagram.Ag(b, d.portGravity, function (a) {
            return d.findValidLinkablePort(a, c)
        });
        a = I.alloc();
        var f = Infinity,
            g = null;
        for (e = e.iterator; e.next();) {
            var h = e.value;
            if (null !== h.part) {
                var k = h.ga(Ac, a);
                k = b.Ae(k);
                k < f && (g = h, f = k)
            }
        }
        I.free(a);
        return g
    }

    function uf(a, b) {
        var c = a.draggedLink;
        if (null !== c && !(2 > c.pointsCount)) {
            var d = a.diagram;
            if (!d.isReadOnly) {
                var e = a.og;
                if (null !== e) {
                    var f = null,
                        g = null;
                    null === c.fromNode && (f = xf(a, c.i(0), !1), null !== f && (g = f.part));
                    var h = null,
                        k = null;
                    null === c.toNode && (h = xf(a, c.i(c.pointsCount - 1), !0), null !== h && (k = h.part));
                    e.isValidLink(g, f, k, h) ? b ? (c.defaultFromPoint = c.i(0), c.defaultToPoint = c.i(c.pointsCount - 1), c.suspendsRouting = !1, c.fromNode = g, null !== f && (c.fromPortId = f.portId), c.toNode = k, null !== h && (c.toPortId = h.portId), c.fromPort !==
                        d.Xx && d.R("LinkRelinked", c, d.Xx), c.toPort !== d.Yx && d.R("LinkRelinked", c, d.Yx)) : yf(e, g, f, k, h) : yf(e, null, null, null, null)
                }
            }
        }
    }
    Qe.prototype.doDragOver = function () {};

    function Ef(a, b) {
        var c = a.diagram;
        a.dragsLink && uf(a, !0);
        ef(a);
        var d = a.findDragOverObject(b),
            e = c.lastInput;
        e.targetObject = d;
        if (null !== d) {
            e.handled = !1;
            for (var f = d; null !== f;) {
                var g = f.mouseDrop;
                if (null !== g && (g(e, f), e.handled)) break;
                Ff(a, e, f);
                f = wf(f)
            }
        } else f = c.mouseDrop, null !== f && f(e);
        if (a.isActive || null !== Se) {
            for (e = (a.copiedParts || a.draggedParts).iterator; e.next();) f = e.key, f instanceof W && f.linksConnected.each(function (a) {
                a.suspendsRouting = !1
            });
            a.doDropOnto(b, d);
            if (a.isActive || null !== Se) {
                a = N.alloc();
                for (b =
                    c.selection.iterator; b.next();) d = b.value, d instanceof W && Gf(c, d, a);
                N.free(a)
            }
        }
    }

    function Ff(a, b, c) {
        a = a.diagram;
        c = c.part;
        !a.handlesDragDropForTopLevelParts || !c.isTopLevel || c instanceof T || (c = a.mouseDrop, null !== c && c(b))
    }

    function Gf(a, b, c) {
        var d = !1;
        b.getAvoidableRect(c);
        a.viewportBounds.ze(c) && (d = !0);
        a = a.uv(c, function (a) {
            return a.part
        }, function (a) {
            return a instanceof S
        }, !0, function (a) {
            return a instanceof S
        }, d);
        if (0 !== a.count)
            for (a = a.iterator; a.next();) c = a.value, !c.Wd(b) && c.isAvoiding && c.Oa()
    }
    Qe.prototype.doDropOnto = function () {};
    Qe.prototype.doMouseMove = function () {
        if (this.isActive) {
            var a = this.diagram,
                b = a.lastInput;
            this.simulatedMouseMove(b.event, b.documentPoint, b.targetDiagram) || null === this.currentPart || null === this.draggedParts || (this.mayCopy() ? (pf(this, !1), Ve(a, this.copiedParts), rf(this, this.copiedParts, !1), ff(a, this.copiedParts)) : this.mayMove() ? (jf(this), rf(this, this.draggedParts, !0)) : this.mayDragOut() ? (pf(this, !1), rf(this, this.copiedParts, !1)) : jf(this), tf(this, a.lastInput.documentPoint))
        }
    };
    Qe.prototype.doMouseUp = function () {
        if (this.isActive) {
            var a = this.diagram,
                b = a.lastInput;
            if (!this.simulatedMouseUp(b.event, b.documentPoint, b.targetDiagram)) {
                b = !1;
                var c = this.mayCopy();
                c && null !== this.copiedParts ? (jf(this), pf(this, !0), Ve(a, this.copiedParts), rf(this, this.copiedParts, !1), ff(a, this.copiedParts), null !== this.copiedParts && (a.R("ChangingSelection", a.selection), a.clearSelection(!0), this.copiedParts.iteratorKeys.each(function (a) {
                    a.isSelected = !0
                }))) : (b = !0, jf(this), this.mayMove() && (rf(this, this.draggedParts,
                    !0), tf(this, a.lastInput.documentPoint)));
                this.Bn = !0;
                Ef(this, a.lastInput.documentPoint);
                if (this.isActive) {
                    var d = c ? this.copiedParts.Df() : this.draggedParts.Df();
                    this.copiedParts = null;
                    b && Hf(this);
                    a.Na();
                    ff(a, this.draggedParts);
                    this.transactionResult = c ? "Copy" : "Move";
                    a.R(c ? "SelectionCopied" : "SelectionMoved", d)
                }
                this.stopTool();
                c && a.R("ChangedSelection", a.selection)
            }
        }
    };
    Qe.prototype.simulatedMouseMove = function (a, b, c) {
        if (null === Se) return !1;
        var d = Se.diagram;
        c instanceof R || (c = null);
        var e = We;
        c !== e && (null !== e && e !== d && (e.Cf(), Se.isDragOutStarted = !1, e = e.toolManager.findTool("Dragging"), null !== e && e.doSimulatedDragLeave()), We = c, null !== c && c !== d && (mf(), e = c.toolManager.findTool("Dragging"), null !== e && (gf.contains(e) || gf.add(e), e.doSimulatedDragEnter())));
        if (null === c || c === d || !c.allowDrop || c.isReadOnly || !c.allowInsert) return !1;
        d = c.toolManager.findTool("Dragging");
        null !== d && (null !==
            a && (void 0 !== a.targetTouches && (0 < a.targetTouches.length ? a = a.targetTouches[0] : 0 < a.changedTouches.length && (a = a.changedTouches[0])), b = c.getMouse(a)), c.lastInput.documentPoint = b, c.lastInput.viewPoint = c.Nq(b), c.lastInput.down = !1, c.lastInput.up = !1, d.doSimulatedDragOver());
        return !0
    };
    Qe.prototype.simulatedMouseUp = function (a, b, c) {
        if (null === Se) return !1;
        var d = We,
            e = Se.diagram;
        if (null === c) return Se.doCancel(), !0;
        if (c !== d) {
            var f = d.toolManager.findTool("Dragging");
            if (null !== d && d !== e && null !== f) return d.Cf(), Se.isDragOutStarted = !1, f.doSimulatedDragLeave(), !1;
            We = c;
            d = c.toolManager.findTool("Dragging");
            null !== d && (mf(), gf.contains(d) || gf.add(d), d.doSimulatedDragEnter())
        }
        return c !== this.diagram ? (null !== a ? (void 0 !== a.targetTouches && (0 < a.targetTouches.length ? a = a.targetTouches[0] : 0 < a.changedTouches.length &&
            (a = a.changedTouches[0])), b = c.getMouse(a)) : null === b && (b = new I), c.lastInput.documentPoint = b, c.lastInput.viewPoint = c.Nq(b), c.lastInput.down = !1, c.lastInput.up = !0, a = c.toolManager.findTool("Dragging"), null !== a && a.doSimulatedDrop(), a = Se, null !== a && (c = a.mayCopy(), a.transactionResult = c ? "Copy" : "Move", a.stopTool()), !0) : !1
    };

    function Hf(a) {
        if (null !== a.draggedParts)
            for (var b = a.draggedParts.iterator; b.next();) {
                var c = b.key;
                c instanceof W && (c = c.containingGroup, null === c || null === c.placeholder || a.draggedParts.contains(c) || c.placeholder.o())
            }
    }
    Qe.prototype.mayCopy = function () {
        if (!this.isCopyEnabled) return !1;
        var a = this.diagram;
        if (a.isReadOnly || a.isModelReadOnly || !a.allowInsert || !a.allowCopy || (Wa ? !a.lastInput.alt : !a.lastInput.control)) return !1;
        for (a = a.selection.iterator; a.next();) {
            var b = a.value;
            if (b.Wb() && b.canCopy()) return !0
        }
        return null !== this.draggedLink && this.dragsLink && this.draggedLink.canCopy() ? !0 : !1
    };
    Qe.prototype.mayDragOut = function () {
        if (!this.isCopyEnabled) return !1;
        var a = this.diagram;
        if (!a.allowDragOut || !a.allowCopy || a.allowMove) return !1;
        for (a = a.selection.iterator; a.next();) {
            var b = a.value;
            if (b.Wb() && b.canCopy()) return !0
        }
        return null !== this.draggedLink && this.dragsLink && this.draggedLink.canCopy() ? !0 : !1
    };
    Qe.prototype.mayMove = function () {
        var a = this.diagram;
        if (a.isReadOnly || !a.allowMove) return !1;
        for (a = a.selection.iterator; a.next();) {
            var b = a.value;
            if (b.Wb() && b.canMove()) return !0
        }
        return null !== this.draggedLink && this.dragsLink && this.draggedLink.canMove() ? !0 : !1
    };
    Qe.prototype.computeBorder = function (a, b, c) {
        return this.Bn || null === this.draggedParts || this.draggedParts.contains(a) ? null : c.assign(b)
    };
    Qe.prototype.Bz = function () {
        return Se
    };
    Qe.prototype.mayDragIn = function () {
        var a = this.diagram;
        if (!a.allowDrop || a.isReadOnly || a.isModelReadOnly || !a.allowInsert) return !1;
        var b = Se;
        return null === b || b.diagram.model.dataFormat !== a.model.dataFormat ? !1 : !0
    };
    Qe.prototype.doSimulatedDragEnter = function () {
        if (this.mayDragIn()) {
            var a = this.diagram;
            a.animationManager.Xc();
            If(a);
            a.animationManager.Xc();
            var b = Se;
            null !== b && (b.diagram.Ot = !1);
            this.doUpdateCursor(a.grid)
        }
    };
    Qe.prototype.doSimulatedDragLeave = function () {
        var a = Se;
        null !== a && a.doSimulatedDragOut();
        this.doCancel()
    };
    Qe.prototype.doSimulatedDragOver = function () {
        var a = this.diagram;
        a.animationManager.bn = !0;
        var b = Se;
        if (null !== b && null !== b.draggedParts) {
            if (!this.mayDragIn()) return;
            Jf(this, b.draggedParts.Df(), !1, a.firstInput);
            rf(this, this.copiedParts, !1);
            tf(this, a.lastInput.documentPoint)
        }
        a.animationManager.bn = !1
    };
    Qe.prototype.doSimulatedDrop = function () {
        var a = this.diagram,
            b = Se;
        if (null !== b) {
            var c = b.diagram;
            b.Bn = !0;
            jf(this);
            if (!this.mayDragIn()) return;
            a.animationManager.bn = !0;
            a.R("ChangingSelection", a.selection);
            this.ua("Drop");
            Jf(this, b.draggedParts.Df(), !0, a.lastInput);
            rf(this, this.copiedParts, !1);
            null !== this.copiedParts && (a.clearSelection(!0), this.copiedParts.iteratorKeys.each(function (a) {
                a.isSelected = !0
            }));
            Ef(this, a.lastInput.documentPoint);
            a.Na();
            b = a.selection;
            null !== this.copiedParts ? this.transactionResult =
                "ExternalCopy" : b = new F;
            this.copiedParts = null;
            a.doFocus();
            a.R("ExternalObjectsDropped", b, c);
            this.Hg();
            a.R("ChangedSelection", a.selection)
        }
        a.animationManager.bn = !1
    };

    function Jf(a, b, c, d) {
        if (null === a.copiedParts) {
            var e = a.diagram;
            if (!e.isReadOnly && !e.isModelReadOnly) {
                e.skipsUndoManager = !c;
                e.partManager.addsToTemporaryLayer = !c;
                a.startPoint = d.documentPoint;
                c = e.ck(b, e, !0);
                var f = N.alloc(); of (b, f);
                d = f.x + f.width / 2;
                e = f.y + f.height / 2;
                N.free(f);
                f = a.Ns;
                var g = new H,
                    h = I.alloc();
                for (b = b.iterator; b.next();) {
                    var k = b.value,
                        l = c.H(k);
                    k.Wb() && k.canCopy() ? (k = k.location, h.h(f.x - (d - k.x), f.y - (e - k.y)), l.location = h, l.yb(), g.add(l, a.sd(h))) : l instanceof S && k.canCopy() && (qf(l, f.x - d, f.y - e),
                        g.add(l, a.sd()))
                }
                I.free(h);
                a.copiedParts = g;
                Te(a, g.Df());
                null !== a.draggedLink && (c = a.draggedLink, d = c.routeBounds, qf(c, a.startPoint.x - (d.x + d.width / 2), a.startPoint.y - (d.y + d.height / 2)))
            }
        }
    }
    Qe.prototype.doSimulatedDragOut = function () {
        var a = this.diagram;
        a.Ot = !1;
        this.mayCopy() || this.mayMove() ? a.currentCursor = "" : a.currentCursor = this.nodropCursor;
        this.ko = null
    };
    Qe.prototype.computeMove = function (a, b, c, d) {
        c = this.diagram;
        return null !== c ? c.computeMove(a, b, this.dragOptions, d) : new I
    };
    ma.Object.defineProperties(Qe.prototype, {
        isCopyEnabled: {
            get: function () {
                return this.Yc
            },
            set: function (a) {
                this.Yc = a
            }
        },
        copiesEffectiveCollection: {
            get: function () {
                return this.I
            },
            set: function (a) {
                this.I = a
            }
        },
        dragOptions: {
            get: function () {
                return this.Ia
            },
            set: function (a) {
                this.Ia = a
            }
        },
        isGridSnapEnabled: {
            get: function () {
                return this.dragOptions.isGridSnapEnabled
            },
            set: function (a) {
                this.dragOptions.isGridSnapEnabled =
                    a
            }
        },
        isComplexRoutingRealtime: {
            get: function () {
                return this.Ic
            },
            set: function (a) {
                this.Ic = a
            }
        },
        isGridSnapRealtime: {
            get: function () {
                return this.dragOptions.isGridSnapRealtime
            },
            set: function (a) {
                this.dragOptions.isGridSnapRealtime = a
            }
        },
        gridSnapCellSize: {
            get: function () {
                return this.dragOptions.gridSnapCellSize
            },
            set: function (a) {
                this.dragOptions.gridSnapCellSize.w(a) || (a = a.G(), this.dragOptions.gridSnapCellSize = a)
            }
        },
        gridSnapCellSpot: {
            get: function () {
                return this.dragOptions.gridSnapCellSpot
            },
            set: function (a) {
                this.dragOptions.gridSnapCellSpot.w(a) || (a = a.G(), this.dragOptions.gridSnapCellSpot = a)
            }
        },
        gridSnapOrigin: {
            get: function () {
                return this.dragOptions.gridSnapOrigin
            },
            set: function (a) {
                this.dragOptions.gridSnapOrigin.w(a) || (a = a.G(), this.dragOptions.gridSnapOrigin = a)
            }
        },
        dragsLink: {
            get: function () {
                return this.dragOptions.dragsLink
            },
            set: function (a) {
                this.dragOptions.dragsLink =
                    a
            }
        },
        dragsTree: {
            get: function () {
                return this.dragOptions.dragsTree
            },
            set: function (a) {
                this.dragOptions.dragsTree = a
            }
        },
        copyCursor: {
            get: function () {
                return this.Y
            },
            set: function (a) {
                this.Y = a
            }
        },
        moveCursor: {
            get: function () {
                return this.Oh
            },
            set: function (a) {
                this.Oh = a
            }
        },
        nodropCursor: {
            get: function () {
                return this.Ie
            },
            set: function (a) {
                this.Ie = a
            }
        },
        currentPart: {
            get: function () {
                return this.Ha
            },
            set: function (a) {
                this.Ha = a
            }
        },
        copiedParts: {
            get: function () {
                return this.u
            },
            set: function (a) {
                this.u = a
            }
        },
        draggedParts: {
            get: function () {
                return this.Za
            },
            set: function (a) {
                this.Za = a
            }
        },
        draggingParts: {
            get: function () {
                return null !== this.copiedParts ? this.copiedParts.Df() : null !== this.draggedParts ? this.draggedParts.Df() : this.Sq
            }
        },
        draggedLink: {
            get: function () {
                return this.diagram.draggedLink
            },
            set: function (a) {
                this.diagram.draggedLink =
                    a
            }
        },
        isDragOutStarted: {
            get: function () {
                return this.Ef
            },
            set: function (a) {
                this.Ef = a
            }
        },
        startPoint: {
            get: function () {
                return this.Ns
            },
            set: function (a) {
                this.Ns.w(a) || this.Ns.assign(a)
            }
        },
        delay: {
            get: function () {
                return this.Vk
            },
            set: function (a) {
                this.Vk = a
            }
        }
    });
    Qe.prototype.getDraggingSource = Qe.prototype.Bz;
    var gf = null,
        Se = null,
        We = null;
    Qe.className = "DraggingTool";
    gf = new E;
    La("draggingTool", function () {
        return this.findTool("Dragging")
    }, function (a) {
        this.Va("Dragging", a, this.mouseMoveTools)
    });
    Oa.prototype.doCancel = function () {
        null !== Se && Se.doCancel();
        ye.prototype.doCancel.call(this)
    };

    function Kf() {
        ye.call(this);
        this.Ef = 100;
        this.Y = !1;
        this.fi = "pointer";
        var a = new S,
            b = new Lf;
        b.isPanelMain = !0;
        b.stroke = "blue";
        a.add(b);
        b = new Lf;
        b.toArrow = "Standard";
        b.fill = "blue";
        b.stroke = "blue";
        a.add(b);
        a.layerName = "Tool";
        this.Dw = a;
        a = new W;
        b = new Lf;
        b.portId = "";
        b.figure = "Rectangle";
        b.fill = null;
        b.stroke = "magenta";
        b.strokeWidth = 2;
        b.desiredSize = Lb;
        a.add(b);
        a.selectable = !1;
        a.layerName = "Tool";
        this.Bw = a;
        this.Cw = b;
        a = new W;
        b = new Lf;
        b.portId = "";
        b.figure = "Rectangle";
        b.fill = null;
        b.stroke = "magenta";
        b.strokeWidth =
            2;
        b.desiredSize = Lb;
        a.add(b);
        a.selectable = !1;
        a.layerName = "Tool";
        this.Ew = a;
        this.Fw = b;
        this.Yc = this.Ic = this.Ia = this.Ha = this.Za = null;
        this.I = !0;
        this.vy = new H;
        this.Oh = this.xi = this.Sq = null
    }
    la(Kf, ye);
    Kf.prototype.doStop = function () {
        this.diagram.Cf();
        this.originalToPort = this.originalToNode = this.originalFromPort = this.originalFromNode = this.originalLink = null;
        this.validPortsCache.clear();
        this.targetPort = null
    };
    Kf.prototype.copyPortProperties = function (a, b, c, d, e) {
        if (null !== a && null !== b && null !== c && null !== d) {
            var f = b.uf(),
                g = M.alloc();
            g.width = b.naturalBounds.width * f;
            g.height = b.naturalBounds.height * f;
            d.desiredSize = g;
            M.free(g);
            e ? (d.toSpot = b.toSpot, d.toEndSegmentLength = b.toEndSegmentLength) : (d.fromSpot = b.fromSpot, d.fromEndSegmentLength = b.fromEndSegmentLength);
            c.locationSpot = Ac;
            f = I.alloc();
            c.location = b.ga(Ac, f);
            I.free(f);
            d.angle = b.Xi();
            null !== this.portTargeted && this.portTargeted(a, b, c, d, e)
        }
    };
    Kf.prototype.setNoTargetPortProperties = function (a, b, c) {
        null !== b && (b.desiredSize = Lb, b.fromSpot = uc, b.toSpot = uc);
        null !== a && (a.location = this.diagram.lastInput.documentPoint);
        null !== this.portTargeted && this.portTargeted(null, null, a, b, c)
    };
    Kf.prototype.doMouseDown = function () {
        this.isActive && this.doMouseMove()
    };
    Kf.prototype.doMouseMove = function () {
        if (this.isActive) {
            var a = this.diagram;
            this.targetPort = this.findTargetPort(this.isForwards);
            if (null !== this.targetPort && this.targetPort.part instanceof W) {
                var b = this.targetPort.part;
                this.isForwards ? this.copyPortProperties(b, this.targetPort, this.temporaryToNode, this.temporaryToPort, !0) : this.copyPortProperties(b, this.targetPort, this.temporaryFromNode, this.temporaryFromPort, !1)
            } else this.isForwards ? this.setNoTargetPortProperties(this.temporaryToNode, this.temporaryToPort,
                !0) : this.setNoTargetPortProperties(this.temporaryFromNode, this.temporaryFromPort, !1);
            (a.allowHorizontalScroll || a.allowVerticalScroll) && a.gt(a.lastInput.viewPoint)
        }
    };
    Kf.prototype.findValidLinkablePort = function (a, b) {
        if (null === a) return null;
        var c = a.part;
        if (!(c instanceof W)) return null;
        for (; null !== a;) {
            var d = b ? a.toLinkable : a.fromLinkable;
            if (!0 === d && (null !== a.portId || a instanceof W) && (b ? this.isValidTo(c, a) : this.isValidFrom(c, a))) return a;
            if (!1 === d) break;
            a = a.panel
        }
        return null
    };
    Kf.prototype.findTargetPort = function (a) {
        var b = this.diagram,
            c = b.lastInput.documentPoint,
            d = this.portGravity;
        0 >= d && (d = .1);
        var e = this,
            f = b.Ag(c, d, function (b) {
                return e.findValidLinkablePort(b, a)
            }, null, !0);
        d = Infinity;
        b = null;
        for (f = f.iterator; f.next();) {
            var g = f.value,
                h = g.part;
            if (h instanceof W) {
                var k = g.ga(Ac, I.alloc()),
                    l = c.x - k.x,
                    m = c.y - k.y;
                I.free(k);
                k = l * l + m * m;
                k < d && (l = this.validPortsCache.H(g), null !== l ? l && (b = g, d = k) : a && this.isValidLink(this.originalFromNode, this.originalFromPort, h, g) || !a && this.isValidLink(h,
                    g, this.originalToNode, this.originalToPort) ? (this.validPortsCache.add(g, !0), b = g, d = k) : this.validPortsCache.add(g, !1))
            }
        }
        return null !== b && (c = b.part, c instanceof W && (null === c.layer || c.layer.allowLink)) ? b : null
    };
    Kf.prototype.isValidFrom = function (a, b) {
        if (null === a || null === b) return this.isUnconnectedLinkValid;
        if (this.diagram.currentTool === this && (null !== a.layer && !a.layer.allowLink || !0 !== b.fromLinkable)) return !1;
        var c = b.fromMaxLinks;
        if (Infinity > c) {
            if (null !== this.originalLink && a === this.originalFromNode && b === this.originalFromPort) return !0;
            b = b.portId;
            null === b && (b = "");
            if (a.lq(b).count >= c) return !1
        }
        return !0
    };
    Kf.prototype.isValidTo = function (a, b) {
        if (null === a || null === b) return this.isUnconnectedLinkValid;
        if (this.diagram.currentTool === this && (null !== a.layer && !a.layer.allowLink || !0 !== b.toLinkable)) return !1;
        var c = b.toMaxLinks;
        if (Infinity > c) {
            if (null !== this.originalLink && a === this.originalToNode && b === this.originalToPort) return !0;
            b = b.portId;
            null === b && (b = "");
            if (a.vd(b).count >= c) return !1
        }
        return !0
    };
    Kf.prototype.isInSameNode = function (a, b) {
        if (null === a || null === b) return !1;
        if (a === b) return !0;
        a = a.part;
        b = b.part;
        return null !== a && a === b
    };
    Kf.prototype.isLinked = function (a, b) {
        if (null === a || null === b) return !1;
        var c = a.part;
        if (!(c instanceof W)) return !1;
        a = a.portId;
        null === a && (a = "");
        var d = b.part;
        if (!(d instanceof W)) return !1;
        b = b.portId;
        null === b && (b = "");
        for (b = d.vd(b); b.next();)
            if (d = b.value, d.fromNode === c && d.fromPortId === a) return !0;
        return !1
    };
    Kf.prototype.isValidLink = function (a, b, c, d) {
        if (!this.isValidFrom(a, b) || !this.isValidTo(c, d) || !(null === b || null === d || (b.fromLinkableSelfNode && d.toLinkableSelfNode || !this.isInSameNode(b, d)) && (b.fromLinkableDuplicates && d.toLinkableDuplicates || !this.isLinked(b, d))) || null !== this.originalLink && (null !== a && this.isLabelDependentOnLink(a, this.originalLink) || null !== c && this.isLabelDependentOnLink(c, this.originalLink)) || null !== a && null !== c && (null === a.data && null !== c.data || null !== a.data && null === c.data) || !this.isValidCycle(a,
                c, this.originalLink)) return !1;
        if (null !== a) {
            var e = a.linkValidation;
            if (null !== e && !e(a, b, c, d, this.originalLink)) return !1
        }
        if (null !== c && (e = c.linkValidation, null !== e && !e(a, b, c, d, this.originalLink))) return !1;
        e = this.linkValidation;
        return null !== e ? e(a, b, c, d, this.originalLink) : !0
    };
    Kf.prototype.isLabelDependentOnLink = function (a, b) {
        if (null === a) return !1;
        var c = a.labeledLink;
        if (null === c) return !1;
        if (c === b) return !0;
        var d = new F;
        d.add(a);
        return Mf(this, c, b, d)
    };

    function Mf(a, b, c, d) {
        if (b === c) return !0;
        var e = b.fromNode;
        if (null !== e && e.isLinkLabel && (d.add(e), Mf(a, e.labeledLink, c, d))) return !0;
        b = b.toNode;
        return null !== b && b.isLinkLabel && (d.add(b), Mf(a, b.labeledLink, c, d)) ? !0 : !1
    }
    Kf.prototype.isValidCycle = function (a, b, c) {
        void 0 === c && (c = null);
        if (null === a || null === b) return this.isUnconnectedLinkValid;
        var d = this.diagram.validCycle;
        if (d !== Nf) {
            if (d === Of) {
                d = c || this.temporaryLink;
                if (null !== d && !d.isTreeLink) return !0;
                for (d = b.linksConnected; d.next();) {
                    var e = d.value;
                    if (e !== c && e.isTreeLink && e.toNode === b) return !1
                }
                return !Pf(this, a, b, c, !0)
            }
            if (d === Qf) {
                d = c || this.temporaryLink;
                if (null !== d && !d.isTreeLink) return !0;
                for (d = a.linksConnected; d.next();)
                    if (e = d.value, e !== c && e.isTreeLink && e.fromNode ===
                        a) return !1;
                return !Pf(this, a, b, c, !0)
            }
            if (d === Rf) return a === b ? a = !0 : (d = new F, d.add(b), a = Sf(this, d, a, b, c)), !a;
            if (d === Tf) return !Pf(this, a, b, c, !1);
            if (d === Uf) return a === b ? a = !0 : (d = new F, d.add(b), a = Vf(this, d, a, b, c)), !a
        }
        return !0
    };

    function Pf(a, b, c, d, e) {
        if (b === c) return !0;
        if (null === b || null === c) return !1;
        for (var f = b.linksConnected; f.next();) {
            var g = f.value;
            if (g !== d && (!e || g.isTreeLink) && g.toNode === b && (g = g.fromNode, g !== b && Pf(a, g, c, d, e))) return !0
        }
        return !1
    }

    function Sf(a, b, c, d, e) {
        if (c === d) return !0;
        if (null === c || null === d || b.contains(c)) return !1;
        b.add(c);
        for (var f = c.linksConnected; f.next();) {
            var g = f.value;
            if (g !== e && g.toNode === c && (g = g.fromNode, g !== c && Sf(a, b, g, d, e))) return !0
        }
        return !1
    }

    function Vf(a, b, c, d, e) {
        if (c === d) return !0;
        if (null === c || null === d || b.contains(c)) return !1;
        b.add(c);
        for (var f = c.linksConnected; f.next();) {
            var g = f.value;
            if (g !== e) {
                var h = g.fromNode;
                g = g.toNode;
                h = h === c ? g : h;
                if (h !== c && Vf(a, b, h, d, e)) return !0
            }
        }
        return !1
    }
    ma.Object.defineProperties(Kf.prototype, {
        portGravity: {
            get: function () {
                return this.Ef
            },
            set: function (a) {
                0 <= a && (this.Ef = a)
            }
        },
        isUnconnectedLinkValid: {
            get: function () {
                return this.Y
            },
            set: function (a) {
                this.Y = a
            }
        },
        linkingCursor: {
            get: function () {
                return this.fi
            },
            set: function (a) {
                this.fi = a
            }
        },
        temporaryLink: {
            get: function () {
                return this.Dw
            },
            set: function (a) {
                this.Dw = a
            }
        },
        temporaryFromNode: {
            get: function () {
                return this.Bw
            },
            set: function (a) {
                this.Bw = a
            }
        },
        temporaryFromPort: {
            get: function () {
                return this.Cw
            },
            set: function (a) {
                this.Cw = a
            }
        },
        temporaryToNode: {
            get: function () {
                return this.Ew
            },
            set: function (a) {
                this.Ew = a
            }
        },
        temporaryToPort: {
            get: function () {
                return this.Fw
            },
            set: function (a) {
                this.Fw = a
            }
        },
        originalLink: {
            get: function () {
                return this.Za
            },
            set: function (a) {
                this.Za = a
            }
        },
        originalFromNode: {
            get: function () {
                return this.Ha
            },
            set: function (a) {
                this.Ha = a
            }
        },
        originalFromPort: {
            get: function () {
                return this.Ia
            },
            set: function (a) {
                this.Ia = a
            }
        },
        originalToNode: {
            get: function () {
                return this.Ic
            },
            set: function (a) {
                this.Ic = a
            }
        },
        originalToPort: {
            get: function () {
                return this.Yc
            },
            set: function (a) {
                this.Yc = a
            }
        },
        isForwards: {
            get: function () {
                return this.I
            },
            set: function (a) {
                this.I = a
            }
        },
        validPortsCache: {
            get: function () {
                return this.vy
            }
        },
        targetPort: {
            get: function () {
                return this.Sq
            },
            set: function (a) {
                this.Sq = a
            }
        },
        linkValidation: {
            get: function () {
                return this.xi
            },
            set: function (a) {
                this.xi = a
            }
        },
        portTargeted: {
            get: function () {
                return this.Oh
            },
            set: function (a) {
                this.Oh = a
            }
        }
    });
    Kf.className = "LinkingBaseTool";

    function Wf() {
        Kf.call(this);
        this.name = "Linking";
        this.u = {};
        this.l = null;
        this.J = Xf;
        this.Ie = null
    }
    la(Wf, Kf);
    Wf.prototype.canStart = function () {
        if (!this.isEnabled) return !1;
        var a = this.diagram;
        return a.isReadOnly || a.isModelReadOnly || !a.allowLink || !a.model.vt() || !a.lastInput.left || a.currentTool !== this && !this.isBeyondDragSize() ? !1 : null !== this.findLinkablePort()
    };
    Wf.prototype.findLinkablePort = function () {
        var a = this.diagram,
            b = this.startObject;
        null === b && (b = a.Ub(a.firstInput.documentPoint, null, null));
        if (null === b || !(b.part instanceof W)) return null;
        a = this.direction;
        if (a === Xf || a === Yf) {
            var c = this.findValidLinkablePort(b, !1);
            if (null !== c) return this.isForwards = !0, c
        }
        if (a === Xf || a === Zf)
            if (b = this.findValidLinkablePort(b, !0), null !== b) return this.isForwards = !1, b;
        return null
    };
    Wf.prototype.doActivate = function () {
        var a = this.diagram,
            b = this.findLinkablePort();
        null !== b && (this.ua(this.name), a.isMouseCaptured = !0, a.currentCursor = this.linkingCursor, this.isForwards ? (null === this.temporaryToNode || this.temporaryToNode.location.v() || (this.temporaryToNode.location = a.lastInput.documentPoint), this.originalFromPort = b, b = this.originalFromPort.part, b instanceof W && (this.originalFromNode = b), this.copyPortProperties(this.originalFromNode, this.originalFromPort, this.temporaryFromNode, this.temporaryFromPort,
            !1)) : (null === this.temporaryFromNode || this.temporaryFromNode.location.v() || (this.temporaryFromNode.location = a.lastInput.documentPoint), this.originalToPort = b, b = this.originalToPort.part, b instanceof W && (this.originalToNode = b), this.copyPortProperties(this.originalToNode, this.originalToPort, this.temporaryToNode, this.temporaryToPort, !0)), a.add(this.temporaryFromNode), a.add(this.temporaryToNode), null !== this.temporaryLink && (null !== this.temporaryFromNode && (this.temporaryLink.fromNode = this.temporaryFromNode),
            null !== this.temporaryToNode && (this.temporaryLink.toNode = this.temporaryToNode), this.temporaryLink.isTreeLink = this.isNewTreeLink(), this.temporaryLink.Oa(), a.add(this.temporaryLink)), this.isActive = !0)
    };
    Wf.prototype.doDeactivate = function () {
        this.isActive = !1;
        var a = this.diagram;
        a.remove(this.temporaryLink);
        a.remove(this.temporaryFromNode);
        a.remove(this.temporaryToNode);
        a.isMouseCaptured = !1;
        a.currentCursor = "";
        this.Hg()
    };
    Wf.prototype.doStop = function () {
        Kf.prototype.doStop.call(this);
        this.startObject = null
    };
    Wf.prototype.doMouseUp = function () {
        var a = this.diagram;
        if (this.isActive) {
            var b = this.transactionResult = null,
                c = null,
                d = null,
                e = null,
                f = null;
            try {
                var g = this.targetPort = this.findTargetPort(this.isForwards);
                if (null !== g) {
                    var h = g.part;
                    h instanceof W && (this.isForwards ? (null !== this.originalFromNode && (b = this.originalFromNode, c = this.originalFromPort), d = h, e = g) : (b = h, c = g, null !== this.originalToNode && (d = this.originalToNode, e = this.originalToPort)))
                } else this.isForwards ? null !== this.originalFromNode && this.isUnconnectedLinkValid &&
                    (b = this.originalFromNode, c = this.originalFromPort) : null !== this.originalToNode && this.isUnconnectedLinkValid && (d = this.originalToNode, e = this.originalToPort);
                null !== b || null !== d ? (f = this.insertLink(b, c, d, e), null !== f ? (null === g && (this.isForwards ? f.defaultToPoint = a.lastInput.documentPoint : f.defaultFromPoint = a.lastInput.documentPoint), a.allowSelect && (a.R("ChangingSelection", a.selection), a.clearSelection(!0), f.isSelected = !0), this.transactionResult = this.name, a.R("LinkDrawn", f)) : (a.model.gq(), this.doNoLink(b, c,
                    d, e))) : this.isForwards ? this.doNoLink(this.originalFromNode, this.originalFromPort, null, null) : this.doNoLink(null, null, this.originalToNode, this.originalToPort)
            } finally {
                this.stopTool(), f && a.allowSelect && a.R("ChangedSelection", a.selection)
            }
        }
    };
    Wf.prototype.isNewTreeLink = function () {
        var a = this.archetypeLinkData;
        if (null === a) return !0;
        if (a instanceof S) return a.isTreeLink;
        var b = this.diagram;
        if (null === b) return !0;
        a = b.partManager.getLinkCategoryForData(a);
        b = b.partManager.findLinkTemplateForCategory(a);
        return null !== b ? b.isTreeLink : !0
    };
    Wf.prototype.insertLink = function (a, b, c, d) {
        return this.diagram.partManager.insertLink(a, b, c, d)
    };
    Wf.prototype.doNoLink = function () {};
    ma.Object.defineProperties(Wf.prototype, {
        archetypeLinkData: {
            get: function () {
                return this.u
            },
            set: function (a) {
                this.u = a
            }
        },
        archetypeLabelNodeData: {
            get: function () {
                return this.l
            },
            set: function (a) {
                this.l = a
            }
        },
        direction: {
            get: function () {
                return this.J
            },
            set: function (a) {
                this.J = a
            }
        },
        startObject: {
            get: function () {
                return this.Ie
            },
            set: function (a) {
                this.Ie = a
            }
        }
    });
    var Xf = new D(Wf, "Either", 0),
        Yf = new D(Wf, "ForwardsOnly", 0),
        Zf = new D(Wf, "BackwardsOnly", 0);
    Wf.className = "LinkingTool";
    Wf.Either = Xf;
    Wf.ForwardsOnly = Yf;
    Wf.BackwardsOnly = Zf;

    function Xe() {
        Kf.call(this);
        this.name = "Relinking";
        var a = new Lf;
        a.figure = "Diamond";
        a.desiredSize = Nb;
        a.fill = "lightblue";
        a.stroke = "dodgerblue";
        a.cursor = this.linkingCursor;
        a.segmentIndex = 0;
        this.u = a;
        a = new Lf;
        a.figure = "Diamond";
        a.desiredSize = Nb;
        a.fill = "lightblue";
        a.stroke = "dodgerblue";
        a.cursor = this.linkingCursor;
        a.segmentIndex = -1;
        this.Ie = a;
        this.l = null;
        this.gx = new N
    }
    la(Xe, Kf);
    Xe.prototype.updateAdornments = function (a) {
        if (null !== a && a instanceof S) {
            var b = "RelinkFrom",
                c = null;
            if (a.isSelected && !this.diagram.isReadOnly) {
                var d = a.selectionObject;
                null !== d && a.canRelinkFrom() && a.actualBounds.v() && a.isVisible() && d.actualBounds.v() && d.zf() && (c = a.fk(b), null === c && (c = this.makeAdornment(d, !1), a.Ch(b, c)))
            }
            null === c && a.Af(b);
            b = "RelinkTo";
            c = null;
            a.isSelected && !this.diagram.isReadOnly && (d = a.selectionObject, null !== d && a.canRelinkTo() && a.actualBounds.v() && a.isVisible() && d.actualBounds.v() && d.zf() &&
                (c = a.fk(b), null === c ? (c = this.makeAdornment(d, !0), a.Ch(b, c)) : c.o()));
            null === c && a.Af(b)
        }
    };
    Xe.prototype.makeAdornment = function (a, b) {
        var c = new Je;
        c.type = X.Link;
        b = b ? this.toHandleArchetype : this.fromHandleArchetype;
        null !== b && c.add(b.copy());
        c.adornedObject = a;
        return c
    };
    Xe.prototype.canStart = function () {
        if (!this.isEnabled) return !1;
        var a = this.diagram;
        if (a.isReadOnly || a.isModelReadOnly || !a.allowRelink || !a.model.vt() || !a.lastInput.left) return !1;
        var b = this.findToolHandleAt(a.firstInput.documentPoint, "RelinkFrom");
        null === b && (b = this.findToolHandleAt(a.firstInput.documentPoint, "RelinkTo"));
        return null !== b
    };
    Xe.prototype.doActivate = function () {
        var a = this.diagram;
        if (null === this.originalLink) {
            var b = this.handle;
            null === b && (b = this.findToolHandleAt(a.firstInput.documentPoint, "RelinkFrom"), null === b && (b = this.findToolHandleAt(a.firstInput.documentPoint, "RelinkTo")));
            if (null === b) return;
            var c = b.part;
            if (!(c instanceof Je && c.adornedPart instanceof S)) return;
            this.handle = b;
            this.isForwards = null === c || "RelinkTo" === c.category;
            this.originalLink = c.adornedPart
        }
        this.ua(this.name);
        a.isMouseCaptured = !0;
        a.currentCursor = this.linkingCursor;
        this.originalFromPort = this.originalLink.fromPort;
        this.originalFromNode = this.originalLink.fromNode;
        this.originalToPort = this.originalLink.toPort;
        this.originalToNode = this.originalLink.toNode;
        this.gx.set(this.originalLink.actualBounds);
        null !== this.originalLink && 0 < this.originalLink.pointsCount && (null === this.originalLink.fromNode && (null !== this.temporaryFromPort && (this.temporaryFromPort.desiredSize = Kb), null !== this.temporaryFromNode && (this.temporaryFromNode.location = this.originalLink.i(0))), null === this.originalLink.toNode &&
            (null !== this.temporaryToPort && (this.temporaryToPort.desiredSize = Kb), null !== this.temporaryToNode && (this.temporaryToNode.location = this.originalLink.i(this.originalLink.pointsCount - 1))));
        this.copyPortProperties(this.originalFromNode, this.originalFromPort, this.temporaryFromNode, this.temporaryFromPort, !1);
        this.copyPortProperties(this.originalToNode, this.originalToPort, this.temporaryToNode, this.temporaryToPort, !0);
        a.add(this.temporaryFromNode);
        a.add(this.temporaryToNode);
        null !== this.temporaryLink && (null !==
            this.temporaryFromNode && (this.temporaryLink.fromNode = this.temporaryFromNode), null !== this.temporaryToNode && (this.temporaryLink.toNode = this.temporaryToNode), this.copyLinkProperties(this.originalLink, this.temporaryLink), this.temporaryLink.Oa(), a.add(this.temporaryLink));
        this.isActive = !0
    };
    Xe.prototype.copyLinkProperties = function (a, b) {
        if (null !== a && null !== b) {
            b.adjusting = a.adjusting;
            b.corner = a.corner;
            var c = a.curve;
            if (c === $f || c === ag) c = bg;
            b.curve = c;
            b.curviness = a.curviness;
            b.isTreeLink = a.isTreeLink;
            b.points = a.points;
            b.routing = a.routing;
            b.smoothness = a.smoothness;
            b.fromSpot = a.fromSpot;
            b.fromEndSegmentLength = a.fromEndSegmentLength;
            b.fromShortLength = a.fromShortLength;
            b.toSpot = a.toSpot;
            b.toEndSegmentLength = a.toEndSegmentLength;
            b.toShortLength = a.toShortLength
        }
    };
    Xe.prototype.doDeactivate = function () {
        this.isActive = !1;
        var a = this.diagram;
        a.remove(this.temporaryLink);
        a.remove(this.temporaryFromNode);
        a.remove(this.temporaryToNode);
        a.isMouseCaptured = !1;
        a.currentCursor = "";
        this.Hg()
    };
    Xe.prototype.doStop = function () {
        Kf.prototype.doStop.call(this);
        this.handle = null
    };
    Xe.prototype.doMouseUp = function () {
        if (this.isActive) {
            var a = this.diagram;
            this.transactionResult = null;
            var b = this.originalFromNode,
                c = this.originalFromPort,
                d = this.originalToNode,
                e = this.originalToPort,
                f = this.originalLink;
            this.targetPort = this.findTargetPort(this.isForwards);
            if (null !== this.targetPort) {
                var g = this.targetPort.part;
                g instanceof W && (this.isForwards ? (d = g, e = this.targetPort) : (b = g, c = this.targetPort))
            } else this.isUnconnectedLinkValid ? this.isForwards ? e = d = null : c = b = null : f = null;
            null !== f ? (this.reconnectLink(f,
                this.isForwards ? d : b, this.isForwards ? e : c, this.isForwards), null === this.targetPort && (this.isForwards ? f.defaultToPoint = a.lastInput.documentPoint : f.defaultFromPoint = a.lastInput.documentPoint, f.Oa()), a.allowSelect && (f.isSelected = !0), this.transactionResult = this.name, a.R("LinkRelinked", f, this.isForwards ? this.originalToPort : this.originalFromPort)) : this.doNoRelink(this.originalLink, this.isForwards);
            this.originalLink.tq(this.gx)
        }
        this.stopTool()
    };
    Xe.prototype.reconnectLink = function (a, b, c, d) {
        c = null !== c && null !== c.portId ? c.portId : "";
        d ? (a.toNode = b, a.toPortId = c) : (a.fromNode = b, a.fromPortId = c);
        return !0
    };
    Xe.prototype.doNoRelink = function () {};

    function yf(a, b, c, d, e) {
        null !== b ? (a.copyPortProperties(b, c, a.temporaryFromNode, a.temporaryFromPort, !1), a.diagram.add(a.temporaryFromNode)) : a.diagram.remove(a.temporaryFromNode);
        null !== d ? (a.copyPortProperties(d, e, a.temporaryToNode, a.temporaryToPort, !0), a.diagram.add(a.temporaryToNode)) : a.diagram.remove(a.temporaryToNode)
    }
    ma.Object.defineProperties(Xe.prototype, {
        fromHandleArchetype: {
            get: function () {
                return this.u
            },
            set: function (a) {
                this.u = a
            }
        },
        toHandleArchetype: {
            get: function () {
                return this.Ie
            },
            set: function (a) {
                this.Ie = a
            }
        },
        handle: {
            get: function () {
                return this.l
            },
            set: function (a) {
                if (null !== a && !(a.part instanceof Je)) throw Error("new handle is not in an Adornment: " + a);
                this.l = a
            }
        }
    });
    Xe.className = "RelinkingTool";
    La("linkingTool", function () {
        return this.findTool("Linking")
    }, function (a) {
        this.Va("Linking", a, this.mouseMoveTools)
    });
    La("relinkingTool", function () {
        return this.findTool("Relinking")
    }, function (a) {
        this.Va("Relinking", a, this.mouseDownTools)
    });

    function cg() {
        ye.call(this);
        this.name = "LinkReshaping";
        var a = new Lf;
        a.figure = "Rectangle";
        a.desiredSize = Mb;
        a.fill = "lightblue";
        a.stroke = "dodgerblue";
        this.u = a;
        a = new Lf;
        a.figure = "Diamond";
        a.desiredSize = Nb;
        a.fill = "lightblue";
        a.stroke = "dodgerblue";
        a.cursor = "move";
        this.I = a;
        this.Y = 3;
        this.Xt = this.l = null;
        this.hx = new I;
        this.ps = new E
    }
    la(cg, ye);
    cg.prototype.Av = function (a) {
        return a && a.ws && 0 !== a.ws.value ? a.ws : pg
    };
    cg.prototype.Im = function (a, b) {
        a.ws = b
    };
    cg.prototype.updateAdornments = function (a) {
        if (null !== a && a instanceof S) {
            var b = null;
            if (a.isSelected && !this.diagram.isReadOnly) {
                var c = a.path;
                null !== c && a.canReshape() && a.actualBounds.v() && a.isVisible() && c.actualBounds.v() && c.zf() && (b = a.fk(this.name), null === b || b.ax !== a.pointsCount || b.qx !== a.resegmentable) && (b = this.makeAdornment(c), null !== b && (b.ax = a.pointsCount, b.qx = a.resegmentable, a.Ch(this.name, b)))
            }
            null === b && a.Af(this.name)
        }
    };
    cg.prototype.makeAdornment = function (a) {
        var b = a.part,
            c = b.pointsCount,
            d = b.isOrthogonal,
            e = null;
        if (null !== b.points && 1 < c) {
            e = new Je;
            e.type = X.Link;
            c = b.firstPickIndex;
            var f = b.lastPickIndex,
                g = d ? 1 : 0;
            if (b.resegmentable && b.computeCurve() !== qg)
                for (var h = c + g; h < f - g; h++) {
                    var k = this.makeResegmentHandle(a, h);
                    null !== k && (k.segmentIndex = h, k.segmentFraction = .5, k.fromMaxLinks = 999, e.add(k))
                }
            for (g = c + 1; g < f; g++)
                if (h = this.makeHandle(a, g), null !== h) {
                    h.segmentIndex = g;
                    if (g !== c)
                        if (g === c + 1 && d) {
                            k = b.i(c);
                            var l = b.i(c + 1);
                            J.A(k.x, l.x) &&
                                J.A(k.y, l.y) && (l = b.i(c - 1));
                            J.A(k.x, l.x) ? (this.Im(h, rg), h.cursor = "n-resize") : J.A(k.y, l.y) && (this.Im(h, sg), h.cursor = "w-resize")
                        } else g === f - 1 && d ? (k = b.i(f - 1), l = b.i(f), J.A(k.x, l.x) && J.A(k.y, l.y) && (k = b.i(f + 1)), J.A(k.x, l.x) ? (this.Im(h, rg), h.cursor = "n-resize") : J.A(k.y, l.y) && (this.Im(h, sg), h.cursor = "w-resize")) : g !== f && (this.Im(h, tg), h.cursor = "move");
                    e.add(h)
                } e.adornedObject = a
        }
        return e
    };
    cg.prototype.makeHandle = function () {
        var a = this.handleArchetype;
        return null === a ? null : a.copy()
    };
    cg.prototype.makeResegmentHandle = function () {
        var a = this.midHandleArchetype;
        return null === a ? null : a.copy()
    };
    cg.prototype.canStart = function () {
        if (!this.isEnabled) return !1;
        var a = this.diagram;
        return !a.isReadOnly && a.allowReshape && a.lastInput.left ? null !== this.findToolHandleAt(a.firstInput.documentPoint, this.name) : !1
    };
    cg.prototype.doActivate = function () {
        var a = this.diagram;
        null === this.handle && (this.handle = this.findToolHandleAt(a.firstInput.documentPoint, this.name));
        if (null !== this.handle) {
            var b = this.handle.part.adornedPart;
            if (b instanceof S) {
                this.Xt = b;
                a.isMouseCaptured = !0;
                this.ua(this.name);
                if (b.resegmentable && 999 === this.handle.fromMaxLinks) {
                    var c = b.points.copy(),
                        d = this.getResegmentingPoint();
                    c.Kb(this.handle.segmentIndex + 1, d);
                    b.isOrthogonal && c.Kb(this.handle.segmentIndex + 1, d);
                    b.points = c;
                    b.Lb();
                    b.updateAdornments();
                    this.handle = this.findToolHandleAt(a.firstInput.documentPoint, this.name);
                    if (null === this.handle) {
                        this.doDeactivate();
                        return
                    }
                }
                this.hx = b.i(this.handle.segmentIndex);
                this.ps = b.points.copy();
                this.isActive = !0
            }
        }
    };
    cg.prototype.doDeactivate = function () {
        this.Hg();
        this.Xt = this.handle = null;
        this.isActive = this.diagram.isMouseCaptured = !1
    };
    cg.prototype.doCancel = function () {
        var a = this.adornedLink;
        null !== a && (a.points = this.ps);
        this.stopTool()
    };
    cg.prototype.getResegmentingPoint = function () {
        return this.handle.ga(Ac)
    };
    cg.prototype.doMouseMove = function () {
        var a = this.diagram;
        this.isActive && (a = this.computeReshape(a.lastInput.documentPoint), this.reshape(a))
    };
    cg.prototype.doMouseUp = function () {
        var a = this.diagram;
        if (this.isActive) {
            var b = this.computeReshape(a.lastInput.documentPoint);
            this.reshape(b);
            b = this.adornedLink;
            if (null !== b && b.resegmentable) {
                var c = this.handle.segmentIndex,
                    d = b.i(c - 1),
                    e = b.i(c),
                    f = b.i(c + 1);
                if (b.isOrthogonal) {
                    if (c > b.firstPickIndex + 1 && c < b.lastPickIndex - 1) {
                        var g = b.i(c - 2);
                        if (Math.abs(d.x - e.x) < this.resegmentingDistance && Math.abs(d.y - e.y) < this.resegmentingDistance && (ug(this, g, d, e, f, !0) || ug(this, g, d, e, f, !1))) {
                            var h = b.points.copy();
                            ug(this, g, d,
                                e, f, !0) ? (h.gd(c - 2, new I(g.x, (f.y + g.y) / 2)), h.gd(c + 1, new I(f.x, (f.y + g.y) / 2))) : (h.gd(c - 2, new I((f.x + g.x) / 2, g.y)), h.gd(c + 1, new I((f.x + g.x) / 2, f.y)));
                            h.lb(c);
                            h.lb(c - 1);
                            b.points = h;
                            b.Lb()
                        } else g = b.i(c + 2), Math.abs(e.x - f.x) < this.resegmentingDistance && Math.abs(e.y - f.y) < this.resegmentingDistance && (ug(this, d, e, f, g, !0) || ug(this, d, e, f, g, !1)) && (h = b.points.copy(), ug(this, d, e, f, g, !0) ? (h.gd(c - 1, new I(d.x, (d.y + g.y) / 2)), h.gd(c + 2, new I(g.x, (d.y + g.y) / 2))) : (h.gd(c - 1, new I((d.x + g.x) / 2, d.y)), h.gd(c + 2, new I((d.x + g.x) / 2, g.y))),
                            h.lb(c + 1), h.lb(c), b.points = h, b.Lb())
                    }
                } else g = I.alloc(), J.Lh(d.x, d.y, f.x, f.y, e.x, e.y, g) && g.Ae(e) < this.resegmentingDistance * this.resegmentingDistance && (d = b.points.copy(), d.lb(c), b.points = d, b.Lb()), I.free(g)
            }
            a.Na();
            this.transactionResult = this.name;
            a.R("LinkReshaped", this.adornedLink, this.ps)
        }
        this.stopTool()
    };

    function ug(a, b, c, d, e, f) {
        return f ? Math.abs(b.y - c.y) < a.resegmentingDistance && Math.abs(c.y - d.y) < a.resegmentingDistance && Math.abs(d.y - e.y) < a.resegmentingDistance : Math.abs(b.x - c.x) < a.resegmentingDistance && Math.abs(c.x - d.x) < a.resegmentingDistance && Math.abs(d.x - e.x) < a.resegmentingDistance
    }
    cg.prototype.reshape = function (a) {
        var b = this.adornedLink;
        b.Nh();
        var c = this.handle.segmentIndex,
            d = this.Av(this.handle);
        if (b.isOrthogonal)
            if (c === b.firstPickIndex + 1) c = b.firstPickIndex + 1, d === rg ? (b.K(c, b.i(c - 1).x, a.y), b.K(c + 1, b.i(c + 2).x, a.y)) : d === sg && (b.K(c, a.x, b.i(c - 1).y), b.K(c + 1, a.x, b.i(c + 2).y));
            else if (c === b.lastPickIndex - 1) c = b.lastPickIndex - 1, d === rg ? (b.K(c - 1, b.i(c - 2).x, a.y), b.K(c, b.i(c + 1).x, a.y)) : d === sg && (b.K(c - 1, a.x, b.i(c - 2).y), b.K(c, a.x, b.i(c + 1).y));
        else {
            d = c;
            var e = b.i(d),
                f = b.i(d - 1),
                g = b.i(d + 1);
            J.A(f.x,
                e.x) && J.A(e.y, g.y) ? (J.A(f.x, b.i(d - 2).x) && !J.A(f.y, b.i(d - 2).y) ? (b.m(d, a.x, f.y), c++, d++) : b.K(d - 1, a.x, f.y), J.A(g.y, b.i(d + 2).y) && !J.A(g.x, b.i(d + 2).x) ? b.m(d + 1, g.x, a.y) : b.K(d + 1, g.x, a.y)) : J.A(f.y, e.y) && J.A(e.x, g.x) ? (J.A(f.y, b.i(d - 2).y) && !J.A(f.x, b.i(d - 2).x) ? (b.m(d, f.x, a.y), c++, d++) : b.K(d - 1, f.x, a.y), J.A(g.x, b.i(d + 2).x) && !J.A(g.y, b.i(d + 2).y) ? b.m(d + 1, a.x, g.y) : b.K(d + 1, a.x, g.y)) : J.A(f.x, e.x) && J.A(e.x, g.x) ? (J.A(f.x, b.i(d - 2).x) && !J.A(f.y, b.i(d - 2).y) ? (b.m(d, a.x, f.y), c++, d++) : b.K(d - 1, a.x, f.y), J.A(g.x, b.i(d + 2).x) &&
                !J.A(g.y, b.i(d + 2).y) ? b.m(d + 1, a.x, g.y) : b.K(d + 1, a.x, g.y)) : J.A(f.y, e.y) && J.A(e.y, g.y) && (J.A(f.y, b.i(d - 2).y) && !J.A(f.x, b.i(d - 2).x) ? (b.m(d, f.x, a.y), c++, d++) : b.K(d - 1, f.x, a.y), J.A(g.y, b.i(d + 2).y) && !J.A(g.x, b.i(d + 2).x) ? b.m(d + 1, g.x, a.y) : b.K(d + 1, g.x, a.y));
            b.K(c, a.x, a.y)
        } else b.K(c, a.x, a.y), d = b.fromNode, e = b.fromPort, null !== d && (f = d.findVisibleNode(), null !== f && f !== d && (d = f, e = d.port)), 1 === c && b.computeSpot(!0, e).jc() && (f = e.ga(Ac, I.alloc()), d = b.getLinkPointFromPoint(d, e, f, a, !0, I.alloc()), b.K(0, d.x, d.y), I.free(f),
            I.free(d)), d = b.toNode, e = b.toPort, null !== d && (f = d.findVisibleNode(), null !== f && f !== d && (d = f, e = d.port)), c === b.pointsCount - 2 && b.computeSpot(!1, e).jc() && (c = e.ga(Ac, I.alloc()), a = b.getLinkPointFromPoint(d, e, c, a, !1, I.alloc()), b.K(b.pointsCount - 1, a.x, a.y), I.free(c), I.free(a));
        b.rf()
    };
    cg.prototype.computeReshape = function (a) {
        var b = this.adornedLink,
            c = this.handle.segmentIndex;
        switch (this.Av(this.handle)) {
            case tg:
                return a;
            case rg:
                return new I(b.i(c).x, a.y);
            case sg:
                return new I(a.x, b.i(c).y);
            default:
            case pg:
                return b.i(c)
        }
    };
    ma.Object.defineProperties(cg.prototype, {
        handleArchetype: {
            get: function () {
                return this.u
            },
            set: function (a) {
                this.u = a
            }
        },
        midHandleArchetype: {
            get: function () {
                return this.I
            },
            set: function (a) {
                this.I = a
            }
        },
        handle: {
            get: function () {
                return this.l
            },
            set: function (a) {
                if (null !== a && !(a.part instanceof Je)) throw Error("new handle is not in an Adornment: " + a);
                this.l = a
            }
        },
        adornedLink: {
            get: function () {
                return this.Xt
            }
        },
        resegmentingDistance: {
            get: function () {
                return this.Y
            },
            set: function (a) {
                this.Y = a
            }
        },
        originalPoint: {
            get: function () {
                return this.hx
            }
        },
        originalPoints: {
            get: function () {
                return this.ps
            }
        }
    });
    cg.prototype.setReshapingBehavior = cg.prototype.Im;
    cg.prototype.getReshapingBehavior = cg.prototype.Av;
    var pg = new D(cg, "None", 0),
        sg = new D(cg, "Horizontal", 1),
        rg = new D(cg, "Vertical", 2),
        tg = new D(cg, "All", 3);
    cg.className = "LinkReshapingTool";
    cg.None = pg;
    cg.Horizontal = sg;
    cg.Vertical = rg;
    cg.All = tg;
    La("linkReshapingTool", function () {
        return this.findTool("LinkReshaping")
    }, function (a) {
        this.Va("LinkReshaping", a, this.mouseDownTools)
    });

    function vg() {
        ye.call(this);
        this.name = "Resizing";
        this.eg = (new M(1, 1)).freeze();
        this.dg = (new M(9999, 9999)).freeze();
        this.Ng = (new M(NaN, NaN)).freeze();
        this.I = !1;
        this.ae = null;
        var a = new Lf;
        a.alignmentFocus = Ac;
        a.figure = "Rectangle";
        a.desiredSize = Mb;
        a.fill = "lightblue";
        a.stroke = "dodgerblue";
        a.strokeWidth = 1;
        a.cursor = "pointer";
        this.u = a;
        this.l = null;
        this.os = new I;
        this.ex = new M;
        this.Xo = new I;
        this.nu = new M(0, 0);
        this.mu = new M(Infinity, Infinity);
        this.lu = new M(1, 1);
        this.$w = !0
    }
    la(vg, ye);
    vg.prototype.updateAdornments = function (a) {
        if (!(null === a || a instanceof S)) {
            if (a.isSelected && !this.diagram.isReadOnly) {
                var b = a.resizeObject,
                    c = a.fk(this.name);
                if (null !== b && a.canResize() && a.actualBounds.v() && a.isVisible() && b.actualBounds.v() && b.zf()) {
                    if (null === c || c.adornedObject !== b) c = this.makeAdornment(b);
                    if (null !== c) {
                        b = b.Xi();
                        wg(a) && this.updateResizeHandles(c, b);
                        a.Ch(this.name, c);
                        return
                    }
                }
            }
            a.Af(this.name)
        }
    };
    vg.prototype.makeAdornment = function (a) {
        var b = a.part.resizeAdornmentTemplate;
        if (null === b) {
            b = new Je;
            b.type = X.Spot;
            b.locationSpot = Ac;
            var c = new xg;
            c.isPanelMain = !0;
            b.add(c);
            b.add(this.makeHandle(a, vc));
            b.add(this.makeHandle(a, yc));
            b.add(this.makeHandle(a, Gc));
            b.add(this.makeHandle(a, Cc));
            b.add(this.makeHandle(a, dd));
            b.add(this.makeHandle(a, fd));
            b.add(this.makeHandle(a, gd));
            b.add(this.makeHandle(a, ed))
        } else if (yg(b), b = b.copy(), null === b) return null;
        b.adornedObject = a;
        return b
    };
    vg.prototype.makeHandle = function (a, b) {
        a = this.handleArchetype;
        if (null === a) return null;
        a = a.copy();
        a.alignment = b;
        return a
    };
    vg.prototype.updateResizeHandles = function (a, b) {
        if (null !== a)
            if (!a.alignment.Mb() && ("pointer" === a.cursor || 0 < a.cursor.indexOf("resize"))) a: {
                var c = a.alignment;c.jc() && (c = Ac);
                if (0 >= c.x) b = 0 >= c.y ? b + 225 : 1 <= c.y ? b + 135 : b + 180;
                else if (1 <= c.x) 0 >= c.y ? b += 315 : 1 <= c.y && (b += 45);
                else if (0 >= c.y) b += 270;
                else if (1 <= c.y) b += 90;
                else break a;0 > b ? b += 360 : 360 <= b && (b -= 360);a.cursor = 22.5 > b ? "e-resize" : 67.5 > b ? "se-resize" : 112.5 > b ? "s-resize" : 157.5 > b ? "sw-resize" : 202.5 > b ? "w-resize" : 247.5 > b ? "nw-resize" : 292.5 > b ? "n-resize" : 337.5 > b ? "ne-resize" : "e-resize"
            }
        else if (a instanceof X)
            for (a = a.elements; a.next();) this.updateResizeHandles(a.value, b)
    };
    vg.prototype.canStart = function () {
        if (!this.isEnabled) return !1;
        var a = this.diagram;
        return !a.isReadOnly && a.allowResize && a.lastInput.left ? null !== this.findToolHandleAt(a.firstInput.documentPoint, this.name) : !1
    };
    vg.prototype.doActivate = function () {
        var a = this.diagram;
        null === this.handle && (this.handle = this.findToolHandleAt(a.firstInput.documentPoint, this.name));
        null !== this.handle && (this.adornedObject = this.handle.part.adornedObject, null !== this.adornedObject && (this.os.set(this.adornedObject.ga(this.handle.alignment.Pv())), this.Xo.set(this.adornedObject.part.location), this.ex.set(this.adornedObject.desiredSize), this.lu = this.computeCellSize(), this.nu = this.computeMinSize(), this.mu = this.computeMaxSize(), a.isMouseCaptured = !0, this.$w = a.animationManager.isEnabled, a.animationManager.isEnabled = !1, this.ua(this.name), this.isActive = !0))
    };
    vg.prototype.doDeactivate = function () {
        var a = this.diagram;
        this.Hg();
        this.ae = this.handle = null;
        this.isActive = a.isMouseCaptured = !1;
        a.animationManager.isEnabled = this.$w
    };
    vg.prototype.doCancel = function () {
        null !== this.adornedObject && (this.adornedObject.desiredSize = this.originalDesiredSize, this.adornedObject.part.location = this.originalLocation);
        this.stopTool()
    };
    vg.prototype.doMouseMove = function () {
        var a = this.diagram;
        if (this.isActive) {
            var b = this.nu,
                c = this.mu,
                d = this.lu,
                e = this.adornedObject.ot(a.lastInput.documentPoint, I.alloc()),
                f = this.computeReshape();
            b = this.computeResize(e, this.handle.alignment, b, c, d, f);
            this.resize(b);
            a.Wc();
            I.free(e)
        }
    };
    vg.prototype.doMouseUp = function () {
        var a = this.diagram;
        if (this.isActive) {
            var b = this.nu,
                c = this.mu,
                d = this.lu,
                e = this.adornedObject.ot(a.lastInput.documentPoint, I.alloc()),
                f = this.computeReshape();
            b = this.computeResize(e, this.handle.alignment, b, c, d, f);
            this.resize(b);
            I.free(e);
            a.Na();
            this.transactionResult = this.name;
            a.R("PartResized", this.adornedObject, this.originalDesiredSize)
        }
        this.stopTool()
    };
    vg.prototype.resize = function (a) {
        var b = this.diagram,
            c = this.adornedObject;
        if (null !== c) {
            c.desiredSize = a.size;
            a = c.part;
            a.yb();
            c = c.ga(this.handle.alignment.Pv());
            if (a instanceof T) {
                var d = new E;
                d.add(a);
                b.moveParts(d, this.oppositePoint.copy().Zd(c), !0)
            } else a.location = a.location.copy().Zd(c).add(this.oppositePoint);
            b.Wc()
        }
    };
    vg.prototype.computeResize = function (a, b, c, d, e, f) {
        b.jc() && (b = Ac);
        var g = this.adornedObject.naturalBounds,
            h = g.x,
            k = g.y,
            l = g.x + g.width,
            m = g.y + g.height,
            n = 1;
        if (!f) {
            n = g.width;
            var p = g.height;
            0 >= n && (n = 1);
            0 >= p && (p = 1);
            n = p / n
        }
        p = I.alloc();
        J.mq(a.x, a.y, h, k, e.width, e.height, p);
        a = g.copy();
        0 >= b.x ? 0 >= b.y ? (a.x = Math.max(p.x, l - d.width), a.x = Math.min(a.x, l - c.width), a.width = Math.max(l - a.x, c.width), a.y = Math.max(p.y, m - d.height), a.y = Math.min(a.y, m - c.height), a.height = Math.max(m - a.y, c.height), f || (1 <= a.height / a.width ? (a.height = Math.max(Math.min(n *
            a.width, d.height), c.height), a.width = a.height / n) : (a.width = Math.max(Math.min(a.height / n, d.width), c.width), a.height = n * a.width), a.x = l - a.width, a.y = m - a.height)) : 1 <= b.y ? (a.x = Math.max(p.x, l - d.width), a.x = Math.min(a.x, l - c.width), a.width = Math.max(l - a.x, c.width), a.height = Math.max(Math.min(p.y - k, d.height), c.height), f || (1 <= a.height / a.width ? (a.height = Math.max(Math.min(n * a.width, d.height), c.height), a.width = a.height / n) : (a.width = Math.max(Math.min(a.height / n, d.width), c.width), a.height = n * a.width), a.x = l - a.width)) : (a.x =
            Math.max(p.x, l - d.width), a.x = Math.min(a.x, l - c.width), a.width = l - a.x, f || (a.height = Math.max(Math.min(n * a.width, d.height), c.height), a.width = a.height / n, a.y = k + .5 * (m - k - a.height))) : 1 <= b.x ? 0 >= b.y ? (a.width = Math.max(Math.min(p.x - h, d.width), c.width), a.y = Math.max(p.y, m - d.height), a.y = Math.min(a.y, m - c.height), a.height = Math.max(m - a.y, c.height), f || (1 <= a.height / a.width ? (a.height = Math.max(Math.min(n * a.width, d.height), c.height), a.width = a.height / n) : (a.width = Math.max(Math.min(a.height / n, d.width), c.width), a.height = n * a.width),
            a.y = m - a.height)) : 1 <= b.y ? (a.width = Math.max(Math.min(p.x - h, d.width), c.width), a.height = Math.max(Math.min(p.y - k, d.height), c.height), f || (1 <= a.height / a.width ? (a.height = Math.max(Math.min(n * a.width, d.height), c.height), a.width = a.height / n) : (a.width = Math.max(Math.min(a.height / n, d.width), c.width), a.height = n * a.width))) : (a.width = Math.max(Math.min(p.x - h, d.width), c.width), f || (a.height = Math.max(Math.min(n * a.width, d.height), c.height), a.width = a.height / n, a.y = k + .5 * (m - k - a.height))) : 0 >= b.y ? (a.y = Math.max(p.y, m - d.height),
            a.y = Math.min(a.y, m - c.height), a.height = m - a.y, f || (a.width = Math.max(Math.min(a.height / n, d.width), c.width), a.height = n * a.width, a.x = h + .5 * (l - h - a.width))) : 1 <= b.y && (a.height = Math.max(Math.min(p.y - k, d.height), c.height), f || (a.width = Math.max(Math.min(a.height / n, d.width), c.width), a.height = n * a.width, a.x = h + .5 * (l - h - a.width)));
        I.free(p);
        return a
    };
    vg.prototype.computeReshape = function () {
        var a = zg;
        this.adornedObject instanceof Lf && (a = Ag(this.adornedObject));
        return !(a === Bg || this.diagram.lastInput.shift)
    };
    vg.prototype.computeMinSize = function () {
        var a = this.adornedObject.minSize.copy(),
            b = this.minSize;
        !isNaN(b.width) && b.width > a.width && (a.width = b.width);
        !isNaN(b.height) && b.height > a.height && (a.height = b.height);
        return a
    };
    vg.prototype.computeMaxSize = function () {
        var a = this.adornedObject.maxSize.copy(),
            b = this.maxSize;
        !isNaN(b.width) && b.width < a.width && (a.width = b.width);
        !isNaN(b.height) && b.height < a.height && (a.height = b.height);
        return a
    };
    vg.prototype.computeCellSize = function () {
        var a = new M(NaN, NaN),
            b = this.adornedObject.part;
        null !== b && (b = b.resizeCellSize, !isNaN(b.width) && 0 < b.width && (a.width = b.width), !isNaN(b.height) && 0 < b.height && (a.height = b.height));
        b = this.cellSize;
        isNaN(a.width) && !isNaN(b.width) && 0 < b.width && (a.width = b.width);
        isNaN(a.height) && !isNaN(b.height) && 0 < b.height && (a.height = b.height);
        b = this.diagram;
        (isNaN(a.width) || isNaN(a.height)) && b && (b = b.grid, null !== b && b.visible && this.isGridSnapEnabled && (b = b.gridCellSize, isNaN(a.width) &&
            !isNaN(b.width) && 0 < b.width && (a.width = b.width), isNaN(a.height) && !isNaN(b.height) && 0 < b.height && (a.height = b.height)));
        if (isNaN(a.width) || 0 === a.width || Infinity === a.width) a.width = 1;
        if (isNaN(a.height) || 0 === a.height || Infinity === a.height) a.height = 1;
        return a
    };
    ma.Object.defineProperties(vg.prototype, {
        handleArchetype: {
            get: function () {
                return this.u
            },
            set: function (a) {
                this.u = a
            }
        },
        handle: {
            get: function () {
                return this.l
            },
            set: function (a) {
                if (null !== a && !(a.part instanceof Je)) throw Error("new handle is not in an Adornment: " + a);
                this.l = a
            }
        },
        adornedObject: {
            get: function () {
                return this.ae
            },
            set: function (a) {
                if (null !== a && a.part instanceof Je) throw Error("new handle must not be in an Adornment: " +
                    a);
                this.ae = a
            }
        },
        minSize: {
            get: function () {
                return this.eg
            },
            set: function (a) {
                if (!this.eg.w(a)) {
                    var b = a.width;
                    isNaN(b) && (b = 0);
                    a = a.height;
                    isNaN(a) && (a = 0);
                    this.eg.h(b, a)
                }
            }
        },
        maxSize: {
            get: function () {
                return this.dg
            },
            set: function (a) {
                if (!this.dg.w(a)) {
                    var b = a.width;
                    isNaN(b) && (b = Infinity);
                    a = a.height;
                    isNaN(a) && (a = Infinity);
                    this.dg.h(b, a)
                }
            }
        },
        cellSize: {
            get: function () {
                return this.Ng
            },
            set: function (a) {
                this.Ng.w(a) || this.Ng.assign(a)
            }
        },
        isGridSnapEnabled: {
            get: function () {
                return this.I
            },
            set: function (a) {
                this.I = a
            }
        },
        oppositePoint: {
            get: function () {
                return this.os
            },
            set: function (a) {
                this.os.w(a) || this.os.assign(a)
            }
        },
        originalDesiredSize: {
            get: function () {
                return this.ex
            }
        },
        originalLocation: {
            get: function () {
                return this.Xo
            }
        }
    });
    vg.className = "ResizingTool";
    La("resizingTool", function () {
        return this.findTool("Resizing")
    }, function (a) {
        this.Va("Resizing", a, this.mouseDownTools)
    });

    function Cg() {
        ye.call(this);
        this.name = "Rotating";
        this.Ia = 45;
        this.Ha = 2;
        this.Xo = new I;
        this.ae = null;
        var a = new Lf;
        a.figure = "Ellipse";
        a.desiredSize = Nb;
        a.fill = "lightblue";
        a.stroke = "dodgerblue";
        a.strokeWidth = 1;
        a.cursor = "pointer";
        this.u = a;
        this.l = null;
        this.bx = 0;
        this.Lu = new I(NaN, NaN);
        this.I = 0;
        this.Y = 50
    }
    la(Cg, ye);
    Cg.prototype.updateAdornments = function (a) {
        if (null !== a) {
            if (a.Kh()) {
                var b = a.rotateObject;
                if (b === a || b === a.path || b.isPanelMain) return
            }
            if (a.isSelected && !this.diagram.isReadOnly && (b = a.rotateObject, null !== b && a.canRotate() && a.actualBounds.v() && a.isVisible() && b.actualBounds.v() && b.zf())) {
                var c = a.fk(this.name);
                if (null === c || c.adornedObject !== b) c = this.makeAdornment(b);
                if (null !== c) {
                    c.angle = b.Xi();
                    null === c.placeholder && (c.location = this.computeAdornmentLocation(b));
                    a.Ch(this.name, c);
                    return
                }
            }
            a.Af(this.name)
        }
    };
    Cg.prototype.makeAdornment = function (a) {
        var b = a.part.rotateAdornmentTemplate;
        if (null === b) {
            b = new Je;
            b.type = X.Position;
            b.locationSpot = Ac;
            var c = this.handleArchetype;
            null !== c && b.add(c.copy())
        } else if (yg(b), b = b.copy(), null === b) return null;
        b.adornedObject = a;
        return b
    };
    Cg.prototype.canStart = function () {
        if (!this.isEnabled) return !1;
        var a = this.diagram;
        return !a.isReadOnly && a.allowRotate && a.lastInput.left ? null !== this.findToolHandleAt(a.firstInput.documentPoint, this.name) : !1
    };
    Cg.prototype.doActivate = function () {
        var a = this.diagram;
        if (null === this.adornedObject) {
            null === this.handle && (this.handle = this.findToolHandleAt(a.firstInput.documentPoint, this.name));
            if (null === this.handle) return;
            this.adornedObject = this.handle.part.adornedObject
        }
        null !== this.adornedObject && (this.bx = this.adornedObject.angle, this.Lu = this.computeRotationPoint(this.adornedObject), this.Xo = this.adornedObject.part.location.copy(), a.isMouseCaptured = !0, a.delaysLayout = !0, this.ua(this.name), this.isActive = !0)
    };
    Cg.prototype.computeRotationPoint = function (a) {
        var b = a.part,
            c = b.locationObject;
        return b.rotationSpot.eb() ? a.ga(b.rotationSpot) : a === b || a === c ? c.ga(b.locationSpot) : a.ga(Ac)
    };
    Cg.prototype.computeAdornmentLocation = function (a) {
        var b = this.rotationPoint;
        b.v() || (b = this.computeRotationPoint(a));
        b = a.ot(b);
        var c = this.handleAngle;
        0 > c ? c += 360 : 360 <= c && (c -= 360);
        c = Math.round(45 * Math.round(c / 45));
        var d = this.handleDistance;
        0 === c ? b.x = a.naturalBounds.width + d : 45 === c ? (b.x = a.naturalBounds.width + d, b.y = a.naturalBounds.height + d) : 90 === c ? b.y = a.naturalBounds.height + d : 135 === c ? (b.x = -d, b.y = a.naturalBounds.height + d) : 180 === c ? b.x = -d : 225 === c ? (b.x = -d, b.y = -d) : 270 === c ? b.y = -d : 315 === c && (b.x = a.naturalBounds.width +
            d, b.y = -d);
        return a.ga(b)
    };
    Cg.prototype.doDeactivate = function () {
        var a = this.diagram;
        this.Hg();
        this.ae = this.handle = null;
        this.Lu = new I(NaN, NaN);
        this.isActive = a.isMouseCaptured = !1
    };
    Cg.prototype.doCancel = function () {
        this.diagram.delaysLayout = !1;
        this.rotate(this.originalAngle);
        this.stopTool()
    };
    Cg.prototype.doMouseMove = function () {
        var a = this.diagram;
        this.isActive && (a = this.computeRotate(a.lastInput.documentPoint), this.rotate(a))
    };
    Cg.prototype.doMouseUp = function () {
        var a = this.diagram;
        if (this.isActive) {
            a.delaysLayout = !1;
            var b = this.computeRotate(a.lastInput.documentPoint);
            this.rotate(b);
            a.Na();
            this.transactionResult = this.name;
            a.R("PartRotated", this.adornedObject, this.originalAngle)
        }
        this.stopTool()
    };
    Cg.prototype.rotate = function (a) {
        var b = this.adornedObject;
        if (null !== b) {
            b.angle = a;
            b = b.part;
            b.yb();
            var c = b.locationObject,
                d = b.rotateObject;
            if (c === d || c.Dg(d)) c = this.Xo.copy(), b.location = c.Zd(this.rotationPoint).rotate(a - this.originalAngle).add(this.rotationPoint);
            this.diagram.Wc()
        }
    };
    Cg.prototype.computeRotate = function (a) {
        a = this.rotationPoint.Ta(a) - this.handleAngle;
        var b = this.adornedObject.panel;
        null !== b && (a -= b.Xi());
        360 <= a ? a -= 360 : 0 > a && (a += 360);
        b = Math.min(Math.abs(this.snapAngleMultiple), 180);
        var c = Math.min(Math.abs(this.snapAngleEpsilon), b / 2);
        !this.diagram.lastInput.shift && 0 < b && 0 < c && (a % b < c ? a = Math.floor(a / b) * b : a % b > b - c && (a = (Math.floor(a / b) + 1) * b));
        360 <= a ? a -= 360 : 0 > a && (a += 360);
        return a
    };
    ma.Object.defineProperties(Cg.prototype, {
        handleArchetype: {
            get: function () {
                return this.u
            },
            set: function (a) {
                this.u = a
            }
        },
        handle: {
            get: function () {
                return this.l
            },
            set: function (a) {
                if (null !== a && !(a.part instanceof Je)) throw Error("new handle is not in an Adornment: " + a);
                this.l = a
            }
        },
        adornedObject: {
            get: function () {
                return this.ae
            },
            set: function (a) {
                if (null !== a && a.part instanceof Je) throw Error("new handle must not be in an Adornment: " +
                    a);
                this.ae = a
            }
        },
        snapAngleMultiple: {
            get: function () {
                return this.Ia
            },
            set: function (a) {
                this.Ia = a
            }
        },
        snapAngleEpsilon: {
            get: function () {
                return this.Ha
            },
            set: function (a) {
                this.Ha = a
            }
        },
        originalAngle: {
            get: function () {
                return this.bx
            }
        },
        rotationPoint: {
            get: function () {
                return this.Lu
            }
        },
        handleAngle: {
            get: function () {
                return this.I
            },
            set: function (a) {
                this.I = a
            }
        },
        handleDistance: {
            get: function () {
                return this.Y
            },
            set: function (a) {
                this.Y = a
            }
        }
    });
    Cg.className = "RotatingTool";
    La("rotatingTool", function () {
        return this.findTool("Rotating")
    }, function (a) {
        this.Va("Rotating", a, this.mouseDownTools)
    });

    function Dg() {
        ye.call(this);
        this.name = "ClickSelecting"
    }
    la(Dg, ye);
    Dg.prototype.canStart = function () {
        return !this.isEnabled || this.isBeyondDragSize() ? !1 : !0
    };
    Dg.prototype.doMouseUp = function () {
        this.isActive && (this.standardMouseSelect(), !this.standardMouseClick() && this.diagram.lastInput.isTouchEvent && this.diagram.toolManager.doToolTip());
        this.stopTool()
    };
    Dg.className = "ClickSelectingTool";

    function Eg() {
        ye.call(this);
        this.name = "Action";
        this.Bk = null
    }
    la(Eg, ye);
    Eg.prototype.canStart = function () {
        if (!this.isEnabled) return !1;
        var a = this.diagram,
            b = a.lastInput,
            c = a.Ub(b.documentPoint, function (a) {
                for (; null !== a.panel && !a.isActionable;) a = a.panel;
                return a
            });
        if (null !== c) {
            if (!c.isActionable) return !1;
            this.Bk = c;
            a.mj = a.Ub(b.documentPoint, null, null);
            return !0
        }
        return !1
    };
    Eg.prototype.doMouseDown = function () {
        if (this.isActive) {
            var a = this.diagram.lastInput,
                b = this.Bk;
            null !== b && (a.targetObject = b, null !== b.actionDown && b.actionDown(a, b))
        } else this.canStart() && this.doActivate()
    };
    Eg.prototype.doMouseMove = function () {
        if (this.isActive) {
            var a = this.diagram.lastInput,
                b = this.Bk;
            null !== b && (a.targetObject = b, null !== b.actionMove && b.actionMove(a, b))
        }
    };
    Eg.prototype.doMouseUp = function () {
        if (this.isActive) {
            var a = this.diagram.lastInput,
                b = this.Bk;
            if (null === b) return;
            a.targetObject = b;
            null !== b.actionUp && b.actionUp(a, b);
            this.standardMouseClick(function (a) {
                for (; null !== a.panel && (!a.isActionable || a !== b);) a = a.panel;
                return a
            }, function (a) {
                return a === b
            })
        }
        this.stopTool()
    };
    Eg.prototype.doCancel = function () {
        var a = this.diagram.lastInput,
            b = this.Bk;
        null !== b && (a.targetObject = b, null !== b.actionCancel && b.actionCancel(a, b), this.stopTool())
    };
    Eg.prototype.doStop = function () {
        this.Bk = null
    };
    Eg.className = "ActionTool";

    function Fg() {
        ye.call(this);
        this.name = "ClickCreating";
        this.ij = null;
        this.u = !0;
        this.l = !1;
        this.Uw = new I(0, 0)
    }
    la(Fg, ye);
    Fg.prototype.canStart = function () {
        if (!this.isEnabled || null === this.archetypeNodeData) return !1;
        var a = this.diagram;
        if (a.isReadOnly || a.isModelReadOnly || !a.allowInsert || !a.lastInput.left || this.isBeyondDragSize()) return !1;
        if (this.isDoubleClick) {
            if (1 === a.lastInput.clickCount && (this.Uw = a.lastInput.viewPoint.copy()), 2 !== a.lastInput.clickCount || this.isBeyondDragSize(this.Uw)) return !1
        } else if (1 !== a.lastInput.clickCount) return !1;
        return a.currentTool !== this && null !== a.jm(a.lastInput.documentPoint, !0) ? !1 : !0
    };
    Fg.prototype.doMouseUp = function () {
        var a = this.diagram;
        this.isActive && this.insertPart(a.lastInput.documentPoint);
        this.stopTool()
    };
    Fg.prototype.insertPart = function (a) {
        var b = this.diagram,
            c = this.archetypeNodeData;
        if (null === c) return null;
        var d = null;
        try {
            b.R("ChangingSelection", b.selection);
            this.ua(this.name);
            if (c instanceof U) c.Wb() && (yg(c), d = c.copy(), null !== d && b.add(d));
            else if (null !== c) {
                var e = b.model.copyNodeData(c);
                za(e) && (b.model.pf(e), d = b.wc(e))
            }
            if (null !== d) {
                var f = I.allocAt(a.x, a.y);
                this.isGridSnapEnabled && Gg(this.diagram, d, a, f);
                d.location = f;
                b.allowSelect && (b.clearSelection(!0), d.isSelected = !0);
                I.free(f)
            }
            b.Na();
            this.transactionResult =
                this.name;
            b.R("PartCreated", d)
        } finally {
            this.Hg(), b.R("ChangedSelection", b.selection)
        }
        return d
    };
    ma.Object.defineProperties(Fg.prototype, {
        archetypeNodeData: {
            get: function () {
                return this.ij
            },
            set: function (a) {
                this.ij = a
            }
        },
        isDoubleClick: {
            get: function () {
                return this.u
            },
            set: function (a) {
                this.u = a
            }
        },
        isGridSnapEnabled: {
            get: function () {
                return this.l
            },
            set: function (a) {
                this.l = a
            }
        }
    });
    Fg.className = "ClickCreatingTool";

    function Hg() {
        ye.call(this);
        this.name = "DragSelecting";
        this.Vk = 175;
        this.u = !1;
        var a = new U;
        a.layerName = "Tool";
        a.selectable = !1;
        var b = new Lf;
        b.name = "SHAPE";
        b.figure = "Rectangle";
        b.fill = null;
        b.stroke = "magenta";
        a.add(b);
        this.l = a
    }
    la(Hg, ye);
    Hg.prototype.canStart = function () {
        if (!this.isEnabled) return !1;
        var a = this.diagram;
        if (!a.allowSelect) return !1;
        var b = a.lastInput;
        return !b.left || a.currentTool !== this && (!this.isBeyondDragSize() || b.timestamp - a.firstInput.timestamp < this.delay || null !== a.jm(b.documentPoint, !0)) ? !1 : !0
    };
    Hg.prototype.doActivate = function () {
        var a = this.diagram;
        this.isActive = !0;
        a.isMouseCaptured = !0;
        a.skipsUndoManager = !0;
        a.add(this.box);
        this.doMouseMove()
    };
    Hg.prototype.doDeactivate = function () {
        var a = this.diagram;
        a.Cf();
        a.remove(this.box);
        a.skipsUndoManager = !1;
        this.isActive = a.isMouseCaptured = !1
    };
    Hg.prototype.doMouseMove = function () {
        var a = this.diagram;
        if (this.isActive && null !== this.box) {
            var b = this.computeBoxBounds(),
                c = this.box.Xa("SHAPE");
            null === c && (c = this.box.zb());
            var d = M.alloc().h(b.width, b.height);
            b = I.allocAt(b.x, b.y);
            c.desiredSize = d;
            this.box.position = b;
            M.free(d);
            I.free(b);
            (a.allowHorizontalScroll || a.allowVerticalScroll) && a.gt(a.lastInput.viewPoint)
        }
    };
    Hg.prototype.doMouseUp = function () {
        if (this.isActive) {
            var a = this.diagram;
            a.remove(this.box);
            try {
                a.currentCursor = "wait", a.R("ChangingSelection", a.selection), this.selectInRect(this.computeBoxBounds()), a.R("ChangedSelection", a.selection)
            } finally {
                a.currentCursor = ""
            }
        }
        this.stopTool()
    };
    Hg.prototype.computeBoxBounds = function () {
        var a = this.diagram;
        return new N(a.firstInput.documentPoint, a.lastInput.documentPoint)
    };
    Hg.prototype.selectInRect = function (a) {
        var b = this.diagram,
            c = b.lastInput;
        a = b.Mx(a, this.isPartialInclusion);
        if (Wa ? c.meta : c.control)
            if (c.shift)
                for (a = a.iterator; a.next();) b = a.value, b.isSelected && (b.isSelected = !1);
            else
                for (a = a.iterator; a.next();) b = a.value, b.isSelected = !b.isSelected;
        else if (c.shift)
            for (a = a.iterator; a.next();) b = a.value, b.isSelected || (b.isSelected = !0);
        else {
            c = new E;
            for (b = b.selection.iterator; b.next();) {
                var d = b.value;
                a.contains(d) || c.add(d)
            }
            for (b = c.iterator; b.next();) b.value.isSelected = !1;
            for (a =
                a.iterator; a.next();) b = a.value, b.isSelected || (b.isSelected = !0)
        }
    };
    ma.Object.defineProperties(Hg.prototype, {
        delay: {
            get: function () {
                return this.Vk
            },
            set: function (a) {
                this.Vk = a
            }
        },
        isPartialInclusion: {
            get: function () {
                return this.u
            },
            set: function (a) {
                this.u = a
            }
        },
        box: {
            get: function () {
                return this.l
            },
            set: function (a) {
                this.l = a
            }
        }
    });
    Hg.className = "DragSelectingTool";

    function Ig() {
        ye.call(this);
        this.name = "Panning";
        this.Iu = new I;
        this.Dy = new I;
        this.Mg = !1;
        var a = this;
        this.kx = function () {
            var b = a.diagram;
            null !== b && b.removeEventListener(x.document, "scroll", a.kx, !1);
            a.stopTool()
        }
    }
    la(Ig, ye);
    Ig.prototype.canStart = function () {
        if (!this.isEnabled) return !1;
        var a = this.diagram;
        return !a.allowHorizontalScroll && !a.allowVerticalScroll || !a.lastInput.left || a.currentTool !== this && !this.isBeyondDragSize() ? !1 : !0
    };
    Ig.prototype.doActivate = function () {
        var a = this.diagram;
        this.Mg ? (a.lastInput.bubbles = !0, a.addEventListener(x.document, "scroll", this.kx, !1)) : (a.currentCursor = "move", a.isMouseCaptured = !0, this.Iu.assign(a.position));
        this.isActive = !0
    };
    Ig.prototype.doDeactivate = function () {
        var a = this.diagram;
        a.currentCursor = "";
        this.isActive = a.isMouseCaptured = !1
    };
    Ig.prototype.doCancel = function () {
        var a = this.diagram;
        a.position = this.Iu;
        a.isMouseCaptured = !1;
        this.stopTool()
    };
    Ig.prototype.doMouseMove = function () {
        this.move()
    };
    Ig.prototype.doMouseUp = function () {
        this.move();
        this.stopTool()
    };
    Ig.prototype.move = function () {
        var a = this.diagram;
        if (this.isActive && a)
            if (this.Mg) a.lastInput.bubbles = !0;
            else {
                var b = a.position,
                    c = a.firstInput.documentPoint,
                    d = a.lastInput.documentPoint,
                    e = b.x + c.x - d.x;
                c = b.y + c.y - d.y;
                a.allowHorizontalScroll || (e = b.x);
                a.allowVerticalScroll || (c = b.y);
                a.position = this.Dy.h(e, c)
            }
    };
    ma.Object.defineProperties(Ig.prototype, {
        bubbles: {
            get: function () {
                return this.Mg
            },
            set: function (a) {
                this.Mg = a
            }
        },
        originalPosition: {
            get: function () {
                return this.Iu
            }
        }
    });
    Ig.className = "PanningTool";
    La("clickCreatingTool", function () {
        return this.findTool("ClickCreating")
    }, function (a) {
        this.Va("ClickCreating", a, this.mouseUpTools)
    });
    La("clickSelectingTool", function () {
        return this.findTool("ClickSelecting")
    }, function (a) {
        this.Va("ClickSelecting", a, this.mouseUpTools)
    });
    La("panningTool", function () {
        return this.findTool("Panning")
    }, function (a) {
        this.Va("Panning", a, this.mouseMoveTools)
    });
    La("dragSelectingTool", function () {
        return this.findTool("DragSelecting")
    }, function (a) {
        this.Va("DragSelecting", a, this.mouseMoveTools)
    });
    La("actionTool", function () {
        return this.findTool("Action")
    }, function (a) {
        this.Va("Action", a, this.mouseDownTools)
    });

    function Oe() {
        this.Y = this.I = this.l = this.u = null
    }
    ma.Object.defineProperties(Oe.prototype, {
        mainElement: {
            get: function () {
                return this.I
            },
            set: function (a) {
                this.I = a
            }
        },
        show: {
            get: function () {
                return this.u
            },
            set: function (a) {
                this.u !== a && (this.u = a)
            }
        },
        hide: {
            get: function () {
                return this.l
            },
            set: function (a) {
                this.l !== a && (this.l = a)
            }
        },
        valueFunction: {
            get: function () {
                return this.Y
            },
            set: function (a) {
                this.Y = a
            }
        }
    });
    Oe.className = "HTMLInfo";

    function Jg(a, b, c) {
        this.text = a;
        this.Ax = b;
        this.visible = c
    }
    Jg.className = "ContextMenuButtonInfo";

    function Kg() {
        ye.call(this);
        this.name = "ContextMenu";
        this.u = this.cu = this.l = null;
        this.Zw = new I;
        this.du = null;
        this.xu = !1;
        var a = this;
        this.Wu = function () {
            a.stopTool()
        }
    }
    la(Kg, ye);

    function Lg(a) {
        var b = new Oe;
        b.show = function (a, b, c) {
            c.showDefaultContextMenu()
        };
        b.hide = function (a, b) {
            b.hideDefaultContextMenu()
        };
        Mg = b;
        a.Wu = function () {
            a.stopTool()
        };
        b = ta("div");
        var c = ta("div");
        b.style.cssText = "top: 0px;z-index:10002;position: fixed;display: none;text-align: center;left: 25%;width: 50%;background-color: #F5F5F5;padding: 16px;border: 16px solid #444;border-radius: 10px;margin-top: 10px";
        c.style.cssText = "z-index:10001;position: fixed;display: none;top: 0;left: 0;width: 100%;height: 100%;background-color: black;opacity: 0.8;";
        var d = ta("style");
        x.document.getElementsByTagName("head")[0].appendChild(d);
        d.sheet.insertRule(".goCXul { list-style: none; }", 0);
        d.sheet.insertRule(".goCXli {font:700 1.5em Helvetica, Arial, sans-serif;position: relative;min-width: 60px; }", 0);
        d.sheet.insertRule(".goCXa {color: #444;display: inline-block;padding: 4px;text-decoration: none;margin: 2px;border: 1px solid gray;border-radius: 10px; }", 0);
        d = a.diagram;
        null !== d && (d.addEventListener(b, "contextmenu", Ng, !1), d.addEventListener(b, "selectstart",
            Ng, !1), d.addEventListener(c, "contextmenu", Ng, !1));
        b.className = "goCXforeground";
        c.className = "goCXbackground";
        x.document.body && (x.document.body.appendChild(b), x.document.body.appendChild(c));
        Og = b;
        Pg = c;
        Qg = !0
    }

    function Ng(a) {
        a.preventDefault();
        return !1
    }
    Kg.prototype.canStart = function () {
        if (!this.isEnabled) return !1;
        var a = this.diagram;
        return this.isBeyondDragSize() || !a.lastInput.right ? !1 : a.lastInput.isTouchEvent && null !== this.defaultTouchContextMenu || null !== this.findObjectWithContextMenu() ? !0 : !1
    };
    Kg.prototype.doStart = function () {
        this.Zw.set(this.diagram.firstInput.documentPoint)
    };
    Kg.prototype.doStop = function () {
        this.hideContextMenu();
        this.currentObject = null
    };
    Kg.prototype.findObjectWithContextMenu = function (a) {
        void 0 === a && (a = null);
        var b = this.diagram,
            c = b.lastInput,
            d = null;
        a instanceof R || (a instanceof Y ? d = a : d = b.Ub(c.documentPoint, null, function (a) {
            return !a.layer.isTemporary
        }));
        if (null !== d) {
            for (a = d; null !== a;) {
                if (null !== a.contextMenu) return a;
                a = a.panel
            }
            if (b.lastInput.isTouchEvent && this.defaultTouchContextMenu) return d.part
        } else if (null !== b.contextMenu) return b;
        return null
    };
    Kg.prototype.doActivate = function () {};
    Kg.prototype.doMouseDown = function () {
        ye.prototype.doMouseDown.call(this);
        if (this.isActive && this.currentContextMenu instanceof Je) {
            var a = this.diagram.toolManager.findTool("Action");
            null !== a && a.canStart() && (a.doActivate(), a.doMouseDown(), a.doDeactivate())
        }
        this.diagram.toolManager.mouseDownTools.contains(this) && Rg(this)
    };
    Kg.prototype.doMouseUp = function () {
        if (this.isActive && this.currentContextMenu instanceof Je) {
            var a = this.diagram.toolManager.findTool("Action");
            null !== a && a.canStart() && (a.doActivate(), a.doCancel(), a.doDeactivate())
        }
        Rg(this)
    };

    function Rg(a) {
        var b = a.diagram;
        if (a.isActive) {
            var c = a.currentContextMenu;
            if (null !== c) {
                if (!(c instanceof Oe)) {
                    var d = b.Ub(b.lastInput.documentPoint, null, null);
                    null !== d && d.Dg(c) && a.standardMouseClick(null, null)
                }
                a.stopTool();
                a.canStart() && (b.currentTool = a, a.doMouseUp())
            }
        } else a.canStart() && (Sg(a, !0), a.isActive || a.stopTool())
    }

    function Sg(a, b, c) {
        void 0 === c && (c = null);
        if (!a.xu && (a.xu = !0, b && a.standardMouseSelect(), b = a.standardMouseClick(), a.xu = !1, !b))
            if (a.isActive = !0, b = Mg, null === c && (c = a.findObjectWithContextMenu()), null !== c) {
                var d = c.contextMenu;
                null !== d ? (a.currentObject = c instanceof Y ? c : null, a.showContextMenu(d, a.currentObject)) : null !== b && a.showContextMenu(b, a.currentObject)
            } else null !== b && a.showContextMenu(b, null)
    }
    Kg.prototype.doMouseMove = function () {
        var a = this.diagram.toolManager.findTool("Action");
        null !== a && a.doMouseMove();
        this.isActive && this.diagram.toolManager.doMouseMove()
    };
    Kg.prototype.showContextMenu = function (a, b) {
        var c = this.diagram;
        a !== this.currentContextMenu && this.hideContextMenu();
        if (a instanceof Je) {
            a.layerName = "Tool";
            a.selectable = !1;
            a.scale = 1 / c.scale;
            a.category = this.name;
            null !== a.placeholder && (a.placeholder.scale = c.scale);
            var d = a.diagram;
            null !== d && d !== c && d.remove(a);
            c.add(a);
            null !== b ? a.adornedObject = b : a.data = c.model;
            a.yb();
            this.positionContextMenu(a, b)
        } else a instanceof Oe && a.show(b, c, this);
        this.currentContextMenu = a
    };
    Kg.prototype.positionContextMenu = function (a) {
        if (null === a.placeholder) {
            var b = this.diagram,
                c = b.lastInput.documentPoint.copy(),
                d = a.measuredBounds,
                e = b.viewportBounds;
            b.lastInput.isTouchEvent && (c.x -= d.width);
            c.x + d.width > e.right && (c.x -= d.width + 5 / b.scale);
            c.x < e.x && (c.x = e.x);
            c.y + d.height > e.bottom && (c.y -= d.height + 5 / b.scale);
            c.y < e.y && (c.y = e.y);
            a.position = c
        }
    };
    Kg.prototype.hideContextMenu = function () {
        var a = this.diagram,
            b = this.currentContextMenu;
        null !== b && (b instanceof Je ? (a.remove(b), null !== this.cu && this.cu.Af(b.category), b.data = null, b.adornedObject = null) : b instanceof Oe && (null !== b.hide ? b.hide(a, this) : null !== b.mainElement && (b.mainElement.style.display = "none")), this.currentContextMenu = null, this.standardMouseOver())
    };

    function Tg(a) {
        var b = new E;
        b.add(new Jg("Copy", function (a) {
            a.commandHandler.copySelection()
        }, function (a) {
            return a.commandHandler.canCopySelection()
        }));
        b.add(new Jg("Cut", function (a) {
            a.commandHandler.cutSelection()
        }, function (a) {
            return a.commandHandler.canCutSelection()
        }));
        b.add(new Jg("Delete", function (a) {
            a.commandHandler.deleteSelection()
        }, function (a) {
            return a.commandHandler.canDeleteSelection()
        }));
        b.add(new Jg("Paste", function (b) {
            b.commandHandler.pasteSelection(a.mouseDownPoint)
        }, function (b) {
            return b.commandHandler.canPasteSelection(a.mouseDownPoint)
        }));
        b.add(new Jg("Select All", function (a) {
            a.commandHandler.selectAll()
        }, function (a) {
            return a.commandHandler.canSelectAll()
        }));
        b.add(new Jg("Undo", function (a) {
            a.commandHandler.undo()
        }, function (a) {
            return a.commandHandler.canUndo()
        }));
        b.add(new Jg("Redo", function (a) {
            a.commandHandler.redo()
        }, function (a) {
            return a.commandHandler.canRedo()
        }));
        b.add(new Jg("Scroll To Part", function (a) {
            a.commandHandler.scrollToPart()
        }, function (a) {
            return a.commandHandler.canScrollToPart()
        }));
        b.add(new Jg("Zoom To Fit", function (a) {
                a.commandHandler.zoomToFit()
            },
            function (a) {
                return a.commandHandler.canZoomToFit()
            }));
        b.add(new Jg("Reset Zoom", function (a) {
            a.commandHandler.resetZoom()
        }, function (a) {
            return a.commandHandler.canResetZoom()
        }));
        b.add(new Jg("Group Selection", function (a) {
            a.commandHandler.groupSelection()
        }, function (a) {
            return a.commandHandler.canGroupSelection()
        }));
        b.add(new Jg("Ungroup Selection", function (a) {
            a.commandHandler.ungroupSelection()
        }, function (a) {
            return a.commandHandler.canUngroupSelection()
        }));
        b.add(new Jg("Edit Text", function (a) {
                a.commandHandler.editTextBlock()
            },
            function (a) {
                return a.commandHandler.canEditTextBlock()
            }));
        return b
    }
    Kg.prototype.showDefaultContextMenu = function () {
        var a = this.diagram;
        null === this.du && (this.du = Tg(this));
        Og.innerHTML = "";
        Pg.addEventListener("click", this.Wu, !1);
        var b = this,
            c = ta("ul");
        c.className = "goCXul";
        Og.appendChild(c);
        c.innerHTML = "";
        for (var d = this.du.iterator; d.next();) {
            var e = d.value,
                f = e.visible;
            if ("function" === typeof e.Ax && ("function" !== typeof f || f(a))) {
                f = ta("li");
                f.className = "goCXli";
                var g = ta("a");
                g.className = "goCXa";
                g.href = "#";
                g.xy = e.Ax;
                g.addEventListener("click", function (c) {
                    this.xy(a);
                    b.stopTool();
                    c.preventDefault();
                    return !1
                }, !1);
                g.textContent = e.text;
                f.appendChild(g);
                c.appendChild(f)
            }
        }
        Og.style.display = "block";
        Pg.style.display = "block"
    };
    Kg.prototype.hideDefaultContextMenu = function () {
        if (null !== this.currentContextMenu && this.currentContextMenu === Mg) {
            Og.style.display = "none";
            Pg.style.display = "none";
            var a = this.diagram;
            null !== a && a.removeEventListener(Pg, "click", this.Wu, !1);
            this.currentContextMenu = null
        }
    };
    ma.Object.defineProperties(Kg.prototype, {
        currentContextMenu: {
            get: function () {
                return this.l
            },
            set: function (a) {
                this.l = a;
                this.cu = a instanceof Je ? a.adornedPart : null
            }
        },
        defaultTouchContextMenu: {
            get: function () {
                !1 === Qg && null === Mg && Ug && Lg(this);
                return Mg
            },
            set: function (a) {
                null === a && (Qg = !0);
                Mg = a
            }
        },
        currentObject: {
            get: function () {
                return this.u
            },
            set: function (a) {
                this.u = a
            }
        },
        mouseDownPoint: {
            get: function () {
                return this.Zw
            }
        }
    });
    var Mg = null,
        Qg = !1,
        Pg = null,
        Og = null;
    Kg.className = "ContextMenuTool";
    La("contextMenuTool", function () {
        return this.findTool("ContextMenu")
    }, function (a) {
        this.Va("ContextMenu", a, this.mouseUpTools)
    });

    function Vg() {
        ye.call(this);
        this.name = "TextEditing";
        this.vh = new Wg;
        this.Ia = null;
        this.Ha = Xg;
        this.Ji = null;
        this.ia = Yg;
        this.I = 1;
        this.Y = !0;
        this.u = null;
        this.l = new Oe;
        this.hu = null;
        Zg(this, this.l)
    }
    la(Vg, ye);

    function Zg(a, b) {
        if (Ug) {
            var c = ta("textarea");
            a.hu = c;
            c.addEventListener("input", function () {
                if (null !== a.textBlock) {
                    var b = a.Wx(this.value);
                    this.style.width = 20 + b.measuredBounds.width * this.yA + "px";
                    this.rows = b.lineCount
                }
            }, !1);
            c.addEventListener("keydown", function (b) {
                if (null !== a.textBlock) {
                    var c = b.which;
                    13 === c ? (!1 === a.textBlock.isMultiline && b.preventDefault(), a.acceptText($g)) : 9 === c ? (a.acceptText(ah), b.preventDefault()) : 27 === c && (a.doCancel(), null !== a.diagram && a.diagram.doFocus())
                }
            }, !1);
            c.addEventListener("focus",
                function () {
                    if (null !== a.currentTextEditor && a.state !== Yg) {
                        var b = a.hu;
                        a.ia === bh && (a.ia = ch);
                        "function" === typeof b.select && a.selectsTextOnActivate && (b.select(), b.setSelectionRange(0, 9999))
                    }
                }, !1);
            c.addEventListener("blur", function () {
                if (null !== a.currentTextEditor && a.state !== Yg) {
                    var b = a.hu;
                    "function" === typeof b.focus && b.focus();
                    "function" === typeof b.select && a.selectsTextOnActivate && (b.select(), b.setSelectionRange(0, 9999))
                }
            }, !1);
            b.valueFunction = function () {
                return c.value
            };
            b.mainElement = c;
            b.show = function (a,
                b, f) {
                if (a instanceof Wg && f instanceof Vg)
                    if (f.state === dh) c.style.border = "3px solid red", c.focus();
                    else {
                        var d = a.ga(Ac),
                            e = b.position,
                            k = b.scale,
                            l = a.uf() * k;
                        l < f.minimumEditorScale && (l = f.minimumEditorScale);
                        var m = a.naturalBounds.width * l + 6,
                            n = a.naturalBounds.height * l + 2,
                            p = (d.x - e.x) * k;
                        d = (d.y - e.y) * k;
                        c.value = a.text;
                        b.div.style.font = a.font;
                        c.style.position = "absolute";
                        c.style.zIndex = "100";
                        c.style.font = "inherit";
                        c.style.fontSize = 100 * l + "%";
                        c.style.lineHeight = "normal";
                        c.style.width = m + "px";
                        c.style.left = (p - m / 2 | 0) - 1 +
                            "px";
                        c.style.top = (d - n / 2 | 0) - 1 + "px";
                        c.style.textAlign = a.textAlign;
                        c.style.margin = "0";
                        c.style.padding = "1px";
                        c.style.border = "0";
                        c.style.outline = "none";
                        c.style.whiteSpace = "pre-wrap";
                        c.style.overflow = "hidden";
                        c.rows = a.lineCount;
                        c.yA = l;
                        c.className = "goTXarea";
                        b.div.appendChild(c);
                        c.focus();
                        f.selectsTextOnActivate && (c.select(), c.setSelectionRange(0, 9999))
                    }
            };
            b.hide = function (a) {
                a.div.removeChild(c)
            }
        }
    }
    Vg.prototype.canStart = function () {
        if (!this.isEnabled) return !1;
        var a = this.diagram;
        if (null === a || a.isReadOnly || eh && eh !== this && (eh.acceptText(fh), eh && eh !== this) || !a.lastInput.left || this.isBeyondDragSize()) return !1;
        var b = a.Ub(a.lastInput.documentPoint);
        if (!(null !== b && b instanceof Wg && b.editable && b.part.canEdit())) return !1;
        b = b.part;
        return null === b || this.starting === Xg && !b.isSelected || this.starting === gh && 2 > a.lastInput.clickCount ? !1 : !0
    };
    Vg.prototype.doStart = function () {
        eh = this;
        null !== this.textBlock && this.doActivate()
    };
    Vg.prototype.doActivate = function () {
        if (!this.isActive) {
            var a = this.diagram;
            if (null !== a) {
                var b = this.textBlock;
                null === b && (b = a.Ub(a.lastInput.documentPoint));
                if (null !== b && b instanceof Wg && (this.textBlock = b, null !== b.part)) {
                    this.isActive = !0;
                    this.ia = bh;
                    var c = this.defaultTextEditor;
                    null !== b.textEditor && (c = b.textEditor);
                    this.vh = this.textBlock.copy();
                    var d = new N(this.textBlock.ga(vc), this.textBlock.ga(Gc));
                    a.cw(d);
                    c.show(b, a, this);
                    this.currentTextEditor = c
                }
            }
        }
    };
    Vg.prototype.doCancel = function () {
        this.stopTool()
    };
    Vg.prototype.doMouseUp = function () {
        this.canStart() && this.doActivate()
    };
    Vg.prototype.doMouseDown = function () {
        this.isActive && this.acceptText(fh)
    };
    Vg.prototype.acceptText = function (a) {
        switch (a) {
            case fh:
                if (this.ia === hh) this.currentTextEditor instanceof HTMLElement && this.currentTextEditor.focus();
                else if (this.ia === bh || this.ia === dh || this.ia === ch) this.ia = ih, jh(this);
                break;
            case kh:
            case $g:
            case ah:
                if ($g !== a || !0 !== this.textBlock.isMultiline)
                    if (this.ia === bh || this.ia === dh || this.ia === ch) this.ia = ih, jh(this)
        }
    };

    function jh(a) {
        var b = a.textBlock,
            c = a.diagram,
            d = a.currentTextEditor;
        if (null !== b && null !== d) {
            var e = b.text,
                f = "";
            null !== d.valueFunction && (f = d.valueFunction());
            if (a.isValidText(b, e, f)) a.ua(a.name), a.ia = hh, a.transactionResult = a.name, b.text = f, d = a.textBlock, null !== d.textEdited && d.textEdited(d, e, f), null !== c && c.R("TextEdited", b, e), a.Hg(), a.stopTool(), null !== c && c.doFocus();
            else {
                a.ia = dh;
                var g = a.textBlock;
                null !== g.errorFunction && g.errorFunction(a, e, f);
                d.show(b, c, a)
            }
        }
    }
    Vg.prototype.doDeactivate = function () {
        var a = this.diagram;
        null !== a && (this.ia = Yg, this.textBlock = null, null !== this.currentTextEditor && this.currentTextEditor.hide(a, this), this.isActive = !1)
    };
    Vg.prototype.doStop = function () {
        eh = null
    };
    Vg.prototype.isValidText = function (a, b, c) {
        var d = this.textValidation;
        if (null !== d && !d(a, b, c)) return !1;
        d = a.textValidation;
        return null === d || d(a, b, c) ? !0 : !1
    };
    Vg.prototype.Wx = function (a) {
        var b = this.vh;
        b.text = a;
        b.measure(this.textBlock.ti, Infinity);
        return b
    };
    ma.Object.defineProperties(Vg.prototype, {
        textBlock: {
            get: function () {
                return this.Ia
            },
            set: function (a) {
                this.Ia = a
            }
        },
        currentTextEditor: {
            get: function () {
                return this.u
            },
            set: function (a) {
                this.u = a
            }
        },
        defaultTextEditor: {
            get: function () {
                return this.l
            },
            set: function (a) {
                this.l = a
            }
        },
        starting: {
            get: function () {
                return this.Ha
            },
            set: function (a) {
                this.Ha = a
            }
        },
        textValidation: {
            get: function () {
                return this.Ji
            },
            set: function (a) {
                this.Ji = a
            }
        },
        minimumEditorScale: {
            get: function () {
                return this.I
            },
            set: function (a) {
                this.I = a
            }
        },
        selectsTextOnActivate: {
            get: function () {
                return this.Y
            },
            set: function (a) {
                this.Y = a
            }
        },
        state: {
            get: function () {
                return this.ia
            },
            set: function (a) {
                this.ia !== a && (this.ia = a)
            }
        }
    });
    Vg.prototype.measureTemporaryTextBlock = Vg.prototype.Wx;
    var kh = new D(Vg, "LostFocus", 0),
        fh = new D(Vg, "MouseDown", 1),
        ah = new D(Vg, "Tab", 2),
        $g = new D(Vg, "Enter", 3),
        th = new D(Vg, "SingleClick", 0),
        Xg = new D(Vg, "SingleClickSelected", 1),
        gh = new D(Vg, "DoubleClick", 2),
        Yg = new D(Vg, "StateNone", 0),
        bh = new D(Vg, "StateActive", 1),
        ch = new D(Vg, "StateEditing", 2),
        ih = new D(Vg, "StateValidating", 3),
        dh = new D(Vg, "StateInvalid", 4),
        hh = new D(Vg, "StateValidated", 5),
        eh = null;
    Vg.className = "TextEditingTool";
    Vg.LostFocus = kh;
    Vg.MouseDown = fh;
    Vg.Tab = ah;
    Vg.Enter = $g;
    Vg.SingleClick = th;
    Vg.SingleClickSelected = Xg;
    Vg.DoubleClick = gh;
    Vg.StateNone = Yg;
    Vg.StateActive = bh;
    Vg.StateEditing = ch;
    Vg.StateValidating = ih;
    Vg.StateInvalid = dh;
    Vg.StateValidated = hh;
    La("textEditingTool", function () {
        return this.findTool("TextEditing")
    }, function (a) {
        this.Va("TextEditing", a, this.mouseUpTools)
    });

    function uh() {
        vh || (wh(), vh = !0);
        this.B = ze;
        this.gl = this.Ze = this.qc = this.Tr = this.hc = !1;
        this.px = !0;
        this.hl = xh;
        this.bn = !1;
        this.oi = this.Mc = !0;
        this.Ug = 600;
        this.Mw = this.ox = !1;
        this.Ke = new F;
        this.Ad = new yh;
        this.Ad.Jc = this;
        this.Ck = new F;
        this.Tu = new F;
        this.Ss = new F
    }
    uh.prototype.Yd = function (a) {
        this.B = a
    };
    uh.prototype.canStart = function () {
        return !0
    };

    function zh(a, b) {
        Ah(a, b) && (a.Ze = !0)
    }

    function Ah(a, b) {
        if (!a.Mc || !a.canStart(b)) return !1;
        a.Ke.add(b);
        a.defaultAnimation.isAnimating && a.Xc();
        return a.qc = !0
    }

    function Bh(a) {
        if (a.Mc && a.qc) {
            var b = a.Ad,
                c = a.B,
                d = a.Ke.contains("Model");
            d && (a.gl = !0, a.hl === xh ? (b.isViewportUnconstrained = !0, b.pc.clear(), b.add(c, "position", c.position.copy().offset(0, -200), c.position), b.add(c, "opacity", 0, 1)) : a.hl === Ch && b.pc.clear(), c.R("InitialAnimationStarting", a));
            d && !a.oi || 0 === b.pc.count ? (a.Ke.clear(), a.qc = !1, a.Ze = !1, b.pc.clear(), Dh(b), a.gl = !1, c.M()) : (a.Ke.clear(), c.we = !1, x.requestAnimationFrame(function () {
                !1 === a.qc || b.hc || (c.Be("temporaryPixelRatio") && Ue(c), Eh(c), a.qc = !1, a.Ze = !1, a.px = d && a.hl === Fh && c.Nu.w(c.ma) ? !0 : !1, b.start(), Gh(a), c.Na(), Hh(b, 0), If(c, !0), Ih(a), c.R("AnimationStarting", a))
            }))
        }
    }

    function Jh(a, b, c, d) {
        b instanceof S && (null !== b.fromNode || null !== b.toNode) || a.Ad.add(b, "position", c, d, !1)
    }
    t = uh.prototype;
    t.Dt = function (a) {
        return this.Ad.Dt(a)
    };
    t.Gv = function (a) {
        return this.Ad.Gv(a)
    };

    function Kh(a, b) {
        function c() {
            0 < e.Ss.count && (d.addAll(e.Ss), e.Ss.clear(), e.hc = !0);
            if (!1 !== e.hc && 0 !== d.count) {
                e.Tu.addAll(d);
                for (var a = e.Tu.iterator; a.next();) {
                    var b = a.value;
                    if (!1 !== b.hc) {
                        a: if (0 < b.Xl.count) var h = !0;
                            else {
                                for (h = b.pc.iterator; h.next();) {
                                    var k = h.key;
                                    if (k instanceof Y && null !== k.diagram || k instanceof R) {
                                        h = !0;
                                        break a
                                    }
                                }
                                h = !1
                            }h ? Lh(b, !1) : b.pl = !0
                    }
                }
                e.Tu.clear();
                Gh(e);
                If(e.B);
                Ih(e);
                x.requestAnimationFrame(c)
            }
        }
        var d = a.Ck,
            e = a;
        a.hc ? a.Ss.add(b) : (a.hc = !0, d.add(b), x.requestAnimationFrame(function () {
            c()
        }))
    }

    function Mh(a) {
        for (a = a.Ck.iterator; a.next();) a.value.pl = !1
    }

    function Gh(a) {
        if (!a.Tr) {
            var b = a.B;
            a.ox = b.skipsUndoManager;
            a.Mw = b.skipsModelSourceBindings;
            b.skipsUndoManager = !0;
            b.skipsModelSourceBindings = !0;
            a.Tr = !0
        }
    }

    function Ih(a) {
        var b = a.B;
        b.skipsUndoManager = a.ox;
        b.skipsModelSourceBindings = a.Mw;
        a.Tr = !1
    }
    t.Xc = function (a) {
        var b = this.Ad;
        !0 === this.qc && (this.gl = this.Ze = this.qc = !1, this.Ke.clear(), 0 < b.pc.count && this.B.Pb());
        if (this.hc && this.Mc) {
            if (b.gm(!0), b.pc.clear(), Dh(b), !0 === a)
                for (a = this.Ck.na(), b = 0; b < a.length; b++) a[b].gm(!0)
        } else b.pc.clear(), Dh(b)
    };
    t.gm = function (a) {
        a === this.defaultAnimation && this.defaultAnimation.pc.clear();
        this.Ck.remove(a);
        0 === this.Ck.count && (this.hc = !1, this.B.Pb());
        a === this.defaultAnimation && (this.defaultAnimation.pc.clear(), this.B.R("AnimationFinished", this))
    };
    t.Vj = function (a, b) {
        this.Ze && (this.Ke.contains("Expand Tree") || this.Ke.contains("Expand SubGraph")) && this.Ad.Vj(a, b)
    };
    t.Tj = function (a, b) {
        this.Ze && (this.Ke.contains("Collapse Tree") || this.Ke.contains("Collapse SubGraph")) && (this.Ad.Tj(a, b), Nh(this.Ad, b, "position", b.position, b.position))
    };

    function Oh(a, b, c) {
        a.Ze && !b.w(c) && (a.B.kk || (b = c.copy()), Nh(a.Ad, a.B, "position", b, c))
    }

    function Ph(a, b, c, d, e) {
        null === a && (a = "rgba(0,0,0,0)");
        null === b && (b = "rgba(0,0,0,0)");
        Qh(a);
        Rh();
        var f = Sh.l,
            g = Sh.I,
            h = Sh.u;
        a = Sh.Y;
        Qh(b);
        Rh();
        var k = Sh.I,
            l = Sh.u;
        b = Sh.Y;
        f = e(c, f, Sh.l - f, d);
        g = e(c, g, k - g, d);
        h = e(c, h, l - h, d);
        c = e(c, a, b - a, d);
        return "hsla(" + f + ", " + g + "%, " + h + "%, " + c + ")"
    }

    function wh() {
        var a = new H;
        a.add("position:diagram", function (a, c, d, e, f, g) {
            a.position = new I(e(f, c.x, d.x - c.x, g), e(f, c.y, d.y - c.y, g))
        });
        a.add("position", function (a, c, d, e, f, g) {
            f < g ? a.Kq(e(f, c.x, d.x - c.x, g), e(f, c.y, d.y - c.y, g), !1) : a.position = new I(e(f, c.x, d.x - c.x, g), e(f, c.y, d.y - c.y, g))
        });
        a.add("location", function (a, c, d, e, f, g) {
            f < g ? a.Kq(e(f, c.x, d.x - c.x, g), e(f, c.y, d.y - c.y, g), !0) : a.location = new I(e(f, c.x, d.x - c.x, g), e(f, c.y, d.y - c.y, g))
        });
        a.add("position:placeholder", function (a, c, d, e, f, g) {
            f < g ? a.Kq(e(f, c.x, d.x - c.x,
                g), e(f, c.y, d.y - c.y, g), !1) : a.position = new I(e(f, c.x, d.x - c.x, g), e(f, c.y, d.y - c.y, g))
        });
        a.add("position:node", function (a, c, d, e, f, g) {
            var b = a.actualBounds,
                k = d.actualBounds;
            d = k.x + k.width / 2 - b.width / 2;
            b = k.y + k.height / 2 - b.height / 2;
            f < g ? a.Kq(e(f, c.x, d - c.x, g), e(f, c.y, b - c.y, g), !1) : a.position = new I(e(f, c.x, d - c.x, g), e(f, c.y, b - c.y, g))
        });
        a.add("desiredSize", function (a, c, d, e, f, g) {
            a.desiredSize = new N(e(f, c.width, d.width - c.width, g), e(f, c.height, d.height - c.height, g))
        });
        a.add("width", function (a, c, d, e, f, g) {
            a.width = e(f, c,
                d - c, g)
        });
        a.add("height", function (a, c, d, e, f, g) {
            a.height = e(f, c, d - c, g)
        });
        a.add("fill", function (a, c, d, e, f, g) {
            a.fill = Ph(c, d, f, g, e)
        });
        a.add("stroke", function (a, c, d, e, f, g) {
            a.stroke = Ph(c, d, f, g, e)
        });
        a.add("strokeWidth", function (a, c, d, e, f, g) {
            a.strokeWidth = e(f, c, d - c, g)
        });
        a.add("strokeDashOffset", function (a, c, d, e, f, g) {
            a.strokeDashOffset = e(f, c, d - c, g)
        });
        a.add("background", function (a, c, d, e, f, g) {
            a.background = Ph(c, d, f, g, e)
        });
        a.add("areaBackground", function (a, c, d, e, f, g) {
            a.areaBackground = Ph(c, d, f, g, e)
        });
        a.add("opacity",
            function (a, c, d, e, f, g) {
                a.opacity = e(f, c, d - c, g)
            });
        a.add("scale", function (a, c, d, e, f, g) {
            a.scale = e(f, c, d - c, g)
        });
        a.add("angle", function (a, c, d, e, f, g) {
            a.angle = e(f, c, d - c, g)
        });
        Th = a
    }
    ma.Object.defineProperties(uh.prototype, {
        animationReasons: {
            get: function () {
                return this.Ke
            }
        },
        isEnabled: {
            get: function () {
                return this.Mc
            },
            set: function (a) {
                this.Mc = a
            }
        },
        duration: {
            get: function () {
                return this.Ug
            },
            set: function (a) {
                1 > a && va(a, ">= 1", uh, "duration");
                this.Ug = a
            }
        },
        isAnimating: {
            get: function () {
                return this.hc
            }
        },
        isTicking: {
            get: function () {
                return this.Tr
            }
        },
        isInitial: {
            get: function () {
                return this.oi
            },
            set: function (a) {
                this.oi = a
            }
        },
        defaultAnimation: {
            get: function () {
                return this.Ad
            }
        },
        activeAnimations: {
            get: function () {
                return this.Ck
            }
        },
        initialAnimationStyle: {
            get: function () {
                return this.hl
            },
            set: function (a) {
                this.hl = a
            }
        }
    });
    uh.prototype.stopAnimation = uh.prototype.Xc;
    var Th = null,
        vh = !1,
        xh = new D(uh, "Default", 1),
        Fh = new D(uh, "AnimateLocations", 2),
        Ch = new D(uh, "None", 3);
    uh.className = "AnimationManager";
    uh.defineAnimationEffect = function (a, b) {
        vh || (wh(), vh = !0);
        Th.add(a, b)
    };
    uh.Default = xh;
    uh.AnimateLocations = Fh;
    uh.None = Ch;

    function yh() {
        this.Xu = this.nx = this.Jc = this.B = null;
        this.pl = this.hc = this.l = !1;
        this.Gn = this.td = 0;
        this.nr = this.ku = Uh;
        this.ol = this.lp = !1;
        this.Mu = 1;
        this.Ku = 0;
        this.md = this.Ug = NaN;
        this.Pw = 0;
        this.Hn = null;
        this.u = Fb;
        this.pc = new H;
        this.Gu = new H;
        this.Xl = new F;
        this.Hu = new F;
        this.Nw = Vh
    }
    yh.prototype.suspend = function () {
        this.pl = !0
    };
    yh.prototype.advanceTo = function (a, b) {
        b && (this.pl = !1);
        this.lp && a >= this.md && (this.ol = !0, a -= this.md);
        this.Pw = a;
        Lh(this, !0);
        Gh(this.Jc);
        If(this.B);
        Ih(this.Jc);
        this.B.Ee()
    };

    function Dh(a) {
        a.Gu.clear();
        a.ol = !1;
        a.Ku = 0;
        a.md = NaN;
        0 < a.Xl.count && a.Xl.clear();
        0 < a.Hu.count && a.Hu.clear()
    }
    t = yh.prototype;
    t.start = function () {
        if (0 !== this.pc.count && !this.hc) {
            for (var a = this.B, b = this.pc.iterator; b.next();) {
                var c = b.value.end,
                    d = b.key;
                if (c["position:placeholder"]) {
                    var e = d.findVisibleNode();
                    if (e instanceof T && null !== e.placeholder) {
                        var f = e.placeholder;
                        e = f.ga(vc);
                        f = f.padding;
                        e.x += f.left;
                        e.y += f.top;
                        c["position:placeholder"] = e
                    }
                }
                null === a && (d instanceof R ? a = d : d instanceof Y && (a = d.diagram))
            }
            null !== a && (this.B = a, b = this.Jc = a.animationManager, this.md = isNaN(this.Ug) ? b.duration : this.Ug, this.nr = this.ku, b.gl && b.hl === xh &&
                this === b.defaultAnimation && (this.nr = Wh, this.md = isNaN(this.Ug) ? 600 === b.duration ? 900 : b.duration : this.Ug), this.Nw = a.scrollMode, this.isViewportUnconstrained && (a.Gi = Xh), Gh(b), this.Xl.each(function (b) {
                    b.data = null;
                    a.add(b)
                }), Ih(b), this.hc = !0, this.td = +new Date, this.Gn = this.td + this.md, Kh(b, this))
        }
    };
    t.Ly = function (a, b) {
        a.Wb() && (this.Xl.add(a), this.B = b)
    };
    t.add = function (a, b, c, d, e) {
        "position" === b && c.w(d) || (null === this.B && (a instanceof R ? this.B = a : a instanceof Y && null !== a.diagram && (this.B = a.diagram)), a instanceof U && !a.isAnimated || Nh(this, a, b, c, d, e))
    };

    function Nh(a, b, c, d, e, f) {
        var g = a.pc;
        b instanceof R && "position" === c && (c = "position:diagram");
        if (g.contains(b)) {
            var h = g.H(b);
            var k = h.start;
            var l = h.end;
            void 0 === k[c] && (k[c] = Yh(d));
            l[c] = Yh(e)
        } else k = {}, l = {}, k[c] = Yh(d), l[c] = Yh(e), h = k.position, b instanceof Y && h instanceof I && !h.v() && b.diagram.animationManager.Ke.contains("Expand SubGraph") && h.assign(l.position), h = new Zh(k, l, f), g.add(b, h);
        g = k[c];
        g instanceof I && !g.v() && g.assign(a.u);
        f && 0 === c.indexOf("position:") && b instanceof U ? h.pv.location = Yh(b.location) :
            f && (h.pv[c] = Yh(d))
    }

    function Yh(a) {
        return a instanceof I ? a.copy() : a instanceof M ? a.copy() : a
    }
    t.Dt = function (a) {
        if (!this.hc) return !1;
        a = this.pc.H(a);
        return null !== a && a.Uv
    };
    t.Gv = function (a) {
        if (!this.hc) return !1;
        a = this.pc.H(a);
        return null !== a && (a.start.position || a.start.location)
    };

    function Lh(a, b) {
        if (!a.pl || b) {
            var c = a.Jc;
            if (!1 !== a.hc) {
                var d = +new Date,
                    e = d > a.Gn ? a.md : d - a.td;
                b && (e = a.Pw, e < a.md ? (a.td = +new Date - e, a.Gn = a.td + a.md) : e = a.md);
                Gh(c);
                Hh(a, e);
                If(a.B, !0);
                Ih(c);
                d > a.Gn && (a.lp && !a.ol ? (a.td = +new Date, a.Gn = a.td + a.md, a.ol = !0) : a.gm(!1))
            }
        }
    }

    function Hh(a, b) {
        for (var c = a.md, d = a.pc.iterator, e = a.ol; d.next();) {
            var f = d.key;
            if (!(f instanceof Y && null === f.diagram)) {
                var g = d.value,
                    h = e ? g.end : g.start;
                g = e ? g.start : g.end;
                var k = Th,
                    l;
                for (l in g) "position" === l && (g["position:placeholder"] || g["position:node"]) || null === k.get(l) || k.get(l)(f, h[l], g[l], a.nr, b, c, a)
            }
        }
    }
    t.stop = function () {
        this.hc && this.gm(!0)
    };
    t.gm = function (a) {
        null !== this.Xu && this.Xu.sp.remove(this.nx);
        if (this.hc) {
            var b = this.B,
                c = this.Jc;
            this.pl = this.hc = c.gl = !1;
            Gh(c);
            for (var d = this.pc, e = this.Xl.iterator; e.next();) b.remove(e.value);
            for (e = this.Hu.iterator; e.next();) e.value.o();
            e = this.lp;
            d = d.iterator;
            for (var f = Th; d.next();) {
                var g = d.key,
                    h = d.value,
                    k = e ? h.end : h.start,
                    l = e ? h.start : h.end,
                    m = h.pv,
                    n;
                for (n in l)
                    if (null !== f.get(n)) {
                        var p = n;
                        !h.kv || "position:node" !== p && "position:placeholder" !== p || (p = "position");
                        f.get(p)(g, k[n], void 0 !== m[n] ? m[n] : h.kv ? k[n] :
                            l[n], this.nr, this.md, this.md, this)
                    } h.kv && void 0 !== m.location && g instanceof U && (g.location = m.location);
                h.Uv && g instanceof U && g.Ob(!1)
            }
            if (c.defaultAnimation === this)
                for (n = this.B.links; n.next();) e = n.value, null === e.oh ? (d = e.path, null !== d && (e.kd = !1, e.o(), d.o())) : (e.points = e.oh, e.oh = null);
            b.yt.clear();
            kf(b, !1);
            b.Na();
            b.M();
            If(b, !0);
            this.isViewportUnconstrained && (b.scrollMode = this.Nw);
            Ih(c);
            this.Ku++;
            !a && this.Mu > this.Ku ? (this.ol = !1, this.start()) : (this.Hn && this.Hn(this), Dh(this), c.gm(this), b.Pb())
        }
    };
    t.Vj = function (a, b) {
        var c = b.actualBounds,
            d = null;
        b instanceof T && (d = b.placeholder);
        null !== d ? (c = d.ga(vc), d = d.padding, c.x += d.left, c.y += d.top, this.add(a, "position", c, a.position, !1)) : this.add(a, "position", new I(c.x + c.width / 2, c.y + c.height / 2), a.position, !1);
        this.add(a, "scale", .01, a.scale, !1);
        if (a instanceof T)
            for (a = a.memberParts; a.next();) d = a.value, d instanceof W && this.Vj(d, b)
    };
    t.Tj = function (a, b) {
        if (a.isVisible()) {
            var c = null;
            b instanceof T && (c = b.placeholder);
            null !== c ? this.add(a, "position:placeholder", a.position, c, !0) : this.add(a, "position:node", a.position, b, !0);
            this.add(a, "scale", a.scale, .01, !0);
            c = this.pc;
            c.contains(a) && (c.H(a).Uv = !0);
            if (a instanceof T)
                for (a = a.memberParts; a.next();) c = a.value, c instanceof W && this.Tj(c, b)
        }
    };
    t.Hz = function (a) {
        var b = this.Gu.get(a);
        null === b && (b = {}, this.Gu.add(a, b));
        return b
    };
    ma.Object.defineProperties(yh.prototype, {
        duration: {
            get: function () {
                return this.Ug
            },
            set: function (a) {
                1 > a && va(a, ">= 1", yh, "duration");
                this.Ug = a
            }
        },
        reversible: {
            get: function () {
                return this.lp
            },
            set: function (a) {
                this.lp = a
            }
        },
        runCount: {
            get: function () {
                return this.Mu
            },
            set: function (a) {
                0 < a ? this.Mu = a : B("Animation.runCount value must be a positive integer.")
            }
        },
        finished: {
            get: function () {
                return this.Hn
            },
            set: function (a) {
                this.Hn !== a && (this.Hn = a)
            }
        },
        easing: {
            get: function () {
                return this.ku
            },
            set: function (a) {
                this.ku = a
            }
        },
        isViewportUnconstrained: {
            get: function () {
                return this.l
            },
            set: function (a) {
                this.l = a
            }
        },
        isAnimating: {
            get: function () {
                return this.hc
            }
        }
    });
    yh.prototype.getTemporaryState = yh.prototype.Hz;
    yh.prototype.stop = yh.prototype.stop;
    yh.prototype.add = yh.prototype.add;
    yh.prototype.addTemporaryPart = yh.prototype.Ly;

    function Uh(a, b, c, d) {
        a /= d / 2;
        return 1 > a ? c / 2 * a * a + b : -c / 2 * (--a * (a - 2) - 1) + b
    }

    function Wh(a, b, c, d) {
        return a === d ? b + c : c * (-Math.pow(2, -10 * a / d) + 1) + b
    }
    yh.className = "Animation";
    yh.EaseLinear = function (a, b, c, d) {
        return c * a / d + b
    };
    yh.EaseInOutQuad = Uh;
    yh.EaseInQuad = function (a, b, c, d) {
        return c * (a /= d) * a + b
    };
    yh.EaseOutQuad = function (a, b, c, d) {
        return -c * (a /= d) * (a - 2) + b
    };
    yh.EaseInExpo = function (a, b, c, d) {
        return 0 === a ? b : c * Math.pow(2, 10 * (a / d - 1)) + b
    };
    yh.EaseOutExpo = Wh;

    function Zh(a, b, c) {
        this.start = a;
        this.end = b;
        this.pv = {};
        this.kv = c;
        this.Uv = !1
    }
    Zh.className = "AnimationState";

    function $h(a, b, c) {
        this.bd = null;
        this.af = a;
        this.Mp = c || ai;
        this.Hk = null;
        void 0 !== b && (this.Hk = b, void 0 === c && (this.Mp = bi))
    }
    $h.prototype.copy = function () {
        var a = new $h(this.af);
        a.Mp = this.Mp;
        var b = this.Hk;
        if (null !== b) {
            var c = {};
            void 0 !== b.duration && (c.Hx = b.duration);
            void 0 !== b.finished && (c.Hx = b.finished);
            void 0 !== b.easing && (c.Hx = b.easing);
            a.Hk = c
        }
        return a
    };

    function ci(a, b) {
        a = a.Hk;
        null !== a && (a.duration && (b.duration = a.duration), a.finished && (b.finished = a.finished), a.easing && (b.easing = a.easing))
    }
    ma.Object.defineProperties($h.prototype, {
        propertyName: {
            get: function () {
                return this.af
            },
            set: function (a) {
                this.af = a
            }
        },
        animationSettings: {
            get: function () {
                return this.Hk
            },
            set: function (a) {
                this.Hk = a
            }
        },
        startCondition: {
            get: function () {
                return this.Mp
            },
            set: function (a) {
                this.Mp = a
            }
        }
    });
    var ai = new D($h, "Default", 1),
        bi = new D($h, "Immediate", 2),
        di = new D($h, "Bundled", 3);
    $h.className = "AnimationTrigger";
    $h.Default = ai;
    $h.Immediate = bi;
    $h.Bundled = di;

    function ei() {
        Ya(this);
        this.B = null;
        this.Ca = new E;
        this.Ra = "";
        this.qb = 1;
        this.u = !1;
        this.Bi = this.I = this.$h = this.Zh = this.Yh = this.Xh = this.Vh = this.Wh = this.Uh = this.bi = this.Th = this.ai = this.Sh = this.Rh = !0;
        this.l = !1;
        this.Yo = []
    }
    t = ei.prototype;
    t.clear = function () {
        this.Ca.clear();
        this.Yo.length = 0
    };
    t.Yd = function (a) {
        this.B = a
    };
    t.toString = function (a) {
        void 0 === a && (a = 0);
        var b = 'Layer "' + this.name + '"';
        if (0 >= a) return b;
        for (var c = 0, d = 0, e = 0, f = 0, g = 0, h = this.Ca.iterator; h.next();) {
            var k = h.value;
            k instanceof T ? e++ : k instanceof W ? d++ : k instanceof S ? f++ : k instanceof Je ? g++ : c++
        }
        h = "";
        0 < c && (h += c + " Parts ");
        0 < d && (h += d + " Nodes ");
        0 < e && (h += e + " Groups ");
        0 < f && (h += f + " Links ");
        0 < g && (h += g + " Adornments ");
        if (1 < a)
            for (a = this.Ca.iterator; a.next();) c = a.value, h += "\n    " + c.toString(), d = c.data, null !== d && lb(d) && (h += " #" + lb(d)), c instanceof W ? h += " " +
                Ja(d) : c instanceof S && (h += " " + Ja(c.fromNode) + " " + Ja(c.toNode));
        return b + " " + this.Ca.count + ": " + h
    };
    t.Ub = function (a, b, c) {
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        if (!1 === this.Bi) return null;
        var d = !1;
        null !== this.diagram && this.diagram.viewportBounds.aa(a) && (d = !0);
        for (var e = I.alloc(), f = this.Ca.j, g = f.length; g--;) {
            var h = f[g];
            if ((!0 !== d || !1 !== wg(h)) && h.isVisible() && (e.assign(a), zb(e, h.ud), h = h.Ub(e, b, c), null !== h && (null !== b && (h = b(h)), null !== h && (null === c || c(h))))) return I.free(e), h
        }
        I.free(e);
        return null
    };
    t.Ti = function (a, b, c, d) {
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        d instanceof E || d instanceof F || (d = new F);
        if (!1 === this.Bi) return d;
        var e = !1;
        null !== this.diagram && this.diagram.viewportBounds.aa(a) && (e = !0);
        for (var f = I.alloc(), g = this.Ca.j, h = g.length; h--;) {
            var k = g[h];
            if ((!0 !== e || !1 !== wg(k)) && k.isVisible()) {
                f.assign(a);
                zb(f, k.ud);
                var l = k;
                k.Ti(f, b, c, d) && (null !== b && (l = b(l)), null === l || null !== c && !c(l) || d.add(l))
            }
        }
        I.free(f);
        return d
    };
    t.tf = function (a, b, c, d, e) {
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        void 0 === d && (d = !1);
        e instanceof E || e instanceof F || (e = new F);
        if (!1 === this.Bi) return e;
        var f = !1;
        null !== this.diagram && this.diagram.viewportBounds.ze(a) && (f = !0);
        for (var g = this.Ca.j, h = g.length; h--;) {
            var k = g[h];
            if ((!0 !== f || !1 !== wg(k)) && k.isVisible()) {
                var l = k;
                k.tf(a, b, c, d, e) && (null !== b && (l = b(l)), null === l || null !== c && !c(l) || e.add(l))
            }
        }
        return e
    };
    t.uv = function (a, b, c, d, e, f, g) {
        if (!1 === this.Bi) return e;
        for (var h = this.Ca.j, k = h.length; k--;) {
            var l = h[k];
            if ((!0 !== g || !1 !== wg(l)) && f(l) && l.isVisible()) {
                var m = l;
                l.tf(a, b, c, d, e) && (null !== b && (m = b(m)), null === m || null !== c && !c(m) || e.add(m))
            }
        }
        return e
    };
    t.Ag = function (a, b, c, d, e, f) {
        void 0 === c && (c = null);
        void 0 === d && (d = null);
        void 0 === e && (e = !0);
        if (!1 !== e && !0 !== e) {
            if (e instanceof E || e instanceof F) f = e;
            e = !0
        }
        f instanceof E || f instanceof F || (f = new F);
        if (!1 === this.Bi) return f;
        var g = !1;
        null !== this.diagram && this.diagram.viewportBounds.aa(a) && (g = !0);
        for (var h = I.alloc(), k = I.alloc(), l = this.Ca.j, m = l.length; m--;) {
            var n = l[m];
            if ((!0 !== g || !1 !== wg(n)) && n.isVisible()) {
                h.assign(a);
                zb(h, n.ud);
                k.h(a.x + b, a.y);
                zb(k, n.ud);
                var p = n;
                n.Ag(h, k, c, d, e, f) && (null !== c && (p = c(p)), null ===
                    p || null !== d && !d(p) || f.add(p))
            }
        }
        I.free(h);
        I.free(k);
        return f
    };
    t.yd = function (a, b) {
        if (this.visible) {
            var c = void 0 === b ? a.viewportBounds : b;
            var d = this.Ca.j,
                e = d.length;
            a = Fa();
            b = Fa();
            for (var f = 0; f < e; f++) {
                var g = d[f];
                g.Xw = f;
                g instanceof S && !1 === g.kd || g instanceof Je && null !== g.adornedPart || (dc(g.actualBounds, c) ? (g.yd(!0), a.push(g)) : (g.yd(!1), null !== g.adornments && 0 < g.adornments.count && b.push(g)))
            }
            for (c = 0; c < a.length; c++)
                for (d = a[c], fi(d), d = d.adornments; d.next();) e = d.value, e.measure(Infinity, Infinity), e.arrange(), e.yd(!0);
            for (c = 0; c < b.length; c++) d = b[c], d.updateAdornments(),
                gi(d, !0);
            Ha(a);
            Ha(b)
        }
    };

    function hi(a, b) {
        var c = 1;
        1 !== a.qb && (c = b.globalAlpha, b.globalAlpha = c * a.qb);
        return c
    }
    t.bc = function (a, b, c) {
        if (this.visible && 0 !== this.qb && (void 0 === c && (c = !0), c || !this.isTemporary)) {
            c = this.Ca.j;
            var d = c.length;
            if (0 !== d) {
                var e = hi(this, a),
                    f = this.Yo;
                f.length = 0;
                for (var g = b.scale, h = N.alloc(), k = 0; k < d; k++) this.Pi(a, c[k], b, f, g, h);
                N.free(h);
                a.globalAlpha = e
            }
        }
    };
    t.Pi = function (a, b, c, d, e, f) {
        if (null !== d && b instanceof S && (b.isOrthogonal && d.push(b), !1 === b.kd)) return;
        var g = b.actualBounds;
        d = !1;
        var h = b.containingGroup;
        if (null !== h && h.isClipping && h.type !== X.Spot) {
            h.locationObject.lm(f);
            if (!f.Gc(g)) return;
            d = !f.ze(g)
        }
        d && (a.save(), a.beginPath(), a.rect(f.x, f.y, f.width, f.height), a.clip());
        g.width * e > c.Bo || g.height * e > c.Bo ? b.bc(a, c) : (e = b.actualBounds, f = b.naturalBounds, 0 === e.width || 0 === e.height || isNaN(e.x) || isNaN(e.y) || !b.isVisible() || (c = b.transform, null !== b.areaBackground &&
            (ii(b, a, b.areaBackground, !0, !0, f, e), a.fillRect(e.x, e.y, e.width, e.height)), null === b.areaBackground && null === b.background && (ii(b, a, "rgba(0,0,0,0.3)", !0, !1, f, e), a.fillRect(e.x, e.y, e.width, e.height)), null !== b.background && (a.transform(c.m11, c.m12, c.m21, c.m22, c.dx, c.dy), ii(b, a, b.background, !0, !1, f, e), a.fillRect(0, 0, f.width / 2, f.height / 2), c.ut() || (b = 1 / (c.m11 * c.m22 - c.m12 * c.m21), a.transform(c.m22 * b, -c.m12 * b, -c.m21 * b, c.m11 * b, b * (c.m21 * c.dy - c.m22 * c.dx), b * (c.m12 * c.dx - c.m11 * c.dy))))));
        d && (a.restore(), a.sc(!0))
    };
    t.g = function (a, b, c, d, e) {
        var f = this.diagram;
        null !== f && f.Ya(re, a, this, b, c, d, e)
    };
    t.aj = function (a, b, c) {
        var d = this.Ca;
        b.ui = this;
        if (a >= d.count) a = d.count;
        else if (d.L(a) === b) return -1;
        d.Kb(a, b);
        b.qq(c);
        d = this.diagram;
        null !== d && (c ? d.M() : d.aj(b));
        ji(this, a, b);
        return a
    };
    t.Fc = function (a, b, c) {
        if (!c && b.layer !== this && null !== b.layer) return b.layer.Fc(a, b, c);
        var d = this.Ca;
        if (0 > a || a >= d.length) {
            if (a = d.indexOf(b), 0 > a) return -1
        } else if (d.L(a) !== b && (a = d.indexOf(b), 0 > a)) return -1;
        b.rq(c);
        d.lb(a);
        d = this.diagram;
        null !== d && (c ? d.M() : d.Fc(b));
        b.ui = null;
        return a
    };

    function ji(a, b, c) {
        b = ki(a, b, c);
        if (c instanceof T && null !== c && isNaN(c.zOrder)) {
            if (0 !== c.memberParts.count) {
                for (var d = -1, e = a.Ca.j, f = e.length, g = 0; g < f; g++) {
                    var h = e[g];
                    if (h === c && (b = g, 0 <= d)) break;
                    if (0 > d && h.containingGroup === c && (d = g, 0 <= b)) break
                }!(0 > d) && d < b && (e = a.Ca, e.lb(b), e.Kb(d, c))
            }
            c = c.containingGroup;
            null !== c && ji(a, -1, c)
        }
    }

    function ki(a, b, c) {
        var d = c.zOrder;
        if (isNaN(d)) return b;
        a = a.Ca;
        var e = a.count;
        if (1 >= e) return b;
        0 > b && (b = a.indexOf(c));
        if (0 > b) return -1;
        for (var f = b - 1, g = NaN; 0 <= f;) {
            g = a.L(f).zOrder;
            if (!isNaN(g)) break;
            f--
        }
        for (var h = b + 1, k = NaN; h < e;) {
            k = a.L(h).zOrder;
            if (!isNaN(k)) break;
            h++
        }
        if (!isNaN(g) && g > d)
            for (;;) {
                if (-1 === f || g <= d) {
                    f++;
                    if (f === b) break;
                    a.lb(b);
                    a.Kb(f, c);
                    return f
                }
                for (g = NaN; 0 <= --f && (g = a.L(f).zOrder, isNaN(g)););
            } else if (!isNaN(k) && k < d)
                for (;;) {
                    if (h === e || k >= d) {
                        h--;
                        if (h === b) break;
                        a.lb(b);
                        a.Kb(h, c);
                        return h
                    }
                    for (k = NaN; ++h <
                        e && (k = a.L(h).zOrder, isNaN(k)););
                }
        return b
    }
    ma.Object.defineProperties(ei.prototype, {
        parts: {
            get: function () {
                return this.Ca.iterator
            }
        },
        partsBackwards: {
            get: function () {
                return this.Ca.iteratorBackwards
            }
        },
        diagram: {
            get: function () {
                return this.B
            }
        },
        name: {
            get: function () {
                return this.Ra
            },
            set: function (a) {
                var b = this.Ra;
                if (b !== a) {
                    var c = this.diagram;
                    if (null !== c)
                        for ("" === b && B("Cannot rename default Layer to: " + a), c = c.layers; c.next();) c.value.name ===
                            a && B("Layer.name is already present in this diagram: " + a);
                    this.Ra = a;
                    this.g("name", b, a);
                    for (a = this.Ca.iterator; a.next();) a.value.layerName = this.Ra
                }
            }
        },
        opacity: {
            get: function () {
                return this.qb
            },
            set: function (a) {
                var b = this.qb;
                b !== a && ((0 > a || 1 < a) && va(a, "0 <= value <= 1", ei, "opacity"), this.qb = a, this.g("opacity", b, a), a = this.diagram, null !== a && a.M())
            }
        },
        isTemporary: {
            get: function () {
                return this.u
            },
            set: function (a) {
                var b = this.u;
                b !== a && (this.u = a, this.g("isTemporary",
                    b, a))
            }
        },
        visible: {
            get: function () {
                return this.I
            },
            set: function (a) {
                var b = this.I;
                if (b !== a) {
                    this.I = a;
                    this.g("visible", b, a);
                    for (b = this.Ca.iterator; b.next();) b.value.Ob(a);
                    a = this.diagram;
                    null !== a && a.M()
                }
            }
        },
        pickable: {
            get: function () {
                return this.Bi
            },
            set: function (a) {
                var b = this.Bi;
                b !== a && (this.Bi = a, this.g("pickable", b, a))
            }
        },
        isBoundsIncluded: {
            get: function () {
                return this.l
            },
            set: function (a) {
                this.l !== a && (this.l = a, null !== this.diagram &&
                    this.diagram.Na())
            }
        },
        allowCopy: {
            get: function () {
                return this.Rh
            },
            set: function (a) {
                var b = this.Rh;
                b !== a && (this.Rh = a, this.g("allowCopy", b, a))
            }
        },
        allowDelete: {
            get: function () {
                return this.Sh
            },
            set: function (a) {
                var b = this.Sh;
                b !== a && (this.Sh = a, this.g("allowDelete", b, a))
            }
        },
        allowTextEdit: {
            get: function () {
                return this.ai
            },
            set: function (a) {
                var b = this.ai;
                b !== a && (this.ai = a, this.g("allowTextEdit", b, a))
            }
        },
        allowGroup: {
            get: function () {
                return this.Th
            },
            set: function (a) {
                var b = this.Th;
                b !== a && (this.Th = a, this.g("allowGroup", b, a))
            }
        },
        allowUngroup: {
            get: function () {
                return this.bi
            },
            set: function (a) {
                var b = this.bi;
                b !== a && (this.bi = a, this.g("allowUngroup", b, a))
            }
        },
        allowLink: {
            get: function () {
                return this.Uh
            },
            set: function (a) {
                var b = this.Uh;
                b !== a && (this.Uh = a, this.g("allowLink", b, a))
            }
        },
        allowRelink: {
            get: function () {
                return this.Wh
            },
            set: function (a) {
                var b =
                    this.Wh;
                b !== a && (this.Wh = a, this.g("allowRelink", b, a))
            }
        },
        allowMove: {
            get: function () {
                return this.Vh
            },
            set: function (a) {
                var b = this.Vh;
                b !== a && (this.Vh = a, this.g("allowMove", b, a))
            }
        },
        allowReshape: {
            get: function () {
                return this.Xh
            },
            set: function (a) {
                var b = this.Xh;
                b !== a && (this.Xh = a, this.g("allowReshape", b, a))
            }
        },
        allowResize: {
            get: function () {
                return this.Yh
            },
            set: function (a) {
                var b = this.Yh;
                b !== a && (this.Yh = a, this.g("allowResize", b, a))
            }
        },
        allowRotate: {
            get: function () {
                return this.Zh
            },
            set: function (a) {
                var b = this.Zh;
                b !== a && (this.Zh = a, this.g("allowRotate", b, a))
            }
        },
        allowSelect: {
            get: function () {
                return this.$h
            },
            set: function (a) {
                var b = this.$h;
                b !== a && (this.$h = a, this.g("allowSelect", b, a))
            }
        }
    });
    ei.prototype.findObjectsNear = ei.prototype.Ag;
    ei.prototype.findObjectsIn = ei.prototype.tf;
    ei.prototype.findObjectsAt = ei.prototype.Ti;
    ei.prototype.findObjectAt = ei.prototype.Ub;
    ei.className = "Layer";

    function R(a) {
        function b() {
            c.removeEventListener(x.document, "DOMContentLoaded", b, !1);
            c.setRTL()
        }
        1 < arguments.length && B("Diagram constructor can only take one optional argument, the DIV HTML element or its id.");
        li || (mi(), li = !0);
        Ya(this);
        ze = this;
        Qa = [];
        this.Rb = !0;
        this.Jc = new uh;
        this.Jc.Yd(this);
        this.jb = 17;
        this.nl = this.Pu = !1;
        this.zs = "default";
        this.La = null;
        var c = this;
        Ug && (null !== x.document.body ? this.setRTL() : c.addEventListener(x.document, "DOMContentLoaded", b, !1));
        this.Ja = new E;
        this.va = this.wa = 0;
        this.sa =
            null;
        this.jx = new H;
        this.bf = this.Db = null;
        this.aw();
        this.vj = null;
        this.$v();
        this.qb = 1;
        this.ma = (new I(NaN, NaN)).freeze();
        this.Nu = new I(NaN, NaN);
        this.yn = this.ya = 1;
        this.Kr = (new I(NaN, NaN)).freeze();
        this.Lr = NaN;
        this.ds = 1E-4;
        this.bs = 100;
        this.kb = new rd;
        this.$s = (new I(NaN, NaN)).freeze();
        this.Fr = (new N(NaN, NaN, NaN, NaN)).freeze();
        this.Fi = (new oc(0, 0, 0, 0)).freeze();
        this.Gi = Vh;
        this.Hs = !1;
        this.As = this.vs = null;
        this.Lg = ni;
        this.lj = Zc;
        this.Xf = ni;
        this.Xn = Zc;
        this.Mr = this.Jr = vc;
        this.Ac = !0;
        this.ll = !1;
        this.nd = new F;
        this.Sg =
            new H;
        this.Xk = !0;
        this.Zm = 250;
        this.jj = -1;
        this.an = (new oc(16, 16, 16, 16)).freeze();
        this.pj = this.we = !1;
        this.sj = !0;
        this.Uf = new ne;
        this.Uf.diagram = this;
        this.Pd = new ne;
        this.Pd.diagram = this;
        this.dh = new ne;
        this.dh.diagram = this;
        this.oe = this.Mf = null;
        this.Pj = !1;
        this.vr = this.wr = null;
        this.Vm = x.PointerEvent && (Ta || Ua || Va) && x.navigator && !1 !== x.navigator.msPointerEnabled;
        oi(this);
        this.zh = new F;
        this.Ur = !0;
        this.Vs = pi;
        this.uu = !1;
        this.Xs = Nf;
        this.Ia = null;
        qi.add("Model", ri);
        this.pr = this.sr = this.Ts = null;
        this.xn = this.mr = "auto";
        this.fg = this.gs = this.hg = this.ig = this.kg = this.Of = this.Sf = this.Nf = null;
        this.Ir = !1;
        this.Pf = this.ug = this.jg = this.gg = null;
        this.hs = !1;
        this.ts = {};
        this.Kj = [null, null];
        this.gr = null;
        this.tr = this.Ls = this.Ru = this.sg = !1;
        this.yu = !0;
        this.ni = this.Bc = !1;
        this.ac = null;
        var d = this;
        this.jd = function (a) {
            var b = d.partManager;
            if (a.model === b.diagram.model && b.diagram.Z) {
                b.diagram.Z = !1;
                try {
                    var c = a.change;
                    "" === a.modelChange && c === re && b.updateDataBindings(a.object, a.propertyName)
                } finally {
                    b.diagram.Z = !0
                }
            }
        };
        this.Ic = function (a) {
            d.partManager.doModelChanged(a)
        };
        this.$u = !0;
        this.Gd = -2;
        this.Ci = new H;
        this.ss = new E;
        this.Zf = !1;
        this.Sh = this.Rh = this.Uq = this.Mc = !0;
        this.Vq = !1;
        this.ar = this.Zq = this.$h = this.Zh = this.Yh = this.Xh = this.Vh = this.Wh = this.Uh = this.Yq = this.bi = this.Th = this.ai = this.Wq = !0;
        this.Yf = this.wu = !1;
        this.$q = this.Xq = this.dl = this.cl = !0;
        this.Gs = this.Cs = 16;
        this.Bs = this.vp = !1;
        this.wp = this.Es = null;
        this.Ds = this.Fs = 0;
        this.bb = (new oc(5)).freeze();
        this.Qu = (new F).freeze();
        this.cs = 999999999;
        this.ru = (new F).freeze();
        this.mi = this.li = this.ki = !0;
        this.Se = this.he = !1;
        this.ic =
            null;
        this.If = !0;
        this.ie = !1;
        this.Yw = new F;
        this.su = new F;
        this.Gb = null;
        this.Cl = 1;
        this.Su = 0;
        this.Rd = {
            scale: 1,
            position: new I,
            bounds: new N,
            Jv: !1
        };
        this.Zu = (new N(NaN, NaN, NaN, NaN)).freeze();
        this.Zl = (new M(NaN, NaN)).freeze();
        this.zn = (new N(NaN, NaN, NaN, NaN)).freeze();
        this.Vr = !1;
        this.qo = this.Vn = this.Ro = this.fu = this.eu = this.gu = this.ag = this.ah = this.Ye = this.zr = null;
        si(this);
        this.Fb = null;
        this.Un = !1;
        this.mj = null;
        this.partManager = new ri;
        this.toolManager = new Oa;
        this.toolManager.initializeStandardTools();
        this.currentTool =
            this.defaultTool = this.toolManager;
        this.yr = null;
        this.Qk = new Re;
        this.ns = this.ms = null;
        this.Op = !1;
        this.commandHandler = zi();
        this.model = Ai();
        this.sg = !0;
        Bi(this);
        this.layout = new Ci;
        this.sg = !1;
        this.Rw = this.ju = null;
        this.Sb = 1;
        this.uh = null;
        this.Bo = 1;
        this.Io = 0;
        this.Jo = [0, 0, 0, 0, 0];
        this.Ko = 0;
        this.od = 1;
        this.Aj = 0;
        this.lo = new I;
        this.Us = 500;
        this.$m = new I;
        this.je = !1;
        this.preventDefault = this.Ht = this.vm = this.wm = this.um = this.tm = this.rk = this.tk = this.sk = this.pk = this.qk = this.vw = this.nw = this.ow = this.pw = this.nh = this.Gl = this.mh =
            this.Fl = null;
        this.$n = !1;
        this.ji = new Di;
        this.Pp = !1;
        void 0 !== a && Ei(this, a);
        this.In = null;
        this.Jn = Jb;
        this.Rb = !1
    }
    R.prototype.clear = function () {
        this.animationManager.Xc();
        this.model.clear();
        Fi = null;
        Gi = "";
        Hi(this, !1);
        this.Na();
        Ii(this);
        this.M()
    };

    function Hi(a, b) {
        a.animationManager.Xc(!0);
        a.Qu = (new F).freeze();
        a.ru = (new F).freeze();
        var c = a.skipsUndoManager;
        null !== a.model && (a.skipsUndoManager = !0);
        var d = null;
        null !== a.Fb && (d = a.Fb.part, null !== d && a.remove(d));
        var e = [],
            f = a.Ja.length;
        if (b) {
            for (b = 0; b < f; b++)
                for (var g = a.Ja.j[b].parts; g.next();) {
                    var h = g.value;
                    h !== d && null === h.data && e.push(h)
                }
            for (b = 0; b < e.length; b++) a.remove(e[b])
        }
        for (b = 0; b < f; b++) a.Ja.j[b].clear();
        a.partManager.clear();
        a.nd.clear();
        a.Sg.clear();
        a.zh.clear();
        a.mj = null;
        Ga = [];
        null !== d && (a.add(d),
            a.partManager.parts.remove(d));
        null !== a.model && (a.skipsUndoManager = c);
        return e
    }

    function zi() {
        return null
    }
    R.prototype.reset = function () {
        this.clear();
        this.Rb = !0;
        this.Jc = new uh;
        this.Jc.Yd(this);
        this.jb = 17;
        this.nl = this.Pu = !1;
        this.zs = "default";
        this.Ja = new E;
        this.jx = new H;
        this.bf = null;
        this.aw();
        this.vj = null;
        this.$v();
        this.qb = 1;
        this.ma = (new I(NaN, NaN)).freeze();
        this.Nu = new I(NaN, NaN);
        this.yn = this.ya = 1;
        this.Kr = (new I(NaN, NaN)).freeze();
        this.Lr = NaN;
        this.ds = 1E-4;
        this.bs = 100;
        this.kb = new rd;
        this.$s = (new I(NaN, NaN)).freeze();
        this.Fr = (new N(NaN, NaN, NaN, NaN)).freeze();
        this.Fi = (new oc(0, 0, 0, 0)).freeze();
        this.Gi = Vh;
        this.Hs = !1;
        this.As = this.vs = null;
        this.Lg = ni;
        this.lj = Zc;
        this.Xf = ni;
        this.Xn = Zc;
        this.Mr = this.Jr = vc;
        this.Ac = !0;
        this.ll = !1;
        this.nd = new F;
        this.Sg = new H;
        this.Xk = !0;
        this.Zm = 250;
        this.jj = -1;
        this.an = (new oc(16, 16, 16, 16)).freeze();
        this.pj = this.we = !1;
        this.sj = !0;
        this.Uf = new ne;
        this.Uf.diagram = this;
        this.Pd = new ne;
        this.Pd.diagram = this;
        this.dh = new ne;
        this.dh.diagram = this;
        this.oe = this.Mf = null;
        this.Pj = !1;
        this.vr = this.wr = null;
        this.Vm = x.PointerEvent && (Ta || Ua || Va) && x.navigator && !1 !== x.navigator.msPointerEnabled;
        oi(this);
        this.zh =
            new F;
        this.Ur = !0;
        this.Vs = pi;
        this.uu = !1;
        this.Xs = Nf;
        this.pr = this.sr = this.Ts = null;
        this.xn = this.mr = "auto";
        this.fg = this.gs = this.hg = this.ig = this.kg = this.Of = this.Sf = this.Nf = null;
        this.Ir = !1;
        this.Pf = this.ug = this.jg = this.gg = null;
        this.hs = !1;
        this.ts = {};
        this.Kj = [null, null];
        this.gr = null;
        this.tr = this.Ls = this.Ru = this.sg = !1;
        this.yu = !0;
        this.ni = this.Bc = !1;
        this.$u = !0;
        this.Gd = -2;
        this.Ci = new H;
        this.ss = new E;
        this.Zf = !1;
        this.Sh = this.Rh = this.Uq = this.Mc = !0;
        this.Vq = !1;
        this.ar = this.Zq = this.$h = this.Zh = this.Yh = this.Xh = this.Vh =
            this.Wh = this.Uh = this.Yq = this.bi = this.Th = this.ai = this.Wq = !0;
        this.Yf = this.wu = !1;
        this.$q = this.Xq = this.dl = this.cl = !0;
        this.Gs = this.Cs = 16;
        this.Bs = this.vp = !1;
        this.Ds = this.Fs = 0;
        this.bb = (new oc(5)).freeze();
        this.Qu = (new F).freeze();
        this.cs = 999999999;
        this.ru = (new F).freeze();
        this.mi = this.li = this.ki = !0;
        this.Se = this.he = !1;
        this.ic = null;
        this.If = !0;
        this.ie = !1;
        this.Yw = new F;
        this.su = new F;
        this.Gb = null;
        this.Cl = 1;
        this.Su = 0;
        this.Rd = {
            scale: 1,
            position: new I,
            bounds: new N,
            Jv: !1
        };
        this.Zu = (new N(NaN, NaN, NaN, NaN)).freeze();
        this.Zl = (new M(NaN, NaN)).freeze();
        this.zn = (new N(NaN, NaN, NaN, NaN)).freeze();
        this.Vr = !1;
        this.qo = this.Vn = this.Ro = this.fu = this.eu = this.gu = this.ag = this.ah = this.Ye = null;
        si(this);
        this.Fb = null;
        this.Un = !1;
        this.mj = null;
        this.partManager = new ri;
        this.toolManager = new Oa;
        this.toolManager.initializeStandardTools();
        this.currentTool = this.defaultTool = this.toolManager;
        this.yr = null;
        this.Qk = new Re;
        this.ns = this.ms = null;
        this.Op = !1;
        this.commandHandler = zi();
        this.sg = !0;
        Bi(this);
        this.layout = new Ci;
        this.sg = !1;
        this.model = Ai();
        this.model.undoManager = new we;
        this.ie = !1;
        this.sj = !0;
        this.we = !1;
        this.Sb = 1;
        this.uh = null;
        this.Bo = 1;
        this.Io = 0;
        this.Jo = [0, 0, 0, 0, 0];
        this.Ko = 0;
        this.od = 1;
        this.Aj = 0;
        this.lo = new I;
        this.Us = 500;
        this.$m = new I;
        this.je = !1;
        this.nh = this.Gl = this.mh = this.Fl = null;
        this.Pp = this.$n = !1;
        this.In = null;
        this.Jn = Jb;
        this.Rb = !1;
        this.M()
    };

    function si(a) {
        a.Ye = new H;
        var b = new W,
            c = new Wg;
        c.bind(new Ji("text", "", Ja));
        b.add(c);
        a.gu = b;
        a.Ye.add("", b);
        b = new W;
        c = new Wg;
        c.stroke = "brown";
        c.bind(new Ji("text", "", Ja));
        b.add(c);
        a.Ye.add("Comment", b);
        b = new W;
        b.selectable = !1;
        b.avoidable = !1;
        c = new Lf;
        c.figure = "Ellipse";
        c.fill = "black";
        c.stroke = null;
        c.desiredSize = (new M(3, 3)).ca();
        b.add(c);
        a.Ye.add("LinkLabel", b);
        a.ah = new H;
        b = new T;
        b.selectionObjectName = "GROUPPANEL";
        b.type = X.Vertical;
        c = new Wg;
        c.font = "bold 12pt sans-serif";
        c.bind(new Ji("text", "", Ja));
        b.add(c);
        c = new X(X.Auto);
        c.name = "GROUPPANEL";
        var d = new Lf;
        d.figure = "Rectangle";
        d.fill = "rgba(128,128,128,0.2)";
        d.stroke = "black";
        c.add(d);
        d = new xg;
        d.padding = (new oc(5, 5, 5, 5)).ca();
        c.add(d);
        b.add(c);
        a.eu = b;
        a.ah.add("", b);
        a.ag = new H;
        b = new S;
        c = new Lf;
        c.isPanelMain = !0;
        b.add(c);
        c = new Lf;
        c.toArrow = "Standard";
        c.fill = "black";
        c.stroke = null;
        c.strokeWidth = 0;
        b.add(c);
        a.fu = b;
        a.ag.add("", b);
        b = new S;
        c = new Lf;
        c.isPanelMain = !0;
        c.stroke = "brown";
        b.add(c);
        a.ag.add("Comment", b);
        b = new Je;
        b.type = X.Auto;
        c = new Lf;
        c.fill = null;
        c.stroke = "dodgerblue";
        c.strokeWidth = 3;
        b.add(c);
        c = new xg;
        c.margin = (new oc(1.5, 1.5, 1.5, 1.5)).ca();
        b.add(c);
        a.Ro = b;
        a.Vn = b;
        b = new Je;
        b.type = X.Link;
        c = new Lf;
        c.isPanelMain = !0;
        c.fill = null;
        c.stroke = "dodgerblue";
        c.strokeWidth = 3;
        b.add(c);
        a.qo = b
    }
    R.prototype.setRTL = function (a) {
        a = void 0 === a ? this.div : a;
        null === a && (a = x.document.body);
        var b = ta("div");
        b.dir = "rtl";
        b.style.cssText = "font-size: 14px; width: 1px; height: 1px; position: absolute; top: -1000px; overflow: scroll;";
        b.textContent = "A";
        a.appendChild(b);
        var c = "reverse";
        0 < b.scrollLeft ? c = "default" : (b.scrollLeft = 1, 0 === b.scrollLeft && (c = "negative"));
        a.removeChild(b);
        this.zs = c
    };
    R.prototype.setScrollWidth = function (a) {
        a = void 0 === a ? this.div : a;
        null === a && (a = x.document.body);
        var b = 0;
        if (Ug) {
            var c = Ki;
            b = Li;
            null === c && (c = Ki = ta("p"), c.style.width = "100%", c.style.height = "200px", c.style.boxSizing = "content-box", b = Li = ta("div"), b.style.position = "absolute", b.style.visibility = "hidden", b.style.width = "200px", b.style.height = "150px", b.style.boxSizing = "content-box", b.appendChild(c));
            b.style.overflow = "hidden";
            a.appendChild(b);
            var d = c.offsetWidth;
            b.style.overflow = "scroll";
            c = c.offsetWidth;
            d === c && (c =
                b.clientWidth);
            a.removeChild(b);
            b = d - c;
            0 !== b || Xa || (b = 11)
        }
        this.jb = b;
        this.Pu = !0
    };
    R.prototype.cb = function (a) {
        a.classType === R && (this.autoScale = a)
    };
    R.prototype.toString = function (a) {
        void 0 === a && (a = 0);
        var b = "";
        this.div && this.div.id && (b = this.div.id);
        b = 'Diagram "' + b + '"';
        if (0 >= a) return b;
        for (var c = this.Ja.iterator; c.next();) b += "\n  " + c.value.toString(a - 1);
        return b
    };
    R.prototype.addEventListener = function (a, b, c, d) {
        a.addEventListener(b, c, d)
    };
    R.prototype.removeEventListener = function (a, b, c, d) {
        a.removeEventListener(b, c, d)
    };

    function Mi(a) {
        var b = a.sa.Ea;
        b instanceof HTMLCanvasElement && (a.Vm ? (a.addEventListener(b, "pointerdown", a.tm, !1), a.addEventListener(b, "pointermove", a.um, !1), a.addEventListener(b, "pointerup", a.wm, !1), a.addEventListener(b, "pointerout", a.vm, !1)) : (a.addEventListener(b, "touchstart", a.pw, !1), a.addEventListener(b, "touchmove", a.ow, !1), a.addEventListener(b, "touchend", a.nw, !1), a.addEventListener(b, "mousemove", a.qk, !1), a.addEventListener(b, "mousedown", a.pk, !1), a.addEventListener(b, "mouseup", a.sk, !1), a.addEventListener(b,
            "mouseout", a.rk, !1)), a.addEventListener(b, "mouseenter", a.dz, !1), a.addEventListener(b, "mouseleave", a.ez, !1), a.addEventListener(b, "wheel", a.tk, !1), a.addEventListener(b, "keydown", a.Xz, !1), a.addEventListener(b, "keyup", a.Yz, !1), a.addEventListener(b, "blur", a.Ry, !1), a.addEventListener(b, "focus", a.Sy, !1), a.addEventListener(b, "selectstart", function (a) {
            a.preventDefault();
            return !1
        }, !1), a.addEventListener(b, "contextmenu", function (a) {
            a.preventDefault();
            return !1
        }, !1), a.addEventListener(b, "gesturestart", function (b) {
            a.toolManager.gestureBehavior !==
                Me && (a.toolManager.gestureBehavior === Le ? b.preventDefault() : a.je && a.lastInput.handled || (b.preventDefault(), a.Cl = a.scale, a.currentTool.doCancel()))
        }, !1), a.addEventListener(b, "gesturechange", function (b) {
            if (a.toolManager.gestureBehavior !== Me)
                if (a.toolManager.gestureBehavior === Le) b.preventDefault();
                else if (!a.je || !a.lastInput.handled) {
                b.preventDefault();
                var c = b.scale;
                if (null !== a.Cl) {
                    var e = a.sa.getBoundingClientRect();
                    b = new I(b.pageX - window.scrollX - a.wa / e.width * e.left, b.pageY - window.scrollY - a.va / e.height *
                        e.top);
                    c = a.Cl * c;
                    e = a.commandHandler;
                    if (c !== a.scale && e.canResetZoom(c)) {
                        var f = a.zoomPoint;
                        a.zoomPoint = b;
                        e.resetZoom(c);
                        a.zoomPoint = f
                    }
                }
            }
        }, !1), a.addEventListener(x, "resize", a.vw, !1))
    }

    function Ue(a) {
        30 < a.Io && (a.uh = 1)
    }

    function kf(a, b) {
        null !== a.uh && (a.uh = null, b && a.Ht(), a.Io = 0, a.Jo = [0, 0, 0, 0, 0], a.Ko = 0)
    }
    R.prototype.computePixelRatio = function () {
        return null !== this.uh ? this.uh : x.devicePixelRatio || 1
    };
    R.prototype.doMouseMove = function () {
        this.currentTool.doMouseMove()
    };
    R.prototype.doMouseDown = function () {
        this.currentTool.doMouseDown()
    };
    R.prototype.doMouseUp = function () {
        this.currentTool.doMouseUp()
    };
    R.prototype.doMouseWheel = function () {
        this.currentTool.doMouseWheel()
    };
    R.prototype.doKeyDown = function () {
        this.currentTool.doKeyDown()
    };
    R.prototype.doKeyUp = function () {
        this.currentTool.doKeyUp()
    };
    R.prototype.doFocus = function () {
        this.focus()
    };
    R.prototype.focus = function () {
        if (this.sa)
            if (this.scrollsPageOnFocus) this.sa.focus();
            else {
                var a = x.scrollX || x.pageXOffset,
                    b = x.scrollY || x.pageYOffset;
                this.sa.focus();
                x.scrollTo(a, b)
            }
    };
    R.prototype.Sy = function () {
        this.B.R("GainedFocus")
    };
    R.prototype.Ry = function () {
        this.B.R("LostFocus")
    };

    function Eh(a) {
        if (null !== a.sa) {
            var b = a.La;
            if (0 !== b.clientWidth && 0 !== b.clientHeight) {
                a.Pu || a.setScrollWidth();
                var c = a.Se ? a.jb : 0,
                    d = a.he ? a.jb : 0,
                    e = a.Sb;
                a.Sb = a.computePixelRatio();
                a.Sb !== e && (a.ll = !0, a.Pb());
                if (b.clientWidth !== a.wa + c || b.clientHeight !== a.va + d) a.li = !0, a.Ac = !0, b = a.layout, null !== b && b.isViewportSized && a.autoScale === ni && (a.pj = !0, b.C()), a.Bc || a.Pb()
            }
        }
    }

    function Bi(a) {
        var b = new ei;
        b.name = "Background";
        a.$l(b);
        b = new ei;
        b.name = "";
        a.$l(b);
        b = new ei;
        b.name = "Foreground";
        a.$l(b);
        b = new ei;
        b.name = "Adornment";
        b.isTemporary = !0;
        a.$l(b);
        b = new ei;
        b.name = "Tool";
        b.isTemporary = !0;
        b.isBoundsIncluded = !0;
        a.$l(b);
        b = new ei;
        b.name = "Grid";
        b.allowSelect = !1;
        b.pickable = !1;
        b.isTemporary = !0;
        a.tx(b, a.im("Background"))
    }

    function Ni(a) {
        a.Fb = new X(X.Grid);
        a.Fb.name = "GRID";
        var b = new Lf;
        b.figure = "LineH";
        b.stroke = "lightgray";
        b.strokeWidth = .5;
        b.interval = 1;
        a.Fb.add(b);
        b = new Lf;
        b.figure = "LineH";
        b.stroke = "gray";
        b.strokeWidth = .5;
        b.interval = 5;
        a.Fb.add(b);
        b = new Lf;
        b.figure = "LineH";
        b.stroke = "gray";
        b.strokeWidth = 1;
        b.interval = 10;
        a.Fb.add(b);
        b = new Lf;
        b.figure = "LineV";
        b.stroke = "lightgray";
        b.strokeWidth = .5;
        b.interval = 1;
        a.Fb.add(b);
        b = new Lf;
        b.figure = "LineV";
        b.stroke = "gray";
        b.strokeWidth = .5;
        b.interval = 5;
        a.Fb.add(b);
        b = new Lf;
        b.figure =
            "LineV";
        b.stroke = "gray";
        b.strokeWidth = 1;
        b.interval = 10;
        a.Fb.add(b);
        b = new U;
        b.add(a.Fb);
        b.layerName = "Grid";
        b.zOrder = 0;
        b.isInDocumentBounds = !1;
        b.isAnimated = !1;
        b.pickable = !1;
        b.locationObjectName = "GRID";
        a.add(b);
        a.partManager.parts.remove(b);
        a.Fb.visible = !1
    }

    function Oi() {
        this.B.Bs ? this.B.Bs = !1 : this.B.isEnabled ? this.B.Ex(this) : Pi(this.B)
    }

    function Qi(a) {
        this.B.isEnabled ? (this.B.Fs = a.target.scrollTop, this.B.Ds = a.target.scrollLeft) : Pi(this.B)
    }
    R.prototype.Ex = function (a) {
        if (null !== this.sa) {
            this.vp = !0;
            var b = this.documentBounds,
                c = this.viewportBounds,
                d = this.Fi,
                e = b.x - d.left,
                f = b.y - d.top,
                g = b.width + d.left + d.right,
                h = b.height + d.top + d.bottom,
                k = b.right + d.right;
            d = b.bottom + d.bottom;
            var l = c.x;
            b = c.y;
            var m = c.width,
                n = c.height,
                p = c.right,
                r = c.bottom;
            c = this.scale;
            var q = a.scrollLeft;
            if (this.nl) switch (this.zs) {
                case "negative":
                    q = q + a.scrollWidth - a.clientWidth;
                    break;
                case "reverse":
                    q = a.scrollWidth - q - a.clientWidth
            }
            var u = q;
            m < g || n < h ? (q = I.allocAt(this.position.x, this.position.y),
                this.allowHorizontalScroll && this.Ds !== u && (q.x = u / c + e, this.Ds = u), this.allowVerticalScroll && this.Fs !== a.scrollTop && (q.y = a.scrollTop / c + f, this.Fs = a.scrollTop), this.position = q, I.free(q), this.li = this.vp = !1) : (q = I.alloc(), a.Ay && this.allowHorizontalScroll && (e < l && (this.position = q.h(u + e, this.position.y)), k > p && (this.position = q.h(-(this.Es.scrollWidth - this.wa) + u - this.wa / c + k, this.position.y))), a.By && this.allowVerticalScroll && (f < b && (this.position = q.h(this.position.x, a.scrollTop + f)), d > r && (this.position = q.h(this.position.x,
                -(this.Es.scrollHeight - this.va) + a.scrollTop - this.va / c + d))), I.free(q), Ri(this), this.li = this.vp = !1, b = this.documentBounds, c = this.viewportBounds, k = b.right, p = c.right, d = b.bottom, r = c.bottom, e = b.x, l = c.x, f = b.y, b = c.y, m >= g && e >= l && k <= p && (this.wp.style.width = "1px"), n >= h && f >= b && d <= r && (this.wp.style.height = "1px"))
        }
    };
    R.prototype.computeBounds = function () {
        0 < this.nd.count && Si(this);
        return Ti(this)
    };

    function Ti(a) {
        if (a.fixedBounds.v()) {
            var b = a.fixedBounds.copy();
            b.cq(a.bb);
            return b
        }
        for (var c = !0, d = a.Ja.j, e = d.length, f = 0; f < e; f++) {
            var g = d[f];
            if (g.visible && (!g.isTemporary || g.isBoundsIncluded)) {
                g = g.Ca.j;
                for (var h = g.length, k = 0; k < h; k++) {
                    var l = g[k];
                    l.isInDocumentBounds && l.isVisible() && (l = l.actualBounds, l.v() && (c ? (c = !1, b = l.copy()) : b.Hc(l)))
                }
            }
        }
        c && (b = new N(0, 0, 0, 0));
        b.cq(a.bb);
        return b
    }
    R.prototype.computePartsBounds = function (a, b) {
        void 0 === b && (b = !1);
        var c = null;
        if (Aa(a))
            for (var d = 0; d < a.length; d++) {
                var e = a[d];
                !b && e instanceof S || (e.yb(), null === c ? c = e.actualBounds.copy() : c.Hc(e.actualBounds))
            } else
                for (a = a.iterator; a.next();) d = a.value, !b && d instanceof S || (d.yb(), null === c ? c = d.actualBounds.copy() : c.Hc(d.actualBounds));
        return null === c ? new N(NaN, NaN, 0, 0) : c
    };

    function Ui(a, b) {
        if ((b || a.ie) && !a.Rb && null !== a.sa && a.documentBounds.v()) {
            if (b) {
                var c = a.initialPosition;
                if (c.v()) {
                    a.position = c;
                    return
                }
                c = I.alloc();
                c.dj(a.documentBounds, a.initialDocumentSpot);
                var d = a.viewportBounds;
                d = N.allocAt(0, 0, d.width, d.height);
                var e = I.alloc();
                e.dj(d, a.initialViewportSpot);
                e.h(c.x - e.x, c.y - e.y);
                a.position = e;
                N.free(d);
                I.free(e);
                I.free(c)
            }
            a.Rb = !0;
            c = a.Lg;
            b && a.Xf !== ni && (c = a.Xf);
            d = c !== ni ? Vi(a, c) : a.scale;
            c = a.viewportBounds.copy();
            e = a.wa / d;
            var f = a.va / d,
                g = a.lj,
                h = a.Xn;
            b && !g.eb() && (h.eb() ||
                h.Mb()) && (g = h.Mb() ? Ac : h);
            Wi(a, a.documentBounds, e, f, g, b);
            b = a.scale;
            a.scale = d;
            a.Rb = !1;
            d = a.viewportBounds;
            d.Ma(c) || a.Bq(c, d, b, !1);
            Xi(a);
            Yi(a, !0, !1)
        }
    }

    function Vi(a, b) {
        var c = a.yn;
        if (null === a.sa) return c;
        Ii(a);
        var d = a.documentBounds;
        if (!d.v()) return c;
        var e = d.width;
        d = d.height;
        var f = a.wa + (a.Se ? a.jb : 0),
            g = a.va + (a.he ? a.jb : 0),
            h = f / e,
            k = g / d;
        return b === Zi ? (b = Math.min(k, h), b > c && (b = c), b < a.minScale && (b = a.minScale), b > a.maxScale && (b = a.maxScale), b) : b === $i ? (b = k > h ? (g - a.jb) / d : (f - a.jb) / e, b > c && (b = c), b < a.minScale && (b = a.minScale), b > a.maxScale && (b = a.maxScale), b) : a.scale
    }
    R.prototype.zoomToFit = function () {
        var a = this.Gi;
        this.Gi = Vh;
        this.scale = Vi(this, Zi);
        a !== Vh && (Ui(this, !1), Wi(this, this.documentBounds, this.wa / this.ya, this.va / this.ya, this.lj, !1));
        this.Gi = a
    };
    t = R.prototype;
    t.EA = function (a, b) {
        void 0 === b && (b = Zi);
        var c = a.width,
            d = a.height;
        if (!(0 === c || 0 === d || isNaN(c) && isNaN(d))) {
            var e = 1;
            if (b === Zi || b === $i)
                if (isNaN(c)) e = this.viewportBounds.height * this.scale / d;
                else if (isNaN(d)) e = this.viewportBounds.width * this.scale / c;
            else {
                e = this.wa;
                var f = this.va;
                e = b === $i ? f / d > e / c ? (f - (this.he ? this.jb : 0)) / d : (e - (this.Se ? this.jb : 0)) / c : Math.min(f / d, e / c)
            }
            this.scale = e;
            this.position = new I(a.x, a.y)
        }
    };
    t.My = function (a, b) {
        Ii(this);
        var c = this.documentBounds,
            d = this.viewportBounds;
        this.position = new I(c.x + (a.x * c.width + a.offsetX) - (b.x * d.width - b.offsetX), c.y + (a.y * c.height + a.offsetY) - (b.y * d.height - b.offsetY))
    };
    t.Az = function (a) {
        if (a instanceof Y) {
            this.In = a;
            var b = I.alloc();
            this.Jn = this.Nq(a.ga(vc, b));
            I.free(b)
        } else this.In = null, this.Jn = Jb
    };

    function Wi(a, b, c, d, e, f) {
        var g = I.allocAt(a.ma.x, a.ma.y),
            h = g.x,
            k = g.y;
        if (null !== a.In) {
            var l = I.alloc();
            l = a.In.ga(vc, l);
            h = l.x - a.Jn.x / a.scale;
            k = l.y - a.Jn.y / a.scale;
            e = uc;
            I.free(l)
        }
        if (f || a.scrollMode === Vh) e.eb() && (c > b.width && (h = b.x + (e.x * b.width + e.offsetX) - (e.x * c - e.offsetX)), d > b.height && (k = b.y + (e.y * b.height + e.offsetY) - (e.y * d - e.offsetY))), e = a.Fi, f = c - b.width, c < b.width + e.left + e.right ? (h = Math.min(h + c / 2, b.right + Math.max(f, e.right) - c / 2), h = Math.max(h, b.left - Math.max(f, e.left) + c / 2), h -= c / 2) : h > b.left ? h = b.left : h < b.right -
            c && (h = b.right - c), c = d - b.height, d < b.height + e.top + e.bottom ? (k = Math.min(k + d / 2, b.bottom + Math.max(c, e.bottom) - d / 2), k = Math.max(k, b.top - Math.max(c, e.top) + d / 2), k -= d / 2) : k > b.top ? k = b.top : k < b.bottom - d && (k = b.bottom - d);
        g.x = isFinite(h) ? h : -a.bb.left;
        g.y = isFinite(k) ? k : -a.bb.top;
        null !== a.positionComputation && (b = a.positionComputation(a, g), g.x = b.x, g.y = b.y);
        a.Jc.qc && Oh(a.Jc, a.ma, g);
        a.ma.h(g.x, g.y);
        I.free(g)
    }
    t.jm = function (a, b) {
        void 0 === b && (b = !0);
        if (b) {
            if (a = vf(this, a, function (a) {
                    return a.part
                }, function (a) {
                    return a.canSelect()
                }), a instanceof U) return a
        } else if (a = vf(this, a, function (a) {
                return a.part
            }), a instanceof U) return a;
        return null
    };
    t.Ub = function (a, b, c) {
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        Si(this);
        for (var d = this.Ja.iteratorBackwards; d.next();) {
            var e = d.value;
            if (e.visible && (e = e.Ub(a, b, c), null !== e)) return e
        }
        return null
    };

    function vf(a, b, c, d) {
        void 0 === c && (c = null);
        void 0 === d && (d = null);
        Si(a);
        for (a = a.Ja.iteratorBackwards; a.next();) {
            var e = a.value;
            if (e.visible && !e.isTemporary && (e = e.Ub(b, c, d), null !== e)) return e
        }
        return null
    }
    t.nz = function (a, b, c) {
        void 0 === b && (b = !0);
        return aj(this, a, function (a) {
            return a.part
        }, b ? function (a) {
            return a instanceof U && a.canSelect()
        } : null, c)
    };

    function aj(a, b, c, d, e) {
        void 0 === c && (c = null);
        void 0 === d && (d = null);
        e instanceof E || e instanceof F || (e = new F);
        Si(a);
        for (a = a.Ja.iteratorBackwards; a.next();) {
            var f = a.value;
            f.visible && !f.isTemporary && f.Ti(b, c, d, e)
        }
        return e
    }
    t.Ti = function (a, b, c, d) {
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        d instanceof E || d instanceof F || (d = new F);
        Si(this);
        for (var e = this.Ja.iteratorBackwards; e.next();) {
            var f = e.value;
            f.visible && f.Ti(a, b, c, d)
        }
        return d
    };
    t.Mx = function (a, b, c, d) {
        void 0 === b && (b = !1);
        void 0 === c && (c = !0);
        return bj(this, a, function (a) {
            return a instanceof U && (!c || a.canSelect())
        }, b, d)
    };
    t.tf = function (a, b, c, d, e) {
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        void 0 === d && (d = !1);
        e instanceof E || e instanceof F || (e = new F);
        Si(this);
        for (var f = this.Ja.iteratorBackwards; f.next();) {
            var g = f.value;
            g.visible && g.tf(a, b, c, d, e)
        }
        return e
    };
    t.uv = function (a, b, c, d, e, f) {
        var g = new F;
        Si(this);
        for (var h = this.Ja.iteratorBackwards; h.next();) {
            var k = h.value;
            k.visible && k.uv(a, b, c, d, g, e, f)
        }
        return g
    };

    function bj(a, b, c, d, e) {
        var f = null;
        void 0 === f && (f = null);
        void 0 === c && (c = null);
        void 0 === d && (d = !1);
        e instanceof E || e instanceof F || (e = new F);
        Si(a);
        for (a = a.Ja.iteratorBackwards; a.next();) {
            var g = a.value;
            g.visible && !g.isTemporary && g.tf(b, f, c, d, e)
        }
        return e
    }
    t.oz = function (a, b, c, d, e) {
        void 0 === c && (c = !0);
        void 0 === d && (d = !0);
        return cj(this, a, b, function (a) {
            return a instanceof U && (!d || a.canSelect())
        }, c, e)
    };
    t.Ag = function (a, b, c, d, e, f) {
        void 0 === c && (c = null);
        void 0 === d && (d = null);
        void 0 === e && (e = !0);
        if (!1 !== e && !0 !== e) {
            if (e instanceof E || e instanceof F) f = e;
            e = !0
        }
        f instanceof E || f instanceof F || (f = new F);
        Si(this);
        for (var g = this.Ja.iteratorBackwards; g.next();) {
            var h = g.value;
            h.visible && h.Ag(a, b, c, d, e, f)
        }
        return f
    };

    function cj(a, b, c, d, e, f) {
        var g = null;
        void 0 === g && (g = null);
        void 0 === d && (d = null);
        void 0 === e && (e = !0);
        if (!1 !== e && !0 !== e) {
            if (e instanceof E || e instanceof F) f = e;
            e = !0
        }
        f instanceof E || f instanceof F || (f = new F);
        Si(a);
        for (a = a.Ja.iteratorBackwards; a.next();) {
            var h = a.value;
            h.visible && !h.isTemporary && h.Ag(b, c, g, d, e, f)
        }
        return f
    }
    R.prototype.acceptEvent = function (a) {
        return dj(this, a, a instanceof MouseEvent)
    };

    function dj(a, b, c) {
        var d = a.Pd;
        a.Pd = a.dh;
        a.dh = d;
        d.diagram = a;
        d.event = b;
        c ? ej(a, b, d) : (d.viewPoint = a.Pd.viewPoint, d.documentPoint = a.Pd.documentPoint);
        a = 0;
        b.ctrlKey && (a += 1);
        b.altKey && (a += 2);
        b.shiftKey && (a += 4);
        b.metaKey && (a += 8);
        d.modifiers = a;
        d.button = b.button;
        void 0 === b.buttons || Sa || (d.buttons = b.buttons);
        Wa && 0 === b.button && b.ctrlKey && (d.button = 2);
        d.down = !1;
        d.up = !1;
        d.clickCount = 1;
        d.delta = 0;
        d.handled = !1;
        d.bubbles = !1;
        d.timestamp = b.timeStamp;
        d.isMultiTouch = !1;
        d.targetDiagram = fj(b);
        d.targetObject = null;
        return d
    }

    function fj(a) {
        var b = a.target.B;
        if (!b) {
            var c = a.path;
            c || "function" !== typeof a.composedPath || (c = a.composedPath());
            c && c[0] && (b = c[0].B)
        }
        return b ? b : null
    }

    function gj(a, b, c, d) {
        var e = hj(a, b, !0, !1, !0, d);
        ej(a, c, e);
        e.targetDiagram = fj(b);
        e.targetObject = null;
        d || e.clone(a.Uf);
        return e
    }

    function ij(a, b, c, d) {
        var e;
        d = hj(a, b, !1, !1, !1, d);
        null !== c ? ((e = x.document.elementFromPoint(c.clientX, c.clientY)) && e.B ? (b = c, c = e.B) : (b = void 0 !== b.targetTouches ? b.targetTouches[0] : b, c = a), d.targetDiagram = c, ej(a, b, d)) : null !== a.Pd ? (d.documentPoint = a.Pd.documentPoint, d.viewPoint = a.Pd.viewPoint, d.targetDiagram = a.Pd.targetDiagram) : null !== a.Uf && (d.documentPoint = a.Uf.documentPoint, d.viewPoint = a.Uf.viewPoint, d.targetDiagram = a.Uf.targetDiagram);
        d.targetObject = null;
        return d
    }

    function hj(a, b, c, d, e, f) {
        var g = a.Pd;
        a.Pd = a.dh;
        a.dh = g;
        g.diagram = a;
        g.clickCount = 1;
        var h = g.delta = 0;
        b.ctrlKey && (h += 1);
        b.altKey && (h += 2);
        b.shiftKey && (h += 4);
        b.metaKey && (h += 8);
        g.modifiers = h;
        g.button = 0;
        g.buttons = 1;
        g.event = b;
        g.timestamp = b.timeStamp;
        a.Vm && b instanceof x.PointerEvent && "touch" !== b.pointerType && (g.button = b.button, void 0 === b.buttons || Sa || (g.buttons = b.buttons), Wa && 0 === b.button && b.ctrlKey && (g.button = 2));
        g.down = c;
        g.up = d;
        g.handled = !1;
        g.bubbles = e;
        g.isMultiTouch = f;
        return g
    }

    function jj(a, b) {
        if (a.bubbles) return !0;
        void 0 !== b.stopPropagation && b.stopPropagation();
        !1 !== b.cancelable && b.preventDefault();
        b.cancelBubble = !0;
        return !1
    }
    R.prototype.Xz = function (a) {
        var b = this.B;
        if (!this.B.isEnabled) return !1;
        var c = dj(b, a, !1);
        c.key = String.fromCharCode(a.which);
        c.down = !0;
        switch (a.which) {
            case 8:
                c.key = "Backspace";
                break;
            case 33:
                c.key = "PageUp";
                break;
            case 34:
                c.key = "PageDown";
                break;
            case 35:
                c.key = "End";
                break;
            case 36:
                c.key = "Home";
                break;
            case 37:
                c.key = "Left";
                break;
            case 38:
                c.key = "Up";
                break;
            case 39:
                c.key = "Right";
                break;
            case 40:
                c.key = "Down";
                break;
            case 45:
                c.key = "Insert";
                break;
            case 46:
                c.key = "Del";
                break;
            case 48:
                c.key = "0";
                break;
            case 187:
            case 61:
            case 107:
                c.key =
                    "Add";
                break;
            case 189:
            case 173:
            case 109:
                c.key = "Subtract";
                break;
            case 27:
                c.key = "Esc"
        }
        b.doKeyDown();
        return jj(c, a)
    };
    R.prototype.Yz = function (a) {
        var b = this.B;
        if (!b.isEnabled) return !1;
        var c = dj(b, a, !1);
        c.key = String.fromCharCode(a.which);
        c.up = !0;
        switch (a.which) {
            case 8:
                c.key = "Backspace";
                break;
            case 33:
                c.key = "PageUp";
                break;
            case 34:
                c.key = "PageDown";
                break;
            case 35:
                c.key = "End";
                break;
            case 36:
                c.key = "Home";
                break;
            case 37:
                c.key = "Left";
                break;
            case 38:
                c.key = "Up";
                break;
            case 39:
                c.key = "Right";
                break;
            case 40:
                c.key = "Down";
                break;
            case 45:
                c.key = "Insert";
                break;
            case 46:
                c.key = "Del"
        }
        b.doKeyUp();
        return jj(c, a)
    };
    R.prototype.dz = function (a) {
        var b = this.B;
        if (!b.isEnabled) return !1;
        var c = dj(b, a, !0);
        null !== b.mouseEnter && b.mouseEnter(c);
        return jj(c, a)
    };
    R.prototype.ez = function (a) {
        var b = this.B;
        if (!b.isEnabled) return !1;
        var c = dj(b, a, !0);
        null !== b.mouseLeave && b.mouseLeave(c);
        return jj(c, a)
    };
    R.prototype.getMouse = function (a) {
        var b = this.sa;
        if (null === b) return new I(0, 0);
        var c = b.getBoundingClientRect();
        b = a.clientX - this.wa / c.width * c.left;
        a = a.clientY - this.va / c.height * c.top;
        return null !== this.kb ? zb(new I(b, a), this.kb) : new I(b, a)
    };

    function ej(a, b, c) {
        var d = a.sa,
            e = a.wa,
            f = a.va,
            g = 0,
            h = 0;
        null !== d && (d = d.getBoundingClientRect(), g = b.clientX - e / d.width * d.left, h = b.clientY - f / d.height * d.top);
        c.viewPoint.h(g, h);
        null !== a.kb ? (b = I.allocAt(g, h), a.kb.Vd(b), c.documentPoint.assign(b), I.free(b)) : c.documentPoint.h(g, h)
    }

    function oe(a, b, c, d) {
        if (void 0 !== b.targetTouches) {
            if (2 > b.targetTouches.length) return;
            b = b.targetTouches[c]
        } else if (null !== a.Kj[0]) b = a.Kj[c];
        else return;
        c = a.sa;
        null !== c && (c = c.getBoundingClientRect(), d.h(b.clientX - a.wa / c.width * c.left, b.clientY - a.va / c.height * c.top))
    }
    t = R.prototype;
    t.Na = function () {
        this.ki || (this.ki = !0, this.Pb(!0))
    };

    function kj(a) {
        a.Bc || Si(a);
        Ii(a)
    }
    t.Ee = function () {
        this.Rb || this.Bc || (this.M(), Xi(this), Ri(this), this.Na(), this.Wc())
    };
    t.Wz = function () {
        return this.we
    };
    t.Zy = function (a) {
        void 0 === a && (a = null);
        var b = this.animationManager,
            c = b.isEnabled;
        b.Xc();
        b.isEnabled = !1;
        If(this);
        this.ie = !1;
        b.isEnabled = c;
        null !== a && sa(function () {
            zh(b, "Model");
            a()
        }, 1)
    };
    t.Pb = function (a) {
        void 0 === a && (a = !1);
        if (!0 !== this.we && !(this.Rb || !1 === a && this.Bc)) {
            this.we = !0;
            var b = this;
            x.requestAnimationFrame(function () {
                b.we && b.Wc()
            })
        }
    };
    t.Wc = function () {
        if (!this.sj || this.we) this.sj && (this.sj = !1), If(this)
    };

    function Yi(a, b, c) {
        a.animationManager.defaultAnimation.isAnimating || a.Rb || !a.li || Pi(a) || (b && Si(a), c && Ui(a, !1))
    }

    function If(a, b) {
        if (!a.Bc && (a.we = !1, null !== a.La || a.Zl.v())) {
            a.Bc = !0;
            var c = a.animationManager,
                d = a.ss;
            if (!c.isAnimating && 0 !== d.length) {
                for (var e = d.j, f = e.length, g = 0; g < f; g++) {
                    var h = e[g];
                    lj(h, !1);
                    h.o()
                }
                d.clear()
            }
            d = a.su;
            0 < d.count && (d.each(function (a) {
                a.uw()
            }), d.clear());
            e = d = !1;
            c.isAnimating && (e = !0, d = a.skipsUndoManager, a.skipsUndoManager = !0);
            c.qc || Eh(a);
            Yi(a, !1, !1);
            null !== a.Fb && (a.Fb.visible && !a.Un && (mj(a), a.Un = !0), !a.Fb.visible && a.Un && (a.Un = !1));
            Si(a);
            f = !1;
            if (!a.ie || a.If) a.ie ? nj(a, !a.pj) : (a.ua("Initial Layout"),
                !1 === c.isEnabled && c.Xc(), nj(a, !1)), f = !0;
            a.pj = !1;
            Si(a);
            a.Ls || kj(a);
            Yi(a, !0, !1);
            g = !1;
            f ? (a.ie || (g = a.ie = !0, oj(a)), a.R("LayoutCompleted")) : c.gl && c.px && (a.Xf !== ni ? a.scale = Vi(a, a.Xf) : a.Lg !== ni ? a.scale = Vi(a, a.Lg) : (c = a.initialScale, isFinite(c) && 0 < c && (a.scale = c)), Ui(a, !0));
            Si(a);
            f && g && (a.Ua("Initial Layout"), a.skipsUndoManager || a.undoManager.clear(), sa(function () {
                a.isModified = !1
            }, 1));
            a.gv();
            b || a.bc(a.Db);
            e && (a.skipsUndoManager = d);
            a.Bc = !1
        }
    }

    function oj(a) {
        var b = a.ya;
        if (a.Xf !== ni) a.scale = Vi(a, a.Xf);
        else if (a.Lg !== ni) a.scale = Vi(a, a.Lg);
        else {
            var c = a.initialScale;
            isFinite(c) && 0 < c && (a.scale = c)
        }
        a.ya !== b && (Xi(a), Yi(a, !0, !1));
        Ui(a, !0);
        a.Nu.assign(a.ma);
        b = a.Ja.j;
        a.yd(b, b.length, a);
        a.R("InitialLayoutCompleted");
        mj(a)
    }

    function Si(a) {
        if ((a.Bc || !a.animationManager.isTicking) && 0 !== a.nd.count) {
            for (var b = 0; 23 > b; b++) {
                var c = a.nd.iterator;
                if (null === c || 0 === a.nd.count) break;
                a.nd = new F;
                a.uw(c, a.nd)
            }
            a.nodes.each(function (a) {
                a instanceof T && 0 !== (a.P & 65536) !== !1 && (a.P = a.P ^ 65536)
            })
        }
    }
    t.uw = function (a, b) {
        for (a.reset(); a.next();) {
            var c = a.value;
            !c.Wb() || c instanceof T || (c.bj() ? (c.measure(Infinity, Infinity), c.arrange()) : b.add(c))
        }
        for (a.reset(); a.next();) c = a.value, c instanceof T && c.isVisible() && pj(this, c);
        for (a.reset(); a.next();) c = a.value, c instanceof S && c.isVisible() && (c.bj() ? (c.measure(Infinity, Infinity), c.arrange()) : b.add(c));
        for (a.reset(); a.next();) c = a.value, c instanceof Je && c.isVisible() && (c.bj() ? (c.measure(Infinity, Infinity), c.arrange()) : b.add(c))
    };

    function pj(a, b) {
        for (var c = Fa(), d = Fa(), e = b.memberParts; e.next();) {
            var f = e.value;
            f.isVisible() && (f instanceof T ? (qj(f) || rj(f) || sj(f)) && pj(a, f) : f instanceof S ? f.fromNode === b || f.toNode === b ? d.push(f) : c.push(f) : (f.measure(Infinity, Infinity), f.arrange()))
        }
        a = c.length;
        for (e = 0; e < a; e++) f = c[e], f.measure(Infinity, Infinity), f.arrange();
        Ha(c);
        b.measure(Infinity, Infinity);
        b.arrange();
        a = d.length;
        for (b = 0; b < a; b++) c = d[b], c.measure(Infinity, Infinity), c.arrange();
        Ha(d)
    }
    t.yd = function (a, b, c, d) {
        if (this.mi || this.animationManager.isAnimating)
            for (var e = 0; e < b; e++) a[e].yd(c, d)
    };
    t.bc = function (a, b) {
        void 0 === b && (b = null);
        if (null !== this.La) {
            null === this.sa && B("No canvas specified");
            var c = this.animationManager;
            if (!c.qc && (!c.isAnimating || c.isTicking)) {
                var d = new Date;
                tj(this);
                if ("0" !== this.La.style.opacity) {
                    var e = a !== this.Db,
                        f = this.Ja.j,
                        g = f.length,
                        h = this;
                    this.yd(f, g, h);
                    if (e) a.sc(!0), Ri(this);
                    else if (!this.Ac && null === b && !c.isAnimating) return;
                    g = this.ma;
                    var k = this.ya,
                        l = Math.round(g.x * k) / k,
                        m = Math.round(g.y * k) / k;
                    c = this.kb;
                    c.reset();
                    1 !== k && c.scale(k);
                    0 === g.x && 0 === g.y || c.translate(-l, -m);
                    k = this.Sb;
                    a.setTransform(1, 0, 0, 1, 0, 0);
                    a.scale(k, k);
                    a.clearRect(0, 0, this.wa, this.va);
                    a.setTransform(1, 0, 0, 1, 0, 0);
                    a.scale(k, k);
                    a.transform(c.m11, c.m12, c.m21, c.m22, c.dx, c.dy);
                    uj(this, a);
                    a.globalAlpha = this.qb;
                    l = null !== b ? function (c) {
                        var d = b;
                        if (c.visible && 0 !== c.qb) {
                            var e = c.Ca.j,
                                f = e.length;
                            if (0 !== f) {
                                var g = hi(c, a),
                                    k = c.Yo;
                                k.length = 0;
                                for (var l = h.scale, m = N.alloc(), n = 0; n < f; n++) {
                                    var A = e[n];
                                    d.contains(A) || c.Pi(a, A, h, k, l, m)
                                }
                                N.free(m);
                                a.globalAlpha = g
                            }
                        }
                    } : function (b) {
                        b.bc(a, h)
                    };
                    g = f.length;
                    for (m = 0; m < g; m++) a.setTransform(1,
                        0, 0, 1, 0, 0), a.scale(k, k), a.transform(c.m11, c.m12, c.m21, c.m22, c.dx, c.dy), l(f[m]);
                    this.ji && vj(this.ji, this) && this.zr();
                    e ? (this.Db.sc(!0), Ri(this)) : this.Ac = this.mi = !1;
                    e = +new Date - +d;
                    if (null === this.uh) {
                        d = this.Jo;
                        d[this.Ko] = e;
                        this.Ko = (this.Ko + 1) % d.length;
                        for (f = e = 0; f < this.Jo.length; f++) e += this.Jo[f];
                        this.Io = e / d.length
                    }
                }
            }
        }
    };

    function wj(a, b, c, d, e, f, g, h, k, l) {
        if (null !== a.La) {
            null === a.sa && B("No canvas specified");
            void 0 === g && (g = null);
            void 0 === h && (h = null);
            void 0 === k && (k = !1);
            void 0 === l && (l = !1);
            tj(a);
            a.Db.sc(!0);
            Ri(a);
            a.ni = !0;
            var m = a.ya;
            a.ya = e;
            var n = a.Ja.j,
                p = n.length;
            try {
                var r = new N(f.x, f.y, d.width / e, d.height / e),
                    q = r.copy();
                q.cq(c);
                mj(a, q);
                Si(a);
                a.yd(n, p, a, r);
                var u = a.Sb;
                b.setTransform(1, 0, 0, 1, 0, 0);
                b.scale(u, u);
                b.clearRect(0, 0, d.width, d.height);
                null !== h && "" !== h && (b.fillStyle = h, b.fillRect(0, 0, d.width, d.height));
                var v = rd.alloc();
                v.reset();
                v.translate(c.left, c.top);
                v.scale(e);
                0 === f.x && 0 === f.y || v.translate(-f.x, -f.y);
                b.setTransform(v.m11, v.m12, v.m21, v.m22, v.dx, v.dy);
                rd.free(v);
                uj(a, b);
                b.globalAlpha = a.qb;
                if (null !== g) {
                    var w = new F,
                        y = g.iterator;
                    for (y.reset(); y.next();) {
                        var z = y.value;
                        !1 === l && "Grid" === z.layer.name || null === z || w.add(z)
                    }
                    var A = function (c) {
                        if (c.visible && 0 !== c.qb && (k || !c.isTemporary)) {
                            var d = c.Ca.j,
                                e = d.length;
                            if (0 !== e) {
                                var f = hi(c, b),
                                    g = c.Yo;
                                g.length = 0;
                                for (var h = a.scale, l = N.alloc(), m = 0; m < e; m++) {
                                    var n = d[m];
                                    w.contains(n) &&
                                        c.Pi(b, n, a, g, h, l)
                                }
                                N.free(l);
                                b.globalAlpha = f
                            }
                        }
                    }
                } else if (!k && l) {
                    var C = a.grid.part,
                        G = C.layer;
                    A = function (c) {
                        c === G ? C.bc(b, a) : c.bc(b, a, k)
                    }
                } else A = function (c) {
                    c.bc(b, a, k)
                };
                for (c = 0; c < p; c++) A(n[c]);
                a.ni = !1;
                a.ji && vj(a.ji, a) && a.zr()
            } finally {
                a.ya = m, a.Db.sc(!0), Ri(a), a.yd(n, p, a), mj(a)
            }
        }
    }
    t.Be = function (a) {
        return this.bf[a]
    };
    t.ly = function (a, b) {
        "minDrawingLength" === a && (this.Bo = b);
        this.bf[a] = b;
        this.Ee()
    };
    t.aw = function () {
        this.bf = new db;
        this.bf.drawShadows = !0;
        this.bf.textGreeking = !0;
        this.bf.viewportOptimizations = Xa || Ta || Ua ? !1 : !0;
        this.bf.temporaryPixelRatio = !0;
        this.bf.pictureRatioOptimization = !0;
        this.Bo = this.bf.minDrawingLength = 1
    };

    function uj(a, b) {
        a = a.bf;
        null !== a && (void 0 !== a.imageSmoothingEnabled && b.ky(!!a.imageSmoothingEnabled), a = a.defaultFont, void 0 !== a && null !== a && (b.font = a))
    }
    t.mm = function (a) {
        return this.vj[a]
    };
    t.tA = function (a, b) {
        this.vj[a] = b
    };
    t.$v = function () {
        this.vj = new db;
        this.vj.extraTouchArea = 10;
        this.vj.extraTouchThreshold = 10;
        this.vj.hasGestureZoom = !0
    };
    t.iw = function (a) {
        xj(this, a)
    };

    function xj(a, b) {
        var c = a instanceof X,
            d = a instanceof R,
            e;
        for (e in b) {
            "" === e && B("Setting properties requires non-empty property names");
            var f = a,
                g = e;
            if (c || d) {
                var h = e.indexOf(".");
                if (0 < h) {
                    var k = e.substring(0, h);
                    if (c) f = a.Xa(k);
                    else if (f = a[k], void 0 === f || null === f) f = a.toolManager[k];
                    za(f) ? g = e.substr(h + 1) : B("Unable to find object named: " + k + " in " + a.toString() + " when trying to set property: " + e)
                }
            }
            if ("_" !== g[0] && !Ka(f, g))
                if (d && "ModelChanged" === g) {
                    a.vx(b[g]);
                    continue
                } else if (d && "Changed" === g) {
                a.Dh(b[g]);
                continue
            } else if (d &&
                Ka(a.toolManager, g)) f = a.toolManager;
            else if (d && yj(a, g)) {
                a.Uj(g, b[g]);
                continue
            } else if (a instanceof Z && "Changed" === g) {
                a.Dh(b[g]);
                continue
            } else B('Trying to set undefined property "' + g + '" on object: ' + f.toString());
            f[g] = b[e];
            "_" === g[0] && f instanceof Y && f.sx(g)
        }
    }
    t.gv = function () {
        if (0 === this.undoManager.transactionLevel && 0 !== this.Sg.count) {
            for (; 0 < this.Sg.count;) {
                var a = this.Sg;
                this.Sg = new H;
                for (a = a.iterator; a.next();) {
                    var b = a.key;
                    b.tq(a.value);
                    b.cc()
                }
            }
            this.M()
        }
    };
    t.M = function (a) {
        void 0 === a && (a = null);
        if (null === a) this.Ac = !0, this.Pb();
        else {
            var b = this.viewportBounds;
            null !== a && a.v() && b.Gc(a) && (this.Ac = !0, this.Pb())
        }
        this.R("InvalidateDraw")
    };
    t.Sx = function (a, b) {
        if (!0 !== this.Ac) {
            this.Ac = !0;
            var c = !0 === this.Be("temporaryPixelRatio");
            if (!0 === this.Be("viewportOptimizations") && this.scrollMode !== Xh && this.Fi.Ri(0, 0, 0, 0) && b.width === a.width && b.height === a.height) {
                var d = this.scale,
                    e = Math.max(a.x, b.x),
                    f = Math.max(a.y, b.y);
                d = N.allocAt(e, f, Math.max(0, Math.min(a.x + a.width, b.x + b.width) - e) * d, Math.max(0, Math.min(a.y + a.height, b.y + b.height) - f) * d);
                if (!this.Pp && 0 < d.width && 0 < d.height) {
                    if (!(this.Bc || (this.we = !1, null === this.La || (this.Bc = !0, this.gv(), this.documentBounds.v() ||
                            zj(this, this.computeBounds()), e = this.sa, null === e || e instanceof Aj)))) {
                        var g = this.Sb;
                        f = this.wa * g;
                        var h = this.va * g,
                            k = this.scale * g,
                            l = Math.round(Math.round(b.x * k) - Math.round(a.x * k));
                        b = Math.round(Math.round(b.y * k) - Math.round(a.y * k));
                        k = this.ju;
                        a = this.Rw;
                        k.width !== f && (k.width = f);
                        k.height !== h && (k.height = h);
                        a.clearRect(0, 0, f, h);
                        k = 190 * g;
                        var m = 70 * g,
                            n = Math.max(l, 0),
                            p = Math.max(b, 0),
                            r = Math.floor(f - n),
                            q = Math.floor(h - p);
                        a.drawImage(e.Ea, n, p, r, q, 0, 0, r, q);
                        vj(this.ji, this) && a.clearRect(0, 0, k, m);
                        e = Fa();
                        a = Fa();
                        q = Math.abs(l);
                        r = Math.abs(b);
                        var u = 0 === n ? 0 : f - q;
                        n = I.allocAt(u, 0);
                        q = I.allocAt(q + u, h);
                        a.push(new N(Math.min(n.x, q.x), Math.min(n.y, q.y), Math.abs(n.x - q.x), Math.abs(n.y - q.y)));
                        var v = this.kb;
                        v.reset();
                        v.scale(g, g);
                        1 !== this.ya && v.scale(this.ya);
                        g = this.ma;
                        (0 !== g.x || 0 !== g.y) && isFinite(g.x) && isFinite(g.y) && v.translate(-g.x, -g.y);
                        zb(n, v);
                        zb(q, v);
                        e.push(new N(Math.min(n.x, q.x), Math.min(n.y, q.y), Math.abs(n.x - q.x), Math.abs(n.y - q.y)));
                        u = 0 === p ? 0 : h - r;
                        n.h(0, u);
                        q.h(f, r + u);
                        a.push(new N(Math.min(n.x, q.x), Math.min(n.y, q.y), Math.abs(n.x -
                            q.x), Math.abs(n.y - q.y)));
                        zb(n, v);
                        zb(q, v);
                        e.push(new N(Math.min(n.x, q.x), Math.min(n.y, q.y), Math.abs(n.x - q.x), Math.abs(n.y - q.y)));
                        vj(this.ji, this) && (f = 0 < l ? 0 : -l, h = 0 < b ? 0 : -b, n.h(f, h), q.h(k + f, m + h), a.push(new N(Math.min(n.x, q.x), Math.min(n.y, q.y), Math.abs(n.x - q.x), Math.abs(n.y - q.y))), zb(n, v), zb(q, v), e.push(new N(Math.min(n.x, q.x), Math.min(n.y, q.y), Math.abs(n.x - q.x), Math.abs(n.y - q.y))));
                        I.free(n);
                        I.free(q);
                        Yi(this, !1, !0);
                        null === this.La && B("No div specified");
                        null === this.sa && B("No canvas specified");
                        if (!this.animationManager.qc &&
                            (f = this.Db, this.Ac)) {
                            tj(this);
                            h = this.Sb;
                            f.setTransform(1, 0, 0, 1, 0, 0);
                            f.clearRect(0, 0, this.wa * h, this.va * h);
                            f.drawImage(this.ju.Ea, 0 < l ? 0 : Math.round(-l), 0 < b ? 0 : Math.round(-b));
                            l = this.ma;
                            g = this.ya;
                            k = Math.round(l.x * g) / g;
                            m = Math.round(l.y * g) / g;
                            b = this.kb;
                            b.reset();
                            1 !== g && b.scale(g);
                            0 === l.x && 0 === l.y || b.translate(-k, -m);
                            f.save();
                            f.beginPath();
                            l = a.length;
                            for (g = 0; g < l; g++) k = a[g], 0 !== k.width && 0 !== k.height && f.rect(Math.floor(k.x), Math.floor(k.y), Math.ceil(k.width), Math.ceil(k.height));
                            f.clip();
                            f.setTransform(1, 0,
                                0, 1, 0, 0);
                            f.scale(h, h);
                            f.transform(b.m11, b.m12, b.m21, b.m22, b.dx, b.dy);
                            b = this.Ja.j;
                            l = b.length;
                            this.yd(b, l, this);
                            uj(this, f);
                            f.globalAlpha = this.qb;
                            for (h = 0; h < l; h++)
                                if (g = b[h], k = e, g.visible && 0 !== g.qb) {
                                    m = hi(g, f);
                                    p = g.Yo;
                                    p.length = 0;
                                    n = this.scale;
                                    r = N.alloc();
                                    q = g.Ca.j;
                                    v = q.length;
                                    u = k.length;
                                    for (var w = 0; w < v; w++) {
                                        var y = q[w],
                                            z = Bj(y, y.actualBounds);
                                        a: {
                                            for (var A = 2 / n, C = 4 / n, G = 0; G < u; G++) {
                                                var L = k[G];
                                                if (0 !== L.width && 0 !== L.height && z.Ev(L.x - A, L.y - A, L.width + C, L.height + C)) {
                                                    z = !0;
                                                    break a
                                                }
                                            }
                                            z = !1
                                        }
                                        z && g.Pi(f, y, this, p, n, r)
                                    }
                                    N.free(r);
                                    f.globalAlpha = m
                                } f.restore();
                            f.sc(!0);
                            this.ji && vj(this.ji, this) && this.zr();
                            this.Ac = this.mi = !1;
                            this.Ht()
                        }
                        Ha(e);
                        Ha(a);
                        this.Bc = !1
                    }
                } else this.Wc();
                N.free(d);
                c && (Ue(this), this.Wc(), kf(this, !0))
            } else c ? (Ue(this), this.Wc(), kf(this, !0)) : this.Wc()
        }
    };

    function Xi(a) {
        !1 === a.li && (a.li = !0)
    }

    function Ri(a) {
        !1 === a.mi && (a.mi = !0)
    }

    function tj(a) {
        !1 !== a.ll && (a.ll = !1, Cj(a, a.wa, a.va))
    }

    function Cj(a, b, c) {
        var d = a.Sb;
        a.sa.resize(b * d, c * d, b, c) && (a.Ac = !0, a.Db.sc(!0))
    }

    function Pi(a) {
        var b = a.sa;
        if (null === b) return !0;
        var c = a.La,
            d = a.wa,
            e = a.va,
            f = a.Zu.copy();
        if (isNaN(f.width) || isNaN(f.height)) return !0;
        var g = !1,
            h = a.Se ? a.jb : 0,
            k = a.he ? a.jb : 0,
            l = c.clientWidth || d + h,
            m = c.clientHeight || e + k;
        if (l !== d + h || m !== e + k) a.Se = !1, a.he = !1, k = h = 0, a.wa = l, a.va = m, g = a.ll = !0;
        if (!(g || a.Se || a.he || a.cl || a.dl)) return !0;
        a.li = !1;
        var n = a.viewportBounds,
            p = a.documentBounds,
            r = 0,
            q = 0,
            u = 0,
            v = 0;
        c = n.width;
        var w = n.height,
            y = a.Fi;
        a.contentAlignment.eb() ? (p.width > c && (r = y.left, q = y.right), p.height > w && (u = y.top, v = y.bottom)) :
            (r = y.left, q = y.right, u = y.top, v = y.bottom);
        y = p.width + r + q;
        var z = p.height + u + v;
        r = p.x - r;
        var A = n.x;
        q = p.right + q;
        var C = n.right + h;
        u = p.y - u;
        var G = n.y;
        p = p.bottom + v;
        n = n.bottom + k;
        var L = "1px",
            K = "1px";
        v = a.scale;
        l = y > l / v;
        m = z > m / v;
        a.scrollMode === Vh && (l || m) && (l && a.hasHorizontalScrollbar && a.allowHorizontalScroll && (l = 1, r + 1 < A && (l = Math.max((A - r) * v + a.wa, l)), q > C + 1 && (l = Math.max((q - C) * v + a.wa, l)), c + h + 1 < y && (l = Math.max((y - c) * v + a.wa, l)), L = l.toString() + "px"), m && a.hasVerticalScrollbar && a.allowVerticalScroll && (l = 1, u + 1 < G && (l = Math.max((G -
            u) * v + a.va, l)), p > n + 1 && (l = Math.max((p - n) * v + a.va, l)), w + k + 1 < z && (l = Math.max((z - w) * v + a.va, l)), K = l.toString() + "px"));
        l = "1px" !== L;
        m = "1px" !== K;
        l && m || !l && !m || (m && (C -= a.jb), l && (n -= a.jb), y < c + h || !a.hasHorizontalScrollbar || !a.allowHorizontalScroll || (h = 1, r + 1 < A && (h = Math.max((A - r) * v + a.wa, h)), q > C + 1 && (h = Math.max((q - C) * v + a.wa, h)), c + 1 < y && (h = Math.max((y - c) * v + a.wa, h)), L = h.toString() + "px"), l = "1px" !== L, h = a.va, l !== a.he && (h = l ? a.va - a.jb : a.va + a.jb), z < w + k || !a.hasVerticalScrollbar || !a.allowVerticalScroll || (k = 1, u + 1 < G && (k = Math.max((G -
            u) * v + h, k)), p > n + 1 && (k = Math.max((p - n) * v + h, k)), w + 1 < z && (k = Math.max((z - w) * v + h, k)), K = k.toString() + "px"), m = "1px" !== K);
        if (a.vp && l === a.he && m === a.Se) return d === a.wa && e === a.va || a.Wc(), !1;
        l !== a.he && ("1px" === L ? a.va = a.va + a.jb : a.va = Math.max(a.va - a.jb, 1), g = !0);
        a.he = l;
        a.wp.style.width = L;
        m !== a.Se && ("1px" === K ? a.wa = a.wa + a.jb : a.wa = Math.max(a.wa - a.jb, 1), g = !0, a.nl && (k = I.alloc(), m ? (b.style.left = a.jb + "px", a.position = k.h(a.ma.x + a.jb / a.scale, a.ma.y)) : (b.style.left = "0px", a.position = k.h(a.ma.x - a.jb / a.scale, a.ma.y)), I.free(k)));
        a.Se = m;
        a.wp.style.height = K;
        a.Bs = !0;
        g && (a.ll = !0);
        b = a.Es;
        k = b.scrollLeft;
        a.hasHorizontalScrollbar && a.allowHorizontalScroll && (c + 1 < y ? k = (a.position.x - r) * v : r + 1 < A ? k = b.scrollWidth - b.clientWidth : q > C + 1 && (k = a.position.x * v));
        if (a.nl) switch (a.zs) {
            case "negative":
                k = -(b.scrollWidth - k - b.clientWidth);
                break;
            case "reverse":
                k = b.scrollWidth - k - b.clientWidth
        }
        b.scrollLeft = k;
        a.hasVerticalScrollbar && a.allowVerticalScroll && (w + 1 < z ? b.scrollTop = (a.position.y - u) * v : u + 1 < G ? b.scrollTop = b.scrollHeight - b.clientHeight : p > n + 1 && (b.scrollTop =
            a.position.y * v));
        l = a.wa;
        m = a.va;
        b.style.width = l + (a.Se ? a.jb : 0) + "px";
        b.style.height = m + (a.he ? a.jb : 0) + "px";
        return d !== l || e !== m || a.animationManager.qc ? (a.Bq(f, a.viewportBounds, v, g), !1) : !0
    }
    t.add = function (a) {
        var b = a.diagram;
        if (b !== this && (null !== b && B("Cannot add part " + a.toString() + " to " + this.toString() + ". It is already a part of " + b.toString()), b = this.im(a.layerName), null === b && (b = this.im("")), null === b && B('Cannot add a Part when unable find a Layer named "' + a.layerName + '" and there is no default Layer'), a.layer !== b)) {
            var c = b.aj(99999999, a, a.diagram === this);
            0 <= c && this.Ya(te, "parts", b, null, a, null, c);
            b.isTemporary || this.Na();
            a.C(1);
            c = a.layerChanged;
            null !== c && c(a, null, b)
        }
    };
    t.aj = function (a) {
        this.partManager.aj(a);
        var b = this;
        Dj(a, function (a) {
            Ej(b, a)
        });
        (a instanceof Je || a instanceof T && null !== a.placeholder) && a.o();
        null !== a.data && Dj(a, function (a) {
            Fj(b.partManager, a)
        });
        !0 !== rj(a) && !0 !== sj(a) || this.nd.add(a);
        Gj(a, !0, this);
        Hj(a) ? (a.actualBounds.v() && this.M(Bj(a, a.actualBounds)), this.Na()) : a.isVisible() && a.actualBounds.v() && this.M(Bj(a, a.actualBounds));
        this.Pb()
    };
    t.Fc = function (a) {
        a.Yj();
        this.partManager.Fc(a);
        var b = this;
        null !== a.data && Dj(a, function (a) {
            Ij(b.partManager, a, b)
        });
        this.nd.remove(a);
        Hj(a) ? (a.actualBounds.v() && this.M(Bj(a, a.actualBounds)), this.Na()) : a.isVisible() && a.actualBounds.v() && this.M(Bj(a, a.actualBounds));
        this.Pb()
    };
    t.remove = function (a) {
        Jj(this, a, !0)
    };

    function Jj(a, b, c) {
        var d = b.layer;
        null !== d && d.diagram === a && (b.isSelected = !1, b.isHighlighted = !1, b.C(2), c && b.dk(), c = d.Fc(-1, b, !1), 0 <= c && a.Ya(ue, "parts", d, b, null, c, null), a = b.layerChanged, null !== a && a(b, d, null))
    }
    t.Jt = function (a, b) {
        if (Aa(a))
            for (var c = a.length, d = 0; d < c; d++) {
                var e = a[d];
                b && !e.canDelete() || this.remove(e)
            } else
                for (c = new F, c.addAll(a), a = c.iterator; a.next();) c = a.value, b && !c.canDelete() || this.remove(c)
    };
    t.ck = function (a, b, c) {
        return this.partManager.ck(a, b, c)
    };
    R.prototype.moveParts = function (a, b, c, d) {
        void 0 === d && (d = Kj(this));
        if (null !== this.toolManager) {
            var e = new H;
            if (null !== a)
                if (Aa(a))
                    for (var f = 0; f < a.length; f++) Lj(this, e, a[f], c, d);
                else
                    for (a = a.iterator; a.next();) Lj(this, e, a.value, c, d);
            else {
                for (a = this.parts; a.next();) Lj(this, e, a.value, c, d);
                for (a = this.nodes; a.next();) Lj(this, e, a.value, c, d);
                for (a = this.links; a.next();) Lj(this, e, a.value, c, d)
            }
            sf(this, e, b, d, c)
        }
    };

    function Lj(a, b, c, d, e, f) {
        if (!b.contains(c) && (void 0 === f && (f = !1), !d || f || c.canMove() || c.canCopy()))
            if (void 0 === e && (e = Kj(a)), c instanceof W) {
                b.add(c, a.sd(e, c, c.location));
                if (c instanceof T)
                    for (f = c.memberParts; f.next();) Lj(a, b, f.value, d, e, e.Mz);
                for (f = c.linksConnected; f.next();) {
                    var g = f.value;
                    if (!b.contains(g)) {
                        var h = g.fromNode,
                            k = g.toNode;
                        null !== h && b.contains(h) && null !== k && b.contains(k) && Lj(a, b, g, d, e)
                    }
                }
                if (e.dragsTree)
                    for (c = c.vv(); c.next();) Lj(a, b, c.value, d, e)
            } else if (c instanceof S)
            for (b.add(c, a.sd(e,
                    c)), c = c.labelNodes; c.next();) Lj(a, b, c.value, d, e);
        else c instanceof Je || b.add(c, a.sd(e, c, c.location))
    }

    function sf(a, b, c, d, e) {
        if (null !== b && 0 !== b.count) {
            var f = I.alloc(),
                g = I.alloc();
            g.assign(c);
            isNaN(g.x) && (g.x = 0);
            isNaN(g.y) && (g.y = 0);
            (c = a.Op) || Ve(a, b);
            for (var h = Fa(), k = Fa(), l = b.iterator, m = I.alloc(); l.next();) {
                var n = l.key,
                    p = l.value;
                if (n.Wb()) {
                    var r = Mj(a, n, b);
                    if (null !== r) h.push(new Nj(n, p, r));
                    else if (!e || n.canMove()) r = p.point, f.assign(r), a.computeMove(n, f.add(g), d, m), n.location = m, void 0 === p.shifted && (p.shifted = new I), p.shifted.assign(m.Zd(r))
                } else l.key instanceof S && k.push(l.la)
            }
            I.free(m);
            e = h.length;
            for (l =
                0; l < e; l++) n = h[l], f.assign(n.info.point), void 0 === n.Bv.shifted && (n.Bv.shifted = new I), n.node.location = f.add(n.Bv.shifted);
            e = I.alloc();
            l = I.alloc();
            n = k.length;
            for (p = 0; p < n; p++) {
                var q = k[p];
                r = q.key;
                if (r instanceof S)
                    if (r.suspendsRouting) {
                        r.oh = null;
                        m = r.fromNode;
                        var u = r.toNode;
                        if (null !== a.draggedLink && d.dragsLink)
                            if (u = q.value.point, null === r.dragComputation) b.add(r, a.sd(d, r, g)), qf(r, g.x - u.x, g.y - u.y);
                            else {
                                q = I.allocAt(0, 0);
                                (m = r.i(0)) && m.v() && q.assign(m);
                                var v = m = I.alloc().assign(q).add(g);
                                d.isGridSnapEnabled &&
                                    (d.isGridSnapRealtime || a.lastInput.up) && (v = I.alloc(), Gg(a, r, m, v, d));
                                m.assign(r.dragComputation(r, m, v)).Zd(q);
                                b.add(r, a.sd(d, r, m));
                                qf(r, m.x - u.x, m.y - u.y);
                                I.free(q);
                                I.free(m);
                                v !== m && I.free(v)
                            }
                        else null !== m && (e.assign(m.location), v = b.H(m), null !== v && e.Zd(v.point)), null !== u && (l.assign(u.location), v = b.H(u), null !== v && l.Zd(v.point)), null !== m && null !== u ? e.Ma(l) ? (m = q.value.point, u = f, u.assign(e), u.Zd(m), b.add(r, a.sd(d, r, e)), qf(r, u.x, u.y)) : (r.suspendsRouting = !1, r.Oa()) : (q = q.value.point, m = null !== m ? e : null !== u ? l :
                            g, b.add(r, a.sd(d, r, m)), qf(r, m.x - q.x, m.y - q.y))
                    } else if (null === r.fromNode || null === r.toNode) m = q.value.point, b.add(r, a.sd(d, r, g)), qf(r, g.x - m.x, g.y - m.y)
            }
            I.free(f);
            I.free(g);
            I.free(e);
            I.free(l);
            Ha(h);
            Ha(k);
            c || (Si(a), ff(a, b))
        }
    }
    R.prototype.computeMove = function (a, b, c, d) {
        void 0 === d && (d = new I);
        d.assign(b);
        if (null === a) return d;
        var e = b,
            f = c.isGridSnapEnabled;
        f && (c.isGridSnapRealtime || this.lastInput.up) && (e = I.alloc(), Gg(this, a, b, e, c));
        c = null !== a.dragComputation ? a.dragComputation(a, b, e) : e;
        var g = a.minLocation,
            h = g.x;
        isNaN(h) && (h = f ? Math.round(a.location.x) : a.location.x);
        g = g.y;
        isNaN(g) && (g = f ? Math.round(a.location.y) : a.location.y);
        var k = a.maxLocation,
            l = k.x;
        isNaN(l) && (l = f ? Math.round(a.location.x) : a.location.x);
        k = k.y;
        isNaN(k) && (k = f ? Math.round(a.location.y) :
            a.location.y);
        d.h(Math.max(h, Math.min(c.x, l)), Math.max(g, Math.min(c.y, k)));
        e !== b && I.free(e);
        return d
    };

    function Kj(a) {
        var b = a.toolManager.findTool("Dragging");
        return null !== b ? b.dragOptions : a.Qk
    }

    function Gg(a, b, c, d, e) {
        void 0 === e && (e = Kj(a));
        d.assign(c);
        if (null !== b) {
            var f = a.grid;
            b = e.gridSnapCellSize;
            a = b.width;
            b = b.height;
            var g = e.gridSnapOrigin,
                h = g.x;
            g = g.y;
            e = e.gridSnapCellSpot;
            if (null !== f) {
                var k = f.gridCellSize;
                isNaN(a) && (a = k.width);
                isNaN(b) && (b = k.height);
                f = f.gridOrigin;
                isNaN(h) && (h = f.x);
                isNaN(g) && (g = f.y)
            }
            f = I.allocAt(0, 0);
            f.xk(0, 0, a, b, e);
            J.mq(c.x, c.y, h + f.x, g + f.y, a, b, d);
            I.free(f)
        }
    }

    function Ve(a, b) {
        if (null !== b)
            for (a.Op = !0, a = b.iterator; a.next();) b = a.key, b instanceof S && (b.suspendsRouting = !0)
    }

    function ff(a, b) {
        if (null !== b) {
            for (b = b.iterator; b.next();) {
                var c = b.key;
                c instanceof S && (c.suspendsRouting = !1, Oj(c) && c.Oa())
            }
            a.Op = !1
        }
    }

    function Mj(a, b, c) {
        b = b.containingGroup;
        if (null !== b) {
            a = Mj(a, b, c);
            if (null !== a) return a;
            a = c.H(b);
            if (null !== a) return a
        }
        return null
    }
    t = R.prototype;
    t.sd = function (a, b, c) {
        if (void 0 === c) return new df(Fb);
        var d = a.isGridSnapEnabled;
        a.Nz || null === b.containingGroup || (d = !1);
        return d ? new df(new I(Math.round(c.x), Math.round(c.y))) : new df(c.copy())
    };

    function Pj(a, b, c) {
        null !== b.diagram && b.diagram !== a && B("Cannot share a Layer with another Diagram: " + b + " of " + b.diagram);
        null === c ? null !== b.diagram && B("Cannot add an existing Layer to this Diagram again: " + b) : (c.diagram !== a && B("Existing Layer must be in this Diagram: " + c + " not in " + c.diagram), b === c && B("Cannot move a Layer before or after itself: " + b));
        if (b.diagram !== a) {
            b = b.name;
            a = a.Ja;
            c = a.count;
            for (var d = 0; d < c; d++) a.L(d).name === b && B("Cannot add Layer with the name '" + b + "'; a Layer with the same name is already present in this Diagram.")
        }
    }
    t.$l = function (a) {
        Pj(this, a, null);
        a.Yd(this);
        var b = this.Ja,
            c = b.count - 1;
        if (!a.isTemporary)
            for (; 0 <= c && b.L(c).isTemporary;) c--;
        b.Kb(c + 1, a);
        null !== this.ac && this.Ya(te, "layers", this, null, a, null, c + 1);
        this.M();
        this.Na()
    };
    t.tx = function (a, b) {
        Pj(this, a, b);
        a.Yd(this);
        var c = this.Ja,
            d = c.indexOf(a);
        0 <= d && (c.remove(a), null !== this.ac && this.Ya(ue, "layers", this, a, null, d, null));
        var e = c.count,
            f;
        for (f = 0; f < e; f++)
            if (c.L(f) === b) {
                c.Kb(f, a);
                break
            } null !== this.ac && this.Ya(te, "layers", this, null, a, null, f);
        this.M();
        0 > d && this.Na()
    };
    t.Gy = function (a, b) {
        Pj(this, a, b);
        a.Yd(this);
        var c = this.Ja,
            d = c.indexOf(a);
        0 <= d && (c.remove(a), null !== this.ac && this.Ya(ue, "layers", this, a, null, d, null));
        var e = c.count,
            f;
        for (f = 0; f < e; f++)
            if (c.L(f) === b) {
                c.Kb(f + 1, a);
                break
            } null !== this.ac && this.Ya(te, "layers", this, null, a, null, f + 1);
        this.M();
        0 > d && this.Na()
    };
    t.mA = function (a) {
        a.diagram !== this && B("Cannot remove a Layer from another Diagram: " + a + " of " + a.diagram);
        if ("" !== a.name) {
            var b = this.Ja,
                c = b.indexOf(a);
            if (b.remove(a)) {
                for (b = a.Ca.copy().iterator; b.next();) {
                    var d = b.value,
                        e = d.layerName;
                    e !== a.name ? d.layerName = e : d.layerName = ""
                }
                null !== this.ac && this.Ya(ue, "layers", this, a, null, c, null);
                this.M();
                this.Na()
            }
        }
    };
    t.im = function (a) {
        for (var b = this.layers; b.next();) {
            var c = b.value;
            if (c.name === a) return c
        }
        return null
    };
    t.vx = function (a) {
        null === this.oe && (this.oe = new E);
        this.oe.add(a);
        this.model.Dh(a)
    };
    t.oA = function (a) {
        null !== this.oe && (this.oe.remove(a), 0 === this.oe.count && (this.oe = null));
        this.model.wk(a)
    };
    t.Dh = function (a) {
        null === this.Mf && (this.Mf = new E);
        this.Mf.add(a)
    };
    t.wk = function (a) {
        null !== this.Mf && (this.Mf.remove(a), 0 === this.Mf.count && (this.Mf = null))
    };
    t.bt = function (a) {
        this.skipsUndoManager || this.model.skipsUndoManager || this.model.undoManager.Cv(a);
        a.change !== se && (this.isModified = !0);
        if (null !== this.Mf)
            for (var b = this.Mf, c = b.length, d = 0; d < c; d++) b.L(d)(a)
    };
    t.Ya = function (a, b, c, d, e, f, g) {
        void 0 === f && (f = null);
        void 0 === g && (g = null);
        var h = new qe;
        h.diagram = this;
        h.change = a;
        h.propertyName = b;
        h.object = c;
        h.oldValue = d;
        h.oldParam = f;
        h.newValue = e;
        h.newParam = g;
        this.bt(h)
    };
    t.g = function (a, b, c, d, e) {
        this.Ya(re, a, this, b, c, d, e)
    };
    R.prototype.changeState = function (a, b) {
        if (null !== a && a.diagram === this) {
            var c = this.skipsModelSourceBindings;
            try {
                this.skipsModelSourceBindings = !0;
                var d = a.change;
                if (d === re) {
                    var e = a.object;
                    Qj(e, a.propertyName, a.H(b));
                    if (e instanceof Y) {
                        var f = e.part;
                        null !== f && f.Lb()
                    }
                    this.isModified = !0
                } else if (d === te) {
                    var g = a.object,
                        h = a.newParam,
                        k = a.newValue;
                    if (g instanceof X)
                        if ("number" === typeof h && k instanceof Y) {
                            b ? g.Fc(h) : g.Kb(h, k);
                            var l = g.part;
                            null !== l && l.Lb()
                        } else {
                            if ("number" === typeof h && k instanceof Rj)
                                if (b) k.isRow ?
                                    g.Yv(h) : g.Wv(h);
                                else {
                                    var m = k.isRow ? g.getRowDefinition(k.index) : g.getColumnDefinition(k.index);
                                    m.et(k)
                                }
                        }
                    else if (g instanceof ei) {
                        var n = !0 === a.oldParam;
                        "number" === typeof h && k instanceof U && (b ? (k.isSelected = !1, k.isHighlighted = !1, k.Lb(), g.Fc(n ? h : -1, k, n)) : g.aj(h, k, n))
                    } else g instanceof R ? "number" === typeof h && k instanceof ei && (b ? this.Ja.lb(h) : (k.Yd(this), this.Ja.Kb(h, k))) : B("unknown ChangedEvent.Insert object: " + a.toString());
                    this.isModified = !0
                } else if (d === ue) {
                    var p = a.object,
                        r = a.oldParam,
                        q = a.oldValue;
                    if (p instanceof X) "number" === typeof r && q instanceof Y ? b ? p.Kb(r, q) : p.Fc(r) : "number" === typeof r && q instanceof Rj && (b ? (m = q.isRow ? p.getRowDefinition(q.index) : p.getColumnDefinition(q.index), m.et(q)) : q.isRow ? p.Yv(r) : p.Wv(r));
                    else if (p instanceof ei) {
                        var u = !0 === a.newParam;
                        "number" === typeof r && q instanceof U && (b ? 0 > p.Ca.indexOf(q) && p.aj(r, q, u) : (q.isSelected = !1, q.isHighlighted = !1, q.Lb(), p.Fc(u ? r : -1, q, u)))
                    } else p instanceof R ? "number" === typeof r && q instanceof ei && (b ? (q.Yd(this), this.Ja.Kb(r, q)) : this.Ja.lb(r)) : B("unknown ChangedEvent.Remove object: " +
                        a.toString());
                    this.isModified = !0
                } else d !== se && B("unknown ChangedEvent: " + a.toString())
            } finally {
                this.skipsModelSourceBindings = c
            }
        }
    };
    R.prototype.ua = function (a) {
        return this.undoManager.ua(a)
    };
    R.prototype.Ua = function (a) {
        return this.undoManager.Ua(a)
    };
    R.prototype.Bf = function () {
        return this.undoManager.Bf()
    };
    R.prototype.commit = function (a, b) {
        void 0 === b && (b = "");
        var c = this.skipsUndoManager;
        null === b && (this.skipsUndoManager = !0, b = "");
        this.undoManager.ua(b);
        var d = !1;
        try {
            a(this), d = !0
        } finally {
            d ? this.undoManager.Ua(b) : this.undoManager.Bf(), this.skipsUndoManager = c
        }
    };
    R.prototype.updateAllTargetBindings = function (a) {
        this.partManager.updateAllTargetBindings(a)
    };
    R.prototype.Pq = function () {
        this.partManager.Pq()
    };

    function Sj(a, b, c) {
        var d = a.animationManager;
        if (a.Rb || a.Bc) a.ya = c, d.Ze && d.Ad.add(d.B, "scale", b, a.ya);
        else if (a.Rb = !0, null === a.sa) a.ya = c;
        else {
            var e = a.viewportBounds.copy(),
                f = a.wa,
                g = a.va;
            e.width = a.wa / b;
            e.height = a.va / b;
            var h = a.zoomPoint.x,
                k = a.zoomPoint.y,
                l = a.contentAlignment;
            isNaN(h) && (l.yf() ? l.wf(Ic) ? h = 0 : l.wf(Jc) && (h = f - 1) : h = l.eb() ? l.x * (f - 1) : f / 2);
            isNaN(k) && (l.yf() ? l.wf(Hc) ? k = 0 : l.wf(Kc) && (k = g - 1) : k = l.eb() ? l.y * (g - 1) : g / 2);
            null === a.scaleComputation || a.animationManager.isAnimating || (c = a.scaleComputation(a,
                c));
            c < a.minScale && (c = a.minScale);
            c > a.maxScale && (c = a.maxScale);
            f = I.allocAt(a.ma.x + h / b - h / c, a.ma.y + k / b - k / c);
            a.position = f;
            I.free(f);
            a.ya = c;
            a.Bq(e, a.viewportBounds, b, !1);
            a.Rb = !1;
            Ui(a, !1);
            d.Ze && d.Ad.add(d.B, "scale", b, a.ya);
            a.M();
            Xi(a)
        }
    }
    R.prototype.Bq = function (a, b, c, d) {
        if (!a.w(b)) {
            void 0 === d && (d = !1);
            d || Xi(this);
            Ri(this);
            var e = this.layout;
            null === e || !e.isViewportSized || this.autoScale !== ni || d || a.width === b.width && a.height === b.height || e.C();
            e = this.currentTool;
            !0 === this.Yf && e instanceof Oa && (this.lastInput.documentPoint = this.Pt(this.lastInput.viewPoint), Ne(e, this));
            this.Rb || this.Sx(a, b);
            mj(this);
            this.Rd.scale = c;
            this.Rd.position.x = a.x;
            this.Rd.position.y = a.y;
            this.Rd.bounds.assign(a);
            this.Rd.Jv = d;
            this.R("ViewportBoundsChanged", this.Rd, a);
            this.isVirtualized && this.links.each(function (a) {
                a.isAvoiding && a.actualBounds.Gc(b) && a.Oa()
            })
        }
    };

    function mj(a, b) {
        void 0 === b && (b = null);
        var c = a.Fb;
        if (null !== c && c.visible) {
            for (var d = M.alloc(), e = 1, f = 1, g = c.W.j, h = g.length, k = 0; k < h; k++) {
                var l = g[k],
                    m = l.interval;
                2 > m || (dk(l.figure) ? f = f * m / J.Nx(f, m) : e = e * m / J.Nx(e, m))
            }
            g = c.gridCellSize;
            d.h(f * g.width, e * g.height);
            if (null !== b) e = b.width, f = b.height, a = b.x, g = b.y;
            else {
                b = N.alloc();
                a = a.viewportBounds;
                b.h(a.x, a.y, a.width, a.height);
                if (!b.v()) {
                    N.free(b);
                    return
                }
                e = b.width;
                f = b.height;
                a = b.x;
                g = b.y;
                N.free(b)
            }
            c.width = e + 2 * d.width;
            c.height = f + 2 * d.height;
            b = I.alloc();
            J.mq(a, g, 0, 0,
                d.width, d.height, b);
            b.offset(-d.width, -d.height);
            M.free(d);
            c.part.location = b;
            I.free(b)
        }
    }
    R.prototype.clearSelection = function (a) {
        void 0 === a && (a = !1);
        var b = this.selection;
        if (0 !== b.count) {
            a || this.R("ChangingSelection", b);
            for (var c = b.na(), d = c.length, e = 0; e < d; e++) c[e].isSelected = !1;
            b.ea();
            b.clear();
            b.freeze();
            a || this.R("ChangedSelection", b)
        }
    };
    R.prototype.select = function (a) {
        null !== a && a.layer.diagram === this && (!a.isSelected || 1 < this.selection.count) && (this.R("ChangingSelection", this.selection), this.clearSelection(!0), a.isSelected = !0, this.R("ChangedSelection", this.selection))
    };
    R.prototype.sA = function (a) {
        this.R("ChangingSelection", this.selection);
        this.clearSelection(!0);
        if (Aa(a))
            for (var b = a.length, c = 0; c < b; c++) {
                var d = a[c];
                d instanceof U || B("Diagram.selectCollection given something that is not a Part: " + d);
                d.isSelected = !0
            } else
                for (a = a.iterator; a.next();) b = a.value, b instanceof U || B("Diagram.selectCollection given something that is not a Part: " + b), b.isSelected = !0;
        this.R("ChangedSelection", this.selection)
    };
    R.prototype.clearHighlighteds = function () {
        var a = this.highlighteds;
        if (0 < a.count) {
            for (var b = a.na(), c = b.length, d = 0; d < c; d++) b[d].isHighlighted = !1;
            a.ea();
            a.clear();
            a.freeze()
        }
    };
    t = R.prototype;
    t.Pz = function (a) {
        null !== a && a.layer.diagram === this && (!a.isHighlighted || 1 < this.highlighteds.count) && (this.clearHighlighteds(), a.isHighlighted = !0)
    };
    t.Qz = function (a) {
        a = (new F).addAll(a);
        for (var b = this.highlighteds.copy().Fq(a).iterator; b.next();) b.value.isHighlighted = !1;
        for (a = a.iterator; a.next();) b = a.value, b instanceof U || B("Diagram.highlightCollection given something that is not a Part: " + b), b.isHighlighted = !0
    };
    t.scroll = function (a, b, c) {
        void 0 === c && (c = 1);
        var d = "up" === b || "down" === b,
            e = 0;
        if ("pixel" === a) e = c;
        else if ("line" === a) e = c * (d ? this.scrollVerticalLineChange : this.scrollHorizontalLineChange);
        else if ("page" === a) a = d ? this.viewportBounds.height : this.viewportBounds.width, a *= this.scale, 0 !== a && (e = c * Math.max(a - (d ? this.scrollVerticalLineChange : this.scrollHorizontalLineChange), 0));
        else {
            if ("document" === a) {
                e = this.documentBounds;
                c = this.viewportBounds;
                d = I.alloc();
                "up" === b ? this.position = d.h(c.x, e.y) : "left" === b ? this.position =
                    d.h(e.x, c.y) : "down" === b ? this.position = d.h(c.x, e.bottom - c.height) : "right" === b && (this.position = d.h(e.right - c.width, c.y));
                I.free(d);
                return
            }
            B("scrolling unit must be 'pixel', 'line', 'page', or 'document', not: " + a)
        }
        e /= this.scale;
        c = this.position.copy();
        "up" === b ? c.y = this.position.y - e : "down" === b ? c.y = this.position.y + e : "left" === b ? c.x = this.position.x - e : "right" === b ? c.x = this.position.x + e : B("scrolling direction must be 'up', 'down', 'left', or 'right', not: " + b);
        this.position = c
    };
    t.cw = function (a) {
        var b = this.viewportBounds;
        b.ze(a) || (a = a.center, a.x -= b.width / 2, a.y -= b.height / 2, this.position = a)
    };
    t.ct = function (a) {
        var b = this.viewportBounds;
        a = a.center;
        a.x -= b.width / 2;
        a.y -= b.height / 2;
        this.position = a
    };
    t.Nq = function (a) {
        var b = this.kb;
        b.reset();
        1 !== this.ya && b.scale(this.ya);
        var c = this.ma;
        (0 !== c.x || 0 !== c.y) && isFinite(c.x) && isFinite(c.y) && b.translate(-c.x, -c.y);
        return a.copy().transform(this.kb)
    };
    t.BA = function (a) {
        var b = this.kb,
            c = a.x,
            d = a.y,
            e = c + a.width,
            f = d + a.height,
            g = b.m11,
            h = b.m12,
            k = b.m21,
            l = b.m22,
            m = b.dx,
            n = b.dy,
            p = c * g + d * k + m;
        b = c * h + d * l + n;
        var r = e * g + d * k + m;
        a = e * h + d * l + n;
        d = c * g + f * k + m;
        c = c * h + f * l + n;
        g = e * g + f * k + m;
        e = e * h + f * l + n;
        f = Math.min(p, r);
        p = Math.max(p, r);
        r = Math.min(b, a);
        b = Math.max(b, a);
        f = Math.min(f, d);
        p = Math.max(p, d);
        r = Math.min(r, c);
        b = Math.max(b, c);
        f = Math.min(f, g);
        p = Math.max(p, g);
        r = Math.min(r, e);
        b = Math.max(b, e);
        return new N(f, r, p - f, b - r)
    };
    t.Pt = function (a) {
        var b = this.kb;
        b.reset();
        1 !== this.ya && b.scale(this.ya);
        var c = this.ma;
        (0 !== c.x || 0 !== c.y) && isFinite(c.x) && isFinite(c.y) && b.translate(-c.x, -c.y);
        return zb(a.copy(), this.kb)
    };

    function hk(a) {
        var b = a.isModified;
        a.$u !== b && (a.$u = b, a.R("Modified"))
    }

    function ik(a) {
        a = qi.get(a);
        return null !== a ? new a : new ri
    }
    R.prototype.doModelChanged = function (a) {
        if (a.model === this.model) {
            var b = a.change,
                c = a.propertyName;
            if (b === se && "S" === c[0])
                if ("StartingFirstTransaction" === c) {
                    var d = this;
                    a = this.toolManager;
                    a.mouseDownTools.each(function (a) {
                        a.diagram = d
                    });
                    a.mouseMoveTools.each(function (a) {
                        a.diagram = d
                    });
                    a.mouseUpTools.each(function (a) {
                        a.diagram = d
                    });
                    this.Bc || this.ie || (this.pj = !0, this.sj && (this.we = !0))
                } else "StartingUndo" === c || "StartingRedo" === c ? (a = this.animationManager, a.defaultAnimation.isAnimating && !this.skipsUndoManager &&
                    a.Xc(), this.R("ChangingSelection", this.selection)) : "StartedTransaction" === c && (a = this.animationManager, a.defaultAnimation.isAnimating && !this.skipsUndoManager && a.Xc());
            else if (this.Z) {
                this.Z = !1;
                try {
                    if ("" === a.modelChange && b === se) {
                        if ("FinishedUndo" === c || "FinishedRedo" === c) this.R("ChangedSelection", this.selection), Si(this);
                        var e = this.animationManager;
                        "RolledBackTransaction" === c && e.Xc();
                        this.pj = !0;
                        this.Wc();
                        0 !== this.undoManager.transactionLevel && 1 !== this.undoManager.transactionLevel || Bh(e);
                        "CommittedTransaction" ===
                        c && this.undoManager.zu && (this.Gd = Math.min(this.Gd, this.undoManager.historyIndex - 1));
                        var f = a.isTransactionFinished;
                        f && (hk(this), this.yt.clear(), Mh(this.animationManager));
                        if (!this.hs && f) {
                            this.hs = !0;
                            var g = this;
                            sa(function () {
                                g.currentTool.standardMouseOver();
                                g.hs = !1
                            }, 10)
                        }
                    }
                } finally {
                    this.Z = !0
                }
            }
        }
    };

    function Ej(a, b) {
        b = b.W.j;
        for (var c = b.length, d = 0; d < c; d++) jk(a, b[d])
    }

    function jk(a, b) {
        if (b instanceof kk) {
            var c = b.element;
            if (null !== c && c instanceof HTMLImageElement) {
                var d = b.Vg;
                null !== d && (d.bl instanceof Event && null !== b.zc && b.zc(b, d.bl), !0 === d.Pr && (null !== b.kf && b.kf(b, d.Ou), null !== b.diagram && b.diagram.ss.add(b)));
                c = c.getAttribute("src");
                d = a.Ci.H(c);
                if (null === d) d = [], d.push(b), a.Ci.add(c, d);
                else {
                    for (a = 0; a < d.length; a++)
                        if (d[a] === b) return;
                    d.push(b)
                }
            }
        }
    }

    function lk(a, b) {
        if (b instanceof kk) {
            var c = b.element;
            if (null !== c && c instanceof HTMLImageElement) {
                c = c.getAttribute("src");
                var d = a.Ci.H(c);
                if (null !== d)
                    for (var e = 0; e < d.length; e++)
                        if (d[e] === b) {
                            d.splice(e, 1);
                            0 === d.length && (a.Ci.remove(c), mk(c));
                            break
                        }
            }
        }
    }
    R.prototype.xd = function () {
        this.partManager.xd()
    };
    R.prototype.Tj = function (a, b) {
        this.Jc.Tj(a, b)
    };
    R.prototype.Vj = function (a, b) {
        this.Jc.Vj(a, b)
    };
    R.prototype.findPartForKey = function (a) {
        return this.partManager.findPartForKey(a)
    };
    R.prototype.Jb = function (a) {
        return this.partManager.Jb(a)
    };
    R.prototype.findLinkForKey = function (a) {
        return this.partManager.findLinkForKey(a)
    };
    t = R.prototype;
    t.wc = function (a) {
        return this.partManager.wc(a)
    };
    t.Si = function (a) {
        return this.partManager.Si(a)
    };
    t.vc = function (a) {
        return this.partManager.vc(a)
    };
    t.kt = function (a) {
        for (var b = [], c = 0; c < arguments.length; ++c) b[c] = arguments[c];
        return this.partManager.kt.apply(this.partManager, b instanceof Array ? b : da(ba(b)))
    };
    t.jt = function (a) {
        for (var b = [], c = 0; c < arguments.length; ++c) b[c] = arguments[c];
        return this.partManager.jt.apply(this.partManager, b instanceof Array ? b : da(ba(b)))
    };

    function zj(a, b) {
        a.ki = !1;
        var c = a.zn;
        c.w(b) || (b = b.G(), a.zn = b, Ui(a, !1), a.R("DocumentBoundsChanged", null, c.copy()), Xi(a))
    }

    function Ii(a) {
        a.ki && zj(a, a.computeBounds())
    }
    t.sz = function () {
        for (var a = new F, b = this.nodes; b.next();) {
            var c = b.value;
            c.isTopLevel && a.add(c)
        }
        for (b = this.links; b.next();) c = b.value, c.isTopLevel && a.add(c);
        return a.iterator
    };
    t.rz = function () {
        return this.zh.iterator
    };
    t.aA = function (a) {
        Si(this);
        a && nk(this, !0);
        this.pj = !0;
        If(this)
    };

    function nk(a, b) {
        for (var c = a.zh.iterator; c.next();) ok(a, c.value, b);
        null !== a.layout && (b ? a.layout.isValidLayout = !1 : a.layout.C())
    }

    function ok(a, b, c) {
        if (null !== b) {
            for (var d = b.zl.iterator; d.next();) ok(a, d.value, c);
            null !== b.layout && (c ? b.layout.isValidLayout = !1 : b.layout.C())
        }
    }

    function nj(a, b) {
        if (a.If && !a.tr) {
            var c = a.Z;
            a.Z = !0;
            var d = a.undoManager.transactionLevel,
                e = a.layout;
            try {
                0 === d && a.ua("Layout");
                var f = a.animationManager;
                1 >= d && !f.isAnimating && !f.qc && (b || zh(f, "Layout"));
                a.If = !1;
                for (var g = a.zh.iterator; g.next();) pk(a, g.value, b, d);
                e.isValidLayout || (!b || e.isRealtime || null === e.isRealtime || 0 === d ? (e.doLayout(a), Si(a), e.isValidLayout = !0) : a.If = !0)
            } finally {
                0 === d && a.Ua("Layout"), a.If = !e.isValidLayout, a.Z = c
            }
        }
    }

    function pk(a, b, c, d) {
        if (null !== b) {
            for (var e = b.zl.iterator; e.next();) pk(a, e.value, c, d);
            e = b.layout;
            null === e || e.isValidLayout || (!c || e.isRealtime || 0 === d ? (b.uk = !b.location.v(), e.doLayout(b), b.C(32), pj(a, b), e.isValidLayout = !0) : a.If = !0)
        }
    }
    t.zz = function () {
        for (var a = new E, b = this.nodes; b.next();) {
            var c = b.value;
            c.isTopLevel && null === c.Vi() && a.add(c)
        }
        return a.iterator
    };

    function oi(a) {
        function b(a) {
            var b = a.toLowerCase(),
                e = new E;
            c.add(a, e);
            c.add(b, e);
            d.add(a, a);
            d.add(b, a)
        }
        var c = new H,
            d = new H;
        b("InitialAnimationStarting");
        b("AnimationStarting");
        b("AnimationFinished");
        b("BackgroundSingleClicked");
        b("BackgroundDoubleClicked");
        b("BackgroundContextClicked");
        b("ClipboardChanged");
        b("ClipboardPasted");
        b("DocumentBoundsChanged");
        b("ExternalObjectsDropped");
        b("GainedFocus");
        b("InitialLayoutCompleted");
        b("LayoutCompleted");
        b("LinkDrawn");
        b("LinkRelinked");
        b("LinkReshaped");
        b("LostFocus");
        b("Modified");
        b("ObjectSingleClicked");
        b("ObjectDoubleClicked");
        b("ObjectContextClicked");
        b("PartCreated");
        b("PartResized");
        b("PartRotated");
        b("SelectionMoved");
        b("SelectionCopied");
        b("SelectionDeleting");
        b("SelectionDeleted");
        b("SelectionGrouped");
        b("SelectionUngrouped");
        b("ChangingSelection");
        b("ChangedSelection");
        b("SubGraphCollapsed");
        b("SubGraphExpanded");
        b("TextEdited");
        b("TreeCollapsed");
        b("TreeExpanded");
        b("ViewportBoundsChanged");
        b("InvalidateDraw");
        a.wr = c;
        a.vr = d
    }

    function yj(a, b) {
        var c = a.vr.H(b);
        return null !== c ? c : a.vr.H(b.toLowerCase())
    }

    function qk(a, b) {
        var c = a.wr.H(b);
        if (null !== c) return c;
        c = a.wr.H(b.toLowerCase());
        if (null !== c) return c;
        B("Unknown DiagramEvent name: " + b);
        return null
    }
    t.Uj = function (a, b) {
        a = qk(this, a);
        null !== a && a.add(b)
    };
    t.ym = function (a, b) {
        a = qk(this, a);
        null !== a && a.remove(b)
    };
    t.R = function (a, b, c) {
        var d = qk(this, a),
            e = new pe;
        e.diagram = this;
        a = yj(this, a);
        null !== a && (e.name = a);
        void 0 !== b && (e.subject = b);
        void 0 !== c && (e.parameter = c);
        b = d.length;
        if (1 === b) d.L(0)(e);
        else if (0 !== b)
            for (d = d.na(), c = 0; c < b; c++)(0, d[c])(e)
    };

    function rk(a) {
        if (a.animationManager.isAnimating) return !1;
        var b = a.currentTool;
        return b === a.toolManager.findTool("Dragging") ? !a.Op || b.isComplexRoutingRealtime : !0
    }
    t.lk = function (a, b) {
        void 0 === b && (b = null);
        return sk(this, !1, null, b).lk(a.x, a.y, a.width, a.height)
    };
    R.prototype.computeOccupiedArea = function () {
        return this.isVirtualized ? this.viewportBounds.copy() : this.ki ? Ti(this) : this.documentBounds.copy()
    };

    function sk(a, b, c, d) {
        null === a.Gb && (a.Gb = new tk);
        if (a.Gb.st || a.Gb.group !== c || a.Gb.oy !== d) {
            if (null === c) {
                b = a.computeOccupiedArea();
                b.Vc(100, 100);
                a.Gb.initialize(b);
                b = N.alloc();
                for (var e = a.nodes; e.next();) {
                    var f = e.value,
                        g = f.layer;
                    null !== g && g.visible && !g.isTemporary && uk(a, f, d, b)
                }
                N.free(b)
            } else {
                0 < c.memberParts.count && (b = a.computePartsBounds(c.memberParts, !1), b.Vc(20, 20), a.Gb.initialize(b));
                b = N.alloc();
                for (e = c.memberParts; e.next();) f = e.value, f instanceof W && uk(a, f, d, b);
                N.free(b)
            }
            a.Gb.group = c;
            a.Gb.oy = d;
            a.Gb.st = !1
        } else b && vk(a.Gb);
        return a.Gb
    }

    function uk(a, b, c, d) {
        if (b !== c)
            if (b.isVisible() && b.avoidable && !b.isLinkLabel) {
                var e = b.getAvoidableRect(d),
                    f = a.Gb.dm;
                c = a.Gb.cm;
                d = e.x + e.width;
                b = e.y + e.height;
                for (var g = e.x; g < d; g += f) {
                    for (var h = e.y; h < b; h += c) wk(a.Gb, g, h);
                    wk(a.Gb, g, b)
                }
                for (e = e.y; e < b; e += c) wk(a.Gb, d, e);
                wk(a.Gb, d, b)
            } else if (b instanceof T)
            for (b = b.memberParts; b.next();) e = b.value, e instanceof W && uk(a, e, c, d)
    }

    function xk(a, b) {
        null !== a.Gb && !a.Gb.st && (void 0 === b && (b = null), null === b || b.avoidable && !b.isLinkLabel) && (a.Gb.st = !0)
    }
    t = R.prototype;
    t.gt = function (a) {
        this.$m.assign(a);
        yk(this, this.$m).Ma(this.position) ? this.Cf() : zk(this)
    };

    function zk(a) {
        -1 === a.jj && (a.jj = sa(function () {
            if (-1 !== a.jj && (a.Cf(), null !== a.lastInput.event)) {
                var b = yk(a, a.$m);
                b.Ma(a.position) || (a.position = b, a.lastInput.documentPoint = a.Pt(a.$m), a.doMouseMove(), a.ki = !0, zj(a, a.documentBounds.copy().Hc(a.computeBounds())), a.Ac = !0, a.Wc(), zk(a))
            }
        }, a.Zm))
    }
    t.Cf = function () {
        -1 !== this.jj && (x.clearTimeout(this.jj), this.jj = -1)
    };

    function yk(a, b) {
        var c = a.position,
            d = a.an;
        if (0 >= d.top && 0 >= d.left && 0 >= d.right && 0 >= d.bottom) return c;
        var e = a.viewportBounds,
            f = a.scale;
        e = N.allocAt(0, 0, e.width * f, e.height * f);
        var g = I.allocAt(0, 0);
        if (b.x >= e.x && b.x < e.x + d.left) {
            var h = Math.max(a.scrollHorizontalLineChange, 1);
            h |= 0;
            g.x -= h;
            b.x < e.x + d.left / 2 && (g.x -= h);
            b.x < e.x + d.left / 4 && (g.x -= 4 * h)
        } else b.x <= e.x + e.width && b.x > e.x + e.width - d.right && (h = Math.max(a.scrollHorizontalLineChange, 1), h |= 0, g.x += h, b.x > e.x + e.width - d.right / 2 && (g.x += h), b.x > e.x + e.width - d.right / 4 &&
            (g.x += 4 * h));
        b.y >= e.y && b.y < e.y + d.top ? (a = Math.max(a.scrollVerticalLineChange, 1), a |= 0, g.y -= a, b.y < e.y + d.top / 2 && (g.y -= a), b.y < e.y + d.top / 4 && (g.y -= 4 * a)) : b.y <= e.y + e.height && b.y > e.y + e.height - d.bottom && (a = Math.max(a.scrollVerticalLineChange, 1), a |= 0, g.y += a, b.y > e.y + e.height - d.bottom / 2 && (g.y += a), b.y > e.y + e.height - d.bottom / 4 && (g.y += 4 * a));
        g.Ma(Fb) || (c = new I(c.x + g.x / f, c.y + g.y / f));
        N.free(e);
        I.free(g);
        return c
    }
    t.At = function () {
        return null
    };
    t.Kv = function () {
        return null
    };
    t.Ky = function (a, b) {
        this.jx.add(a, b)
    };

    function Ak(a, b, c) {
        function d() {
            var a = +new Date;
            f = !0;
            for (g.reset(); g.next();)
                if (!g.value[0].vl) {
                    f = !1;
                    break
                } f || a - l > k ? b(c, e, h) : x.requestAnimationFrame(d)
        }
        for (var e = c.callback, f = !0, g = a.Ci.iterator; g.next();)
            if (!g.value[0].vl) {
                f = !1;
                break
            } if ("function" !== typeof e || f) return b(c, e, a);
        var h = a,
            k = c.callbackTimeout || 300,
            l = +new Date;
        x.requestAnimationFrame(function () {
            d()
        });
        return null
    }
    t.cA = function (a) {
        if (!Ug) return null;
        void 0 === a && (a = new db);
        a.returnType = "Image";
        return this.Ux(a)
    };
    t.Ux = function (a) {
        void 0 === a && (a = new db);
        return Ak(this, this.dA, a)
    };
    t.dA = function (a, b, c) {
        var d = Bk(c, a, "canvas", null);
        if (null === d) return null;
        c = d.V.canvas;
        var e = null;
        if (null !== c) switch (e = a.returnType, void 0 === e ? e = "string" : e = e.toLowerCase(), e) {
            case "imagedata":
                e = d.getImageData(0, 0, c.width, c.height);
                break;
            case "image":
                d = (a.document || document).createElement("img");
                d.src = c.toDataURL(a.type, a.details);
                e = d;
                break;
            case "blob":
                "function" !== typeof b && B('Error: Diagram.makeImageData called with "returnType: toBlob", but no required "callback" function property defined.');
                if ("function" ===
                    typeof c.toBlob) return c.toBlob(b, a.type, a.details), "toBlob";
                if ("function" === typeof c.msToBlob) return b(c.msToBlob()), "msToBlob";
                b(null);
                return null;
            default:
                e = c.toDataURL(a.type, a.details)
        }
        return "function" === typeof b ? (b(e), null) : e
    };

    function Bk(a, b, c, d) {
        a.animationManager.Xc();
        a.Wc();
        if (null === a.sa) return null;
        "object" !== typeof b && B("properties argument must be an Object.");
        var e = b.size || null,
            f = b.scale || null;
        void 0 !== b.scale && isNaN(b.scale) && (f = "NaN");
        var g = b.maxSize;
        void 0 === b.maxSize && (g = "SVG" === c ? new M(Infinity, Infinity) : new M(2E3, 2E3));
        var h = b.position || null,
            k = b.parts || null,
            l = void 0 === b.padding ? 1 : b.padding,
            m = b.background || null,
            n = b.omitTemporary;
        void 0 === n && (n = !0);
        var p = b.document || document,
            r = b.elementFinished || null,
            q = b.showTemporary;
        void 0 === q && (q = !n);
        b = b.showGrid;
        void 0 === b && (b = q);
        null !== e && isNaN(e.width) && isNaN(e.height) && (e = null);
        "number" === typeof l ? l = new oc(l) : l instanceof oc || B("MakeImage padding must be a Margin or a number.");
        l.left = Math.max(l.left, 0);
        l.right = Math.max(l.right, 0);
        l.top = Math.max(l.top, 0);
        l.bottom = Math.max(l.bottom, 0);
        a.Db.sc(!0);
        n = new Ck(null, p);
        var u = n.context;
        if (!(e || f || k || h)) {
            n.width = a.wa + Math.ceil(l.left + l.right);
            n.height = a.va + Math.ceil(l.top + l.bottom);
            if ("SVG" === c) {
                if (null === d) return null;
                d.resize(n.width,
                    n.height, n.width, n.height);
                d.ownerDocument = p;
                d.jq = r;
                wj(a, d.context, l, new M(n.width, n.height), a.ya, a.ma, k, m, q, b);
                return d.context
            }
            a.Xk = !1;
            wj(a, u, l, new M(n.width, n.height), a.ya, a.ma, k, m, q, b);
            a.Xk = !0;
            return n.context
        }
        var v = a.yn,
            w = a.documentBounds.copy();
        w.kw(a.bb);
        if (q)
            for (var y = a.Ja.j, z = y.length, A = 0; A < z; A++) {
                var C = y[A];
                if (C.visible && C.isTemporary) {
                    C = C.Ca.j;
                    for (var G = C.length, L = 0; L < G; L++) {
                        var K = C[L];
                        K.isInDocumentBounds && K.isVisible() && (K = K.actualBounds, K.v() && w.Hc(K))
                    }
                }
            }
        y = new I(w.x, w.y);
        if (null !== k) {
            z = !0;
            A = k.iterator;
            for (A.reset(); A.next();)
                if (C = A.value, C instanceof U && (G = C.layer, (null === G || G.visible) && (null === G || q || !G.isTemporary) && C.isVisible() && (C = C.actualBounds, C.v())))
                    if (z) {
                        z = !1;
                        var V = C.copy()
                    } else V.Hc(C);
            z && (V = new N(0, 0, 0, 0));
            w.width = V.width;
            w.height = V.height;
            y.x = V.x;
            y.y = V.y
        }
        null !== h && h.v() && (y = h, f || (f = v));
        V = h = 0;
        null !== l && (h = l.left + l.right, V = l.top + l.bottom);
        z = A = 0;
        null !== e && (A = e.width, z = e.height, isFinite(A) && (A = Math.max(0, A - h)), isFinite(z) && (z = Math.max(0, z - V)));
        null !== e && null !== f ? ("NaN" ===
            f && (f = v), e.v() ? (e = A, w = z) : isNaN(z) ? (e = A, w = w.height * f) : (e = w.width * f, w = z)) : null !== e ? e.v() ? (f = Math.min(A / w.width, z / w.height), e = A, w = z) : isNaN(z) ? (f = A / w.width, e = A, w = w.height * f) : (f = z / w.height, e = w.width * f, w = z) : null !== f ? "NaN" === f && g.v() ? (f = Math.min((g.width - h) / w.width, (g.height - V) / w.height), f > v ? (f = v, e = w.width, w = w.height) : (e = g.width, w = g.height)) : (e = w.width * f, w = w.height * f) : (f = v, e = w.width, w = w.height);
        null !== l ? (e += h, w += V) : l = new oc(0);
        null !== g && (v = g.width, g = g.height, isNaN(v) && (v = 2E3), isNaN(g) && (g = 2E3), isFinite(v) &&
            (e = Math.min(e, v)), isFinite(g) && (w = Math.min(w, g)));
        n.width = Math.ceil(e);
        n.height = Math.ceil(w);
        if ("SVG" === c) {
            if (null === d) return null;
            d.resize(n.width, n.height, n.width, n.height);
            d.ownerDocument = p;
            d.jq = r;
            wj(a, d.context, l, new M(Math.ceil(e), Math.ceil(w)), f, y, k, m, q, b);
            return d.context
        }
        a.Xk = !1;
        wj(a, u, l, new M(Math.ceil(e), Math.ceil(w)), f, y, k, m, q, b);
        a.Xk = !0;
        return n.context
    }
    ma.Object.defineProperties(R.prototype, {
        div: {
            get: function () {
                return this.La
            },
            set: function (a) {
                if (this.La !== a) {
                    Qa = [];
                    var b = this.La;
                    null !== b ? (b.B = void 0, b.innerHTML = "", null !== this.sa && (b = this.sa.Ea, this.removeEventListener(b, "touchstart", this.pw, !1), this.removeEventListener(b, "touchmove", this.ow, !1), this.removeEventListener(b, "touchend", this.nw, !1), this.sa.Fx()), b = this.toolManager, null !== b && (b.mouseDownTools.each(function (a) {
                            a.cancelWaitAfter()
                        }), b.mouseMoveTools.each(function (a) {
                            a.cancelWaitAfter()
                        }),
                        b.mouseUpTools.each(function (a) {
                            a.cancelWaitAfter()
                        })), b.cancelWaitAfter(), this.currentTool.doCancel(), this.Db = this.sa = null, this.removeEventListener(x, "resize", this.vw, !1), this.removeEventListener(x, "mousemove", this.qk, !0), this.removeEventListener(x, "mousedown", this.pk, !0), this.removeEventListener(x, "mouseup", this.sk, !0), this.removeEventListener(x, "wheel", this.tk, !0), this.removeEventListener(x, "mouseout", this.rk, !0), ze === this && (ze = null)) : this.ie = !1;
                    this.La = null;
                    if (null !== a) {
                        if (b = a.B) b.div = null;
                        Ei(this,
                            a);
                        this.Ee()
                    }
                }
            }
        },
        xx: {
            get: function () {
                return this.Io
            }
        },
        kk: {
            get: function () {
                return this.ie
            }
        },
        draggedLink: {
            get: function () {
                return this.yr
            },
            set: function (a) {
                this.yr !== a && (this.yr = a, null !== a && (this.ms = a.fromPort, this.ns = a.toPort))
            }
        },
        Xx: {
            get: function () {
                return this.ms
            },
            set: function (a) {
                this.ms = a
            }
        },
        Yx: {
            get: function () {
                return this.ns
            },
            set: function (a) {
                this.ns = a
            }
        },
        animationManager: {
            get: function () {
                return this.Jc
            }
        },
        undoManager: {
            get: function () {
                return this.ac.undoManager
            }
        },
        skipsUndoManager: {
            get: function () {
                return this.sg
            },
            set: function (a) {
                this.sg = a;
                this.ac.skipsUndoManager = a
            }
        },
        delaysLayout: {
            get: function () {
                return this.tr
            },
            set: function (a) {
                this.tr = a
            }
        },
        opacity: {
            get: function () {
                return this.qb
            },
            set: function (a) {
                var b = this.qb;
                b !== a && ((0 > a || 1 < a) && va(a, "0 <= value <= 1",
                    R, "opacity"), this.qb = a, this.g("opacity", b, a), this.M())
            }
        },
        validCycle: {
            get: function () {
                return this.Xs
            },
            set: function (a) {
                var b = this.Xs;
                b !== a && (this.Xs = a, this.g("validCycle", b, a))
            }
        },
        layers: {
            get: function () {
                return this.Ja.iterator
            }
        },
        isModelReadOnly: {
            get: function () {
                var a = this.ac;
                return null === a ? !1 : a.isReadOnly
            },
            set: function (a) {
                var b = this.ac;
                null !== b && (b.isReadOnly = a)
            }
        },
        isReadOnly: {
            get: function () {
                return this.Zf
            },
            set: function (a) {
                var b = this.Zf;
                b !== a && (this.Zf = a, this.g("isReadOnly", b, a))
            }
        },
        isEnabled: {
            get: function () {
                return this.Mc
            },
            set: function (a) {
                var b = this.Mc;
                b !== a && (this.Mc = a, this.g("isEnabled", b, a))
            }
        },
        allowClipboard: {
            get: function () {
                return this.Uq
            },
            set: function (a) {
                var b = this.Uq;
                b !== a && (this.Uq = a, this.g("allowClipboard", b, a))
            }
        },
        allowCopy: {
            get: function () {
                return this.Rh
            },
            set: function (a) {
                var b = this.Rh;
                b !== a && (this.Rh = a, this.g("allowCopy",
                    b, a))
            }
        },
        allowDelete: {
            get: function () {
                return this.Sh
            },
            set: function (a) {
                var b = this.Sh;
                b !== a && (this.Sh = a, this.g("allowDelete", b, a))
            }
        },
        allowDragOut: {
            get: function () {
                return this.Vq
            },
            set: function (a) {
                var b = this.Vq;
                b !== a && (this.Vq = a, this.g("allowDragOut", b, a))
            }
        },
        allowDrop: {
            get: function () {
                return this.Wq
            },
            set: function (a) {
                var b = this.Wq;
                b !== a && (this.Wq = a, this.g("allowDrop", b, a))
            }
        },
        allowTextEdit: {
            get: function () {
                return this.ai
            },
            set: function (a) {
                var b = this.ai;
                b !== a && (this.ai = a, this.g("allowTextEdit", b, a))
            }
        },
        allowGroup: {
            get: function () {
                return this.Th
            },
            set: function (a) {
                var b = this.Th;
                b !== a && (this.Th = a, this.g("allowGroup", b, a))
            }
        },
        allowUngroup: {
            get: function () {
                return this.bi
            },
            set: function (a) {
                var b = this.bi;
                b !== a && (this.bi = a, this.g("allowUngroup", b, a))
            }
        },
        allowInsert: {
            get: function () {
                return this.Yq
            },
            set: function (a) {
                var b =
                    this.Yq;
                b !== a && (this.Yq = a, this.g("allowInsert", b, a))
            }
        },
        allowLink: {
            get: function () {
                return this.Uh
            },
            set: function (a) {
                var b = this.Uh;
                b !== a && (this.Uh = a, this.g("allowLink", b, a))
            }
        },
        allowRelink: {
            get: function () {
                return this.Wh
            },
            set: function (a) {
                var b = this.Wh;
                b !== a && (this.Wh = a, this.g("allowRelink", b, a))
            }
        },
        allowMove: {
            get: function () {
                return this.Vh
            },
            set: function (a) {
                var b = this.Vh;
                b !== a && (this.Vh = a, this.g("allowMove", b, a))
            }
        },
        allowReshape: {
            get: function () {
                return this.Xh
            },
            set: function (a) {
                var b = this.Xh;
                b !== a && (this.Xh = a, this.g("allowReshape", b, a))
            }
        },
        allowResize: {
            get: function () {
                return this.Yh
            },
            set: function (a) {
                var b = this.Yh;
                b !== a && (this.Yh = a, this.g("allowResize", b, a))
            }
        },
        allowRotate: {
            get: function () {
                return this.Zh
            },
            set: function (a) {
                var b = this.Zh;
                b !== a && (this.Zh = a, this.g("allowRotate", b, a))
            }
        },
        allowSelect: {
            get: function () {
                return this.$h
            },
            set: function (a) {
                var b =
                    this.$h;
                b !== a && (this.$h = a, this.g("allowSelect", b, a))
            }
        },
        allowUndo: {
            get: function () {
                return this.Zq
            },
            set: function (a) {
                var b = this.Zq;
                b !== a && (this.Zq = a, this.g("allowUndo", b, a))
            }
        },
        allowZoom: {
            get: function () {
                return this.ar
            },
            set: function (a) {
                var b = this.ar;
                b !== a && (this.ar = a, this.g("allowZoom", b, a))
            }
        },
        hasVerticalScrollbar: {
            get: function () {
                return this.dl
            },
            set: function (a) {
                var b = this.dl;
                b !== a && (this.dl = a, Xi(this), this.M(), this.g("hasVerticalScrollbar",
                    b, a), Ui(this, !1))
            }
        },
        hasHorizontalScrollbar: {
            get: function () {
                return this.cl
            },
            set: function (a) {
                var b = this.cl;
                b !== a && (this.cl = a, Xi(this), this.M(), this.g("hasHorizontalScrollbar", b, a), Ui(this, !1))
            }
        },
        allowHorizontalScroll: {
            get: function () {
                return this.Xq
            },
            set: function (a) {
                var b = this.Xq;
                b !== a && (this.Xq = a, this.g("allowHorizontalScroll", b, a), Ui(this, !1))
            }
        },
        allowVerticalScroll: {
            get: function () {
                return this.$q
            },
            set: function (a) {
                var b =
                    this.$q;
                b !== a && (this.$q = a, this.g("allowVerticalScroll", b, a), Ui(this, !1))
            }
        },
        scrollHorizontalLineChange: {
            get: function () {
                return this.Cs
            },
            set: function (a) {
                var b = this.Cs;
                b !== a && (0 > a && va(a, ">= 0", R, "scrollHorizontalLineChange"), this.Cs = a, this.g("scrollHorizontalLineChange", b, a))
            }
        },
        scrollVerticalLineChange: {
            get: function () {
                return this.Gs
            },
            set: function (a) {
                var b = this.Gs;
                b !== a && (0 > a && va(a, ">= 0", R, "scrollVerticalLineChange"), this.Gs = a, this.g("scrollVerticalLineChange",
                    b, a))
            }
        },
        lastInput: {
            get: function () {
                return this.dh
            },
            set: function (a) {
                this.dh = a
            }
        },
        firstInput: {
            get: function () {
                return this.Uf
            },
            set: function (a) {
                this.Uf = a
            }
        },
        currentCursor: {
            get: function () {
                return this.mr
            },
            set: function (a) {
                "" === a && (a = this.xn);
                if (this.mr !== a) {
                    var b = this.sa,
                        c = this.La;
                    if (null !== b) {
                        this.mr = a;
                        var d = b.style.cursor;
                        b.style.cursor = a;
                        c.style.cursor = a;
                        b.style.cursor === d && (b.style.cursor = "-webkit-" + a, c.style.cursor =
                            "-webkit-" + a, b.style.cursor === d && (b.style.cursor = "-moz-" + a, c.style.cursor = "-moz-" + a, b.style.cursor === d && (b.style.cursor = a, c.style.cursor = a)))
                    }
                }
            }
        },
        defaultCursor: {
            get: function () {
                return this.xn
            },
            set: function (a) {
                "" === a && (a = "auto");
                var b = this.xn;
                b !== a && (this.xn = a, this.g("defaultCursor", b, a))
            }
        },
        click: {
            get: function () {
                return this.Nf
            },
            set: function (a) {
                var b = this.Nf;
                b !== a && (this.Nf = a, this.g("click", b, a))
            }
        },
        doubleClick: {
            get: function () {
                return this.Sf
            },
            set: function (a) {
                var b = this.Sf;
                b !== a && (this.Sf = a, this.g("doubleClick", b, a))
            }
        },
        contextClick: {
            get: function () {
                return this.Of
            },
            set: function (a) {
                var b = this.Of;
                b !== a && (this.Of = a, this.g("contextClick", b, a))
            }
        },
        mouseOver: {
            get: function () {
                return this.kg
            },
            set: function (a) {
                var b = this.kg;
                b !== a && (this.kg = a, this.g("mouseOver", b, a))
            }
        },
        mouseHover: {
            get: function () {
                return this.ig
            },
            set: function (a) {
                var b =
                    this.ig;
                b !== a && (this.ig = a, this.g("mouseHover", b, a))
            }
        },
        mouseHold: {
            get: function () {
                return this.hg
            },
            set: function (a) {
                var b = this.hg;
                b !== a && (this.hg = a, this.g("mouseHold", b, a))
            }
        },
        mouseDragOver: {
            get: function () {
                return this.gs
            },
            set: function (a) {
                var b = this.gs;
                b !== a && (this.gs = a, this.g("mouseDragOver", b, a))
            }
        },
        mouseDrop: {
            get: function () {
                return this.fg
            },
            set: function (a) {
                var b = this.fg;
                b !== a && (this.fg = a, this.g("mouseDrop", b, a))
            }
        },
        handlesDragDropForTopLevelParts: {
            get: function () {
                return this.Ir
            },
            set: function (a) {
                var b = this.Ir;
                b !== a && (this.Ir = a, this.g("handlesDragDropForTopLevelParts", b, a))
            }
        },
        mouseEnter: {
            get: function () {
                return this.gg
            },
            set: function (a) {
                var b = this.gg;
                b !== a && (this.gg = a, this.g("mouseEnter", b, a))
            }
        },
        mouseLeave: {
            get: function () {
                return this.jg
            },
            set: function (a) {
                var b = this.jg;
                b !== a && (this.jg = a, this.g("mouseLeave", b, a))
            }
        },
        toolTip: {
            get: function () {
                return this.ug
            },
            set: function (a) {
                var b = this.ug;
                b !== a && (this.ug = a, this.g("toolTip", b, a))
            }
        },
        contextMenu: {
            get: function () {
                return this.Pf
            },
            set: function (a) {
                var b = this.Pf;
                b !== a && (this.Pf = a, this.g("contextMenu", b, a))
            }
        },
        commandHandler: {
            get: function () {
                return this.gr
            },
            set: function (a) {
                this.gr !== a && (this.gr = a, a.Yd(this))
            }
        },
        toolManager: {
            get: function () {
                return this.Ts
            },
            set: function (a) {
                this.Ts !== a &&
                    (this.Ts = a, a.diagram = this)
            }
        },
        defaultTool: {
            get: function () {
                return this.sr
            },
            set: function (a) {
                var b = this.sr;
                b !== a && (this.sr = a, a.diagram = this, this.currentTool === b && (this.currentTool = a))
            }
        },
        currentTool: {
            get: function () {
                return this.pr
            },
            set: function (a) {
                var b = this.pr;
                null !== b && (b.isActive && b.doDeactivate(), b.cancelWaitAfter(), b.doStop());
                null === a && (a = this.defaultTool);
                null !== a && (this.pr = a, a.diagram = this, a.doStart())
            }
        },
        selection: {
            get: function () {
                return this.Qu
            }
        },
        maxSelectionCount: {
            get: function () {
                return this.cs
            },
            set: function (a) {
                var b = this.cs;
                if (b !== a)
                    if (0 <= a && !isNaN(a)) {
                        if (this.cs = a, this.g("maxSelectionCount", b, a), !this.undoManager.isUndoingRedoing && (a = this.selection.count - a, 0 < a)) {
                            this.R("ChangingSelection", this.selection);
                            b = this.selection.na();
                            for (var c = 0; c < a; c++) b[c].isSelected = !1;
                            this.R("ChangedSelection", this.selection)
                        }
                    } else va(a, ">= 0", R, "maxSelectionCount")
            }
        },
        nodeSelectionAdornmentTemplate: {
            get: function () {
                return this.Ro
            },
            set: function (a) {
                var b = this.Ro;
                b !== a && (this.Ro = a, this.g("nodeSelectionAdornmentTemplate", b, a))
            }
        },
        groupSelectionAdornmentTemplate: {
            get: function () {
                return this.Vn
            },
            set: function (a) {
                var b = this.Vn;
                b !== a && (this.Vn = a, this.g("groupSelectionAdornmentTemplate", b, a))
            }
        },
        linkSelectionAdornmentTemplate: {
            get: function () {
                return this.qo
            },
            set: function (a) {
                var b = this.qo;
                b !== a && (this.qo = a, this.g("linkSelectionAdornmentTemplate",
                    b, a))
            }
        },
        highlighteds: {
            get: function () {
                return this.ru
            }
        },
        isModified: {
            get: function () {
                var a = this.undoManager;
                return a.isEnabled ? null !== a.currentTransaction ? !0 : this.$n && this.Gd !== a.historyIndex : this.$n
            },
            set: function (a) {
                if (this.$n !== a) {
                    this.$n = a;
                    var b = this.undoManager;
                    !a && b.isEnabled && (this.Gd = b.historyIndex);
                    a || hk(this)
                }
            }
        },
        model: {
            get: function () {
                return this.ac
            },
            set: function (a) {
                var b = this.ac;
                if (b !== a) {
                    this.currentTool.doCancel();
                    null !== b && b.undoManager !== a.undoManager && b.undoManager.isInTransaction && B("Do not replace a Diagram.model while a transaction is in progress.");
                    this.animationManager.Xc(!0);
                    var c = Hi(this, !0);
                    this.ie = !1;
                    this.sj = !0;
                    this.Gd = -2;
                    this.we = !1;
                    var d = this.Bc;
                    this.Bc = !0;
                    zh(this.animationManager, "Model");
                    null !== b && (null !== this.oe && this.oe.each(function (a) {
                        b.wk(a)
                    }), b.wk(this.Ic));
                    this.ac = a;
                    this.partManager = ik(this.ac.constructor.type);
                    for (var e = 0; e < c.length; e++) this.add(c[e]);
                    a.Dh(this.jd);
                    this.partManager.addAllModeledParts();
                    a.wk(this.jd);
                    a.Dh(this.Ic);
                    null !== this.oe && this.oe.each(function (b) {
                        a.Dh(b)
                    });
                    this.Bc = d;
                    this.Rb || this.M();
                    null !== b && a.undoManager.copyProperties(b.undoManager)
                }
            }
        },
        Z: {
            get: function () {
                return this.yu
            },
            set: function (a) {
                this.yu = a
            }
        },
        yt: {
            get: function () {
                return this.Yw
            }
        },
        skipsModelSourceBindings: {
            get: function () {
                return this.Ru
            },
            set: function (a) {
                this.Ru = a
            }
        },
        Ot: {
            get: function () {
                return this.Ls
            },
            set: function (a) {
                this.Ls = a
            }
        },
        nodeTemplate: {
            get: function () {
                return this.Ye.H("")
            },
            set: function (a) {
                var b = this.Ye.H("");
                b !== a && (this.Ye.add("", a), this.g("nodeTemplate", b, a), this.undoManager.isUndoingRedoing || this.xd())
            }
        },
        nodeTemplateMap: {
            get: function () {
                return this.Ye
            },
            set: function (a) {
                var b = this.Ye;
                b !== a && (this.Ye = a, this.g("nodeTemplateMap", b, a), this.undoManager.isUndoingRedoing || this.xd())
            }
        },
        groupTemplate: {
            get: function () {
                return this.ah.H("")
            },
            set: function (a) {
                var b = this.ah.H("");
                b !== a && (this.ah.add("", a), this.g("groupTemplate", b, a), this.undoManager.isUndoingRedoing || this.xd())
            }
        },
        groupTemplateMap: {
            get: function () {
                return this.ah
            },
            set: function (a) {
                var b = this.ah;
                b !== a && (this.ah = a, this.g("groupTemplateMap", b, a), this.undoManager.isUndoingRedoing || this.xd())
            }
        },
        linkTemplate: {
            get: function () {
                return this.ag.H("")
            },
            set: function (a) {
                var b = this.ag.H("");
                b !== a && (this.ag.add("", a), this.g("linkTemplate",
                    b, a), this.undoManager.isUndoingRedoing || this.xd())
            }
        },
        linkTemplateMap: {
            get: function () {
                return this.ag
            },
            set: function (a) {
                var b = this.ag;
                b !== a && (this.ag = a, this.g("linkTemplateMap", b, a), this.undoManager.isUndoingRedoing || this.xd())
            }
        },
        isMouseCaptured: {
            get: function () {
                return this.wu
            },
            set: function (a) {
                var b = this.sa;
                null !== b && (b = b.Ea, b instanceof SVGElement || (a ? (this.lastInput.bubbles = !1, this.Vm ? (this.removeEventListener(b, "pointermove", this.um, !1), this.removeEventListener(b,
                    "pointerdown", this.tm, !1), this.removeEventListener(b, "pointerup", this.wm, !1), this.removeEventListener(b, "pointerout", this.vm, !1), this.addEventListener(x, "pointermove", this.um, !0), this.addEventListener(x, "pointerdown", this.tm, !0), this.addEventListener(x, "pointerup", this.wm, !0), this.addEventListener(x, "pointerout", this.vm, !0)) : (this.removeEventListener(b, "mousemove", this.qk, !1), this.removeEventListener(b, "mousedown", this.pk, !1), this.removeEventListener(b, "mouseup", this.sk, !1), this.removeEventListener(b,
                    "mouseout", this.rk, !1), this.addEventListener(x, "mousemove", this.qk, !0), this.addEventListener(x, "mousedown", this.pk, !0), this.addEventListener(x, "mouseup", this.sk, !0), this.addEventListener(x, "mouseout", this.rk, !0)), this.removeEventListener(b, "wheel", this.tk, !1), this.addEventListener(x, "wheel", this.tk, !0), this.addEventListener(x, "selectstart", this.preventDefault, !1)) : (this.Vm ? (this.removeEventListener(x, "pointermove", this.um, !0), this.removeEventListener(x, "pointerdown", this.tm, !0), this.removeEventListener(x,
                    "pointerup", this.wm, !0), this.removeEventListener(x, "pointerout", this.vm, !0), this.addEventListener(b, "pointermove", this.um, !1), this.addEventListener(b, "pointerdown", this.tm, !1), this.addEventListener(b, "pointerup", this.wm, !1), this.addEventListener(b, "pointerout", this.vm, !1)) : (this.removeEventListener(x, "mousemove", this.qk, !0), this.removeEventListener(x, "mousedown", this.pk, !0), this.removeEventListener(x, "mouseup", this.sk, !0), this.removeEventListener(x, "mouseout", this.rk, !0), this.addEventListener(b, "mousemove",
                    this.qk, !1), this.addEventListener(b, "mousedown", this.pk, !1), this.addEventListener(b, "mouseup", this.sk, !1), this.addEventListener(b, "mouseout", this.rk, !1)), this.removeEventListener(x, "wheel", this.tk, !0), this.removeEventListener(x, "selectstart", this.preventDefault, !1), this.addEventListener(b, "wheel", this.tk, !1)), this.wu = a))
            }
        },
        position: {
            get: function () {
                return this.ma
            },
            set: function (a) {
                var b = I.alloc().assign(this.ma);
                if (!b.w(a)) {
                    var c = this.viewportBounds.copy();
                    this.ma.assign(a);
                    Oh(this.animationManager, b, this.ma);
                    this.Rb || null === this.sa && !this.Zl.v() || (this.Rb = !0, a = this.scale, Wi(this, this.zn, this.wa / a, this.va / a, this.lj, !1), this.Rb = !1);
                    this.Rb || this.Bq(c, this.viewportBounds, this.ya, !1)
                }
                I.free(b)
            }
        },
        initialPosition: {
            get: function () {
                return this.Kr
            },
            set: function (a) {
                this.Kr.w(a) || (this.Kr = a.G())
            }
        },
        initialScale: {
            get: function () {
                return this.Lr
            },
            set: function (a) {
                this.Lr !== a && (this.Lr = a)
            }
        },
        grid: {
            get: function () {
                null === this.Fb && Ni(this);
                return this.Fb
            },
            set: function (a) {
                var b = this.Fb;
                if (b !== a) {
                    null === b && (Ni(this), b = this.Fb);
                    a.type !== X.Grid && B("Diagram.grid must be a Panel of type Panel.Grid");
                    var c = b.panel;
                    null !== c && c.remove(b);
                    this.Fb = a;
                    a.name = "GRID";
                    null !== c && c.add(a);
                    mj(this);
                    this.M();
                    this.g("grid", b, a)
                }
            }
        },
        viewportBounds: {
            get: function () {
                var a = this.Zu,
                    b = this.ma,
                    c = this.ya;
                if (null === this.sa) return this.Zl.v() && a.h(b.x, b.y, this.wa / c, this.va / c), a;
                a.h(b.x, b.y, Math.max(this.wa,
                    0) / c, Math.max(this.va, 0) / c);
                return a
            }
        },
        viewSize: {
            get: function () {
                return this.Zl
            },
            set: function (a) {
                var b = this.viewSize;
                b.w(a) || (this.Zl = a = a.G(), this.wa = a.width, this.va = a.height, this.Na(), this.g("viewSize", b, a))
            }
        },
        fixedBounds: {
            get: function () {
                return this.Fr
            },
            set: function (a) {
                var b = this.Fr;
                b.w(a) || (-Infinity !== a.width && Infinity !== a.height && -Infinity !== a.height || B("fixedBounds width/height must not be Infinity"), this.Fr = a = a.G(), this.Na(), this.g("fixedBounds",
                    b, a))
            }
        },
        scrollMargin: {
            get: function () {
                return this.Fi
            },
            set: function (a) {
                "number" === typeof a && (a = new oc(a));
                var b = this.Fi;
                b.w(a) || (this.Fi = a = a.G(), this.g("scrollMargin", b, a), this.Ee())
            }
        },
        scrollMode: {
            get: function () {
                return this.Gi
            },
            set: function (a) {
                var b = this.Gi;
                b !== a && (this.Gi = a, a === Vh && Ui(this, !1), this.g("scrollMode", b, a), this.M())
            }
        },
        scrollsPageOnFocus: {
            get: function () {
                return this.Hs
            },
            set: function (a) {
                var b = this.Hs;
                b !== a && (this.Hs = a, this.g("scrollsPageOnFocus", b, a))
            }
        },
        positionComputation: {
            get: function () {
                return this.vs
            },
            set: function (a) {
                var b = this.vs;
                b !== a && (this.vs = a, Ui(this, !1), this.g("positionComputation", b, a))
            }
        },
        scaleComputation: {
            get: function () {
                return this.As
            },
            set: function (a) {
                var b = this.As;
                b !== a && (this.As = a, Sj(this, this.scale, this.scale), this.g("scaleComputation", b, a))
            }
        },
        documentBounds: {
            get: function () {
                return this.zn
            }
        },
        isVirtualized: {
            get: function () {
                return this.Vr
            },
            set: function (a) {
                var b = this.Vr;
                b !== a && (this.Vr = a, this.g("isVirtualized", b, a))
            }
        },
        scale: {
            get: function () {
                return this.ya
            },
            set: function (a) {
                var b = this.ya;
                b !== a && Sj(this, b, a)
            }
        },
        defaultScale: {
            get: function () {
                return this.yn
            },
            set: function (a) {
                this.yn = a
            }
        },
        autoScale: {
            get: function () {
                return this.Lg
            },
            set: function (a) {
                var b = this.Lg;
                b !== a && (this.Lg = a, this.g("autoScale",
                    b, a), a !== ni && Ui(this, !1))
            }
        },
        initialAutoScale: {
            get: function () {
                return this.Xf
            },
            set: function (a) {
                var b = this.Xf;
                b !== a && (this.Xf = a, this.g("initialAutoScale", b, a))
            }
        },
        initialViewportSpot: {
            get: function () {
                return this.Mr
            },
            set: function (a) {
                var b = this.Mr;
                b !== a && (a.eb() || B("initialViewportSpot must be a specific Spot: " + a), this.Mr = a, this.g("initialViewportSpot", b, a))
            }
        },
        initialDocumentSpot: {
            get: function () {
                return this.Jr
            },
            set: function (a) {
                var b =
                    this.Jr;
                b !== a && (a.eb() || B("initialViewportSpot must be a specific Spot: " + a), this.Jr = a, this.g("initialDocumentSpot", b, a))
            }
        },
        minScale: {
            get: function () {
                return this.ds
            },
            set: function (a) {
                var b = this.ds;
                b !== a && (0 < a ? (this.ds = a, this.g("minScale", b, a), a > this.scale && (this.scale = a)) : va(a, "> 0", R, "minScale"))
            }
        },
        maxScale: {
            get: function () {
                return this.bs
            },
            set: function (a) {
                var b = this.bs;
                b !== a && (0 < a ? (this.bs = a, this.g("maxScale", b, a), a < this.scale && (this.scale =
                    a)) : va(a, "> 0", R, "maxScale"))
            }
        },
        zoomPoint: {
            get: function () {
                return this.$s
            },
            set: function (a) {
                this.$s.w(a) || (this.$s = a = a.G())
            }
        },
        contentAlignment: {
            get: function () {
                return this.lj
            },
            set: function (a) {
                var b = this.lj;
                b.w(a) || (this.lj = a = a.G(), this.g("contentAlignment", b, a), Ui(this, !1))
            }
        },
        initialContentAlignment: {
            get: function () {
                return this.Xn
            },
            set: function (a) {
                var b = this.Xn;
                b.w(a) || (this.Xn = a = a.G(), this.g("initialContentAlignment",
                    b, a))
            }
        },
        padding: {
            get: function () {
                return this.bb
            },
            set: function (a) {
                "number" === typeof a && (a = new oc(a));
                var b = this.bb;
                b.w(a) || (this.bb = a = a.G(), this.Na(), this.g("padding", b, a))
            }
        },
        partManager: {
            get: function () {
                return this.Ia
            },
            set: function (a) {
                var b = this.Ia;
                b !== a && (null !== a.diagram && B("Cannot share PartManagers between Diagrams: " + a.toString()), null !== b && b.Yd(null), this.Ia = a, a.Yd(this))
            }
        },
        nodes: {
            get: function () {
                return this.partManager.nodes.iterator
            }
        },
        links: {
            get: function () {
                return this.partManager.links.iterator
            }
        },
        parts: {
            get: function () {
                return this.partManager.parts.iterator
            }
        },
        layout: {
            get: function () {
                return this.ic
            },
            set: function (a) {
                var b = this.ic;
                b !== a && (this.ic = a, a.diagram = this, a.group = null, this.If = !0, this.g("layout", b, a), this.Pb())
            }
        },
        isTreePathToChildren: {
            get: function () {
                return this.Ur
            },
            set: function (a) {
                var b = this.Ur;
                if (b !== a && (this.Ur =
                        a, this.g("isTreePathToChildren", b, a), !this.undoManager.isUndoingRedoing))
                    for (a = this.nodes; a.next();) Dk(a.value)
            }
        },
        treeCollapsePolicy: {
            get: function () {
                return this.Vs
            },
            set: function (a) {
                var b = this.Vs;
                b !== a && (a !== pi && a !== Ek && a !== Fk && B("Unknown Diagram.treeCollapsePolicy: " + a), this.Vs = a, this.g("treeCollapsePolicy", b, a))
            }
        },
        Ce: {
            get: function () {
                return this.uu
            },
            set: function (a) {
                this.uu = a
            }
        },
        autoScrollInterval: {
            get: function () {
                return this.Zm
            },
            set: function (a) {
                var b = this.Zm;
                b !== a && (this.Zm = a, this.g("autoScrollInterval", b, a))
            }
        },
        autoScrollRegion: {
            get: function () {
                return this.an
            },
            set: function (a) {
                "number" === typeof a && (a = new oc(a));
                var b = this.an;
                b.w(a) || (this.an = a = a.G(), this.Na(), this.g("autoScrollRegion", b, a))
            }
        }
    });
    ma.Object.defineProperties(R, {
        licenseKey: {
            get: function () {
                return Gk.Xb()
            },
            set: function (a) {
                Gk.add(a)
            }
        },
        version: {
            get: function () {
                return Hk
            }
        }
    });
    R.prototype.makeImageData = R.prototype.Ux;
    R.prototype.makeImage = R.prototype.cA;
    R.prototype.addRenderer = R.prototype.Ky;
    R.prototype.makeSVG = R.prototype.Kv;
    R.prototype.makeSvg = R.prototype.At;
    R.prototype.stopAutoScroll = R.prototype.Cf;
    R.prototype.doAutoScroll = R.prototype.gt;
    R.prototype.isUnoccupied = R.prototype.lk;
    R.prototype.raiseDiagramEvent = R.prototype.R;
    R.prototype.removeDiagramListener = R.prototype.ym;
    R.prototype.addDiagramListener = R.prototype.Uj;
    R.prototype.findTreeRoots = R.prototype.zz;
    R.prototype.layoutDiagram = R.prototype.aA;
    R.prototype.findTopLevelGroups = R.prototype.rz;
    R.prototype.findTopLevelNodesAndLinks = R.prototype.sz;
    R.prototype.findLinksByExample = R.prototype.jt;
    R.prototype.findNodesByExample = R.prototype.kt;
    R.prototype.findLinkForData = R.prototype.vc;
    R.prototype.findNodeForData = R.prototype.Si;
    R.prototype.findPartForData = R.prototype.wc;
    R.prototype.findLinkForKey = R.prototype.findLinkForKey;
    R.prototype.findNodeForKey = R.prototype.Jb;
    R.prototype.findPartForKey = R.prototype.findPartForKey;
    R.prototype.rebuildParts = R.prototype.xd;
    R.prototype.transformViewToDoc = R.prototype.Pt;
    R.prototype.transformRectDocToView = R.prototype.BA;
    R.prototype.transformDocToView = R.prototype.Nq;
    R.prototype.centerRect = R.prototype.ct;
    R.prototype.scrollToRect = R.prototype.cw;
    R.prototype.scroll = R.prototype.scroll;
    R.prototype.highlightCollection = R.prototype.Qz;
    R.prototype.highlight = R.prototype.Pz;
    R.prototype.selectCollection = R.prototype.sA;
    R.prototype.select = R.prototype.select;
    R.prototype.updateAllRelationshipsFromData = R.prototype.Pq;
    R.prototype.updateAllTargetBindings = R.prototype.updateAllTargetBindings;
    R.prototype.commit = R.prototype.commit;
    R.prototype.rollbackTransaction = R.prototype.Bf;
    R.prototype.commitTransaction = R.prototype.Ua;
    R.prototype.startTransaction = R.prototype.ua;
    R.prototype.raiseChanged = R.prototype.g;
    R.prototype.raiseChangedEvent = R.prototype.Ya;
    R.prototype.removeChangedListener = R.prototype.wk;
    R.prototype.addChangedListener = R.prototype.Dh;
    R.prototype.removeModelChangedListener = R.prototype.oA;
    R.prototype.addModelChangedListener = R.prototype.vx;
    R.prototype.findLayer = R.prototype.im;
    R.prototype.removeLayer = R.prototype.mA;
    R.prototype.addLayerAfter = R.prototype.Gy;
    R.prototype.addLayerBefore = R.prototype.tx;
    R.prototype.addLayer = R.prototype.$l;
    R.prototype.moveParts = R.prototype.moveParts;
    R.prototype.copyParts = R.prototype.ck;
    R.prototype.removeParts = R.prototype.Jt;
    R.prototype.remove = R.prototype.remove;
    R.prototype.add = R.prototype.add;
    R.prototype.clearDelayedGeometries = R.prototype.gv;
    R.prototype.setProperties = R.prototype.iw;
    R.prototype.resetInputOptions = R.prototype.$v;
    R.prototype.setInputOption = R.prototype.tA;
    R.prototype.getInputOption = R.prototype.mm;
    R.prototype.resetRenderingHints = R.prototype.aw;
    R.prototype.setRenderingHint = R.prototype.ly;
    R.prototype.getRenderingHint = R.prototype.Be;
    R.prototype.maybeUpdate = R.prototype.Wc;
    R.prototype.requestUpdate = R.prototype.Pb;
    R.prototype.delayInitialization = R.prototype.Zy;
    R.prototype.isUpdateRequested = R.prototype.Wz;
    R.prototype.redraw = R.prototype.Ee;
    R.prototype.invalidateDocumentBounds = R.prototype.Na;
    R.prototype.findObjectsNear = R.prototype.Ag;
    R.prototype.findPartsNear = R.prototype.oz;
    R.prototype.findObjectsIn = R.prototype.tf;
    R.prototype.findPartsIn = R.prototype.Mx;
    R.prototype.findObjectsAt = R.prototype.Ti;
    R.prototype.findPartsAt = R.prototype.nz;
    R.prototype.findObjectAt = R.prototype.Ub;
    R.prototype.findPartAt = R.prototype.jm;
    R.prototype.focusObject = R.prototype.Az;
    R.prototype.alignDocument = R.prototype.My;
    R.prototype.zoomToRect = R.prototype.EA;
    R.prototype.zoomToFit = R.prototype.zoomToFit;
    R.prototype.diagramScroll = R.prototype.Ex;
    R.prototype.focus = R.prototype.focus;
    R.prototype.reset = R.prototype.reset;
    R.useDOM = function (a) {
        Ug = a ? void 0 !== x.document : !1
    };
    R.isUsingDOM = function () {
        return Ug
    };
    var ze = null,
        qi = new H,
        Li = null,
        Ki = null,
        Ug = void 0 !== x.document,
        Fi = null,
        Gi = "",
        ni = new D(R, "None", 0),
        Zi = new D(R, "Uniform", 1),
        $i = new D(R, "UniformToFill", 2),
        Nf = new D(R, "CycleAll", 10),
        Rf = new D(R, "CycleNotDirected", 11),
        Tf = new D(R, "CycleNotDirectedFast", 12),
        Uf = new D(R, "CycleNotUndirected", 13),
        Of = new D(R, "CycleDestinationTree", 14),
        Qf = new D(R, "CycleSourceTree", 15),
        Vh = new D(R, "DocumentScroll", 1),
        Xh = new D(R, "InfiniteScroll", 2),
        pi = new D(R, "TreeParentCollapsed", 21),
        Ek = new D(R, "AllParentsCollapsed", 22),
        Fk = new D(R,
            "AnyParentsCollapsed", 23),
        Gk = new E,
        Hk = "2.1.11",
        Ik = null,
        li = !1;

    function mi() {
        if (Ug) {
            var a = x.document.createElement("canvas"),
                b = a.getContext("2d"),
                c = Ra("7ca11abfd022028846");
            b[c] = Ra("398c3597c01238");
            for (var d = ["5da73c80a36455d5038e4972187c3cae51fd22", qa.Dx + "4ae6247590da4bb21c324ba3a84e385776", rd.xF + "fb236cdfda5de14c134ba1a95a2d4c7cc6f93c1387", J.za], e = 1; 5 > e; e++) b[Ra("7ca11abfd7330390")](Ra(d[e - 1]), 10, 15 * e);
            b[c] = Ra("39f046ebb36e4b");
            for (c = 1; 5 > c; c++) b[Ra("7ca11abfd7330390")](Ra(d[c - 1]), 10, 15 * c);
            Ik = a
        }
    }
    R.className = "Diagram";
    R.fromDiv = function (a) {
        var b = a;
        "string" === typeof a && (b = x.document.getElementById(a));
        return b instanceof HTMLDivElement && b.B instanceof R ? b.B : null
    };
    R.inherit = function (a, b) {
        function c() {}
        if (Object.getPrototypeOf(a).prototype) throw Error("Used go.Diagram.inherit defining already defined class \n" + a);
        c.prototype = b.prototype;
        a.prototype = new c;
        a.prototype.constructor = a
    };
    R.None = ni;
    R.Uniform = Zi;
    R.UniformToFill = $i;
    R.CycleAll = Nf;
    R.CycleNotDirected = Rf;
    R.CycleNotDirectedFast = Tf;
    R.CycleNotUndirected = Uf;
    R.CycleDestinationTree = Of;
    R.CycleSourceTree = Qf;
    R.DocumentScroll = Vh;
    R.InfiniteScroll = Xh;
    R.TreeParentCollapsed = pi;
    R.AllParentsCollapsed = Ek;
    R.AnyParentsCollapsed = Fk;

    function Di() {
        this.Cy = null;
        this.l = "zz@orderNum";
        "63ad05bbe23a1786468a4c741b6d2" === this._tk ? this.Pe = this.l = !0 : this.Pe = null
    }

    function vj(a, b) {
        b.Db.setTransform(b.Sb, 0, 0, b.Sb, 0, 0);
        if (null === a.Pe) {
            b = "f";
            var c = x[Ra("76a715b2f73f148a")][Ra("72ba13b5")];
            a.Pe = !0;
            if (Ug) {
                var d = R[Ra("76a115b6ed251eaf4692")];
                if (d)
                    for (var e = Gk.iterator; e.next();) {
                        d = e.value;
                        d = Ra(d).split(Ra("39e9"));
                        if (6 > d.length) break;
                        var f = Ra(d[1]).split(".");
                        if ("7da71ca0" !== d[4]) break;
                        var g = Ra(qa[Ra("6cae19")]).split(".");
                        if (f[0] > g[0] || f[0] === g[0] && f[1] >= g[1]) {
                            f = c[Ra("76ad18b4f73e")];
                            for (g = c[Ra("73a612b6fb191d")](Ra("35e7")) + 2; g < f; g++) b += c[g];
                            f = b[Ra("73a612b6fb191d")](Ra(d[2]));
                            0 > f && Ra(d[2]) !== Ra("7da71ca0ad381e90") && (f = b[Ra("73a612b6fb191d")](Ra("76a715b2ef3e149757")));
                            0 > f && (f = b[Ra("73a612b6fb191d")](Ra("76a715b2ef3e149757")));
                            0 > f && (f = c[Ra("73a612b6fb191d")](Ra("7baa19a6f76c1988428554")));
                            a.Pe = !(0 <= f && f < b[Ra("73a612b6fb191d")](Ra("35")) || -1 === b[Ra("73a612b6fb191d")](Ra("35")));
                            if (!a.Pe) break;
                            f = Ra(d[2]);
                            if ("#" !== f[0]) break;
                            g = x.document.createElement("div");
                            for (var h = d[0].replace(/[A-Za-z]/g, ""); 4 > h.length;) h += "9";
                            h = h.substr(h.length - 4);
                            d = "";
                            d += ["gsh", "gsf"][parseInt(h.substr(0,
                                1), 10) % 2];
                            d += ["Header", "Background", "Display", "Feedback"][parseInt(h.substr(0, 1), 10) % 4];
                            g[Ra("79a417a0f0181a8946")] = d;
                            if (x.document[Ra("78a712aa")]) {
                                x.document[Ra("78a712aa")][Ra("7bb806b6ed32388c4a875b")](g);
                                h = x.getComputedStyle(g).getPropertyValue(Ra("78a704b7e62456904c9b12701b6532a8"));
                                x.document[Ra("78a712aa")][Ra("68ad1bbcf533388c4a875b")](g);
                                if (!h) break;
                                if (-1 !== h.indexOf(parseInt(f[1] + f[2], 16)) && -1 !== h.indexOf(parseInt(f[3] + f[4], 16))) {
                                    a.Pe = !1;
                                    break
                                } else if (Sa || Ta || Ua || Va)
                                    for (d = "." + d, f = 0; f < document.styleSheets.length; f++) {
                                        g =
                                            document.styleSheets[f].rules || document.styleSheets[f].cssRules;
                                        for (var k in g)
                                            if (d === g[k].selectorText) {
                                                a.Pe = !1;
                                                break
                                            }
                                    }
                            } else a.Pe = null, a.Pe = !1
                        }
                    } else {
                        k = c[Ra("76ad18b4f73e")];
                        for (e = c[Ra("73a612b6fb191d")](Ra("35e7")) + 2; e < k; e++) b += c[e];
                        c = b[Ra("73a612b6fb191d")](Ra("7da71ca0ad381e90"));
                        a.Pe = !(0 <= c && c < b[Ra("73a612b6fb191d")](Ra("35")))
                    }
            }
        }
        return 0 < a.Pe && a !== a.Cy ? !0 : !1
    }

    function Ei(a, b) {
        if (Ug) {
            void 0 !== b && null !== b || B("Diagram setup requires an argument DIV.");
            null !== a.La && B("Diagram has already completed setup.");
            "string" === typeof b ? a.La = x.document.getElementById(b) : b instanceof HTMLDivElement ? a.La = b : B("No DIV or DIV id supplied: " + b);
            null === a.La && B("Invalid DIV id; could not get element with id: " + b);
            void 0 !== a.La.B && B("Invalid div id; div already has a Diagram associated with it.");
            "static" === x.getComputedStyle(a.La, null).position && (a.La.style.position = "relative");
            a.La.style["-webkit-tap-highlight-color"] = "rgba(255, 255, 255, 0)";
            a.La.style["-ms-touch-action"] = "none";
            a.La.innerHTML = "";
            a.La.B = a;
            var c = a.Pp ? new Aj(a) : new Ck(a);
            void 0 !== c.style && (c.style.position = "absolute", c.style.top = "0px", c.style.left = "0px", "rtl" === x.getComputedStyle(a.La, null).getPropertyValue("direction") && (a.nl = !0), c.style.zIndex = "2", c.style.userSelect = "none", c.style.webkitUserSelect = "none", c.style.MozUserSelect = "none");
            a.sa = c;
            a.Db = c.context;
            b = a.Db;
            a.Sb = a.computePixelRatio();
            a.wa = a.La.clientWidth ||
                1;
            a.va = a.La.clientHeight || 1;
            Cj(a, a.wa, a.va);
            // a.zr = b.V[Ra("7eba17a4ca3b1a8346")][Ra("78a118b7")](b.V, Ik, 4, 4);
            a.zr = function(){return true;};
            a.La.insertBefore(c.Ea, a.La.firstChild);
            c = new Ck(null);
            c.width = 1;
            c.height = 1;
            a.ju = c;
            a.Rw = c.context;
            if (Ug) {
                c = ta("div");
                var d = ta("div");
                c.style.position = "absolute";
                c.style.overflow = "auto";
                c.style.width = a.wa + "px";
                c.style.height = a.va + "px";
                c.style.zIndex = "1";
                d.style.position = "absolute";
                d.style.width = "1px";
                d.style.height = "1px";
                a.La.appendChild(c);
                c.appendChild(d);
                c.onscroll = Oi;
                c.onmousedown = Qi;
                c.ontouchstart =
                    Qi;
                c.B = a;
                c.Ay = !0;
                c.By = !0;
                a.Es = c;
                a.wp = d
            }
            a.Ht = ra(function () {
                a.uh = null;
                a.M()
            }, 300);
            a.vw = ra(function () {
                Eh(a)
            }, 250);
            a.preventDefault = function (a) {
                a.preventDefault();
                return !1
            };
            a.qk = function (b) {
                if (a.isEnabled) {
                    a.Yf = !0;
                    var c = dj(a, b, !0);
                    a.doMouseMove();
                    a.currentTool.isBeyondDragSize() && (a.od = 0);
                    jj(c, b)
                }
            };
            a.pk = function (b) {
                if (a.isEnabled)
                    if (a.Yf = !0, a.je) b.preventDefault();
                    else {
                        var c = dj(a, b, !0);
                        c.down = !0;
                        c.clickCount = b.detail;
                        if (Ta || Ua) b.timeStamp - a.Aj < a.Us && !a.currentTool.isBeyondDragSize() ? a.od++ : a.od = 1, a.Aj =
                            b.timeStamp, c.clickCount = a.od;
                        c.clone(a.firstInput);
                        a.doMouseDown();
                        1 === b.button ? b.preventDefault() : jj(c, b)
                    }
            };
            a.sk = function (b) {
                if (a.isEnabled)
                    if (a.je && 2 === b.button) b.preventDefault();
                    else if (a.je && 0 === b.button && (a.je = !1), a.Pj) b.preventDefault();
                else {
                    a.Yf = !0;
                    var c = dj(a, b, !0);
                    c.up = !0;
                    c.clickCount = b.detail;
                    if (Ta || Ua) c.clickCount = a.od;
                    c.bubbles = b.bubbles;
                    c.targetDiagram = fj(b);
                    a.doMouseUp();
                    a.Cf();
                    jj(c, b)
                }
            };
            a.tk = function (b) {
                if (a.isEnabled) {
                    var c = dj(a, b, !0);
                    c.bubbles = !0;
                    var d = 0,
                        e = 0;
                    c.delta = 0;
                    void 0 !== b.deltaX ?
                        (0 !== b.deltaX && (d = 0 < b.deltaX ? 1 : -1), 0 !== b.deltaY && (e = 0 < b.deltaY ? 1 : -1), c.delta = Math.abs(b.deltaX) > Math.abs(b.deltaY) ? -d : -e) : void 0 !== b.wheelDeltaX ? (0 !== b.wheelDeltaX && (d = 0 < b.wheelDeltaX ? -1 : 1), 0 !== b.wheelDeltaY && (e = 0 < b.wheelDeltaY ? -1 : 1), c.delta = Math.abs(b.wheelDeltaX) > Math.abs(b.wheelDeltaY) ? -d : -e) : void 0 !== b.wheelDelta && 0 !== b.wheelDelta && (c.delta = 0 < b.wheelDelta ? 1 : -1);
                    a.doMouseWheel();
                    jj(c, b)
                }
            };
            a.rk = function (b) {
                a.isEnabled && (a.Yf = !1, dj(a, b, !0), b = a.currentTool, b.cancelWaitAfter(), b.standardMouseOver())
            };
            a.pw = function (b) {
                if (a.isEnabled) {
                    a.Pj = !1;
                    a.je = !0;
                    var c = gj(a, b, b.targetTouches[0], 1 < b.touches.length),
                        d = null;
                    0 < b.targetTouches.length ? d = b.targetTouches[0] : 0 < b.changedTouches.length && (d = b.changedTouches[0]);
                    if (null !== d) {
                        var e = d.screenX;
                        d = d.screenY;
                        var k = a.lo;
                        b.timeStamp - a.Aj < a.Us && !(25 < Math.abs(k.x - e) || 25 < Math.abs(k.y - d)) ? a.od++ : a.od = 1;
                        c.clickCount = a.od;
                        a.Aj = b.timeStamp;
                        a.lo.h(e, d)
                    }
                    a.doMouseDown();
                    jj(c, b)
                }
            };
            a.ow = function (b) {
                if (a.isEnabled) {
                    var c = null;
                    0 < b.targetTouches.length ? c = b.targetTouches[0] : 0 <
                        b.changedTouches.length && (c = b.changedTouches[0]);
                    c = ij(a, b, c, 1 < b.touches.length);
                    a.doMouseMove();
                    jj(c, b)
                }
            };
            a.nw = function (b) {
                if (a.isEnabled)
                    if (a.Pj) b.preventDefault();
                    else if (!(1 < b.touches.length)) {
                    var c = null,
                        d = null;
                    0 < b.targetTouches.length ? d = b.targetTouches[0] : 0 < b.changedTouches.length && (d = b.changedTouches[0]);
                    var e = hj(a, b, !1, !0, !1, !1);
                    null !== d && (c = x.document.elementFromPoint(d.clientX, d.clientY), null !== c && c.B instanceof R && c.B !== a && ej(c.B, d, e), ej(a, d, e), e.clickCount = a.od);
                    null === c ? e.targetDiagram =
                        fj(b) : c.B ? e.targetDiagram = c.B : e.targetDiagram = null;
                    e.targetObject = null;
                    a.doMouseUp();
                    jj(e, b);
                    a.je = !1
                }
            };
            a.tm = function (b) {
                if (a.isEnabled) {
                    a.Yf = !0;
                    var c = a.ts;
                    void 0 === c[b.pointerId] && (c[b.pointerId] = b);
                    c = a.Kj;
                    var d = !1;
                    if (null !== c[0] && c[0].pointerId === b.pointerId) c[0] = b;
                    else if (null !== c[1] && c[1].pointerId === b.pointerId) c[1] = b, d = !0;
                    else if (null === c[0]) c[0] = b;
                    else if (null === c[1]) c[1] = b, d = !0;
                    else {
                        b.preventDefault();
                        return
                    }
                    if ("touch" === b.pointerType || "pen" === b.pointerType) a.Pj = !1, a.je = !0;
                    c = gj(a, b, b, d);
                    d =
                        a.lo;
                    var e = "touch" === b.pointerType || "pen" === b.pointerType ? 25 : 10;
                    b.timeStamp - a.Aj < a.Us && !(Math.abs(d.x - b.screenX) > e || Math.abs(d.y - b.screenY) > e) ? a.od++ : a.od = 1;
                    c.clickCount = a.od;
                    a.Aj = b.timeStamp;
                    a.lo.Fg(b.screenX, b.screenY);
                    a.doMouseDown();
                    1 === b.button ? b.preventDefault() : jj(c, b)
                }
            };
            a.um = function (b) {
                if (a.isEnabled) {
                    a.Yf = !0;
                    var c = a.Kj;
                    if (null !== c[0] && c[0].pointerId === b.pointerId) c[0] = b;
                    else {
                        if (null !== c[1] && c[1].pointerId === b.pointerId) {
                            c[1] = b;
                            return
                        }
                        if (null === c[0]) c[0] = b;
                        else return
                    }
                    c[0].pointerId === b.pointerId &&
                        (c = ij(a, b, b, null !== c[1]), c.targetDiagram = fj(b), a.doMouseMove(), jj(c, b))
                }
            };
            a.wm = function (b) {
                if (a.isEnabled) {
                    a.Yf = !0;
                    var c = "touch" === b.pointerType || "pen" === b.pointerType,
                        d = a.ts;
                    if (c && a.Pj) delete d[b.pointerId], b.preventDefault();
                    else if (d = a.Kj, null !== d[0] && d[0].pointerId === b.pointerId) {
                        d[0] = null;
                        d = hj(a, b, !1, !0, !0, !1);
                        var e = x.document.elementFromPoint(b.clientX, b.clientY);
                        null !== e && e.B instanceof R && e.B !== a && ej(e.B, b, d);
                        ej(a, b, d);
                        d.clickCount = a.od;
                        null === e ? d.targetDiagram = fj(b) : e.B ? d.targetDiagram = e.B :
                            d.targetDiagram = null;
                        d.targetObject = null;
                        a.doMouseUp();
                        jj(d, b);
                        c && (a.je = !1)
                    } else null !== d[1] && d[1].pointerId === b.pointerId && (d[1] = null)
                }
            };
            a.vm = function (b) {
                if (a.isEnabled) {
                    a.Yf = !1;
                    var c = a.ts;
                    c[b.pointerId] && delete c[b.pointerId];
                    c = a.Kj;
                    null !== c[0] && c[0].pointerId === b.pointerId && (c[0] = null);
                    null !== c[1] && c[1].pointerId === b.pointerId && (c[1] = null);
                    "touch" !== b.pointerType && "pen" !== b.pointerType && (b = a.currentTool, b.cancelWaitAfter(), b.standardMouseOver())
                }
            };
            b.sc(!0);
            Mi(a)
        }
    }
    Di.className = "DiagramHelper";

    function df(a) {
        this.l = void 0 === a ? new I : a;
        this.u = new I
    }
    ma.Object.defineProperties(df.prototype, {
        point: {
            get: function () {
                return this.l
            },
            set: function (a) {
                this.l = a
            }
        },
        shifted: {
            get: function () {
                return this.u
            },
            set: function (a) {
                this.u = a
            }
        }
    });
    df.className = "DraggingInfo";

    function Nj(a, b, c) {
        this.node = a;
        this.info = b;
        this.Bv = c
    }
    Nj.className = "DraggingNodeInfoPair";

    function Re() {
        this.reset()
    }
    Re.prototype.reset = function () {
        this.isGridSnapEnabled = !1;
        this.isGridSnapRealtime = !0;
        this.gridSnapCellSize = (new M(NaN, NaN)).freeze();
        this.gridSnapCellSpot = vc;
        this.gridSnapOrigin = (new I(NaN, NaN)).freeze();
        this.Nz = this.dragsTree = this.dragsLink = !1;
        this.Mz = !0
    };

    function Jk(a) {
        1 < arguments.length && B("Palette constructor can only take one optional argument, the DIV HTML element or its id.");
        R.call(this, a);
        Kk(this)
    }
    la(Jk, R);

    function Kk(a) {
        a.allowDragOut = !0;
        a.allowMove = !1;
        a.isReadOnly = !0;
        a.contentAlignment = xc;
        a.layout = new Lk
    }
    Jk.prototype.reset = function () {
        R.prototype.reset.call(this);
        Kk(this)
    };
    Jk.className = "Palette";

    function Mk(a) {
        1 < arguments.length && B("Overview constructor can only take one optional argument, the DIV HTML element or its id.");
        R.call(this, a);
        var b = this;
        this.animationManager.isEnabled = !1;
        this.Rb = !0;
        this.Ha = null;
        this.dl = this.cl = !1;
        this.u = this.I = !0;
        this.Za = 0;
        this.Y = !1;
        this.Ml = null;
        this.ly("drawShadows", !1);
        var c = new U,
            d = new Lf;
        d.stroke = "magenta";
        d.strokeWidth = 2;
        d.fill = "transparent";
        d.name = "BOXSHAPE";
        c.selectable = !0;
        c.selectionAdorned = !1;
        c.selectionObjectName = "BOXSHAPE";
        c.locationObjectName = "BOXSHAPE";
        c.resizeObjectName = "BOXSHAPE";
        c.cursor = "move";
        c.add(d);
        this.l = c;
        this.allowDelete = this.allowCopy = !1;
        this.allowSelect = !0;
        this.autoScrollRegion = new oc(0, 0, 0, 0);
        this.ma.h(0, 0);
        this.toolManager.Va("Dragging", new Nk, this.toolManager.mouseMoveTools);
        this.click = function () {
            var a = b.observed;
            if (null !== a) {
                var c = a.viewportBounds,
                    d = b.lastInput.documentPoint;
                a.position = new I(d.x - c.width / 2, d.y - c.height / 2)
            }
        };
        this.Ie = function () {
            b.Na();
            Ok(b)
        };
        this.Ef = function () {
            null !== b.observed && (b.Na(), b.M())
        };
        this.Oh = function () {
            1 >
                b.updateDelay ? b.M() : b.Y || (b.Y = !0, setTimeout(function () {
                    b.Y = !1;
                    Pk(b);
                    b.M()
                }, b.updateDelay))
        };
        this.Yc = function () {
            null !== b.observed && Ok(b)
        };
        this.autoScale = Zi;
        this.Rb = !1
    }
    la(Mk, R);
    Mk.prototype.computePixelRatio = function () {
        return 1
    };
    Mk.prototype.bc = function () {
        null === this.La && B("No div specified");
        null === this.sa && B("No canvas specified");
        if (!(this.sa instanceof Aj) && (fi(this.box), this.Ac)) {
            var a = this.observed;
            if (null !== a && !a.animationManager.isAnimating) {
                tj(this);
                var b = this.sa;
                a = this.Db;
                a.sc(!0);
                a.setTransform(1, 0, 0, 1, 0, 0);
                a.clearRect(0, 0, b.width, b.height);
                1 > this.updateDelay ? Qk(this) : null !== this.Ml && (a.drawImage(this.Ml.Ea, 0, 0), b = this.kb, b.reset(), 1 !== this.scale && b.scale(this.scale), 0 === this.position.x && 0 === this.position.y || b.translate(-this.position.x,
                    -this.position.y), a.scale(this.Sb, this.Sb), a.transform(b.m11, b.m12, b.m21, b.m22, b.dx, b.dy));
                b = this.Ja.j;
                for (var c = b.length, d = 0; d < c; d++) b[d].bc(a, this);
                this.Ac = this.mi = !1
            }
        }
    };

    function Pk(a) {
        var b = a.sa,
            c = a.Db;
        if (null !== b && null !== c) {
            tj(a);
            if (null === a.Ml) {
                var d = new Ck(null);
                d.width = b.width;
                d.height = b.height;
                a.Ml = d
            }
            try {
                a.sa = a.Ml, a.Db = a.sa.context, a.Db.sc(!0), a.Db.setTransform(1, 0, 0, 1, 0, 0), a.Db.clearRect(0, 0, a.sa.width, a.sa.height), Qk(a)
            } finally {
                a.sa = b, a.Db = c
            }
        }
    }

    function Qk(a) {
        var b = a.observed;
        if (null !== b) {
            var c = a.drawsTemporaryLayers,
                d = a.drawsGrid && c,
                e = b.grid;
            d && null !== e && e.visible && !isNaN(e.width) && !isNaN(e.height) && (e = N.alloc().assign(a.viewportBounds).Hc(b.viewportBounds), mj(b, e), N.free(e), Si(b));
            var f = a.kb;
            f.reset();
            1 !== a.scale && f.scale(a.scale);
            0 === a.position.x && 0 === a.position.y || f.translate(-a.position.x, -a.position.y);
            e = a.Db;
            e.scale(a.Sb, a.Sb);
            e.transform(f.m11, f.m12, f.m21, f.m22, f.dx, f.dy);
            b = b.Ja.j;
            f = b.length;
            for (var g = 0; g < f; g++) {
                var h = b[g],
                    k = a;
                if (h.visible &&
                    0 !== h.opacity) {
                    var l = h.diagram.grid.part;
                    if (!c && h.isTemporary) d && l.layer === h && (h = hi(h, e), l.bc(e, k), e.globalAlpha = h);
                    else {
                        for (var m = hi(h, e), n = k.scale, p = N.alloc(), r = h.Ca.j, q = r.length, u = 0; u < q; u++) {
                            var v = r[u];
                            (d || v !== l) && h.Pi(e, v, k, null, n, p)
                        }
                        N.free(p);
                        e.globalAlpha = m
                    }
                }
            }
        }
    }

    function Ok(a) {
        var b = a.box;
        if (null !== b) {
            var c = a.observed;
            if (null !== c) {
                a.Ac = !0;
                c = c.viewportBounds;
                var d = b.selectionObject,
                    e = M.alloc();
                e.h(c.width, c.height);
                d.desiredSize = e;
                M.free(e);
                a = 2 / a.scale;
                d instanceof Lf && (d.strokeWidth = a);
                b.location = new I(c.x - a / 2, c.y - a / 2);
                b.isSelected = !0
            }
        }
    }
    Mk.prototype.computeBounds = function () {
        var a = this.observed;
        if (null === a) return ic;
        var b = a.documentBounds.copy();
        b.Hc(a.viewportBounds);
        return b
    };
    Mk.prototype.Sx = function () {
        !0 !== this.Ac && (this.Ac = !0, this.Pb())
    };
    Mk.prototype.Bq = function (a, b, c, d) {
        this.Rb || (Ri(this), this.M(), Xi(this), this.Na(), Ok(this), this.Rd.scale = c, this.Rd.position.x = a.x, this.Rd.position.y = a.y, this.Rd.bounds.assign(a), this.Rd.Jv = d, this.R("ViewportBoundsChanged", this.Rd, a))
    };
    ma.Object.defineProperties(Mk.prototype, {
        observed: {
            get: function () {
                return this.Ha
            },
            set: function (a) {
                var b = this.Ha;
                a instanceof Mk && B("Overview.observed Diagram may not be an Overview itself: " + a);
                if (b !== a) {
                    null !== b && (this.remove(this.box), b.ym("ViewportBoundsChanged", this.Ie), b.ym("DocumentBoundsChanged", this.Ef), b.ym("InvalidateDraw", this.Oh), b.ym("AnimationFinished", this.Yc));
                    this.Ha = a;
                    null !== a && (a.Uj("ViewportBoundsChanged", this.Ie), a.Uj("DocumentBoundsChanged", this.Ef),
                        a.Uj("InvalidateDraw", this.Oh), a.Uj("AnimationFinished", this.Yc), this.add(this.box), Ok(this));
                    this.Na();
                    if (null === a) {
                        this.Ml = null;
                        var c = this.sa,
                            d = this.Db;
                        c && d && (d.setTransform(1, 0, 0, 1, 0, 0), d.clearRect(0, 0, c.width, c.height))
                    } else Pk(this), Ok(this), this.M();
                    this.g("observed", b, a)
                }
            }
        },
        box: {
            get: function () {
                return this.l
            },
            set: function (a) {
                var b = this.l;
                b !== a && (this.l = a, this.remove(b), this.add(this.l), Ok(this), this.g("box", b, a))
            }
        },
        drawsTemporaryLayers: {
            get: function () {
                return this.I
            },
            set: function (a) {
                this.I !== a && (this.I = a, this.Ee())
            }
        },
        drawsGrid: {
            get: function () {
                return this.u
            },
            set: function (a) {
                this.u !== a && (this.u = a, this.Ee())
            }
        },
        updateDelay: {
            get: function () {
                return this.Za
            },
            set: function (a) {
                0 > a && (a = 0);
                this.Za !== a && (this.Za = a)
            }
        }
    });
    Mk.className = "Overview";

    function Nk() {
        Qe.call(this);
        this.l = null
    }
    la(Nk, Qe);
    Nk.prototype.canStart = function () {
        if (!this.isEnabled) return !1;
        var a = this.diagram;
        if (null === a || !a.allowMove || !a.allowSelect) return !1;
        var b = a.observed;
        if (null === b) return !1;
        var c = a.lastInput;
        if (!c.left || a.currentTool !== this && (!this.isBeyondDragSize() || c.isTouchEvent && c.timestamp - a.firstInput.timestamp < this.delay)) return !1;
        null === this.findDraggablePart() && (c = b.viewportBounds, this.l = new I(c.width / 2, c.height / 2), a = a.firstInput.documentPoint, b.position = new I(a.x - this.l.x, a.y - this.l.y));
        return !0
    };
    Nk.prototype.doActivate = function () {
        this.l = null;
        Qe.prototype.doActivate.call(this)
    };
    Nk.prototype.moveParts = function () {
        var a = this.diagram,
            b = a.observed;
        if (null !== b) {
            var c = a.box;
            if (null !== c) {
                if (null === this.l) {
                    var d = a.firstInput.documentPoint;
                    c = c.location;
                    this.l = new I(d.x - c.x, d.y - c.y)
                }
                a = a.lastInput.documentPoint;
                b.position = new I(a.x - this.l.x, a.y - this.l.y)
            }
        }
    };
    Nk.className = "OverviewDraggingTool";

    function Rk() {
        Ya(this);
        this.B = ze;
        this.Za = this.I = this.u = !0;
        this.Y = this.Ha = this.jd = this.Ia = !1;
        this.yi = this.l = null;
        this.Yc = 1.05;
        this.Au = NaN;
        this.Ww = null;
        this.bv = NaN;
        this.av = ic;
        this.pg = null;
        this.Ic = 200
    }
    Rk.prototype.toString = function () {
        return "CommandHandler"
    };
    Rk.prototype.Yd = function (a) {
        this.B = a
    };
    Rk.prototype.doKeyDown = function () {
        var a = this.diagram,
            b = a.lastInput,
            c = Wa ? b.meta : b.control,
            d = b.shift,
            e = b.alt,
            f = b.key;
        !c || "C" !== f && "Insert" !== f ? c && "X" === f || d && "Del" === f ? this.canCutSelection() && this.cutSelection() : c && "V" === f || d && "Insert" === f ? this.canPasteSelection() && this.pasteSelection() : c && "Y" === f || e && d && "Backspace" === f ? this.canRedo() && this.redo() : c && "Z" === f || e && "Backspace" === f ? this.canUndo() && this.undo() : "Del" === f || "Backspace" === f ? this.canDeleteSelection() && this.deleteSelection() : c && "A" === f ? this.canSelectAll() &&
            this.selectAll() : "Esc" === f ? this.canStopCommand() && this.stopCommand() : "Up" === f ? a.allowVerticalScroll && (c ? a.scroll("pixel", "up") : a.scroll("line", "up")) : "Down" === f ? a.allowVerticalScroll && (c ? a.scroll("pixel", "down") : a.scroll("line", "down")) : "Left" === f ? a.allowHorizontalScroll && (c ? a.scroll("pixel", "left") : a.scroll("line", "left")) : "Right" === f ? a.allowHorizontalScroll && (c ? a.scroll("pixel", "right") : a.scroll("line", "right")) : "PageUp" === f ? d && a.allowHorizontalScroll ? a.scroll("page", "left") : a.allowVerticalScroll &&
            a.scroll("page", "up") : "PageDown" === f ? d && a.allowHorizontalScroll ? a.scroll("page", "right") : a.allowVerticalScroll && a.scroll("page", "down") : "Home" === f ? c && a.allowVerticalScroll ? a.scroll("document", "up") : !c && a.allowHorizontalScroll && a.scroll("document", "left") : "End" === f ? c && a.allowVerticalScroll ? a.scroll("document", "down") : !c && a.allowHorizontalScroll && a.scroll("document", "right") : " " === f ? this.canScrollToPart() && this.scrollToPart() : "Subtract" === f ? this.canDecreaseZoom() && this.decreaseZoom() : "Add" === f ? this.canIncreaseZoom() &&
            this.increaseZoom() : c && "0" === f ? this.canResetZoom() && this.resetZoom() : d && "Z" === f ? this.canZoomToFit() && this.zoomToFit() : c && !d && "G" === f ? this.canGroupSelection() && this.groupSelection() : c && d && "G" === f ? this.canUngroupSelection() && this.ungroupSelection() : b.event && 113 === b.event.which ? this.canEditTextBlock() && this.editTextBlock() : b.event && 93 === b.event.which ? this.canShowContextMenu() && this.showContextMenu() : b.bubbles = !0 : this.canCopySelection() && this.copySelection()
    };
    Rk.prototype.doKeyUp = function () {
        this.diagram.lastInput.bubbles = !0
    };
    Rk.prototype.stopCommand = function () {
        var a = this.diagram,
            b = a.currentTool;
        b instanceof Oa && a.allowSelect && a.clearSelection();
        null !== b && b.doCancel()
    };
    Rk.prototype.canStopCommand = function () {
        return !0
    };
    Rk.prototype.selectAll = function () {
        var a = this.diagram;
        a.M();
        try {
            a.currentCursor = "wait";
            a.R("ChangingSelection", a.selection);
            for (var b = a.parts; b.next();) b.value.isSelected = !0;
            for (var c = a.nodes; c.next();) c.value.isSelected = !0;
            for (var d = a.links; d.next();) d.value.isSelected = !0
        } finally {
            a.R("ChangedSelection", a.selection), a.currentCursor = ""
        }
    };
    Rk.prototype.canSelectAll = function () {
        return this.diagram.allowSelect
    };
    Rk.prototype.deleteSelection = function () {
        var a = this.diagram;
        try {
            a.currentCursor = "wait";
            a.R("ChangingSelection", a.selection);
            a.ua("Delete");
            a.R("SelectionDeleting", a.selection);
            for (var b = new F, c = a.selection.iterator; c.next();) Sk(b, c.value, !0, this.deletesTree ? Infinity : 0, this.deletesConnectedLinks ? null : !1, function (a) {
                return a.canDelete()
            });
            a.Jt(b, !0);
            a.R("SelectionDeleted", b)
        } finally {
            a.Ua("Delete"), a.R("ChangedSelection", a.selection), a.currentCursor = ""
        }
    };
    Rk.prototype.canDeleteSelection = function () {
        var a = this.diagram;
        return a.isReadOnly || a.isModelReadOnly || !a.allowDelete || 0 === a.selection.count ? !1 : !0
    };
    Rk.prototype.copySelection = function () {
        var a = this.diagram,
            b = new F;
        for (a = a.selection.iterator; a.next();) Sk(b, a.value, !0, this.copiesTree ? Infinity : 0, this.copiesConnectedLinks, function (a) {
            return a.canCopy()
        });
        this.copyToClipboard(b)
    };
    Rk.prototype.canCopySelection = function () {
        var a = this.diagram;
        return a.allowCopy && a.allowClipboard && 0 !== a.selection.count ? !0 : !1
    };
    Rk.prototype.cutSelection = function () {
        this.copySelection();
        this.deleteSelection()
    };
    Rk.prototype.canCutSelection = function () {
        var a = this.diagram;
        return !a.isReadOnly && !a.isModelReadOnly && a.allowCopy && a.allowDelete && a.allowClipboard && 0 !== a.selection.count ? !0 : !1
    };
    Rk.prototype.copyToClipboard = function (a) {
        var b = this.diagram,
            c = null;
        if (null === a) Fi = null, Gi = "";
        else {
            c = b.model;
            var d = !1,
                e = !1,
                f = null;
            try {
                c.qm() && (d = c.bk, c.bk = this.copiesParentKey), c.ik() && (e = c.ak, c.ak = this.copiesGroupKey), f = b.ck(a, null, !0)
            } finally {
                c.qm() && (c.bk = d), c.ik() && (c.ak = e), c = new E, c.addAll(f), Fi = c, Gi = b.model.dataFormat
            }
        }
        b.R("ClipboardChanged", c)
    };
    Rk.prototype.pasteFromClipboard = function () {
        var a = new F,
            b = Fi;
        if (null === b) return a;
        var c = this.diagram;
        if (Gi !== c.model.dataFormat) return a;
        var d = c.model,
            e = !1,
            f = !1,
            g = null;
        try {
            d.qm() && (e = d.bk, d.bk = this.copiesParentKey), d.ik() && (f = d.ak, d.ak = this.copiesGroupKey), g = c.ck(b, c, !1)
        } finally {
            for (d.qm() && (d.bk = e), d.ik() && (d.ak = f), b = g.iterator; b.next();) c = b.value, d = b.key, c.location.v() || (d.location.v() ? c.location = d.location : !c.position.v() && d.position.v() && (c.position = d.position)), a.add(c)
        }
        return a
    };
    Rk.prototype.pasteSelection = function (a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        try {
            b.currentCursor = "wait";
            b.R("ChangingSelection", b.selection);
            b.ua("Paste");
            var c = this.pasteFromClipboard();
            0 < c.count && b.clearSelection(!0);
            for (var d = c.iterator; d.next();) d.value.isSelected = !0;
            if (null !== a) {
                var e = b.computePartsBounds(b.selection);
                if (e.v()) {
                    var f = this.computeEffectiveCollection(b.selection, b.Qk);
                    sf(b, f, new I(a.x - e.centerX, a.y - e.centerY), b.Qk, !1)
                }
            }
            b.R("ClipboardPasted", c)
        } finally {
            b.Ua("Paste"), b.R("ChangedSelection",
                b.selection), b.currentCursor = ""
        }
    };
    Rk.prototype.canPasteSelection = function () {
        var a = this.diagram;
        return a.isReadOnly || a.isModelReadOnly || !a.allowInsert || !a.allowClipboard || null === Fi || 0 === Fi.count || Gi !== a.model.dataFormat ? !1 : !0
    };
    Rk.prototype.undo = function () {
        this.diagram.undoManager.undo()
    };
    Rk.prototype.canUndo = function () {
        var a = this.diagram;
        return a.isReadOnly || a.isModelReadOnly ? !1 : a.allowUndo && a.undoManager.canUndo()
    };
    Rk.prototype.redo = function () {
        this.diagram.undoManager.redo()
    };
    Rk.prototype.canRedo = function () {
        var a = this.diagram;
        return a.isReadOnly || a.isModelReadOnly ? !1 : a.allowUndo && a.undoManager.canRedo()
    };
    Rk.prototype.decreaseZoom = function (a) {
        void 0 === a && (a = 1 / this.zoomFactor);
        var b = this.diagram;
        b.autoScale === ni && (a = b.scale * a, a < b.minScale || a > b.maxScale || (b.scale = a))
    };
    Rk.prototype.canDecreaseZoom = function (a) {
        void 0 === a && (a = 1 / this.zoomFactor);
        var b = this.diagram;
        if (b.autoScale !== ni) return !1;
        a = b.scale * a;
        return a < b.minScale || a > b.maxScale ? !1 : b.allowZoom
    };
    Rk.prototype.increaseZoom = function (a) {
        void 0 === a && (a = this.zoomFactor);
        var b = this.diagram;
        b.autoScale === ni && (a = b.scale * a, a < b.minScale || a > b.maxScale || (b.scale = a))
    };
    Rk.prototype.canIncreaseZoom = function (a) {
        void 0 === a && (a = this.zoomFactor);
        var b = this.diagram;
        if (b.autoScale !== ni) return !1;
        a = b.scale * a;
        return a < b.minScale || a > b.maxScale ? !1 : b.allowZoom
    };
    Rk.prototype.resetZoom = function (a) {
        void 0 === a && (a = this.defaultScale);
        var b = this.diagram;
        a < b.minScale || a > b.maxScale || (b.scale = a)
    };
    Rk.prototype.canResetZoom = function (a) {
        void 0 === a && (a = this.defaultScale);
        var b = this.diagram;
        return a < b.minScale || a > b.maxScale ? !1 : b.allowZoom
    };
    Rk.prototype.zoomToFit = function () {
        var a = this.diagram,
            b = a.animationManager;
        b.Xc();
        a.Ee();
        var c = a.position,
            d = a.scale;
        zh(b, "Zoom To Fit");
        d === this.bv && !isNaN(this.Au) && a.documentBounds.w(this.av) ? (a.scale = this.Au, a.position = this.Ww, this.bv = NaN, this.av = ic) : (this.Au = d, this.Ww = c.copy(), a.zoomToFit(), this.bv = a.scale, this.av = a.documentBounds.copy());
        Bh(b)
    };
    Rk.prototype.canZoomToFit = function () {
        return this.diagram.allowZoom
    };
    Rk.prototype.scrollToPart = function (a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        Ii(b);
        if (null === a) {
            try {
                null !== this.pg && (this.pg.next() ? a = this.pg.value : this.pg = null)
            } catch (k) {
                this.pg = null
            }
            null === a && (0 < b.highlighteds.count ? this.pg = b.highlighteds.iterator : 0 < b.selection.count && (this.pg = b.selection.iterator), null !== this.pg && this.pg.next() && (a = this.pg.value))
        }
        if (null !== a) {
            var c = b.animationManager;
            zh(c, "Scroll To Part");
            var d = this.scrollToPartPause;
            if (0 < d) {
                var e = Tk(this, a, [a]);
                if (1 === e.length) b.ua(), b.ct(a.actualBounds),
                    b.Ua("Scroll To Part");
                else {
                    var f = function () {
                            b.ua();
                            for (var a = e.pop(); 0 < e.length && a instanceof W && a.isTreeExpanded && (!(a instanceof T) || a.isSubGraphExpanded);) a = e.pop();
                            0 < e.length ? (a instanceof U && b.cw(a.actualBounds), a instanceof W && !a.isTreeExpanded && (a.isTreeExpanded = !0), a instanceof T && !a.isSubGraphExpanded && (a.isSubGraphExpanded = !0)) : (a instanceof U && b.ct(a.actualBounds), b.ym("LayoutCompleted", g));
                            b.Ua("Scroll To Part")
                        },
                        g = function () {
                            sa(f, (c.isEnabled ? c.duration : 0) + d)
                        };
                    b.Uj("LayoutCompleted",
                        g);
                    f()
                }
            } else {
                var h = b.position.copy();
                b.ct(a.actualBounds);
                h.Ma(b.position) && c.Xc()
            }
        }
    };

    function Tk(a, b, c) {
        if (b.isVisible()) return c;
        if (b instanceof Je) Tk(a, b.adornedPart, c);
        else if (b instanceof S) {
            var d = b.fromNode;
            null !== d && Tk(a, d, c);
            b = b.toNode;
            null !== b && Tk(a, b, c)
        } else b instanceof W && (d = b.labeledLink, null !== d && Tk(a, d, c), d = b.Bg(), null !== d && (d.isTreeExpanded || d.wasTreeExpanded || c.push(d), Tk(a, d, c))), b = b.containingGroup, null !== b && (b.isSubGraphExpanded || b.wasSubGraphExpanded || c.push(b), Tk(a, b, c));
        return c
    }
    Rk.prototype.canScrollToPart = function (a) {
        void 0 === a && (a = null);
        if (null !== a && !(a instanceof U)) return !1;
        a = this.diagram;
        return 0 === a.selection.count && 0 === a.highlighteds.count ? !1 : a.allowHorizontalScroll && a.allowVerticalScroll
    };
    Rk.prototype.collapseTree = function (a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        try {
            b.ua("Collapse Tree");
            zh(b.animationManager, "Collapse Tree");
            var c = new E;
            if (null !== a && a.isTreeExpanded) a.collapseTree(), c.add(a);
            else if (null === a)
                for (var d = b.selection.iterator; d.next();) {
                    var e = d.value;
                    e instanceof W && e.isTreeExpanded && (e.collapseTree(), c.add(e))
                }
            b.R("TreeCollapsed", c)
        } finally {
            b.Ua("Collapse Tree")
        }
    };
    Rk.prototype.canCollapseTree = function (a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        if (b.isReadOnly) return !1;
        if (null !== a) {
            if (!(a instanceof W && a.isTreeExpanded)) return !1;
            if (0 < a.nq().count) return !0
        } else
            for (a = b.selection.iterator; a.next();)
                if (b = a.value, b instanceof W && b.isTreeExpanded && 0 < b.nq().count) return !0;
        return !1
    };
    Rk.prototype.expandTree = function (a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        try {
            b.ua("Expand Tree");
            zh(b.animationManager, "Expand Tree");
            var c = new E;
            if (null !== a && !a.isTreeExpanded) a.expandTree(), c.add(a);
            else if (null === a)
                for (var d = b.selection.iterator; d.next();) {
                    var e = d.value;
                    e instanceof W && !e.isTreeExpanded && (e.expandTree(), c.add(e))
                }
            b.R("TreeExpanded", c)
        } finally {
            b.Ua("Expand Tree")
        }
    };
    Rk.prototype.canExpandTree = function (a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        if (b.isReadOnly) return !1;
        if (null !== a) {
            if (!(a instanceof W) || a.isTreeExpanded) return !1;
            if (0 < a.nq().count) return !0
        } else
            for (a = b.selection.iterator; a.next();)
                if (b = a.value, b instanceof W && !b.isTreeExpanded && 0 < b.nq().count) return !0;
        return !1
    };
    Rk.prototype.groupSelection = function () {
        var a = this.diagram,
            b = a.model;
        if (b.jk()) {
            var c = this.archetypeGroupData;
            if (null !== c) {
                var d = null;
                try {
                    a.currentCursor = "wait";
                    a.R("ChangingSelection", a.selection);
                    a.ua("Group");
                    for (var e = new E, f = a.selection.iterator; f.next();) {
                        var g = f.value;
                        g.Wb() && g.canGroup() && e.add(g)
                    }
                    for (var h = new E, k = e.iterator; k.next();) {
                        var l = k.value;
                        f = !1;
                        for (var m = e.iterator; m.next();)
                            if (l.Wd(m.value)) {
                                f = !0;
                                break
                            } f || h.add(l)
                    }
                    if (0 < h.count) {
                        var n = h.first().containingGroup;
                        if (null !== n)
                            for (; null !==
                                n;) {
                                e = !1;
                                for (var p = h.iterator; p.next();)
                                    if (!p.value.Wd(n)) {
                                        e = !0;
                                        break
                                    } if (e) n = n.containingGroup;
                                else break
                            }
                        if (c instanceof T) yg(c), d = c.copy(), null !== d && a.add(d);
                        else if (b.Hv(c)) {
                            var r = b.copyNodeData(c);
                            za(r) && (b.pf(r), d = a.Si(r))
                        }
                        if (null !== d) {
                            null !== n && this.isValidMember(n, d) && (d.containingGroup = n);
                            for (var q = h.iterator; q.next();) {
                                var u = q.value;
                                this.isValidMember(d, u) && (u.containingGroup = d)
                            }
                            a.clearSelection(!0);
                            d.isSelected = !0
                        }
                    }
                    a.R("SelectionGrouped", d)
                } finally {
                    a.Ua("Group"), a.R("ChangedSelection", a.selection),
                        a.currentCursor = ""
                }
            }
        }
    };
    Rk.prototype.canGroupSelection = function () {
        var a = this.diagram;
        if (a.isReadOnly || a.isModelReadOnly || !a.allowInsert || !a.allowGroup || !a.model.jk() || null === this.archetypeGroupData) return !1;
        for (a = a.selection.iterator; a.next();) {
            var b = a.value;
            if (b.Wb() && b.canGroup()) return !0
        }
        return !1
    };

    function Uk(a) {
        var b = Fa();
        for (a = a.iterator; a.next();) {
            var c = a.value;
            c instanceof S || b.push(c)
        }
        a = new F;
        c = b.length;
        for (var d = 0; d < c; d++) {
            for (var e = b[d], f = !0, g = 0; g < c; g++)
                if (e.Wd(b[g])) {
                    f = !1;
                    break
                } f && a.add(e)
        }
        Ha(b);
        return a
    }
    Rk.prototype.isValidMember = function (a, b) {
        if (null === b || a === b || b instanceof S) return !1;
        if (null !== a) {
            if (a === b || a.Wd(b)) return !1;
            var c = a.memberValidation;
            if (null !== c && !c(a, b) || null === a.data && null !== b.data || null !== a.data && null === b.data) return !1
        }
        c = this.memberValidation;
        return null !== c ? c(a, b) : !0
    };
    Rk.prototype.ungroupSelection = function (a) {
        void 0 === a && (a = null);
        var b = this.diagram,
            c = b.model;
        if (c.jk()) try {
            b.currentCursor = "wait";
            b.R("ChangingSelection", b.selection);
            b.ua("Ungroup");
            var d = new E;
            if (null !== a) d.add(a);
            else
                for (var e = b.selection.iterator; e.next();) {
                    var f = e.value;
                    f instanceof T && f.canUngroup() && d.add(f)
                }
            var g = new E;
            if (0 < d.count) {
                b.clearSelection(!0);
                for (var h = d.iterator; h.next();) {
                    var k = h.value;
                    k.expandSubGraph();
                    var l = k.containingGroup,
                        m = null !== l && null !== l.data ? c.ja(l.data) : void 0;
                    g.addAll(k.memberParts);
                    for (var n = g.iterator; n.next();) {
                        var p = n.value;
                        p.isSelected = !0;
                        if (!(p instanceof S)) {
                            var r = p.data;
                            null !== r ? c.Mt(r, m) : p.containingGroup = l
                        }
                    }
                    b.remove(k)
                }
            }
            b.R("SelectionUngrouped", d, g)
        } finally {
            b.Ua("Ungroup"), b.R("ChangedSelection", b.selection), b.currentCursor = ""
        }
    };
    Rk.prototype.canUngroupSelection = function (a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        if (b.isReadOnly || b.isModelReadOnly || !b.allowDelete || !b.allowUngroup || !b.model.jk()) return !1;
        if (null !== a) {
            if (!(a instanceof T)) return !1;
            if (a.canUngroup()) return !0
        } else
            for (a = b.selection.iterator; a.next();)
                if (b = a.value, b instanceof T && b.canUngroup()) return !0;
        return !1
    };
    Rk.prototype.addTopLevelParts = function (a, b) {
        var c = !0;
        for (a = Uk(a).iterator; a.next();) {
            var d = a.value;
            null !== d.containingGroup && (!b || this.isValidMember(null, d) ? d.containingGroup = null : c = !1)
        }
        return c
    };
    Rk.prototype.collapseSubGraph = function (a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        try {
            b.ua("Collapse SubGraph");
            zh(b.animationManager, "Collapse SubGraph");
            var c = new E;
            if (null !== a && a.isSubGraphExpanded) a.collapseSubGraph(), c.add(a);
            else if (null === a)
                for (var d = b.selection.iterator; d.next();) {
                    var e = d.value;
                    e instanceof T && e.isSubGraphExpanded && (e.collapseSubGraph(), c.add(e))
                }
            b.R("SubGraphCollapsed", c)
        } finally {
            b.Ua("Collapse SubGraph")
        }
    };
    Rk.prototype.canCollapseSubGraph = function (a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        if (b.isReadOnly) return !1;
        if (null !== a) return a instanceof T && a.isSubGraphExpanded ? !0 : !1;
        for (a = b.selection.iterator; a.next();)
            if (b = a.value, b instanceof T && b.isSubGraphExpanded) return !0;
        return !1
    };
    Rk.prototype.expandSubGraph = function (a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        try {
            b.ua("Expand SubGraph");
            zh(b.animationManager, "Expand SubGraph");
            var c = new E;
            if (null !== a && !a.isSubGraphExpanded) a.expandSubGraph(), c.add(a);
            else if (null === a)
                for (var d = b.selection.iterator; d.next();) {
                    var e = d.value;
                    e instanceof T && !e.isSubGraphExpanded && (e.expandSubGraph(), c.add(e))
                }
            b.R("SubGraphExpanded", c)
        } finally {
            b.Ua("Expand SubGraph")
        }
    };
    Rk.prototype.canExpandSubGraph = function (a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        if (b.isReadOnly) return !1;
        if (null !== a) return a instanceof T && !a.isSubGraphExpanded ? !0 : !1;
        for (a = b.selection.iterator; a.next();)
            if (b = a.value, b instanceof T && !b.isSubGraphExpanded) return !0;
        return !1
    };
    Rk.prototype.editTextBlock = function (a) {
        void 0 === a && (a = null);
        var b = this.diagram,
            c = b.toolManager.findTool("TextEditing");
        if (null !== c) {
            if (null === a) {
                a = null;
                for (var d = b.selection.iterator; d.next();) {
                    var e = d.value;
                    if (e.canEdit()) {
                        a = e;
                        break
                    }
                }
                if (null === a) return;
                a = a.hm(function (a) {
                    return a instanceof Wg && a.editable
                })
            }
            null !== a && (b.currentTool = null, c.textBlock = a, b.currentTool = c)
        }
    };
    Rk.prototype.canEditTextBlock = function (a) {
        void 0 === a && (a = null);
        var b = this.diagram;
        if (b.isReadOnly || b.isModelReadOnly || !b.allowTextEdit || null === b.toolManager.findTool("TextEditing")) return !1;
        if (null !== a) {
            if (!(a instanceof Wg)) return !1;
            a = a.part;
            if (null !== a && a.canEdit()) return !0
        } else
            for (b = b.selection.iterator; b.next();)
                if (a = b.value, a.canEdit() && (a = a.hm(function (a) {
                        return a instanceof Wg && a.editable
                    }), null !== a)) return !0;
        return !1
    };
    Rk.prototype.showContextMenu = function (a) {
        var b = this.diagram,
            c = b.toolManager.findTool("ContextMenu");
        if (null !== c && (void 0 === a && (a = 0 < b.selection.count ? b.selection.first() : b), a = c.findObjectWithContextMenu(a), null !== a)) {
            var d = b.lastInput,
                e = null;
            a instanceof Y ? e = a.ga(Ac) : b.viewportBounds.aa(d.documentPoint) || (e = b.viewportBounds, e = new I(e.x + e.width / 2, e.y + e.height / 2));
            null !== e && (d.viewPoint = b.Nq(e), d.documentPoint = e, d.left = !1, d.right = !0, d.up = !0);
            b.currentTool = c;
            Sg(c, !1, a)
        }
    };
    Rk.prototype.canShowContextMenu = function (a) {
        var b = this.diagram,
            c = b.toolManager.findTool("ContextMenu");
        if (null === c) return !1;
        void 0 === a && (a = 0 < b.selection.count ? b.selection.first() : b);
        return null === c.findObjectWithContextMenu(a) ? !1 : !0
    };
    Rk.prototype.computeEffectiveCollection = function (a, b) {
        var c = this.diagram,
            d = c.toolManager.findTool("Dragging"),
            e = c.currentTool === d;
        void 0 === b && (b = e ? d.dragOptions : c.Qk);
        d = new H;
        if (null === a) return d;
        for (var f = a.iterator; f.next();) Lj(c, d, f.value, e, b);
        if (null !== c.draggedLink && b.dragsLink) return d;
        for (f = a.iterator; f.next();) a = f.value, a instanceof S && (b = a.fromNode, null === b || d.contains(b) ? (b = a.toNode, null === b || d.contains(b) || d.remove(a)) : d.remove(a));
        return d
    };
    ma.Object.defineProperties(Rk.prototype, {
        diagram: {
            get: function () {
                return this.B
            }
        },
        copiesClipboardData: {
            get: function () {
                return this.u
            },
            set: function (a) {
                this.u = a
            }
        },
        copiesConnectedLinks: {
            get: function () {
                return this.I
            },
            set: function (a) {
                this.I = a
            }
        },
        deletesConnectedLinks: {
            get: function () {
                return this.Za
            },
            set: function (a) {
                this.Za = a
            }
        },
        copiesTree: {
            get: function () {
                return this.Ia
            },
            set: function (a) {
                this.Ia = a
            }
        },
        deletesTree: {
            get: function () {
                return this.jd
            },
            set: function (a) {
                this.jd = a
            }
        },
        copiesParentKey: {
            get: function () {
                return this.Ha
            },
            set: function (a) {
                this.Ha = a
            }
        },
        copiesGroupKey: {
            get: function () {
                return this.Y
            },
            set: function (a) {
                this.Y = a
            }
        },
        archetypeGroupData: {
            get: function () {
                return this.l
            },
            set: function (a) {
                this.l = a
            }
        },
        memberValidation: {
            get: function () {
                return this.yi
            },
            set: function (a) {
                this.yi = a
            }
        },
        defaultScale: {
            get: function () {
                return this.diagram.defaultScale
            },
            set: function (a) {
                this.diagram.defaultScale = a
            }
        },
        zoomFactor: {
            get: function () {
                return this.Yc
            },
            set: function (a) {
                1 < a || B("zoomFactor must be larger than 1.0, not: " + a);
                this.Yc = a
            }
        },
        scrollToPartPause: {
            get: function () {
                return this.Ic
            },
            set: function (a) {
                this.Ic = a
            }
        }
    });
    Rk.className = "CommandHandler";
    zi = function () {
        return new Rk
    };

    function Y() {
        Ya(this);
        this.F = 4225027;
        this.qb = 1;
        this.ng = null;
        this.Ra = "";
        this.dc = this.gb = null;
        this.ma = (new I(NaN, NaN)).freeze();
        this.Lc = Rb;
        this.eg = Kb;
        this.dg = Pb;
        this.kb = new rd;
        this.Qh = new rd;
        this.bg = new rd;
        this.ya = this.Wk = 1;
        this.Yb = 0;
        this.ve = Vk;
        this.fh = sc;
        this.nc = (new N(NaN, NaN, NaN, NaN)).freeze();
        this.ub = (new N(NaN, NaN, NaN, NaN)).freeze();
        this.oc = (new N(0, 0, NaN, NaN)).freeze();
        this.O = this.cp = this.ep = null;
        this.Fk = this.vb = Zc;
        this.pp = 0;
        this.qp = 1;
        this.Og = 0;
        this.gn = 1;
        this.Kp = null;
        this.xp = -Infinity;
        this.Hl =
            0;
        this.Il = Fb;
        this.Jl = bg;
        this.fi = "";
        this.$a = this.N = null;
        this.Jk = -1;
        this.Ll = this.ld = this.ei = this.Pl = null;
        this.ws = zg;
        this.sp = this.Kg = this.Jj = null
    }
    var vd, zg, Bg, Vk, Wk, Xk, Yk, Zk, $k, al;
    Y.prototype.cloneProtected = function (a) {
        a.F = this.F | 6144;
        a.qb = this.qb;
        a.Ra = this.Ra;
        a.gb = this.gb;
        a.dc = this.dc;
        a.Kg = this.Kg;
        a.ma.assign(this.ma);
        a.Lc = this.Lc.G();
        a.eg = this.eg.G();
        a.dg = this.dg.G();
        a.bg = this.bg.copy();
        a.ya = this.ya;
        a.Yb = this.Yb;
        a.ve = this.ve;
        a.fh = this.fh.G();
        a.nc.assign(this.nc);
        a.ub.assign(this.ub);
        a.oc.assign(this.oc);
        a.cp = this.cp;
        null !== this.O && (a.O = this.O.copy());
        a.vb = this.vb.G();
        a.Fk = this.Fk.G();
        a.pp = this.pp;
        a.qp = this.qp;
        a.Og = this.Og;
        a.gn = this.gn;
        a.Kp = this.Kp;
        a.xp = this.xp;
        a.Hl = this.Hl;
        a.Il = this.Il.G();
        a.Jl = this.Jl;
        a.fi = this.fi;
        null !== this.N && (a.N = this.N.copy());
        a.$a = this.$a;
        a.Jk = this.Jk;
        null !== this.ei && (a.ei = Ba(this.ei));
        null !== this.ld && (a.ld = this.ld.copy());
        a.Ll = this.Ll
    };
    Y.prototype.sx = function (a) {
        var b = this.ei;
        if (Aa(b))
            for (var c = 0; c < b.length; c++) {
                if (b[c] === a) return
            } else this.ei = b = [];
        b.push(a)
    };
    Y.prototype.sf = function (a) {
        a.ep = null;
        a.Jj = null;
        a.o()
    };
    Y.prototype.clone = function () {
        var a = new this.constructor;
        this.cloneProtected(a);
        if (null !== this.ei)
            for (var b = 0; b < this.ei.length; b++) {
                var c = this.ei[b];
                a[c] = this[c]
            }
        return a
    };
    Y.prototype.copy = function () {
        return this.clone()
    };
    t = Y.prototype;
    t.cb = function (a) {
        a.classType === S ? 0 === a.name.indexOf("Orient") ? this.segmentOrientation = a : B("Unknown Link enum value for GraphObject.segmentOrientation property: " + a) : a.classType === Y && (this.stretch = a)
    };
    t.toString = function () {
        return Ia(this.constructor) + "#" + lb(this)
    };

    function bl(a) {
        null === a.N && (a.N = new cl)
    }
    t.Ec = function () {
        if (null === this.O) {
            var a = new dl;
            a.Yg = uc;
            a.yh = uc;
            a.Wg = 10;
            a.wh = 10;
            a.Xg = 0;
            a.xh = 0;
            this.O = a
        }
    };
    t.Ya = function (a, b, c, d, e, f, g) {
        var h = this.part;
        if (null !== h && (h.vk(a, b, c, d, e, f, g), c === this && a === re && el(this) && fl(this, h, b), f = this.diagram, null === this.Kg || null === f || !f.kk || f.undoManager.isUndoingRedoing || f.currentTool !== f.toolManager || f.animationManager.bn || (a = this.Kg.get(b), null === a || f.animationManager.isTicking || (null === this.sp && (this.sp = new H), g = 0 === f.undoManager.transactionLevel, a.startCondition === bi ? g = !0 : a.startCondition === di && (g = !1), g ? (f = new yh, ci(a, f), g = this.sp.get(a), null !== g && g.stop(), this.sp.add(a,
                f), f.Xu = this, f.nx = a, f.add(this, b, d, e), f.start()) : (Ah(f.animationManager, "Trigger"), f.animationManager.defaultAnimation.add(this, b, d, e)))), this instanceof X && c === h && 0 !== (h.F & 16777216) && null !== h.data))
            for (c = this.W.j, d = c.length, e = 0; e < d; e++) h = c[e], h instanceof X && Dj(h, function (a) {
                null !== a.data && 0 !== (a.F & 16777216) && a.Ba(b)
            })
    };

    function fl(a, b, c) {
        var d = a.Ui();
        if (null !== d)
            for (var e = a.$a.iterator; e.next();) {
                var f = e.value,
                    g = null;
                if (null !== f.sourceName) {
                    g = gl(f, d, a);
                    if (null === g) continue;
                    f.Qq(a, g, c, null)
                } else if (f.isToModel) {
                    var h = b.diagram;
                    null === h || h.skipsModelSourceBindings || f.Qq(a, h.model.modelData, c, d)
                } else {
                    h = d.data;
                    if (null === h) continue;
                    var k = b.diagram;
                    null === k || k.skipsModelSourceBindings || f.Qq(a, h, c, d)
                }
                g === a && (h = d.it(f.gj), null !== h && f.tw(h, g, c))
            }
    }
    t.it = function (a) {
        return this.Jk === a ? this : null
    };
    t.g = function (a, b, c) {
        this.Ya(re, a, this, b, c)
    };

    function hl(a, b, c, d, e) {
        var f = a.nc,
            g = a.bg;
        g.reset();
        il(a, g, b, c, d, e);
        a.bg = g;
        f.h(b, c, d, e);
        g.ut() || g.qw(f)
    }

    function jl(a, b, c, d) {
        if (!1 === a.pickable) return !1;
        d.multiply(a.transform);
        return c ? a.Gc(b, d) : a.Gh(b, d)
    }
    t.Lx = function (a, b, c) {
        if (!1 === this.pickable) return !1;
        var d = this.naturalBounds;
        b = a.Ae(b);
        return c ? Ab(a.x, a.y, 0, 0, 0, d.height) <= b || Ab(a.x, a.y, 0, d.height, d.width, d.height) <= b || Ab(a.x, a.y, d.width, d.height, d.width, 0) <= b || Ab(a.x, a.y, d.width, 0, 0, 0) <= b : a.dd(0, 0) <= b && a.dd(0, d.height) <= b && a.dd(d.width, 0) <= b && a.dd(d.width, d.height) <= b
    };
    t.$d = function () {
        return !0
    };
    t.aa = function (a) {
        var b = I.alloc();
        b.assign(a);
        this.transform.ra(b);
        var c = this.actualBounds;
        if (!c.v()) return I.free(b), !1;
        var d = this.diagram;
        if (null !== d && d.je) {
            var e = d.mm("extraTouchThreshold"),
                f = d.mm("extraTouchArea"),
                g = f / 2,
                h = this.naturalBounds;
            d = this.uf() * d.scale;
            var k = 1 / d;
            if (h.width * d < e && h.height * d < e) return a = fc(c.x - g * k, c.y - g * k, c.width + f * k, c.height + f * k, b.x, b.y), I.free(b), a
        }
        e = !1;
        if (this instanceof Je || this instanceof Lf ? fc(c.x - 5, c.y - 5, c.width + 10, c.height + 10, b.x, b.y) : c.aa(b)) this.ld && !this.ld.aa(b) ?
            e = !1 : null !== this.dc && c.aa(b) ? e = !0 : null !== this.gb && this.oc.aa(a) ? e = !0 : e = this.Hh(a);
        I.free(b);
        return e
    };
    t.Hh = function (a) {
        var b = this.naturalBounds;
        return fc(0, 0, b.width, b.height, a.x, a.y)
    };
    t.ze = function (a) {
        if (0 === this.angle) return this.actualBounds.ze(a);
        var b = this.naturalBounds;
        b = N.allocAt(0, 0, b.width, b.height);
        var c = this.transform,
            d = !1,
            e = I.allocAt(a.x, a.y);
        b.aa(c.Vd(e)) && (e.h(a.x, a.bottom), b.aa(c.Vd(e)) && (e.h(a.right, a.bottom), b.aa(c.Vd(e)) && (e.h(a.right, a.y), b.aa(c.Vd(e)) && (d = !0))));
        I.free(e);
        N.free(b);
        return d
    };
    t.Gh = function (a, b) {
        if (void 0 === b) return a.ze(this.actualBounds);
        var c = this.naturalBounds,
            d = !1,
            e = I.allocAt(0, 0);
        a.aa(b.ra(e)) && (e.h(0, c.height), a.aa(b.ra(e)) && (e.h(c.width, c.height), a.aa(b.ra(e)) && (e.h(c.width, 0), a.aa(b.ra(e)) && (d = !0))));
        I.free(e);
        return d
    };
    t.Gc = function (a, b) {
        if (void 0 === b && (b = this.transform, 0 === this.angle)) return a.Gc(this.actualBounds);
        var c = this.naturalBounds,
            d = I.allocAt(0, 0),
            e = I.allocAt(0, c.height),
            f = I.allocAt(c.width, c.height),
            g = I.allocAt(c.width, 0),
            h = !1;
        if (a.aa(b.ra(d)) || a.aa(b.ra(e)) || a.aa(b.ra(f)) || a.aa(b.ra(g))) h = !0;
        else {
            c = N.allocAt(0, 0, c.width, c.height);
            var k = I.allocAt(a.x, a.y);
            c.aa(b.Vd(k)) ? h = !0 : (k.h(a.x, a.bottom), c.aa(b.Vd(k)) ? h = !0 : (k.h(a.right, a.bottom), c.aa(b.Vd(k)) ? h = !0 : (k.h(a.right, a.y), c.aa(b.Vd(k)) && (h = !0))));
            I.free(k);
            N.free(c);
            !h && (J.rt(a, d, e) || J.rt(a, e, f) || J.rt(a, f, g) || J.rt(a, g, d)) && (h = !0)
        }
        I.free(d);
        I.free(e);
        I.free(f);
        I.free(g);
        return h
    };
    t.ga = function (a, b) {
        void 0 === b && (b = new I);
        if (a instanceof P) {
            var c = this.naturalBounds;
            b.h(a.x * c.width + a.offsetX, a.y * c.height + a.offsetY)
        } else b.set(a);
        this.ud.ra(b);
        return b
    };
    t.lm = function (a) {
        void 0 === a && (a = new N);
        var b = this.naturalBounds,
            c = this.ud,
            d = I.allocAt(0, 0).transform(c);
        a.h(d.x, d.y, 0, 0);
        d.h(b.width, 0).transform(c);
        ec(a, d.x, d.y, 0, 0);
        d.h(b.width, b.height).transform(c);
        ec(a, d.x, d.y, 0, 0);
        d.h(0, b.height).transform(c);
        ec(a, d.x, d.y, 0, 0);
        I.free(d);
        return a
    };
    t.Xi = function () {
        var a = this.ud;
        1 === a.m11 && 0 === a.m12 ? a = 0 : (a = 180 * Math.atan2(a.m12, a.m11) / Math.PI, 0 > a && (a += 360));
        return a
    };
    t.uf = function () {
        if (0 !== (this.F & 4096) === !1) return this.Wk;
        var a = this.ya;
        return null !== this.panel ? a * this.panel.uf() : a
    };
    t.ot = function (a, b) {
        void 0 === b && (b = new I);
        b.assign(a);
        this.ud.Vd(b);
        return b
    };
    t.Uc = function (a, b, c) {
        return this.hk(a.x, a.y, b.x, b.y, c)
    };
    t.hk = function (a, b, c, d, e) {
        var f = this.transform,
            g = 1 / (f.m11 * f.m22 - f.m12 * f.m21),
            h = f.m22 * g,
            k = -f.m12 * g,
            l = -f.m21 * g,
            m = f.m11 * g,
            n = g * (f.m21 * f.dy - f.m22 * f.dx),
            p = g * (f.m12 * f.dx - f.m11 * f.dy);
        if (null !== this.areaBackground) return f = this.actualBounds, J.Uc(f.left, f.top, f.right, f.bottom, a, b, c, d, e);
        g = a * h + b * l + n;
        a = a * k + b * m + p;
        b = c * h + d * l + n;
        c = c * k + d * m + p;
        e.h(0, 0);
        d = this.naturalBounds;
        c = J.Uc(0, 0, d.width, d.height, g, a, b, c, e);
        e.transform(f);
        return c
    };
    Y.prototype.measure = function (a, b, c, d) {
        if (!1 !== qj(this)) {
            var e = this.fh,
                f = e.right + e.left;
            e = e.top + e.bottom;
            a = Math.max(a - f, 0);
            b = Math.max(b - e, 0);
            c = Math.max((c || 0) - f, 0);
            d = Math.max((d || 0) - e, 0);
            f = this.angle;
            e = this.desiredSize;
            var g = 0;
            this instanceof Lf && (g = this.strokeWidth);
            90 === f || 270 === f ? (a = isFinite(e.height) ? e.height + g : a, b = isFinite(e.width) ? e.width + g : b) : (a = isFinite(e.width) ? e.width + g : a, b = isFinite(e.height) ? e.height + g : b);
            e = c || 0;
            g = d || 0;
            var h = this instanceof X;
            switch (kl(this, !0)) {
                case zg:
                    g = e = 0;
                    h && (b = a = Infinity);
                    break;
                case vd:
                    isFinite(a) && a > c && (e = a);
                    isFinite(b) && b > d && (g = b);
                    break;
                case Wk:
                    isFinite(a) && a > c && (e = a);
                    g = 0;
                    h && (b = Infinity);
                    break;
                case Xk:
                    isFinite(b) && b > d && (g = b), e = 0, h && (a = Infinity)
            }
            h = this.maxSize;
            var k = this.minSize;
            e > h.width && k.width < h.width && (e = h.width);
            g > h.height && k.height < h.height && (g = h.height);
            c = Math.max(e / this.scale, k.width);
            d = Math.max(g / this.scale, k.height);
            h.width < c && (c = Math.min(k.width, c));
            h.height < d && (d = Math.min(k.height, d));
            a = Math.min(h.width, a);
            b = Math.min(h.height, b);
            a = Math.max(c, a);
            b = Math.max(d,
                b);
            if (90 === f || 270 === f) f = a, a = b, b = f, f = c, c = d, d = f;
            this.nc.ea();
            this.sm(a, b, c, d);
            this.nc.freeze();
            this.nc.v() || B("Non-real measuredBounds has been set. Object " + this + ", measuredBounds: " + this.nc.toString());
            lj(this, !1)
        }
    };
    Y.prototype.sm = function () {};
    Y.prototype.xf = function () {
        return !1
    };
    Y.prototype.arrange = function (a, b, c, d, e) {
        this.ml();
        var f = N.alloc();
        f.assign(this.ub);
        this.ub.ea();
        !1 === rj(this) ? this.ub.h(a, b, c, d) : this.Fh(a, b, c, d);
        this.ub.freeze();
        void 0 === e ? this.ld = null : this.ld = e;
        c = !1;
        if (void 0 !== e) c = !0;
        else if (e = this.panel, null === e || e.type !== X.TableRow && e.type !== X.TableColumn || (e = e.panel), null !== e && (e = e.oc, d = this.measuredBounds, null !== this.areaBackground && (d = this.ub), c = b + d.height, d = a + d.width, c = !(0 <= a + .05 && d <= e.width + .05 && 0 <= b + .05 && c <= e.height + .05), this instanceof Wg && (a = this.naturalBounds,
                this.$r > a.height || this.pb > a.width))) c = !0;
        this.F = c ? this.F | 256 : this.F & -257;
        this.ub.v() || B("Non-real actualBounds has been set. Object " + this + ", actualBounds: " + this.ub.toString());
        this.Et(f, this.ub);
        ll(this, !1);
        N.free(f)
    };
    t = Y.prototype;
    t.Fh = function () {};

    function ml(a, b, c, d, e) {
        a.ub.h(b, c, d, e);
        if (!a.desiredSize.v()) {
            var f = a.nc;
            c = a.fh;
            b = c.right + c.left;
            var g = c.top + c.bottom;
            c = f.width + b;
            f = f.height + g;
            d += b;
            e += g;
            b = kl(a, !0);
            c === d && f === e && (b = zg);
            switch (b) {
                case zg:
                    if (c > d || f > e) lj(a, !0), a.measure(c > d ? d : c, f > e ? e : f, 0, 0);
                    break;
                case vd:
                    lj(a, !0);
                    a.measure(d, e, 0, 0);
                    break;
                case Wk:
                    lj(a, !0);
                    a.measure(d, f, 0, 0);
                    break;
                case Xk:
                    lj(a, !0), a.measure(c, e, 0, 0)
            }
        }
    }
    t.Et = function (a, b) {
        var c = this.part;
        null !== c && null !== c.diagram && (c.selectionObject !== this && c.resizeObject !== this && c.rotateObject !== this || nl(c, !0), this.M(), $b(a, b) || (c.Jh(), this.To(c)))
    };
    t.To = function (a) {
        null !== this.portId && (nl(a, !0), a instanceof W && ol(a, this))
    };
    t.bc = function (a, b) {
        if (this.visible) {
            var c = this instanceof X && (this.type === X.TableRow || this.type === X.TableColumn),
                d = this.ub;
            if (c || 0 !== d.width && 0 !== d.height && !isNaN(d.x) && !isNaN(d.y)) {
                var e = this.opacity;
                if (0 !== e) {
                    var f = 1;
                    1 !== e && (f = a.globalAlpha, a.globalAlpha = f * e);
                    if (!this.Gx(a, b))
                        if (c) pl(this, a, b);
                        else {
                            this instanceof S && this.nk(!1);
                            c = this.transform;
                            var g = this.panel;
                            0 !== (this.F & 4096) === !0 && ql(this);
                            var h = this.part,
                                k = !1,
                                l = 0;
                            if (h && b.Be("drawShadows") && (k = h.isShadowed)) {
                                var m = h.shadowOffset;
                                l = Math.max(m.y,
                                    m.x) * b.scale * b.Sb
                            }
                            if (!(m = b.ni || !this.xf())) {
                                var n = this.naturalBounds;
                                m = this.Qh;
                                var p = m.m11,
                                    r = m.m21,
                                    q = m.dx,
                                    u = m.m12,
                                    v = m.m22,
                                    w = m.dy,
                                    y, z = y = 0;
                                m = y * p + z * r + q;
                                var A = y * u + z * v + w;
                                y = n.width + l;
                                z = 0;
                                var C = y * p + z * r + q;
                                y = y * u + z * v + w;
                                z = Math.min(m, C);
                                var G = Math.min(A, y);
                                var L = Math.max(m + 0, C) - z;
                                var K = Math.max(A + 0, y) - G;
                                m = z;
                                A = G;
                                y = n.width + l;
                                z = n.height + l;
                                C = y * p + z * r + q;
                                y = y * u + z * v + w;
                                z = Math.min(m, C);
                                G = Math.min(A, y);
                                L = Math.max(m + L, C) - z;
                                K = Math.max(A + K, y) - G;
                                m = z;
                                A = G;
                                y = 0;
                                z = n.height + l;
                                C = y * p + z * r + q;
                                y = y * u + z * v + w;
                                z = Math.min(m, C);
                                G = Math.min(A, y);
                                L = Math.max(m + L, C) - z;
                                K = Math.max(A + K, y) - G;
                                m = z;
                                A = G;
                                l = b.viewportBounds;
                                n = l.x;
                                p = l.y;
                                m = !(m > l.width + n || n > L + m || A > l.height + p || p > K + A)
                            }
                            if (m) {
                                m = 0 !== (this.F & 256);
                                a.clipInsteadOfFill && (m = !1);
                                this instanceof Wg && (a.font = this.font);
                                if (m) {
                                    A = g.$d() ? g.naturalBounds : g.actualBounds;
                                    null !== this.ld ? (n = this.ld, L = n.x, K = n.y, l = n.width, n = n.height) : (L = Math.max(d.x, A.x), K = Math.max(d.y, A.y), l = Math.min(d.right, A.right) - L, n = Math.min(d.bottom, A.bottom) - K);
                                    if (L > d.width + d.x || d.x > A.width + A.x) {
                                        1 !== e && (a.globalAlpha = f);
                                        return
                                    }
                                    a.save();
                                    a.beginPath();
                                    a.rect(L, K, l, n);
                                    a.clip()
                                }
                                if (this.xf()) {
                                    if (!h.isVisible()) {
                                        1 !== e && (a.globalAlpha = f);
                                        return
                                    }
                                    k && (A = h.shadowOffset, a.jw(A.x * b.scale * b.Sb, A.y * b.scale * b.Sb, h.shadowBlur), rl(a), a.shadowColor = h.shadowColor)
                                }!0 === this.shadowVisible ? rl(a) : !1 === this.shadowVisible && sl(a);
                                h = this.naturalBounds;
                                null !== this.dc && (ii(this, a, this.dc, !0, !0, h, d), this.dc instanceof tl && this.dc.type === ul ? (a.beginPath(), a.rect(d.x, d.y, d.width, d.height), a.Ud(this.dc)) : a.fillRect(d.x, d.y, d.width, d.height));
                                a.transform(c.m11,
                                    c.m12, c.m21, c.m22, c.dx, c.dy);
                                k && (null !== g && 0 !== (g.F & 512) || null !== g && (g.type === X.Auto || g.type === X.Spot) && g.zb() !== this) && null === this.shadowVisible && sl(a);
                                null !== this.gb && (l = this.naturalBounds, L = A = 0, K = l.width, l = l.height, n = 0, this instanceof Lf && (l = this.ka.bounds, A = l.x, L = l.y, K = l.width, l = l.height, n = this.strokeWidth), ii(this, a, this.gb, !0, !1, h, d), this.gb instanceof tl && this.gb.type === ul ? (a.beginPath(), a.rect(A - n / 2, L - n / 2, K + n, l + n), a.Ud(this.gb)) : a.fillRect(A - n / 2, L - n / 2, K + n, l + n));
                                k && (null !== this.gb || null !==
                                    this.dc || null !== g && 0 !== (g.F & 512) || null !== g && (g.type === X.Auto || g.type === X.Spot) && g.zb() !== this) ? (vl(this, !0), null === this.shadowVisible && sl(a)) : vl(this, !1);
                                this.Qi(a, b);
                                k && 0 !== (this.F & 512) === !0 && rl(a);
                                this.xf() && k && sl(a);
                                m ? (a.restore(), this instanceof X ? a.sc(!0) : a.sc(!1)) : c.ut() || (b = 1 / (c.m11 * c.m22 - c.m12 * c.m21), a.transform(c.m22 * b, -c.m12 * b, -c.m21 * b, c.m11 * b, b * (c.m21 * c.dy - c.m22 * c.dx), b * (c.m12 * c.dx - c.m11 * c.dy)))
                            }
                        } 1 !== e && (a.globalAlpha = f)
                }
            }
        }
    };
    t.Gx = function () {
        return !1
    };

    function pl(a, b, c) {
        var d = a.ub,
            e = a.oc;
        null !== a.dc && (ii(a, b, a.dc, !0, !0, e, d), a.dc instanceof tl && a.dc.type === ul ? (b.beginPath(), b.rect(d.x, d.y, d.width, d.height), b.Ud(a.dc)) : b.fillRect(d.x, d.y, d.width, d.height));
        null !== a.gb && (ii(a, b, a.gb, !0, !1, e, d), a.gb instanceof tl && a.gb.type === ul ? (b.beginPath(), b.rect(d.x, d.y, d.width, d.height), b.Ud(a.gb)) : b.fillRect(d.x, d.y, d.width, d.height));
        a.Qi(b, c)
    }
    t.Qi = function () {};

    function ii(a, b, c, d, e, f, g) {
        if (null !== c) {
            var h = 1,
                k = 1;
            if ("string" === typeof c) d ? b.fillStyle = c : b.strokeStyle = c;
            else if (c.type === wl) d ? b.fillStyle = c.color : b.strokeStyle = c.color;
            else {
                h = f.width;
                k = f.height;
                e && (h = g.width, k = g.height);
                if ((f = b instanceof xl) && c.ce && (c.type === yl || c.Mk === h && c.au === k)) var l = c.ce;
                else {
                    var m = 0,
                        n = 0,
                        p = 0,
                        r = 0,
                        q = 0,
                        u = 0;
                    u = q = 0;
                    e && (q = g.x, u = g.y);
                    m = c.start.x * h + c.start.offsetX;
                    n = c.start.y * k + c.start.offsetY;
                    p = c.end.x * h + c.end.offsetX;
                    r = c.end.y * k + c.end.offsetY;
                    m += q;
                    p += q;
                    n += u;
                    r += u;
                    if (c.type === zl) l =
                        b.createLinearGradient(m, n, p, r);
                    else if (c.type === ul) u = isNaN(c.endRadius) ? Math.max(h, k) / 2 : c.endRadius, isNaN(c.startRadius) ? (q = 0, u = Math.max(h, k) / 2) : q = c.startRadius, l = b.createRadialGradient(m, n, q, p, r, u);
                    else if (c.type === yl) try {
                        l = b.createPattern(c.pattern, "repeat")
                    } catch (w) {
                        l = null
                    }
                    if (c.type !== yl && (e = c.colorStops, null !== e))
                        for (e = e.iterator; e.next();) l.addColorStop(e.key, e.value);
                    if (f && (c.ce = l, null !== l && (c.Mk = h, c.au = k), null === l && c.type === yl && -1 !== c.Mk)) {
                        c.Mk = -1;
                        var v = a.diagram;
                        null !== v && -1 === c.Mk && sa(function () {
                                v.Ee()
                            },
                            600)
                    }
                }
                d ? b.fillStyle = l : b.strokeStyle = l
            }
        }
    }
    t.Dg = function (a) {
        if (a instanceof X) a: {
            if (this !== a && null !== a)
                for (var b = this.panel; null !== b;) {
                    if (b === a) {
                        a = !0;
                        break a
                    }
                    b = b.panel
                }
            a = !1
        }
        else a = !1;
        return a
    };
    t.zf = function () {
        if (!this.visible) return !1;
        var a = this.panel;
        return null !== a ? a.zf() : !0
    };
    t.Eg = function () {
        for (var a = this instanceof X ? this : this.panel; null !== a && a.isEnabled;) a = a.panel;
        return null === a
    };

    function ql(a) {
        if (0 !== (a.F & 2048) === !0) {
            var b = a.kb;
            b.reset();
            if (!a.ub.v() || !a.nc.v()) {
                Al(a, !1);
                return
            }
            b.translate(a.ub.x - a.nc.x, a.ub.y - a.nc.y);
            if (1 !== a.scale || 0 !== a.angle) {
                var c = a.naturalBounds;
                il(a, b, c.x, c.y, c.width, c.height)
            }
            Al(a, !1);
            Bl(a, !0)
        }
        0 !== (a.F & 4096) === !0 && (b = a.panel, null === b ? (a.Qh.set(a.kb), a.Wk = a.scale, Bl(a, !1)) : null !== b.ud && (c = a.Qh, c.reset(), b.$d() ? c.multiply(b.Qh) : null !== b.panel && c.multiply(b.panel.Qh), c.multiply(a.kb), a.Wk = a.scale * b.Wk, Bl(a, !1)))
    }

    function il(a, b, c, d, e, f) {
        1 !== a.scale && b.scale(a.scale);
        if (0 !== a.Yb) {
            var g = Ac;
            a.xf() && a.locationSpot.eb() && (g = a.locationSpot);
            var h = I.alloc();
            if (a instanceof U && a.locationObject !== a)
                for (c = a.locationObject, d = c.naturalBounds, h.xk(d.x, d.y, d.width, d.height, g), c.bg.ra(h), h.offset(-c.measuredBounds.x, -c.measuredBounds.y), g = c.panel; null !== g && g !== a;) g.bg.ra(h), h.offset(-g.measuredBounds.x, -g.measuredBounds.y), g = g.panel;
            else h.xk(c, d, e, f, g);
            b.rotate(a.Yb, h.x, h.y);
            I.free(h)
        }
    }
    t.o = function (a) {
        void 0 === a && (a = !1);
        if (!0 !== qj(this)) {
            lj(this, !0);
            ll(this, !0);
            var b = this.panel;
            null === b || a || b.o()
        }
    };
    t.om = function () {
        !0 !== qj(this) && (lj(this, !0), ll(this, !0))
    };

    function Cl(a) {
        if (!1 === rj(a)) {
            var b = a.panel;
            null !== b ? b.o() : a.xf() && (b = a.diagram, null !== b && (b.nd.add(a), a instanceof W && a.fd(), b.Pb()));
            ll(a, !0)
        }
    }
    t.ml = function () {
        0 !== (this.F & 2048) === !1 && (Al(this, !0), Bl(this, !0))
    };
    t.Fv = function () {
        Bl(this, !0)
    };
    t.M = function () {
        var a = this.part;
        null !== a && a.M()
    };

    function kl(a, b) {
        var c = a.stretch,
            d = a.panel;
        if (null !== d && d.type === X.Table) return Dl(a, d.getRowDefinition(a.row), d.getColumnDefinition(a.column), b);
        if (null !== d && d.type === X.Auto && d.zb() === a) return El(a, vd, b);
        if (c === Vk) {
            if (null !== d) {
                if (d.type === X.Spot && d.zb() === a) return El(a, vd, b);
                c = d.defaultStretch;
                return c === Vk ? El(a, zg, b) : El(a, c, b)
            }
            return El(a, zg, b)
        }
        return El(a, c, b)
    }

    function Dl(a, b, c, d) {
        var e = a.stretch;
        if (e !== Vk) return El(a, e, d);
        var f = e = null;
        switch (b.stretch) {
            case Xk:
                f = !0;
                break;
            case vd:
                f = !0
        }
        switch (c.stretch) {
            case Wk:
                e = !0;
                break;
            case vd:
                e = !0
        }
        b = a.panel.defaultStretch;
        null === e && (e = b === Wk || b === vd);
        null === f && (f = b === Xk || b === vd);
        return !0 === e && !0 === f ? El(a, vd, d) : !0 === e ? El(a, Wk, d) : !0 === f ? El(a, Xk, d) : El(a, zg, d)
    }

    function El(a, b, c) {
        if (c) return b;
        if (b === zg) return zg;
        c = a.desiredSize;
        if (c.v()) return zg;
        a = a.angle;
        if (!isNaN(c.width))
            if (90 !== a && 270 !== a) {
                if (b === Wk) return zg;
                if (b === vd) return Xk
            } else {
                if (b === Xk) return zg;
                if (b === vd) return Wk
            } if (!isNaN(c.height))
            if (90 !== a && 270 !== a) {
                if (b === Xk) return zg;
                if (b === vd) return Wk
            } else {
                if (b === Wk) return zg;
                if (b === vd) return Xk
            } return b
    }

    function vl(a, b) {
        a.F = b ? a.F | 512 : a.F & -513
    }

    function el(a) {
        return 0 !== (a.F & 1024)
    }

    function Fl(a, b) {
        a.F = b ? a.F | 1024 : a.F & -1025
    }

    function Al(a, b) {
        a.F = b ? a.F | 2048 : a.F & -2049
    }

    function Bl(a, b) {
        a.F = b ? a.F | 4096 : a.F & -4097
    }

    function qj(a) {
        return 0 !== (a.F & 8192)
    }

    function lj(a, b) {
        a.F = b ? a.F | 8192 : a.F & -8193
    }

    function rj(a) {
        return 0 !== (a.F & 16384)
    }

    function ll(a, b) {
        a.F = b ? a.F | 16384 : a.F & -16385
    }
    t.cj = function (a) {
        this.ng = a
    };
    t.hw = function () {};
    t.gw = function (a) {
        this.ma.assign(a);
        Cl(this);
        return !0
    };
    t.Kq = function (a, b) {
        if (this.ma.x !== a || this.ma.y !== b) this.ma.h(a, b), this.ml()
    };

    function Gl(a) {
        var b = a.part;
        if (b instanceof W && (null !== a.portId || a === b.port)) {
            var c = b.diagram;
            null === c || c.undoManager.isUndoingRedoing || ol(b, a)
        }
    }

    function Hl(a) {
        var b = a.diagram;
        null === b || b.undoManager.isUndoingRedoing || (a instanceof X ? a instanceof W ? a.fd() : a.Km(a, function (a) {
            Gl(a)
        }) : Gl(a))
    }
    t.bind = function (a) {
        a.bd = this;
        var b = this.Ui();
        null !== b && Il(b) && B("Cannot add a Binding to a template that has already been copied: " + a);
        null === this.$a && (this.$a = new E);
        this.$a.add(a)
    };
    t.Ui = function () {
        for (var a = this instanceof X ? this : this.panel; null !== a;) {
            if (null !== a.ci) return a;
            a = a.panel
        }
        return null
    };
    t.iw = function (a) {
        xj(this, a)
    };

    function Jl(a, b) {
        b.bd = a;
        null === a.Kg && (a.Kg = new H);
        a.Kg.add(b.propertyName, b)
    }

    function Kl(a, b) {
        for (var c = 1; c < arguments.length; ++c);
        c = arguments;
        var d = null,
            e = null;
        if ("function" === typeof a) e = a;
        else if ("string" === typeof a) {
            var f = Ll.H(a);
            "function" === typeof f ? (c = Ba(arguments), d = f(c), za(d) || B('GraphObject.make invoked object builder "' + a + '", but it did not return an Object')) : e = x.go[a]
        }
        null === d && (void 0 !== e && null !== e && e.constructor || B("GraphObject.make requires a class function or GoJS class name or name of an object builder, not: " + a), d = new e);
        e = 1;
        if (d instanceof R && 1 < c.length) {
            f =
                d;
            var g = c[1];
            if ("string" === typeof g || g instanceof HTMLDivElement) Ei(f, g), e++
        }
        for (; e < c.length; e++) f = c[e], void 0 === f ? B("Undefined value at argument " + e + " for object being constructed by GraphObject.make: " + d) : Ml(d, f);
        return d
    }

    function Ml(a, b) {
        if ("string" === typeof b)
            if (a instanceof Wg) a.text = b;
            else if (a instanceof Lf) a.figure = b;
        else if (a instanceof kk) a.source = b;
        else if (a instanceof X) b = Nl.H(b), null !== b && (a.type = b);
        else if (a instanceof tl) {
            var c = Za(tl, b);
            null !== c ? a.type = c : B("Unknown Brush type as an argument to GraphObject.make: " + b)
        } else a instanceof td ? (b = Za(td, b), null !== b && (a.type = b)) : a instanceof le && (b = Za(le, b), null !== b && (a.type = b));
        else if (b instanceof Y) a instanceof X || B("A GraphObject can only be added to a Panel, not to: " +
            a), a.add(b);
        else if (b instanceof Rj) {
            var d;
            b.isRow && "function" === typeof a.getRowDefinition ? d = a.getRowDefinition(b.index) : b.isRow || "function" !== typeof a.getColumnDefinition || (d = a.getColumnDefinition(b.index));
            d instanceof Rj ? d.et(b) : B("A RowColumnDefinition can only be added to an object that implements getRowDefinition/getColumnDefinition, not to: " + a)
        } else if (b instanceof D) "function" === typeof a.cb && a.cb(b);
        else if (b instanceof Ol) a.type = b;
        else if (b instanceof Ji) a instanceof Y ? a.bind(b) : a instanceof
        Rj ? a.bind(b) : B("A Binding can only be applied to a GraphObject or RowColumnDefinition, not to: " + a);
        else if (b instanceof $h) a instanceof Y ? Jl(a, b) : B("An AnimationTrigger can only be applied to a GraphObject, not to: " + a);
        else if (b instanceof ke) a instanceof td ? a.figures.add(b) : B("A PathFigure can only be added to a Geometry, not to: " + a);
        else if (b instanceof le) a instanceof ke ? a.segments.add(b) : B("A PathSegment can only be added to a PathFigure, not to: " + a);
        else if (b instanceof Ci) a instanceof R ?
            a.layout = b : a instanceof T ? a.layout = b : B("A Layout can only be assigned to a Diagram or a Group, not to: " + a);
        else if (Array.isArray(b))
            for (c = 0; c < b.length; c++) Ml(a, b[c]);
        else if ("object" === typeof b && null !== b)
            if (a instanceof tl) {
                c = new db;
                for (var e in b) d = parseFloat(e), isNaN(d) ? c[e] = b[e] : a.addColorStop(d, b[e]);
                xj(a, c)
            } else if (a instanceof Rj) {
            void 0 !== b.row ? (e = b.row, (void 0 === e || null === e || Infinity === e || isNaN(e) || 0 > e) && B("Must specify non-negative integer row for RowColumnDefinition " + b + ", not: " + e), a.isRow = !0, a.index = e) : void 0 !== b.column && (e = b.column, (void 0 === e || null === e || Infinity === e || isNaN(e) || 0 > e) && B("Must specify non-negative integer column for RowColumnDefinition " + b + ", not: " + e), a.isRow = !1, a.index = e);
            e = new db;
            for (c in b) "row" !== c && "column" !== c && (e[c] = b[c]);
            xj(a, e)
        } else xj(a, b);
        else B('Unknown initializer "' + b + '" for object being constructed by GraphObject.make: ' + a)
    }

    function Pl(a, b) {
        Ll.add(a, b)
    }

    function Ql(a, b, c) {
        void 0 === c && (c = null);
        var d = a[1];
        if ("function" === typeof c ? c(d) : "string" === typeof d) return a.splice(1, 1), d;
        if (void 0 === b) throw Error("no " + ("function" === typeof c ? "satisfactory" : "string") + " argument for GraphObject builder " + a[0]);
        return b
    }
    ma.Object.defineProperties(Y.prototype, {
        shadowVisible: {
            get: function () {
                return this.Ll
            },
            set: function (a) {
                var b = this.Ll;
                b !== a && (this.Ll = a, this.M(), this.g("shadowVisible", b, a))
            }
        },
        enabledChanged: {
            get: function () {
                return null !== this.N ? this.N.En : null
            },
            set: function (a) {
                bl(this);
                var b = this.N.En;
                b !== a && (this.N.En = a, this.g("enabledChanged", b, a))
            }
        },
        segmentOrientation: {
            get: function () {
                return this.Jl
            },
            set: function (a) {
                var b = this.Jl;
                b !== a && (this.Jl = a, this.o(), this.g("segmentOrientation", b, a), a === bg && (this.angle = 0))
            }
        },
        segmentIndex: {
            get: function () {
                return this.xp
            },
            set: function (a) {
                a = Math.round(a);
                var b = this.xp;
                b !== a && (this.xp = a, this.o(), this.g("segmentIndex", b, a))
            }
        },
        segmentFraction: {
            get: function () {
                return this.Hl
            },
            set: function (a) {
                isNaN(a) ? a = 0 : 0 > a ? a = 0 : 1 < a && (a = 1);
                var b = this.Hl;
                b !== a && (this.Hl = a, this.o(), this.g("segmentFraction", b, a))
            }
        },
        segmentOffset: {
            get: function () {
                return this.Il
            },
            set: function (a) {
                var b = this.Il;
                b.w(a) || (this.Il = a = a.G(), this.o(), this.g("segmentOffset", b, a))
            }
        },
        stretch: {
            get: function () {
                return this.ve
            },
            set: function (a) {
                var b = this.ve;
                b !== a && (this.ve = a, this.o(), this.g("stretch", b, a))
            }
        },
        name: {
            get: function () {
                return this.Ra
            },
            set: function (a) {
                var b = this.Ra;
                b !== a && (this.Ra = a, null !== this.part && (this.part.Fj = null), this.g("name", b, a))
            }
        },
        opacity: {
            get: function () {
                return this.qb
            },
            set: function (a) {
                var b = this.qb;
                b !== a && ((0 > a || 1 < a) && va(a, "0 <= value <= 1", Y, "opacity"), this.qb = a, this.g("opacity", b, a), a = this.diagram, b = this.part, null !== a && null !== b && a.M(Bj(b, b.actualBounds)))
            }
        },
        visible: {
            get: function () {
                return 0 !== (this.F & 1)
            },
            set: function (a) {
                var b = 0 !== (this.F & 1);
                b !== a && (this.F ^= 1, this.g("visible", b, a), b = this.panel, null !== b ? b.o() : this.xf() && this.Ob(a), this.M(), Hl(this))
            }
        },
        pickable: {
            get: function () {
                return 0 !== (this.F & 2)
            },
            set: function (a) {
                var b =
                    0 !== (this.F & 2);
                b !== a && (this.F ^= 2, this.g("pickable", b, a))
            }
        },
        fromLinkableDuplicates: {
            get: function () {
                return 0 !== (this.F & 4)
            },
            set: function (a) {
                var b = 0 !== (this.F & 4);
                b !== a && (this.F ^= 4, this.g("fromLinkableDuplicates", b, a))
            }
        },
        fromLinkableSelfNode: {
            get: function () {
                return 0 !== (this.F & 8)
            },
            set: function (a) {
                var b = 0 !== (this.F & 8);
                b !== a && (this.F ^= 8, this.g("fromLinkableSelfNode", b, a))
            }
        },
        toLinkableDuplicates: {
            get: function () {
                return 0 !==
                    (this.F & 16)
            },
            set: function (a) {
                var b = 0 !== (this.F & 16);
                b !== a && (this.F ^= 16, this.g("toLinkableDuplicates", b, a))
            }
        },
        toLinkableSelfNode: {
            get: function () {
                return 0 !== (this.F & 32)
            },
            set: function (a) {
                var b = 0 !== (this.F & 32);
                b !== a && (this.F ^= 32, this.g("toLinkableSelfNode", b, a))
            }
        },
        isPanelMain: {
            get: function () {
                return 0 !== (this.F & 64)
            },
            set: function (a) {
                var b = 0 !== (this.F & 64);
                b !== a && (this.F ^= 64, this.o(), this.g("isPanelMain", b, a))
            }
        },
        isActionable: {
            get: function () {
                return 0 !== (this.F & 128)
            },
            set: function (a) {
                var b = 0 !== (this.F & 128);
                b !== a && (this.F ^= 128, this.g("isActionable", b, a))
            }
        },
        areaBackground: {
            get: function () {
                return this.dc
            },
            set: function (a) {
                var b = this.dc;
                b !== a && (null !== a && Rl(a, "GraphObject.areaBackground"), a instanceof tl && a.freeze(), this.dc = a, this.M(), this.g("areaBackground", b, a))
            }
        },
        background: {
            get: function () {
                return this.gb
            },
            set: function (a) {
                var b = this.gb;
                b !== a && (null !== a && Rl(a, "GraphObject.background"),
                    a instanceof tl && a.freeze(), this.gb = a, this.M(), this.g("background", b, a))
            }
        },
        part: {
            get: function () {
                if (this.xf()) return this;
                if (null !== this.Jj) return this.Jj;
                var a;
                for (a = this.panel; a;) {
                    if (a instanceof U) return this.Jj = a;
                    a = a.panel
                }
                return null
            }
        },
        svg: {
            get: function () {
                return this.Pp
            },
            set: function (a) {
                this.Pp = a
            }
        },
        panel: {
            get: function () {
                return this.ng
            }
        },
        layer: {
            get: function () {
                var a = this.part;
                return null !== a ? a.layer : null
            }
        },
        diagram: {
            get: function () {
                var a = this.part;
                return null !== a ? a.diagram : null
            }
        },
        position: {
            get: function () {
                return this.ma
            },
            set: function (a) {
                var b = a.x,
                    c = a.y,
                    d = this.ma,
                    e = d.x,
                    f = d.y;
                (e === b || isNaN(e) && isNaN(b)) && (f === c || isNaN(f) && isNaN(c)) ? this.hw(): (a = a.copy(), this.gw(a, d) && this.g("position", d.copy(), a))
            }
        },
        actualBounds: {
            get: function () {
                return this.ub
            }
        },
        scale: {
            get: function () {
                return this.ya
            },
            set: function (a) {
                var b = this.ya;
                b !== a && (0 >= a && B("GraphObject.scale for " + this + " must be greater than zero, not: " + a), this.ya = a, this.o(), this.g("scale", b, a))
            }
        },
        angle: {
            get: function () {
                return this.Yb
            },
            set: function (a) {
                var b = this.Yb;
                b !== a && (a %= 360, 0 > a && (a += 360), b !== a && (this.Yb = a, Hl(this), this.o(), this.g("angle", b, a)))
            }
        },
        desiredSize: {
            get: function () {
                return this.Lc
            },
            set: function (a) {
                var b = a.width,
                    c = a.height,
                    d = this.Lc,
                    e = d.width,
                    f = d.height;
                (e === b || isNaN(e) &&
                    isNaN(b)) && (f === c || isNaN(f) && isNaN(c)) || (this.Lc = a = a.G(), this.o(), this instanceof Lf && this.cc(), this.g("desiredSize", d, a), el(this) && (a = this.part, null !== a && (fl(this, a, "width"), fl(this, a, "height"))))
            }
        },
        width: {
            get: function () {
                return this.Lc.width
            },
            set: function (a) {
                var b = this.Lc.width;
                b === a || isNaN(b) && isNaN(a) || (b = this.Lc, this.Lc = a = (new M(a, this.Lc.height)).freeze(), this.o(), this instanceof Lf && this.cc(), this.g("desiredSize", b, a), el(this) && (a = this.part, null !== a && fl(this, a,
                    "width")))
            }
        },
        height: {
            get: function () {
                return this.Lc.height
            },
            set: function (a) {
                var b = this.Lc.height;
                b === a || isNaN(b) && isNaN(a) || (b = this.Lc, this.Lc = a = (new M(this.Lc.width, a)).freeze(), this.o(), this instanceof Lf && this.cc(), this.g("desiredSize", b, a), el(this) && (a = this.part, null !== a && fl(this, a, "height")))
            }
        },
        minSize: {
            get: function () {
                return this.eg
            },
            set: function (a) {
                var b = this.eg;
                b.w(a) || (a = a.copy(), isNaN(a.width) && (a.width = 0), isNaN(a.height) && (a.height =
                    0), a.freeze(), this.eg = a, this.o(), this.g("minSize", b, a))
            }
        },
        maxSize: {
            get: function () {
                return this.dg
            },
            set: function (a) {
                var b = this.dg;
                b.w(a) || (a = a.copy(), isNaN(a.width) && (a.width = Infinity), isNaN(a.height) && (a.height = Infinity), a.freeze(), this.dg = a, this.o(), this.g("maxSize", b, a))
            }
        },
        measuredBounds: {
            get: function () {
                return this.nc
            }
        },
        naturalBounds: {
            get: function () {
                return this.oc
            }
        },
        margin: {
            get: function () {
                return this.fh
            },
            set: function (a) {
                "number" === typeof a && (a = new oc(a));
                var b = this.fh;
                b.w(a) || (this.fh = a = a.G(), this.o(), this.g("margin", b, a))
            }
        },
        transform: {
            get: function () {
                0 !== (this.F & 2048) === !0 && ql(this);
                return this.kb
            }
        },
        ud: {
            get: function () {
                0 !== (this.F & 4096) === !0 && ql(this);
                return this.Qh
            }
        },
        alignment: {
            get: function () {
                return this.vb
            },
            set: function (a) {
                var b = this.vb;
                b.w(a) || (a.jc() && !a.Mb() && B("GraphObject.alignment for " + this + " must be a real Spot or Spot.Default, not: " +
                    a), this.vb = a = a.G(), Cl(this), this.g("alignment", b, a))
            }
        },
        column: {
            get: function () {
                return this.Og
            },
            set: function (a) {
                a = Math.round(a);
                var b = this.Og;
                b !== a && (0 > a && va(a, ">= 0", Y, "column"), this.Og = a, this.o(), this.g("column", b, a))
            }
        },
        columnSpan: {
            get: function () {
                return this.gn
            },
            set: function (a) {
                a = Math.round(a);
                var b = this.gn;
                b !== a && (1 > a && va(a, ">= 1", Y, "columnSpan"), this.gn = a, this.o(), this.g("columnSpan", b, a))
            }
        },
        row: {
            get: function () {
                return this.pp
            },
            set: function (a) {
                a = Math.round(a);
                var b = this.pp;
                b !== a && (0 > a && va(a, ">= 0", Y, "row"), this.pp = a, this.o(), this.g("row", b, a))
            }
        },
        rowSpan: {
            get: function () {
                return this.qp
            },
            set: function (a) {
                a = Math.round(a);
                var b = this.qp;
                b !== a && (1 > a && va(a, ">= 1", Y, "rowSpan"), this.qp = a, this.o(), this.g("rowSpan", b, a))
            }
        },
        spanAllocation: {
            get: function () {
                return this.Kp
            },
            set: function (a) {
                var b = this.Kp;
                b !== a && (this.Kp = a, this.o(), this.g("spanAllocation", b, a))
            }
        },
        alignmentFocus: {
            get: function () {
                return this.Fk
            },
            set: function (a) {
                var b = this.Fk;
                b.w(a) || (this.Fk = a = a.G(), this.o(), this.g("alignmentFocus", b, a))
            }
        },
        portId: {
            get: function () {
                return this.cp
            },
            set: function (a) {
                var b = this.cp;
                if (b !== a) {
                    var c = this.part;
                    null === c || c instanceof W || (B("Cannot set portID on a Link: " + a), c = null);
                    null !== b && null !== c && Sl(c, this);
                    this.cp = a;
                    null !== a && null !== c && (c.Ih = !0, Tl(c, this));
                    this.g("portId", b, a)
                }
            }
        },
        toSpot: {
            get: function () {
                return null !==
                    this.O ? this.O.yh : uc
            },
            set: function (a) {
                this.Ec();
                var b = this.O.yh;
                b.w(a) || (a = a.G(), this.O.yh = a, this.g("toSpot", b, a), Gl(this))
            }
        },
        toEndSegmentLength: {
            get: function () {
                return null !== this.O ? this.O.wh : 10
            },
            set: function (a) {
                this.Ec();
                var b = this.O.wh;
                b !== a && (0 > a && va(a, ">= 0", Y, "toEndSegmentLength"), this.O.wh = a, this.g("toEndSegmentLength", b, a), Gl(this))
            }
        },
        toShortLength: {
            get: function () {
                return null !== this.O ? this.O.xh : 0
            },
            set: function (a) {
                this.Ec();
                var b = this.O.xh;
                b !== a && (this.O.xh = a, this.g("toShortLength", b, a), Gl(this))
            }
        },
        toLinkable: {
            get: function () {
                return null !== this.O ? this.O.Tp : null
            },
            set: function (a) {
                this.Ec();
                var b = this.O.Tp;
                b !== a && (this.O.Tp = a, this.g("toLinkable", b, a))
            }
        },
        toMaxLinks: {
            get: function () {
                return null !== this.O ? this.O.Up : Infinity
            },
            set: function (a) {
                this.Ec();
                var b = this.O.Up;
                b !== a && (0 > a && va(a, ">= 0", Y, "toMaxLinks"), this.O.Up = a, this.g("toMaxLinks", b, a))
            }
        },
        fromSpot: {
            get: function () {
                return null !== this.O ? this.O.Yg : uc
            },
            set: function (a) {
                this.Ec();
                var b = this.O.Yg;
                b.w(a) || (a = a.G(), this.O.Yg = a, this.g("fromSpot", b, a), Gl(this))
            }
        },
        fromEndSegmentLength: {
            get: function () {
                return null !== this.O ? this.O.Wg : 10
            },
            set: function (a) {
                this.Ec();
                var b = this.O.Wg;
                b !== a && (0 > a && va(a, ">= 0", Y, "fromEndSegmentLength"), this.O.Wg = a, this.g("fromEndSegmentLength", b, a), Gl(this))
            }
        },
        fromShortLength: {
            get: function () {
                return null !== this.O ? this.O.Xg :
                    0
            },
            set: function (a) {
                this.Ec();
                var b = this.O.Xg;
                b !== a && (this.O.Xg = a, this.g("fromShortLength", b, a), Gl(this))
            }
        },
        fromLinkable: {
            get: function () {
                return null !== this.O ? this.O.Kn : null
            },
            set: function (a) {
                this.Ec();
                var b = this.O.Kn;
                b !== a && (this.O.Kn = a, this.g("fromLinkable", b, a))
            }
        },
        fromMaxLinks: {
            get: function () {
                return null !== this.O ? this.O.Ln : Infinity
            },
            set: function (a) {
                this.Ec();
                var b = this.O.Ln;
                b !== a && (0 > a && va(a, ">= 0", Y, "fromMaxLinks"), this.O.Ln = a, this.g("fromMaxLinks",
                    b, a))
            }
        },
        cursor: {
            get: function () {
                return this.fi
            },
            set: function (a) {
                var b = this.fi;
                b !== a && (this.fi = a, this.g("cursor", b, a))
            }
        },
        click: {
            get: function () {
                return null !== this.N ? this.N.Nf : null
            },
            set: function (a) {
                bl(this);
                var b = this.N.Nf;
                b !== a && (this.N.Nf = a, this.g("click", b, a))
            }
        },
        doubleClick: {
            get: function () {
                return null !== this.N ? this.N.Sf : null
            },
            set: function (a) {
                bl(this);
                var b = this.N.Sf;
                b !== a && (this.N.Sf = a, this.g("doubleClick", b,
                    a))
            }
        },
        contextClick: {
            get: function () {
                return null !== this.N ? this.N.Of : null
            },
            set: function (a) {
                bl(this);
                var b = this.N.Of;
                b !== a && (this.N.Of = a, this.g("contextClick", b, a))
            }
        },
        mouseEnter: {
            get: function () {
                return null !== this.N ? this.N.gg : null
            },
            set: function (a) {
                bl(this);
                var b = this.N.gg;
                b !== a && (this.N.gg = a, this.g("mouseEnter", b, a))
            }
        },
        mouseLeave: {
            get: function () {
                return null !== this.N ? this.N.jg : null
            },
            set: function (a) {
                bl(this);
                var b =
                    this.N.jg;
                b !== a && (this.N.jg = a, this.g("mouseLeave", b, a))
            }
        },
        mouseOver: {
            get: function () {
                return null !== this.N ? this.N.kg : null
            },
            set: function (a) {
                bl(this);
                var b = this.N.kg;
                b !== a && (this.N.kg = a, this.g("mouseOver", b, a))
            }
        },
        mouseHover: {
            get: function () {
                return null !== this.N ? this.N.ig : null
            },
            set: function (a) {
                bl(this);
                var b = this.N.ig;
                b !== a && (this.N.ig = a, this.g("mouseHover", b, a))
            }
        },
        mouseHold: {
            get: function () {
                return null !== this.N ? this.N.hg :
                    null
            },
            set: function (a) {
                bl(this);
                var b = this.N.hg;
                b !== a && (this.N.hg = a, this.g("mouseHold", b, a))
            }
        },
        mouseDragEnter: {
            get: function () {
                return null !== this.N ? this.N.Fo : null
            },
            set: function (a) {
                bl(this);
                var b = this.N.Fo;
                b !== a && (this.N.Fo = a, this.g("mouseDragEnter", b, a))
            }
        },
        mouseDragLeave: {
            get: function () {
                return null !== this.N ? this.N.Go : null
            },
            set: function (a) {
                bl(this);
                var b = this.N.Go;
                b !== a && (this.N.Go = a, this.g("mouseDragLeave", b, a))
            }
        },
        mouseDrop: {
            get: function () {
                return null !== this.N ? this.N.fg : null
            },
            set: function (a) {
                bl(this);
                var b = this.N.fg;
                b !== a && (this.N.fg = a, this.g("mouseDrop", b, a))
            }
        },
        actionDown: {
            get: function () {
                return null !== this.N ? this.N.Pm : null
            },
            set: function (a) {
                bl(this);
                var b = this.N.Pm;
                b !== a && (this.N.Pm = a, this.g("actionDown", b, a))
            }
        },
        actionMove: {
            get: function () {
                return null !== this.N ? this.N.Qm : null
            },
            set: function (a) {
                bl(this);
                var b = this.N.Qm;
                b !== a && (this.N.Qm = a, this.g("actionMove",
                    b, a))
            }
        },
        actionUp: {
            get: function () {
                return null !== this.N ? this.N.Rm : null
            },
            set: function (a) {
                bl(this);
                var b = this.N.Rm;
                b !== a && (this.N.Rm = a, this.g("actionUp", b, a))
            }
        },
        actionCancel: {
            get: function () {
                return null !== this.N ? this.N.Om : null
            },
            set: function (a) {
                bl(this);
                var b = this.N.Om;
                b !== a && (this.N.Om = a, this.g("actionCancel", b, a))
            }
        },
        toolTip: {
            get: function () {
                return null !== this.N ? this.N.ug : null
            },
            set: function (a) {
                bl(this);
                var b = this.N.ug;
                b !== a && (this.N.ug = a, this.g("toolTip", b, a))
            }
        },
        contextMenu: {
            get: function () {
                return null !== this.N ? this.N.Pf : null
            },
            set: function (a) {
                bl(this);
                var b = this.N.Pf;
                b !== a && (this.N.Pf = a, this.g("contextMenu", b, a))
            }
        }
    });
    Y.prototype.setProperties = Y.prototype.iw;
    Y.prototype.findTemplateBinder = Y.prototype.Ui;
    Y.prototype.bind = Y.prototype.bind;
    Y.prototype.isEnabledObject = Y.prototype.Eg;
    Y.prototype.isVisibleObject = Y.prototype.zf;
    Y.prototype.isContainedBy = Y.prototype.Dg;
    Y.prototype.getNearestIntersectionPoint = Y.prototype.Uc;
    Y.prototype.getLocalPoint = Y.prototype.ot;
    Y.prototype.getDocumentScale = Y.prototype.uf;
    Y.prototype.getDocumentAngle = Y.prototype.Xi;
    Y.prototype.getDocumentBounds = Y.prototype.lm;
    Y.prototype.getDocumentPoint = Y.prototype.ga;
    Y.prototype.intersectsRect = Y.prototype.Gc;
    Y.prototype.containedInRect = Y.prototype.Gh;
    Y.prototype.containsRect = Y.prototype.ze;
    Y.prototype.containsPoint = Y.prototype.aa;
    Y.prototype.raiseChanged = Y.prototype.g;
    Y.prototype.raiseChangedEvent = Y.prototype.Ya;
    Y.prototype.addCopyProperty = Y.prototype.sx;
    var Ll = null;
    Y.className = "GraphObject";
    Ll = new H;
    Pl("Button", function () {
        function a(a, b) {
            return null !== a.diagram.Ub(a.documentPoint, function (a) {
                for (; null !== a.panel && !a.isActionable;) a = a.panel;
                return a
            }, function (a) {
                return a === b
            })
        }
        var b = Kl(X, X.Auto, {
            isActionable: !0,
            enabledChanged: function (a, b) {
                if (a instanceof X) {
                    var c = a.Xa("ButtonBorder");
                    null !== c && (c.fill = b ? a._buttonFillNormal : a._buttonFillDisabled)
                }
            },
            cursor: "pointer",
            _buttonFillNormal: "#F5F5F5",
            _buttonStrokeNormal: "#BDBDBD",
            _buttonFillOver: "#E0E0E0",
            _buttonStrokeOver: "#9E9E9E",
            _buttonFillPressed: "#BDBDBD",
            _buttonStrokePressed: "#9E9E9E",
            _buttonFillDisabled: "#E5E5E5"
        }, Kl(Lf, {
            name: "ButtonBorder",
            figure: "RoundedRectangle",
            spot1: new P(0, 0, 2.76142374915397, 2.761423749153969),
            spot2: new P(1, 1, -2.76142374915397, -2.761423749153969),
            parameter1: 2,
            parameter2: 2,
            fill: "#F5F5F5",
            stroke: "#BDBDBD"
        }));
        b.mouseEnter = function (a, b) {
            if (b.Eg() && b instanceof X && (a = b.Xa("ButtonBorder"), a instanceof Lf)) {
                var c = b._buttonFillOver;
                b._buttonFillNormal = a.fill;
                a.fill = c;
                c = b._buttonStrokeOver;
                b._buttonStrokeNormal = a.stroke;
                a.stroke = c
            }
        };
        b.mouseLeave = function (a, b) {
            b.Eg() && b instanceof X && (a = b.Xa("ButtonBorder"), a instanceof Lf && (a.fill = b._buttonFillNormal, a.stroke = b._buttonStrokeNormal))
        };
        b.actionDown = function (a, b) {
            if (b.Eg() && b instanceof X && null !== b._buttonFillPressed && 0 === a.button) {
                var c = b.Xa("ButtonBorder");
                if (c instanceof Lf) {
                    a = a.diagram;
                    var d = a.skipsUndoManager;
                    a.skipsUndoManager = !0;
                    var g = b._buttonFillPressed;
                    b._buttonFillOver = c.fill;
                    c.fill = g;
                    g = b._buttonStrokePressed;
                    b._buttonStrokeOver = c.stroke;
                    c.stroke = g;
                    a.skipsUndoManager =
                        d
                }
            }
        };
        b.actionUp = function (b, d) {
            if (d.Eg() && d instanceof X && null !== d._buttonFillPressed && 0 === b.button) {
                var c = d.Xa("ButtonBorder");
                if (c instanceof Lf) {
                    var f = b.diagram,
                        g = f.skipsUndoManager;
                    f.skipsUndoManager = !0;
                    a(b, d) ? (c.fill = d._buttonFillOver, c.stroke = d._buttonStrokeOver) : (c.fill = d._buttonFillNormal, c.stroke = d._buttonStrokeNormal);
                    f.skipsUndoManager = g
                }
            }
        };
        b.actionCancel = function (b, d) {
            if (d.Eg() && d instanceof X && null !== d._buttonFillPressed) {
                var c = d.Xa("ButtonBorder");
                if (c instanceof Lf) {
                    var f = b.diagram,
                        g = f.skipsUndoManager;
                    f.skipsUndoManager = !0;
                    a(b, d) ? (c.fill = d._buttonFillOver, c.stroke = d._buttonStrokeOver) : (c.fill = d._buttonFillNormal, c.stroke = d._buttonStrokeNormal);
                    f.skipsUndoManager = g
                }
            }
        };
        b.actionMove = function (b, d) {
            if (d.Eg() && d instanceof X && null !== d._buttonFillPressed) {
                var c = b.diagram;
                if (0 === c.firstInput.button && (c.currentTool.standardMouseOver(), a(b, d) && (b = d.Xa("ButtonBorder"), b instanceof Lf))) {
                    var f = c.skipsUndoManager;
                    c.skipsUndoManager = !0;
                    var g = d._buttonFillPressed;
                    b.fill !== g && (b.fill = g);
                    g =
                        d._buttonStrokePressed;
                    b.stroke !== g && (b.stroke = g);
                    c.skipsUndoManager = f
                }
            }
        };
        return b
    });
    Pl("TreeExpanderButton", function () {
        var a = Kl("Button", {
            _treeExpandedFigure: "MinusLine",
            _treeCollapsedFigure: "PlusLine"
        }, Kl(Lf, {
            name: "ButtonIcon",
            figure: "MinusLine",
            stroke: "#424242",
            strokeWidth: 2,
            desiredSize: Nb
        }, (new Ji("figure", "isTreeExpanded", function (a, c) {
            c = c.panel;
            return a ? c._treeExpandedFigure : c._treeCollapsedFigure
        })).Aq()), {
            visible: !1
        }, (new Ji("visible", "isTreeLeaf", function (a) {
            return !a
        })).Aq());
        a.click = function (a, c) {
            c = c.part;
            c instanceof Je && (c = c.adornedPart);
            if (c instanceof W) {
                var b = c.diagram;
                if (null !== b) {
                    b = b.commandHandler;
                    if (c.isTreeExpanded) {
                        if (!b.canCollapseTree(c)) return
                    } else if (!b.canExpandTree(c)) return;
                    a.handled = !0;
                    c.isTreeExpanded ? b.collapseTree(c) : b.expandTree(c)
                }
            }
        };
        return a
    });
    Pl("SubGraphExpanderButton", function () {
        var a = Kl("Button", {
            _subGraphExpandedFigure: "MinusLine",
            _subGraphCollapsedFigure: "PlusLine"
        }, Kl(Lf, {
            name: "ButtonIcon",
            figure: "MinusLine",
            stroke: "#424242",
            strokeWidth: 2,
            desiredSize: Nb
        }, (new Ji("figure", "isSubGraphExpanded", function (a, c) {
            c = c.panel;
            return a ? c._subGraphExpandedFigure : c._subGraphCollapsedFigure
        })).Aq()));
        a.click = function (a, c) {
            c = c.part;
            c instanceof Je && (c = c.adornedPart);
            if (c instanceof T) {
                var b = c.diagram;
                if (null !== b) {
                    b = b.commandHandler;
                    if (c.isSubGraphExpanded) {
                        if (!b.canCollapseSubGraph(c)) return
                    } else if (!b.canExpandSubGraph(c)) return;
                    a.handled = !0;
                    c.isSubGraphExpanded ? b.collapseSubGraph(c) : b.expandSubGraph(c)
                }
            }
        };
        return a
    });
    Pl("ToolTip", function () {
        return Kl(Je, X.Auto, {
            isShadowed: !0,
            shadowColor: "rgba(0, 0, 0, .4)",
            shadowOffset: new I(0, 3),
            shadowBlur: 5
        }, Kl(Lf, {
            name: "Border",
            figure: "RoundedRectangle",
            parameter1: 1,
            parameter2: 1,
            fill: "#F5F5F5",
            stroke: "#F0F0F0",
            spot1: new P(0, 0, 4, 6),
            spot2: new P(1, 1, -4, -4)
        }))
    });
    Pl("ContextMenu", function () {
        return Kl(Je, X.Vertical, {
            background: "#F5F5F5",
            isShadowed: !0,
            shadowColor: "rgba(0, 0, 0, .4)",
            shadowOffset: new I(0, 3),
            shadowBlur: 5
        }, new Ji("background", "", function (a) {
            return null !== a.adornedPart && null !== a.placeholder ? null : "#F5F5F5"
        }))
    });
    Pl("ContextMenuButton", function () {
        var a = Kl("Button");
        a.stretch = Wk;
        var b = a.Xa("ButtonBorder");
        b instanceof Lf && (b.figure = "Rectangle", b.strokeWidth = 0, b.spot1 = new P(0, 0, 2, 3), b.spot2 = new P(1, 1, -2, -2));
        return a
    });
    Pl("PanelExpanderButton", function (a) {
        var b = Ql(a, "COLLAPSIBLE"),
            c = Kl("Button", {
                _buttonExpandedFigure: "M0 0 M0 6 L4 2 8 6 M8 8",
                _buttonCollapsedFigure: "M0 0 M0 2 L4 6 8 2 M8 8",
                _buttonFillNormal: "rgba(0, 0, 0, 0)",
                _buttonStrokeNormal: null,
                _buttonFillOver: "rgba(0, 0, 0, .2)",
                _buttonStrokeOver: null,
                _buttonFillPressed: "rgba(0, 0, 0, .4)",
                _buttonStrokePressed: null
            }, Kl(Lf, {
                name: "ButtonIcon",
                strokeWidth: 2
            }, (new Ji("geometryString", "visible", function (a) {
                return a ? c._buttonExpandedFigure : c._buttonCollapsedFigure
            })).Aq(b)));
        a = c.Xa("ButtonBorder");
        a instanceof Lf && (a.stroke = null, a.fill = "rgba(0, 0, 0, 0)");
        c.click = function (a, c) {
            var d = c.diagram;
            if (null !== d && !d.isReadOnly) {
                var e = c.Ui();
                null === e && (e = c.part);
                null !== e && (c = e.Xa(b), null !== c && (a.handled = !0, d.ua("Collapse/Expand Panel"), c.visible = !c.visible, d.Ua("Collapse/Expand Panel")))
            }
        };
        return c
    });
    Pl("CheckBoxButton", function (a) {
        var b = Ql(a);
        a = Kl("Button", {
            desiredSize: new M(14, 14)
        }, Kl(Lf, {
            name: "ButtonIcon",
            geometryString: "M0 0 M0 8.85 L4.9 13.75 16.2 2.45 M16.2 16.2",
            strokeWidth: 2,
            stretch: vd,
            geometryStretch: Bg,
            visible: !1
        }, "" !== b ? (new Ji("visible", b)).Vx() : []));
        a.click = function (a, d) {
            if (d instanceof X) {
                var c = a.diagram;
                if (!(null === c || c.isReadOnly || "" !== b && c.model.isReadOnly)) {
                    a.handled = !0;
                    var f = d.Xa("ButtonIcon");
                    c.ua("checkbox");
                    f.visible = !f.visible;
                    "function" === typeof d._doClick && d._doClick(a,
                        d);
                    c.Ua("checkbox")
                }
            }
        };
        return a
    });
    Pl("CheckBox", function (a) {
        a = Ql(a);
        a = Kl("CheckBoxButton", a, {
            name: "Button",
            isActionable: !1,
            margin: new oc(0, 1, 0, 0)
        });
        var b = Kl(X, "Horizontal", a, {
            isActionable: !0,
            cursor: a.cursor,
            margin: 1,
            _buttonFillNormal: a._buttonFillNormal,
            _buttonStrokeNormal: a._buttonStrokeNormal,
            _buttonFillOver: a._buttonFillOver,
            _buttonStrokeOver: a._buttonStrokeOver,
            _buttonFillPressed: a._buttonFillPressed,
            _buttonStrokePressed: a._buttonStrokePressed,
            _buttonFillDisabled: a._buttonFillDisabled,
            mouseEnter: a.mouseEnter,
            mouseLeave: a.mouseLeave,
            actionDown: a.actionDown,
            actionUp: a.actionUp,
            actionCancel: a.actionCancel,
            actionMove: a.actionMove,
            click: a.click,
            _buttonClick: a.click
        });
        a.mouseEnter = null;
        a.mouseLeave = null;
        a.actionDown = null;
        a.actionUp = null;
        a.actionCancel = null;
        a.actionMove = null;
        a.click = null;
        return b
    });
    Y.None = zg = new D(Y, "None", 0);
    Y.Default = Vk = new D(Y, "Default", 0);
    Y.Vertical = Xk = new D(Y, "Vertical", 4);
    Y.Horizontal = Wk = new D(Y, "Horizontal", 5);
    Y.Fill = vd = new D(Y, "Fill", 3);
    Y.Uniform = Bg = new D(Y, "Uniform", 1);
    Y.UniformToFill = Yk = new D(Y, "UniformToFill", 2);
    Y.FlipVertical = Zk = new D(Y, "FlipVertical", 1);
    Y.FlipHorizontal = $k = new D(Y, "FlipHorizontal", 2);
    Y.FlipBoth = al = new D(Y, "FlipBoth", 3);
    Y.make = Kl;
    Y.getBuilders = function () {
        var a = new H,
            b;
        for (b in Ll)
            if (b !== b.toLowerCase()) {
                var c = Ll.H(b);
                "function" === typeof c && a.add(b, c)
            } a.freeze();
        return a
    };
    Y.defineBuilder = Pl;
    Y.takeBuilderArgument = Ql;

    function cl() {
        this.En = this.Pf = this.ug = this.Om = this.Rm = this.Qm = this.Pm = this.fg = this.Go = this.Fo = this.hg = this.ig = this.kg = this.jg = this.gg = this.Of = this.Sf = this.Nf = null
    }
    cl.prototype.copy = function () {
        var a = new cl;
        a.Nf = this.Nf;
        a.Sf = this.Sf;
        a.Of = this.Of;
        a.gg = this.gg;
        a.jg = this.jg;
        a.kg = this.kg;
        a.ig = this.ig;
        a.hg = this.hg;
        a.Fo = this.Fo;
        a.Go = this.Go;
        a.fg = this.fg;
        a.Pm = this.Pm;
        a.Qm = this.Qm;
        a.Rm = this.Rm;
        a.Om = this.Om;
        a.ug = this.ug;
        a.Pf = this.Pf;
        a.En = this.En;
        return a
    };
    cl.className = "GraphObjectEventHandlers";

    function Ul() {
        this.Ka = [1, 0, 0, 1, 0, 0]
    }
    Ul.prototype.copy = function () {
        var a = new Ul;
        a.Ka[0] = this.Ka[0];
        a.Ka[1] = this.Ka[1];
        a.Ka[2] = this.Ka[2];
        a.Ka[3] = this.Ka[3];
        a.Ka[4] = this.Ka[4];
        a.Ka[5] = this.Ka[5];
        return a
    };
    Ul.prototype.translate = function (a, b) {
        this.Ka[4] += this.Ka[0] * a + this.Ka[2] * b;
        this.Ka[5] += this.Ka[1] * a + this.Ka[3] * b
    };
    Ul.prototype.scale = function (a, b) {
        this.Ka[0] *= a;
        this.Ka[1] *= a;
        this.Ka[2] *= b;
        this.Ka[3] *= b
    };
    Ul.className = "STransform";

    function Vl(a) {
        this.type = a;
        this.r2 = this.y2 = this.x2 = this.r1 = this.y1 = this.x1 = 0;
        this.zx = [];
        this.pattern = null
    }
    Vl.prototype.addColorStop = function (a, b) {
        this.zx.push({
            offset: a,
            color: b
        })
    };
    Vl.className = "SGradient";

    function Aj(a, b) {
        this.ownerDocument = a = void 0 === b ? x.document : b;
        this.hA = "http://www.w3.org/2000/svg";
        void 0 !== a && (this.Ea = this.tb("svg", {
            width: "1px",
            height: "1px",
            viewBox: "0 0 1 1"
        }), this.Ea.setAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns", "http://www.w3.org/2000/svg"), this.Ea.setAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns:xlink", "http://www.w3.org/1999/xlink"));
        this.jq = null;
        this.context = new Wl(this)
    }
    Aj.prototype.resize = function (a, b, c, d) {
        return this.width !== a || this.height !== b ? (this.style.width = c + "px", this.style.height = d + "px", this.Ea.setAttributeNS(null, "width", c + "px"), this.Ea.setAttributeNS(null, "height", d + "px"), this.Ea.setAttributeNS(null, "viewBox", "0 0 " + c + " " + d), this.context.Cu.firstElementChild.setAttributeNS(null, "width", c + "px"), this.context.Cu.firstElementChild.setAttributeNS(null, "height", d + "px"), !0) : !1
    };
    Aj.prototype.tb = function (a, b, c) {
        a = this.ownerDocument.createElementNS(this.hA, a);
        if (za(b))
            for (var d in b) a.setAttributeNS("href" === d ? "http://www.w3.org/1999/xlink" : "", d, b[d]);
        void 0 !== c && (a.textContent = c);
        return a
    };
    Aj.prototype.getBoundingClientRect = function () {
        return this.Ea.getBoundingClientRect()
    };
    Aj.prototype.focus = function () {
        this.Ea.focus()
    };
    Aj.prototype.Fx = function () {
        this.ownerDocument = null
    };
    ma.Object.defineProperties(Aj.prototype, {
        width: {
            get: function () {
                return this.Ea.width.baseVal.value
            },
            set: function (a) {
                this.Ea.width = a
            }
        },
        height: {
            get: function () {
                return this.Ea.height.baseVal.value
            },
            set: function (a) {
                this.Ea.height = a
            }
        },
        style: {
            get: function () {
                return this.Ea.style
            }
        }
    });
    Aj.className = "SVGSurface";

    function Wl(a) {
        this.yk = a;
        this.svg = a.Ea;
        this.stack = [];
        this.xc = [];
        this.fillStyle = "#000000";
        this.font = "10px sans-serif";
        this.globalAlpha = 1;
        this.lineCap = "butt";
        this.lineDashOffset = 0;
        this.lineJoin = "miter";
        this.lineWidth = 1;
        this.miterLimit = 10;
        this.shadowBlur = 0;
        this.shadowColor = "rgba(0, 0, 0, 0)";
        this.shadowOffsetY = this.shadowOffsetX = 0;
        this.strokeStyle = "#000000";
        this.textAlign = "start";
        this.clipInsteadOfFill = !1;
        this.df = this.Gp = this.Fp = 0;
        this.uq = null;
        this.path = [];
        this.vu = !1;
        this.rh = null;
        this.sh = 0;
        this.Td = new Ul;
        Xl(this, 1, 0, 0, 1, 0, 0);
        var b = pb++,
            c = this.tb("clipPath", {
                id: "mainClip" + b
            });
        c.appendChild(this.tb("rect", {
            x: 0,
            y: 0,
            width: a.width,
            height: a.height
        }));
        this.Cu = c;
        this.yk.Ea.appendChild(c);
        this.xc[0].setAttributeNS(null, "clip-path", "url(#mainClip" + b + ")");
        this.jA = {}
    }
    t = Wl.prototype;
    t.reset = function () {
        this.stack = [];
        this.xc = [];
        this.fillStyle = "#000000";
        this.font = "10px sans-serif";
        this.globalAlpha = 1;
        this.lineCap = "butt";
        this.lineDashOffset = 0;
        this.lineJoin = "miter";
        this.lineWidth = 1;
        this.miterLimit = 10;
        this.shadowBlur = 0;
        this.shadowColor = "rgba(0, 0, 0, 0)";
        this.shadowOffsetY = this.shadowOffsetX = 0;
        this.strokeStyle = "#000000";
        this.textAlign = "start";
        this.clipInsteadOfFill = !1;
        this.df = this.Gp = this.Fp = 0;
        this.uq = null;
        this.path = [];
        this.Td = new Ul;
        Xl(this, 1, 0, 0, 1, 0, 0);
        var a = pb++,
            b = this.tb("clipPath", {
                id: "mainClip" + a
            });
        b.appendChild(this.tb("rect", {
            x: 0,
            y: 0,
            width: this.yk.width,
            height: this.yk.height
        }));
        this.Cu = b;
        this.yk.Ea.appendChild(b);
        this.xc[0].setAttributeNS(null, "clip-path", "url(#mainClip" + a + ")")
    };
    t.arc = function (a, b, c, d, e, f, g, h) {
        var k = 2 * Math.PI,
            l = k - 1E-6,
            m = c * Math.cos(d),
            n = c * Math.sin(d),
            p = a + m,
            r = b + n,
            q = f ? 0 : 1;
        d = f ? d - e : e - d;
        (1E-6 < Math.abs(g - p) || 1E-6 < Math.abs(h - r)) && this.path.push(["L", p, +r]);
        0 > d && (d = d % k + k);
        d > l ? (this.path.push(["A", c, c, 0, 1, q, a - m, b - n]), this.path.push(["A", c, c, 0, 1, q, p, r])) : 1E-6 < d && this.path.push(["A", c, c, 0, +(d >= Math.PI), q, a + c * Math.cos(e), b + c * Math.sin(e)])
    };
    t.beginPath = function () {
        this.path = []
    };
    t.bezierCurveTo = function (a, b, c, d, e, f) {
        this.path.push(["C", a, b, c, d, e, f])
    };
    t.clearRect = function () {};
    t.clip = function () {
        this.addPath("clipPath", this.path, this.Td);
        this.addPath("clipPath", this.path, new Ul)
    };
    t.closePath = function () {
        this.path.push(["z"])
    };
    t.createLinearGradient = function (a, b, c, d) {
        var e = new Vl("linear");
        e.x1 = a;
        e.y1 = b;
        e.x2 = c;
        e.y2 = d;
        return e
    };
    t.createPattern = function (a) {
        var b = "";
        a instanceof HTMLCanvasElement && (b = a.toDataURL());
        a instanceof HTMLImageElement && (b = a.getAttribute("src"));
        var c = this.jA;
        if (c[b]) return "url(#" + c[b] + ")";
        var d = "PATTERN" + pb++,
            e = {
                x: 0,
                y: 0,
                width: a.width,
                height: a.height,
                href: b
            };
        a = this.tb("pattern", {
            width: a.width,
            height: a.height,
            id: d,
            patternUnits: "userSpaceOnUse"
        });
        a.appendChild(this.tb("image", e));
        this.svg.appendChild(a);
        c[b] = d;
        return "url(#" + d + ")"
    };
    t.createRadialGradient = function (a, b, c, d, e, f) {
        var g = new Vl("radial");
        g.x1 = a;
        g.y1 = b;
        g.r1 = c;
        g.x2 = d;
        g.y2 = e;
        g.r2 = f;
        return g
    };
    t.drawImage = function (a, b, c, d, e, f, g, h, k) {
        var l = "";
        a instanceof HTMLCanvasElement && (l = a.toDataURL());
        a instanceof HTMLImageElement && (l = a.getAttribute("src"));
        var m = a instanceof HTMLImageElement ? a.naturalWidth : a.width,
            n = a instanceof HTMLImageElement ? a.naturalHeight : a.height;
        void 0 === d && (f = b, g = c, h = d = m, k = e = n);
        d = d || 0;
        e = e || 0;
        f = f || 0;
        g = g || 0;
        h = h || 0;
        k = k || 0;
        l = {
            x: 0,
            y: 0,
            width: m || d,
            height: n || e,
            href: l,
            preserveAspectRatio: "xMidYMid slice"
        };
        J.$(d, h) && J.$(e, k) || (l.preserveAspectRatio = "none");
        a = "";
        h /= d;
        k /= e;
        if (0 !== f ||
            0 !== g) a += " translate(" + f + ", " + g + ")";
        if (1 !== h || 1 !== k) a += " scale(" + h + ", " + k + ")";
        if (0 !== b || 0 !== c) a += " translate(" + -b + ", " + -c + ")";
        if (0 !== b || 0 !== c || d !== m || e !== n) f = "CLIP" + pb++, g = this.tb("clipPath", {
            id: f
        }), g.appendChild(this.tb("rect", {
            x: b,
            y: c,
            width: d,
            height: e
        })), this.svg.appendChild(g), l["clip-path"] = "url(#" + f + ")";
        Yl(this, "image", l, this.Td, a);
        this.addElement("image", l)
    };
    t.fill = function () {
        this.addPath("fill", this.path, this.Td)
    };
    t.Ud = function () {
        this.clipInsteadOfFill ? this.clip() : this.fill()
    };
    t.fillRect = function (a, b, c, d) {
        a = [a, b, c, d];
        a = {
            x: a[0],
            y: a[1],
            width: a[2],
            height: a[3]
        };
        Yl(this, "fill", a, this.Td);
        this.addElement("rect", a)
    };
    t.fillText = function (a, b, c) {
        a = [a, b, c];
        b = this.textAlign;
        "left" === b ? b = "start" : "right" === b ? b = "end" : "center" === b && (b = "middle");
        b = {
            x: a[1],
            y: a[2],
            style: "font: " + this.font,
            "text-anchor": b
        };
        Yl(this, "fill", b, this.Td);
        this.addElement("text", b, a[0])
    };
    t.lineTo = function (a, b) {
        this.path.push(["L", a, b])
    };
    t.moveTo = function (a, b) {
        this.path.push(["M", a, b])
    };
    t.quadraticCurveTo = function (a, b, c, d) {
        this.path.push(["Q", a, b, c, d])
    };
    t.rect = function (a, b, c, d) {
        this.path.push(["M", a, b], ["L", a + c, b], ["L", a + c, b + d], ["L", a, b + d], ["z"])
    };
    t.restore = function () {
        this.Td = this.stack.pop();
        this.path = this.stack.pop();
        var a = this.stack.pop();
        this.fillStyle = a.fillStyle;
        this.font = a.font;
        this.globalAlpha = a.globalAlpha;
        this.lineCap = a.lineCap;
        this.lineDashOffset = a.lineDashOffset;
        this.lineJoin = a.lineJoin;
        this.lineWidth = a.lineWidth;
        this.miterLimit = a.miterLimit;
        this.shadowBlur = a.shadowBlur;
        this.shadowColor = a.shadowColor;
        this.shadowOffsetX = a.shadowOffsetX;
        this.shadowOffsetY = a.shadowOffsetY;
        this.strokeStyle = a.strokeStyle;
        this.textAlign = a.textAlign
    };
    t.save = function () {
        this.stack.push({
            fillStyle: this.fillStyle,
            font: this.font,
            globalAlpha: this.globalAlpha,
            lineCap: this.lineCap,
            lineDashOffset: this.lineDashOffset,
            lineJoin: this.lineJoin,
            lineWidth: this.lineWidth,
            miterLimit: this.miterLimit,
            shadowBlur: this.shadowBlur,
            shadowColor: this.shadowColor,
            shadowOffsetX: this.shadowOffsetX,
            shadowOffsetY: this.shadowOffsetY,
            strokeStyle: this.strokeStyle,
            textAlign: this.textAlign
        });
        for (var a = [], b = 0; b < this.path.length; b++) a.push(this.path[b]);
        this.stack.push(a);
        this.stack.push(this.Td.copy())
    };
    t.setTransform = function (a, b, c, d, e, f) {
        1 === a && 0 === b && 0 === c && 1 === d && 0 === e && 0 === f || Xl(this, a, b, c, d, e, f)
    };
    t.scale = function (a, b) {
        this.Td.scale(a, b)
    };
    t.translate = function (a, b) {
        this.Td.translate(a, b)
    };
    t.transform = function () {};
    t.stroke = function () {
        this.addPath("stroke", this.path, this.Td)
    };
    t.fj = function () {
        this.clipInsteadOfFill || this.stroke()
    };
    t.tb = function (a, b, c) {
        return this.yk.tb(a, b, c)
    };
    t.addElement = function (a, b, c) {
        a = this.tb(a, b, c);
        0 < this.xc.length ? this.xc[this.xc.length - 1].appendChild(a) : this.svg.appendChild(a);
        return this.uq = a
    };

    function Yl(a, b, c, d, e) {
        1 !== a.globalAlpha && (c.opacity = a.globalAlpha);
        "fill" === b ? (a.fillStyle instanceof Vl ? c.fill = Zl(a, a.fillStyle) : (/^rgba\(/.test(a.fillStyle) && (b = /^\s*rgba\s*\(([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\)\s*$/i.exec(a.fillStyle), c.fill = "rgb(" + b[1] + "," + b[2] + "," + b[3] + ")", c["fill-opacity"] = b[4]), c.fill = a.fillStyle), c.stroke = "none") : "stroke" === b && (c.fill = "none", a.strokeStyle instanceof Vl ? c.stroke = Zl(a, a.strokeStyle) : (/^rgba\(/.test(a.strokeStyle) && (b = /^\s*rgba\s*\(([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\)\s*$/i.exec(a.strokeStyle),
            c.stroke = "rgb(" + b[1] + "," + b[2] + "," + b[3] + ")", c["stroke-opacity"] = b[4]), c.stroke = a.strokeStyle), c["stroke-width"] = a.lineWidth, c["stroke-linecap"] = a.lineCap, c["stroke-linejoin"] = a.lineJoin, c["stroke-miterlimit"] = a.miterLimit);
        a = d.Ka;
        a = "matrix(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + a[3] + ", " + a[4] + ", " + a[5] + ")";
        void 0 !== e && (a += e);
        c.transform = a
    }

    function Zl(a, b) {
        var c = "GRAD" + pb++;
        if ("linear" === b.type) var d = a.tb("linearGradient", {
            x1: b.x1,
            x2: b.x2,
            y1: b.y1,
            y2: b.y2,
            id: c,
            gradientUnits: "userSpaceOnUse"
        });
        else if ("radial" === b.type) d = a.tb("radialGradient", {
            x1: b.x1,
            x2: b.x2,
            y1: b.y1,
            y2: b.y2,
            r1: b.r1,
            r2: b.r2,
            id: c
        });
        else throw Error("invalid gradient");
        var e = b.zx;
        b = e.length;
        for (var f = [], g = 0; g < b; g++) {
            var h = e[g],
                k = h.color;
            h = {
                offset: h.offset,
                "stop-color": k
            };
            /^rgba\(/.test(k) && (k = /^\s*rgba\s*\(([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\)\s*$/i.exec(k),
                h["stop-color"] = "rgb(" + k[1] + "," + k[2] + "," + k[3] + ")", h["stop-opacity"] = k[4]);
            f.push(h)
        }
        f.sort(function (a, b) {
            return a.offset > b.offset ? 1 : -1
        });
        for (e = 0; e < b; e++) d.appendChild(a.tb("stop", f[e]));
        a.svg.appendChild(d);
        return "url(#" + c + ")"
    }
    t.addPath = function (a, b, c) {
        for (var d = [], e = 0; e < b.length; e++) {
            var f = Ba(b[e]),
                g = [f.shift()];
            if ("A" === g[0]) g.push(f.shift() + "," + f.shift(), f.shift(), f.shift() + "," + f.shift(), f.shift() + "," + f.shift());
            else
                for (; f.length;) g.push(f.shift() + "," + f.shift());
            d.push(g.join(" "))
        }
        b = {
            d: d.join(" ")
        };
        "stroke" === a && this.vu && (b["stroke-dasharray"] = this.rh.toString(), b["stroke-dashoffset"] = this.sh);
        Yl(this, a, b, c);
        "clipPath" === a ? (a = "CLIP" + pb++, c = this.tb("clipPath", {
                id: a
            }), c.appendChild(this.tb("path", b)), this.svg.appendChild(c),
            0 < this.xc.length && this.xc[this.xc.length - 1].setAttributeNS(null, "clip-path", "url(#" + a + ")")) : this.addElement("path", b)
    };

    function Xl(a, b, c, d, e, f, g) {
        var h = new Ul;
        h.Ka = [b, c, d, e, f, g];
        b = {};
        Yl(a, "g", b, h);
        h = a.addElement("g", b);
        a.xc.push(h)
    }
    t.Lq = function () {
        if (0 !== this.shadowOffsetX || 0 !== this.shadowOffsetY || 0 !== this.shadowBlur) {
            var a = "SHADOW" + pb++,
                b = this.addElement("filter", {
                    id: a,
                    x: "-100%",
                    y: "-100%",
                    width: "300%",
                    height: "300%"
                }, null);
            var c = this.tb("feGaussianBlur", {
                "in": "SourceAlpha",
                result: "blur",
                KA: this.shadowBlur / 2
            });
            var d = this.tb("feFlood", {
                "in": "blur",
                result: "flood",
                "flood-color": this.shadowColor
            });
            var e = this.tb("feComposite", {
                "in": "flood",
                in2: "blur",
                operator: "in",
                result: "comp"
            });
            var f = this.tb("feOffset", {
                "in": "comp",
                result: "offsetBlur",
                dx: this.shadowOffsetX,
                dy: this.shadowOffsetY
            });
            var g = this.tb("feMerge", {});
            g.appendChild(this.tb("feMergeNode", {
                "in": "offsetBlur"
            }));
            g.appendChild(this.tb("feMergeNode", {
                "in": "SourceGraphic"
            }));
            b.appendChild(c);
            b.appendChild(d);
            b.appendChild(e);
            b.appendChild(f);
            b.appendChild(g);
            0 < this.xc.length && this.xc[this.xc.length - 1].setAttributeNS(null, "filter", "url(#" + a + ")")
        }
    };
    t.jw = function (a, b, c) {
        this.Fp = a;
        this.Gp = b;
        this.df = c
    };

    function sl(a) {
        a.shadowOffsetX = 0;
        a.shadowOffsetY = 0;
        a.shadowBlur = 0
    }

    function rl(a) {
        a.shadowOffsetX = a.Fp;
        a.shadowOffsetY = a.Gp;
        a.shadowBlur = a.df
    }
    t.ht = function (a, b) {
        this.vu = !0;
        this.rh = a;
        this.sh = b
    };
    t.ft = function () {
        this.vu = !1
    };
    t.sc = function () {};
    t.ky = function () {};
    Wl.prototype.rotate = function () {};
    Wl.prototype.getImageData = function () {
        return null
    };
    Wl.prototype.measureText = function () {
        return null
    };
    Wl.className = "SVGContext";
    R.prototype.At = function (a) {
        var b = new Aj(this, x.document);
        void 0 === a && (a = new db);
        var c = this;
        return Ak(this, function (a, e) {
            a = Bk(c, a, "SVG", b);
            a = null !== a ? a.svg : null;
            return "function" === typeof e ? (e(a), null) : a
        }, a)
    };
    R.prototype.makeSvg = R.prototype.At;
    R.prototype.Kv = function (a) {
        return this.At(a)
    };
    R.prototype.makeSVG = R.prototype.Kv;
    Y.prototype.Gx = function (a, b) {
        if (!(a instanceof Wl)) return !1;
        if (!this.visible) return !0;
        var c = null,
            d = a.uq;
        if (this instanceof X && (this.type === X.TableRow || this.type === X.TableColumn)) return pl(this, a, b), !0;
        var e = this.ub;
        if (0 === e.width || 0 === e.height || isNaN(e.x) || isNaN(e.y)) return !0;
        var f = this.transform,
            g = this.panel;
        0 !== (this.F & 4096) === !0 && ql(this);
        var h = 0 !== (this.F & 256),
            k = !1;
        this instanceof Wg && (a.font = this.font);
        if (h) {
            k = g.$d() ? g.naturalBounds : g.actualBounds;
            if (null !== this.ld) {
                var l = this.ld;
                var m = l.x;
                var n =
                    l.y;
                var p = l.width;
                l = l.height
            } else m = Math.max(e.x, k.x), n = Math.max(e.y, k.y), p = Math.min(e.right, k.right) - m, l = Math.min(e.bottom, k.bottom) - n;
            if (m > e.width + e.x || e.x > k.width + k.x || n > e.height + e.y || e.y > k.height + k.y) return !0;
            k = !0;
            Xl(a, 1, 0, 0, 1, 0, 0);
            a.save();
            a.beginPath();
            a.rect(m, n, p, l);
            a.clip()
        }
        if (this.xf() && !this.isVisible()) return !0;
        a.Td.Ka = [1, 0, 0, 1, 0, 0];
        (this instanceof Wg && 1 < this.lineCount || this instanceof Lf && 1 < this.geometry.figures.length) && Xl(a, 1, 0, 0, 1, 0, 0);
        m = !1;
        this.xf() && this.isShadowed && b.Be("drawShadows") &&
            (n = this.shadowOffset, a.jw(n.x * b.scale * b.Sb, n.y * b.scale * b.Sb, this.shadowBlur), rl(a), a.shadowColor = this.shadowColor);
        n = !1;
        this.part && b.Be("drawShadows") && (n = this.part.isShadowed);
        !0 === this.shadowVisible ? (rl(a), !1 === m && n && (Xl(a, 1, 0, 0, 1, 0, 0), a.Lq(), m = !0)) : !1 === this.shadowVisible && sl(a);
        p = this.naturalBounds;
        null !== this.areaBackground && (ii(this, a, this.areaBackground, !0, !0, p, e), !1 === m && n && (Xl(a, 1, 0, 0, 1, 0, 0), a.Lq(), m = !0), this.areaBackground instanceof tl && this.areaBackground.type === ul ? (a.beginPath(), a.rect(e.x,
            e.y, e.width, e.height), a.Ud(this.areaBackground)) : a.fillRect(e.x, e.y, e.width, e.height));
        this instanceof X ? Xl(a, f.m11, f.m12, f.m21, f.m22, f.dx, f.dy) : a.Td.Ka = [f.m11, f.m12, f.m21, f.m22, f.dx, f.dy];
        if (null !== this.background) {
            !1 === m && n && (Xl(a, 1, 0, 0, 1, 0, 0), a.Lq(), m = !0);
            var r = this.naturalBounds;
            l = f = 0;
            var q = r.width;
            r = r.height;
            var u = 0;
            this instanceof Lf && (r = this.geometry.bounds, f = r.x, l = r.y, q = r.width, r = r.height, u = this.strokeWidth);
            ii(this, a, this.background, !0, !1, p, e);
            this.background instanceof tl && this.background.type ===
                ul ? (a.beginPath(), a.rect(f - u / 2, l - u / 2, q + u, r + u), a.Ud(this.background)) : a.fillRect(f - u / 2, l - u / 2, q + u, r + u)
        }
        n && (null !== this.background || null !== this.areaBackground || null !== g && 0 !== (g.F & 512) || null !== g && (g.type === X.Auto || g.type === X.Spot) && g.zb() !== this) ? (vl(this, !0), null === this.shadowVisible && sl(a)) : vl(this, !1);
        this.Qi(a, b);
        n && 0 !== (this.F & 512) === !0 && rl(a);
        this.xf() && n && sl(a);
        h && (a.restore(), k && a.xc.pop());
        this instanceof X && (c = a.xc.pop());
        !0 === m && a.xc.pop();
        if (this instanceof Wg && 1 < this.lineCount || this instanceof Lf && 1 < this.geometry.figures.length) c = a.xc.pop();
        null !== a.yk.jq && (null === c && (d === a.uq ? (Xl(a, 1, 0, 0, 1, 0, 0), c = a.xc.pop()) : c = a.uq), a.yk.jq(this, c));
        this.svg = c;
        return !0
    };

    function Ck(a, b) {
        this.ownerDocument = b = void 0 === b ? x.document : b;
        this.jq = null;
        b = b.createElement("canvas");
        b.tabIndex = 0;
        this.Ea = b;
        this.Ea.innerHTML = "This text is displayed if your browser does not support the Canvas HTML element.";
        this.context = new xl(b);
        b.B = a
    }
    Ck.prototype.resize = function (a, b, c, d) {
        return this.width !== a || this.height !== b ? (this.width = a, this.height = b, this.style.width = c + "px", this.style.height = d + "px", !0) : !1
    };
    Ck.prototype.toDataURL = function (a, b) {
        return this.Ea.toDataURL(a, b)
    };
    Ck.prototype.getBoundingClientRect = function () {
        return this.Ea.getBoundingClientRect()
    };
    Ck.prototype.focus = function () {
        this.Ea.focus()
    };
    Ck.prototype.Fx = function () {
        this.ownerDocument = this.Ea.B = null
    };
    ma.Object.defineProperties(Ck.prototype, {
        width: {
            get: function () {
                return this.Ea.width
            },
            set: function (a) {
                this.Ea.width = a
            }
        },
        height: {
            get: function () {
                return this.Ea.height
            },
            set: function (a) {
                this.Ea.height = a
            }
        },
        style: {
            get: function () {
                return this.Ea.style
            }
        }
    });
    Ck.className = "CanvasSurface";

    function xl(a) {
        a.getContext && a.getContext("2d") || B("Browser does not support HTML Canvas Element");
        this.V = a.getContext("2d");
        this.Yt = this.$t = this.Zt = "";
        this.fn = !1;
        this.df = this.Gp = this.Fp = 0
    }
    t = xl.prototype;
    t.ky = function (a) {
        this.V.imageSmoothingEnabled = a
    };
    t.arc = function (a, b, c, d, e, f) {
        this.V.arc(a, b, c, d, e, f)
    };
    t.beginPath = function () {
        this.V.beginPath()
    };
    t.bezierCurveTo = function (a, b, c, d, e, f) {
        this.V.bezierCurveTo(a, b, c, d, e, f)
    };
    t.clearRect = function (a, b, c, d) {
        this.V.clearRect(a, b, c, d)
    };
    t.clip = function () {
        this.V.clip()
    };
    t.closePath = function () {
        this.V.closePath()
    };
    t.createLinearGradient = function (a, b, c, d) {
        return this.V.createLinearGradient(a, b, c, d)
    };
    t.createPattern = function (a, b) {
        return this.V.createPattern(a, b)
    };
    t.createRadialGradient = function (a, b, c, d, e, f) {
        return this.V.createRadialGradient(a, b, c, d, e, f)
    };
    t.drawImage = function (a, b, c, d, e, f, g, h, k) {
        void 0 === d ? this.V.drawImage(a, b, c) : this.V.drawImage(a, b, c, d, e, f, g, h, k)
    };
    t.fill = function () {
        this.V.fill()
    };
    t.fillRect = function (a, b, c, d) {
        this.V.fillRect(a, b, c, d)
    };
    t.fillText = function (a, b, c) {
        this.V.fillText(a, b, c)
    };
    t.getImageData = function (a, b, c, d) {
        return this.V.getImageData(a, b, c, d)
    };
    t.lineTo = function (a, b) {
        this.V.lineTo(a, b)
    };
    t.measureText = function (a) {
        return this.V.measureText(a)
    };
    t.moveTo = function (a, b) {
        this.V.moveTo(a, b)
    };
    t.quadraticCurveTo = function (a, b, c, d) {
        this.V.quadraticCurveTo(a, b, c, d)
    };
    t.rect = function (a, b, c, d) {
        this.V.rect(a, b, c, d)
    };
    t.restore = function () {
        this.V.restore()
    };
    xl.prototype.rotate = function (a) {
        this.V.rotate(a)
    };
    t = xl.prototype;
    t.save = function () {
        this.V.save()
    };
    t.setTransform = function (a, b, c, d, e, f) {
        this.V.setTransform(a, b, c, d, e, f)
    };
    t.scale = function (a, b) {
        this.V.scale(a, b)
    };
    t.stroke = function () {
        this.V.stroke()
    };
    t.transform = function (a, b, c, d, e, f) {
        1 === a && 0 === b && 0 === c && 1 === d && 0 === e && 0 === f || this.V.transform(a, b, c, d, e, f)
    };
    t.translate = function (a, b) {
        this.V.translate(a, b)
    };
    t.Ud = function (a) {
        if (a instanceof tl && a.type === ul) {
            var b = a.Mk;
            a = a.au;
            a > b ? (this.scale(b / a, 1), this.translate((a - b) / 2, 0)) : b > a && (this.scale(1, a / b), this.translate(0, (b - a) / 2));
            this.fn ? this.clip() : this.fill();
            a > b ? (this.translate(-(a - b) / 2, 0), this.scale(1 / (b / a), 1)) : b > a && (this.translate(0, -(b - a) / 2), this.scale(1, 1 / (a / b)))
        } else this.fn ? this.clip() : this.fill()
    };
    t.fj = function () {
        this.fn || this.stroke()
    };
    t.jw = function (a, b, c) {
        this.Fp = a;
        this.Gp = b;
        this.df = c
    };
    t.ht = function (a, b) {
        var c = this.V;
        void 0 !== c.setLineDash && (c.setLineDash(a), c.lineDashOffset = b)
    };
    t.ft = function () {
        var a = this.V;
        void 0 !== a.setLineDash && (a.setLineDash($l), a.lineDashOffset = 0)
    };
    t.sc = function (a) {
        a && (this.Zt = "");
        this.Yt = this.$t = ""
    };
    ma.Object.defineProperties(xl.prototype, {
        fillStyle: {
            get: function () {
                return this.V.fillStyle
            },
            set: function (a) {
                this.Yt !== a && (this.Yt = this.V.fillStyle = a)
            }
        },
        font: {
            get: function () {
                return this.V.font
            },
            set: function (a) {
                this.Zt !== a && (this.Zt = this.V.font = a)
            }
        },
        globalAlpha: {
            get: function () {
                return this.V.globalAlpha
            },
            set: function (a) {
                this.V.globalAlpha = a
            }
        },
        lineCap: {
            get: function () {
                return this.V.lineCap
            },
            set: function (a) {
                this.V.lineCap = a
            }
        },
        lineDashOffset: {
            get: function () {
                return this.V.lineDashOffset
            },
            set: function (a) {
                this.V.lineDashOffset = a
            }
        },
        lineJoin: {
            get: function () {
                return this.V.lineJoin
            },
            set: function (a) {
                this.V.lineJoin = a
            }
        },
        lineWidth: {
            get: function () {
                return this.V.lineWidth
            },
            set: function (a) {
                this.V.lineWidth = a
            }
        },
        miterLimit: {
            get: function () {
                return this.V.miterLimit
            },
            set: function (a) {
                this.V.miterLimit =
                    a
            }
        },
        shadowBlur: {
            get: function () {
                return this.V.shadowBlur
            },
            set: function (a) {
                this.V.shadowBlur = a
            }
        },
        shadowColor: {
            get: function () {
                return this.V.shadowColor
            },
            set: function (a) {
                this.V.shadowColor = a
            }
        },
        shadowOffsetX: {
            get: function () {
                return this.V.shadowOffsetX
            },
            set: function (a) {
                this.V.shadowOffsetX = a
            }
        },
        shadowOffsetY: {
            get: function () {
                return this.V.shadowOffsetY
            },
            set: function (a) {
                this.V.shadowOffsetY =
                    a
            }
        },
        strokeStyle: {
            get: function () {
                return this.V.strokeStyle
            },
            set: function (a) {
                this.$t !== a && (this.$t = this.V.strokeStyle = a)
            }
        },
        textAlign: {
            get: function () {
                return this.V.textAlign
            },
            set: function (a) {
                this.V.textAlign = a
            }
        },
        imageSmoothingEnabled: {
            get: function () {
                return this.V.imageSmoothingEnabled
            },
            set: function (a) {
                this.V.imageSmoothingEnabled = a
            }
        },
        clipInsteadOfFill: {
            get: function () {
                return this.fn
            },
            set: function (a) {
                this.fn = a
            }
        }
    });
    var $l = Object.freeze([]);
    xl.className = "CanvasSurfaceContext";

    function am() {
        this.Y = this.u = this.I = this.l = 0
    }
    am.className = "ColorNumbers";

    function tl(a) {
        bm || (cm(), bm = !0);
        Ya(this);
        this.s = !1;
        void 0 === a ? (this.pa = wl, this.Lk = "black") : "string" === typeof a ? (this.pa = wl, this.Lk = a) : (this.pa = a, this.Lk = "black");
        a = this.pa;
        a === zl ? (this.td = xc, this.Yk = Fc) : this.Yk = a === ul ? this.td = Ac : this.td = uc;
        this.Os = 0;
        this.Br = NaN;
        this.ce = this.rs = this.be = null;
        this.au = this.Mk = 0
    }
    tl.prototype.copy = function () {
        var a = new tl;
        a.pa = this.pa;
        a.Lk = this.Lk;
        a.td = this.td.G();
        a.Yk = this.Yk.G();
        a.Os = this.Os;
        a.Br = this.Br;
        null !== this.be && (a.be = this.be.copy());
        a.rs = this.rs;
        return a
    };
    t = tl.prototype;
    t.freeze = function () {
        this.s = !0;
        null !== this.be && this.be.freeze();
        return this
    };
    t.ea = function () {
        Object.isFrozen(this) && B("cannot thaw constant: " + this);
        this.s = !1;
        null !== this.be && this.be.ea();
        return this
    };
    t.cb = function (a) {
        a.classType === tl && (this.type = a)
    };
    t.toString = function () {
        var a = "Brush(";
        if (this.type === wl) a += this.color;
        else if (a = this.type === zl ? a + "Linear " : this.type === ul ? a + "Radial " : this.type === yl ? a + "Pattern " : a + "(unknown) ", a += this.start + " " + this.end, null !== this.colorStops)
            for (var b = this.colorStops.iterator; b.next();) a += " " + b.key + ":" + b.value;
        return a + ")"
    };
    t.addColorStop = function (a, b) {
        this.s && ua(this);
        ("number" !== typeof a || !isFinite(a) || 1 < a || 0 > a) && va(a, "0 <= loc <= 1", tl, "addColorStop:loc");
        null === this.be && (this.be = new H);
        this.be.add(a, b);
        this.pa === wl && (this.type = zl);
        this.ce = null;
        return this
    };
    t.bA = function (a, b) {
        this.s && ua(this);
        a = void 0 === a || "number" !== typeof a ? .2 : a;
        b = void 0 === b ? dm : b;
        if (this.type === wl) Qh(this.color), this.color = em(a, b);
        else if ((this.type === zl || this.type === ul) && null !== this.colorStops)
            for (var c = this.colorStops.iterator; c.next();) Qh(c.value), this.addColorStop(c.key, em(a, b));
        return this
    };

    function fm(a, b, c) {
        b = void 0 === b || "number" !== typeof b ? .2 : b;
        c = void 0 === c ? dm : c;
        Qh(a);
        return em(b, c)
    }
    t.Yy = function (a, b) {
        this.s && ua(this);
        a = void 0 === a || "number" !== typeof a ? .2 : a;
        b = void 0 === b ? dm : b;
        if (this.type === wl) Qh(this.color), this.color = em(-a, b);
        else if ((this.type === zl || this.type === ul) && null !== this.colorStops)
            for (var c = this.colorStops.iterator; c.next();) Qh(c.value), this.addColorStop(c.key, em(-a, b));
        return this
    };

    function gm(a, b, c) {
        b = void 0 === b || "number" !== typeof b ? .2 : b;
        c = void 0 === c ? dm : c;
        Qh(a);
        return em(-b, c)
    }

    function hm(a, b, c) {
        Qh(a);
        a = im.l;
        var d = im.I,
            e = im.u,
            f = im.Y;
        Qh(b);
        void 0 === c && (c = .5);
        return "rgba(" + Math.round((im.l - a) * c + a) + ", " + Math.round((im.I - d) * c + d) + ", " + Math.round((im.u - e) * c + e) + ", " + Math.round((im.Y - f) * c + f) + ")"
    }
    t.Tx = function () {
        if (this.type === wl) return jm(this.color);
        if ((this.type === zl || this.type === ul) && null !== this.colorStops) {
            var a = this.colorStops;
            if (this.type === ul) return jm(a.first().value);
            if (null !== a.get(.5)) return jm(a.get(.5));
            if (2 === a.count) return a = a.na(), jm(hm(a[0].value, a[1].value));
            for (var b = a.iterator, c = -1, d = -1, e = 1, f = 1; b.next();) {
                var g = b.key,
                    h = Math.abs(.5 - b.key);
                e > f && h < e ? (c = g, e = h) : f >= e && h < f && (d = g, f = h)
            }
            c > d && (f = c, c = d, d = f, f = e);
            e = d - c;
            return jm(hm(a.get(c), a.get(d), 1 - f / e))
        }
        return !1
    };

    function jm(a) {
        if (null === a) return null;
        if (a instanceof tl) return a.Tx();
        Qh(a);
        return 128 > (299 * im.l + 587 * im.I + 114 * im.u) / 1E3
    }

    function em(a, b) {
        switch (b) {
            case dm:
                b = 100 * km(im.l);
                var c = 100 * km(im.I),
                    d = 100 * km(im.u);
                lm.l = .4124564 * b + .3575761 * c + .1804375 * d;
                lm.I = .2126729 * b + .7151522 * c + .072175 * d;
                lm.u = .0193339 * b + .119192 * c + .9503041 * d;
                lm.Y = im.Y;
                b = mm(lm.l / nm[0]);
                c = mm(lm.I / nm[1]);
                d = mm(lm.u / nm[2]);
                om.l = 116 * c - 16;
                om.I = 500 * (b - c);
                om.u = 200 * (c - d);
                om.Y = lm.Y;
                om.l = Math.min(100, Math.max(0, om.l + 100 * a));
                a = (om.l + 16) / 116;
                b = a - om.u / 200;
                lm.l = nm[0] * pm(om.I / 500 + a);
                lm.I = nm[1] * (om.l > qm * rm ? Math.pow(a, 3) : om.l / qm);
                lm.u = nm[2] * pm(b);
                lm.Y = om.Y;
                a = -.969266 * lm.l + 1.8760108 *
                    lm.I + .041556 * lm.u;
                b = .0556434 * lm.l + -.2040259 * lm.I + 1.0572252 * lm.u;
                im.l = 255 * sm((3.2404542 * lm.l + -1.5371385 * lm.I + -.4985314 * lm.u) / 100);
                im.I = 255 * sm(a / 100);
                im.u = 255 * sm(b / 100);
                im.Y = lm.Y;
                im.l = Math.round(im.l);
                255 < im.l ? im.l = 255 : 0 > im.l && (im.l = 0);
                im.I = Math.round(im.I);
                255 < im.I ? im.I = 255 : 0 > im.I && (im.I = 0);
                im.u = Math.round(im.u);
                255 < im.u ? im.u = 255 : 0 > im.u && (im.u = 0);
                return "rgba(" + im.l + ", " + im.I + ", " + im.u + ", " + im.Y + ")";
            case tm:
                return Rh(), Sh.u = Math.min(100, Math.max(0, Sh.u + 100 * a)), "hsla(" + Sh.l + ", " + Sh.I + "%, " + Sh.u + "%, " +
                    Sh.Y + ")";
            default:
                return B("Unknown color space: " + b), "rgba(0, 0, 0, 1)"
        }
    }

    function Qh(a) {
        bm || (cm(), bm = !0);
        var b = um;
        if (null !== b) {
            b.clearRect(0, 0, 1, 1);
            b.fillStyle = "#000000";
            var c = b.fillStyle;
            b.fillStyle = a;
            b.fillStyle !== c ? (b.fillRect(0, 0, 1, 1), a = b.getImageData(0, 0, 1, 1).data, im.l = a[0], im.I = a[1], im.u = a[2], im.Y = a[3] / 255) : (b.fillStyle = "#FFFFFF", b.fillStyle = a, im.l = 0, im.I = 0, im.u = 0, im.Y = 1)
        }
    }

    function Rh() {
        var a = im.l / 255,
            b = im.I / 255,
            c = im.u / 255,
            d = Math.max(a, b, c),
            e = Math.min(a, b, c),
            f = d - e;
        e = (d + e) / 2;
        if (0 === f) var g = a = 0;
        else {
            switch (d) {
                case a:
                    g = (b - c) / f % 6;
                    break;
                case b:
                    g = (c - a) / f + 2;
                    break;
                case c:
                    g = (a - b) / f + 4
            }
            g *= 60;
            0 > g && (g += 360);
            a = f / (1 - Math.abs(2 * e - 1))
        }
        Sh.l = Math.round(g);
        Sh.I = Math.round(100 * a);
        Sh.u = Math.round(100 * e);
        Sh.Y = im.Y
    }

    function km(a) {
        a /= 255;
        return .04045 >= a ? a / 12.92 : Math.pow((a + .055) / 1.055, 2.4)
    }

    function sm(a) {
        return .0031308 >= a ? 12.92 * a : 1.055 * Math.pow(a, 1 / 2.4) - .055
    }

    function mm(a) {
        return a > rm ? Math.pow(a, 1 / 3) : (qm * a + 16) / 116
    }

    function pm(a) {
        var b = a * a * a;
        return b > rm ? b : (116 * a - 16) / qm
    }

    function Rl(a, b) {
        "string" !== typeof a && (a instanceof tl || B("Value for " + b + " must be a color string or a Brush, not " + a))
    }

    function cm() {
        um = Ug ? (new Ck(null)).context : null
    }
    ma.Object.defineProperties(tl.prototype, {
        type: {
            get: function () {
                return this.pa
            },
            set: function (a) {
                this.s && ua(this, a);
                this.pa = a;
                this.start.jc() && (a === zl ? this.start = xc : a === ul && (this.start = Ac));
                this.end.jc() && (a === zl ? this.end = Fc : a === ul && (this.end = Ac));
                this.ce = null
            }
        },
        color: {
            get: function () {
                return this.Lk
            },
            set: function (a) {
                this.s && ua(this, a);
                this.Lk = a;
                this.ce = null
            }
        },
        start: {
            get: function () {
                return this.td
            },
            set: function (a) {
                this.s &&
                    ua(this, a);
                this.td = a.G();
                this.ce = null
            }
        },
        end: {
            get: function () {
                return this.Yk
            },
            set: function (a) {
                this.s && ua(this, a);
                this.Yk = a.G();
                this.ce = null
            }
        },
        startRadius: {
            get: function () {
                return this.Os
            },
            set: function (a) {
                this.s && ua(this, a);
                0 > a && va(a, ">= zero", tl, "startRadius");
                this.Os = a;
                this.ce = null
            }
        },
        endRadius: {
            get: function () {
                return this.Br
            },
            set: function (a) {
                this.s && ua(this, a);
                0 > a && va(a, ">= zero", tl, "endRadius");
                this.Br = a;
                this.ce =
                    null
            }
        },
        colorStops: {
            get: function () {
                return this.be
            },
            set: function (a) {
                this.s && ua(this, a);
                this.be = a;
                this.ce = null
            }
        },
        pattern: {
            get: function () {
                return this.rs
            },
            set: function (a) {
                this.s && ua(this, a);
                this.rs = a;
                this.ce = null
            }
        }
    });
    tl.prototype.isDark = tl.prototype.Tx;
    tl.prototype.darkenBy = tl.prototype.Yy;
    tl.prototype.lightenBy = tl.prototype.bA;
    tl.prototype.addColorStop = tl.prototype.addColorStop;
    var rm = 216 / 24389,
        qm = 24389 / 27,
        nm = [95.047, 100, 108.883],
        um = null,
        im = new am,
        Sh = new am,
        lm = new am,
        om = new am,
        bm = !1;
    tl.className = "Brush";
    var wl;
    tl.Solid = wl = new D(tl, "Solid", 0);
    var zl;
    tl.Linear = zl = new D(tl, "Linear", 1);
    var ul;
    tl.Radial = ul = new D(tl, "Radial", 2);
    var yl;
    tl.Pattern = yl = new D(tl, "Pattern", 4);
    var dm;
    tl.Lab = dm = new D(tl, "Lab", 5);
    var tm;
    tl.HSL = tm = new D(tl, "HSL", 6);
    tl.randomColor = function (a, b) {
        void 0 === a && (a = 128);
        void 0 === b && (b = Math.max(a, 255));
        var c = Math.abs(b - a);
        b = Math.floor(a + Math.random() * c).toString(16);
        var d = Math.floor(a + Math.random() * c).toString(16);
        a = Math.floor(a + Math.random() * c).toString(16);
        2 > b.length && (b = "0" + b);
        2 > d.length && (d = "0" + d);
        2 > a.length && (a = "0" + a);
        return "#" + b + d + a
    };
    tl.isValidColor = function (a) {
        if ("black" === a) return !0;
        if ("" === a) return !1;
        bm || (cm(), bm = !0);
        var b = um;
        if (null === b) return !0;
        b.fillStyle = "#000000";
        var c = b.fillStyle;
        b.fillStyle = a;
        if (b.fillStyle !== c) return !0;
        b.fillStyle = "#FFFFFF";
        c = b.fillStyle;
        b.fillStyle = a;
        return b.fillStyle !== c
    };
    tl.lighten = function (a) {
        return fm(a)
    };
    tl.lightenBy = fm;
    tl.darken = function (a) {
        return gm(a)
    };
    tl.darkenBy = gm;
    tl.mix = hm;
    tl.isDark = jm;

    function Ol() {
        this.name = "Base"
    }
    Ol.prototype.measure = function () {};
    Ol.prototype.eA = function (a, b, c, d, e) {
        a.measure(b, c, d, e)
    };
    Ol.prototype.arrange = function () {};
    Ol.prototype.Oy = function (a, b, c, d, e, f) {
        a.arrange(b, c, d, e, f)
    };
    Ol.prototype.bc = function () {};
    ma.Object.defineProperties(Ol.prototype, {
        classType: {
            get: function () {
                return X
            }
        }
    });
    Ol.prototype.arrangeElement = Ol.prototype.Oy;
    Ol.prototype.measureElement = Ol.prototype.eA;
    Ol.className = "PanelLayout";

    function vm() {
        this.name = "Base";
        this.name = "Position"
    }
    la(vm, Ol);
    vm.prototype.measure = function (a, b, c, d, e, f, g) {
        var h = d.length;
        a = wm(a);
        for (var k = 0; k < h; k++) {
            var l = d[k];
            if (l.visible || l === a) {
                var m = l.margin,
                    n = m.right + m.left;
                m = m.top + m.bottom;
                l.measure(b, c, f, g);
                var p = l.measuredBounds;
                n = Math.max(p.width + n, 0);
                m = Math.max(p.height + m, 0);
                p = l.position.x;
                var r = l.position.y;
                isFinite(p) || (p = 0);
                isFinite(r) || (r = 0);
                l instanceof Lf && l.isGeometryPositioned && (l = l.strokeWidth / 2, p -= l, r -= l);
                ec(e, p, r, n, m)
            }
        }
    };
    vm.prototype.arrange = function (a, b, c) {
        var d = b.length,
            e = a.padding;
        a = c.x - e.left;
        c = c.y - e.top;
        for (e = 0; e < d; e++) {
            var f = b[e],
                g = f.measuredBounds,
                h = f.margin,
                k = f.position.x,
                l = f.position.y;
            k = isNaN(k) ? -a : k - a;
            l = isNaN(l) ? -c : l - c;
            if (f instanceof Lf && f.isGeometryPositioned) {
                var m = f.strokeWidth / 2;
                k -= m;
                l -= m
            }
            f.visible && f.arrange(k + h.left, l + h.top, g.width, g.height)
        }
    };

    function xm() {
        this.name = "Base";
        this.name = "Horizontal"
    }
    la(xm, Ol);
    xm.prototype.measure = function (a, b, c, d, e, f, g) {
        var h = d.length;
        b = Fa();
        f = wm(a);
        for (var k = 0; k < h; k++) {
            var l = d[k];
            if (l.visible || l === f) {
                var m = kl(l, !1);
                if (m !== zg && m !== Wk) b.push(l);
                else {
                    l.measure(Infinity, c, 0, g);
                    m = l.margin;
                    l = l.measuredBounds;
                    var n = Math.max(l.height + m.top + m.bottom, 0);
                    e.width += Math.max(l.width + m.right + m.left, 0);
                    e.height = Math.max(e.height, n)
                }
            }
        }
        d = b.length;
        a.desiredSize.height ? c = Math.min(a.desiredSize.height, a.maxSize.height) : 0 !== e.height && (c = Math.min(e.height, a.maxSize.height));
        for (a = 0; a < d; a++)
            if (k =
                b[a], k.visible || k === f) m = k.margin, h = m.right + m.left, m = m.top + m.bottom, k.measure(Infinity, c, 0, g), k = k.measuredBounds, m = Math.max(k.height + m, 0), e.width += Math.max(k.width + h, 0), e.height = Math.max(e.height, m);
        Ha(b)
    };
    xm.prototype.arrange = function (a, b, c) {
        for (var d = b.length, e = a.padding, f = e.top, g = a.isOpposite, h = g ? c.width : e.left, k = 0; k < d; k++) {
            var l = f,
                m = b[k];
            if (m.visible) {
                var n = m.measuredBounds,
                    p = m.margin,
                    r = p.top + p.bottom,
                    q = f + e.bottom,
                    u = n.height,
                    v = kl(m, !1);
                if (isNaN(m.desiredSize.height) && v === vd || v === Xk) u = Math.max(c.height - r - q, 0);
                r = u + r + q;
                q = m.alignment;
                q.Mb() && (q = a.defaultAlignment);
                q.eb() || (q = Ac);
                g && (h -= n.width + p.left + p.right);
                m.arrange(h + q.offsetX + p.left, l + q.offsetY + p.top + (c.height * q.y - r * q.y), n.width, u);
                g || (h += n.width +
                    p.left + p.right)
            }
        }
    };

    function ym() {
        this.name = "Base";
        this.name = "Vertical"
    }
    la(ym, Ol);
    ym.prototype.measure = function (a, b, c, d, e, f) {
        var g = d.length;
        c = Fa();
        for (var h = wm(a), k = 0; k < g; k++) {
            var l = d[k];
            if (l.visible || l === h) {
                var m = kl(l, !1);
                if (m !== zg && m !== Xk) c.push(l);
                else {
                    var n = l.margin;
                    m = n.right + n.left;
                    n = n.top + n.bottom;
                    l.measure(b, Infinity, f, 0);
                    l = l.measuredBounds;
                    Vb(e, Math.max(e.width, Math.max(l.width + m, 0)), e.height + Math.max(l.height + n, 0))
                }
            }
        }
        d = c.length;
        if (0 !== d) {
            a.desiredSize.width ? b = Math.min(a.desiredSize.width, a.maxSize.width) : 0 !== e.width && (b = Math.min(e.width, a.maxSize.width));
            for (a = 0; a < d; a++)
                if (k =
                    c[a], k.visible || k === h) l = k.margin, g = l.right + l.left, l = l.top + l.bottom, k.measure(b, Infinity, f, 0), k = k.measuredBounds, l = Math.max(k.height + l, 0), e.width = Math.max(e.width, Math.max(k.width + g, 0)), e.height += l;
            Ha(c)
        }
    };
    ym.prototype.arrange = function (a, b, c) {
        for (var d = b.length, e = a.padding, f = e.left, g = a.isOpposite, h = g ? c.height : e.top, k = 0; k < d; k++) {
            var l = f,
                m = b[k];
            if (m.visible) {
                var n = m.measuredBounds,
                    p = m.margin,
                    r = p.left + p.right,
                    q = f + e.right,
                    u = n.width,
                    v = kl(m, !1);
                if (isNaN(m.desiredSize.width) && v === vd || v === Wk) u = Math.max(c.width - r - q, 0);
                r = u + r + q;
                q = m.alignment;
                q.Mb() && (q = a.defaultAlignment);
                q.eb() || (q = Ac);
                g && (h -= n.height + p.bottom + p.top);
                m.arrange(l + q.offsetX + p.left + (c.width * q.x - r * q.x), h + q.offsetY + p.top, u, n.height);
                g || (h += n.height +
                    p.bottom + p.top)
            }
        }
    };

    function zm() {
        this.name = "Base";
        this.name = "Spot"
    }
    la(zm, Ol);
    zm.prototype.measure = function (a, b, c, d, e, f, g) {
        var h = d.length,
            k = a.zb(),
            l = k.margin,
            m = l.right + l.left,
            n = l.top + l.bottom;
        k.measure(b, c, f, g);
        var p = k.measuredBounds;
        f = p.width;
        g = p.height;
        var r = Math.max(f + m, 0);
        var q = Math.max(g + n, 0);
        for (var u = a.isClipping, v = N.allocAt(-l.left, -l.top, r, q), w = !0, y = wm(a), z = 0; z < h; z++) {
            var A = d[z];
            if (A !== k && (A.visible || A === y)) {
                l = A.margin;
                r = l.right + l.left;
                q = l.top + l.bottom;
                p = kl(A, !1);
                switch (p) {
                    case vd:
                        b = f;
                        c = g;
                        break;
                    case Wk:
                        b = f;
                        break;
                    case Xk:
                        c = g
                }
                A.measure(b, c, 0, 0);
                p = A.measuredBounds;
                r =
                    Math.max(p.width + r, 0);
                q = Math.max(p.height + q, 0);
                var C = A.alignment;
                C.Mb() && (C = a.defaultAlignment);
                C.eb() || (C = Ac);
                var G = A.alignmentFocus;
                G.Mb() && (G = Ac);
                var L = null;
                A instanceof X && "" !== A.Jg && (A.arrange(0, 0, p.width, p.height), L = A.Xa(A.Jg), L === A && (L = null));
                if (null !== L) {
                    l = L.naturalBounds;
                    p = L.margin;
                    for (l = I.allocAt(G.x * l.width - G.offsetX - p.left, G.y * l.height - G.offsetY - p.top); L !== A;) L.transform.ra(l), L = L.panel;
                    A = C.x * f + C.offsetX - l.x;
                    p = C.y * g + C.offsetY - l.y;
                    I.free(l)
                } else A = C.x * f + C.offsetX - (G.x * p.width + G.offsetX) -
                    l.left, p = C.y * g + C.offsetY - (G.y * p.height + G.offsetY) - l.top;
                w ? (w = !1, e.h(A, p, r, q)) : ec(e, A, p, r, q)
            }
        }
        w ? e.assign(v) : u ? e.Dv(v.x, v.y, v.width, v.height) : ec(e, v.x, v.y, v.width, v.height);
        N.free(v);
        p = k.stretch;
        p === Vk && (p = kl(k, !1));
        switch (p) {
            case zg:
                return;
            case vd:
                if (!isFinite(b) && !isFinite(c)) return;
                break;
            case Wk:
                if (!isFinite(b)) return;
                break;
            case Xk:
                if (!isFinite(c)) return
        }
        p = k.measuredBounds;
        f = p.width;
        g = p.height;
        r = Math.max(f + m, 0);
        q = Math.max(g + n, 0);
        l = k.margin;
        v = N.allocAt(-l.left, -l.top, r, q);
        for (b = 0; b < h; b++) c = d[b], c ===
            k || !c.visible && c !== y || (l = c.margin, r = l.right + l.left, q = l.top + l.bottom, p = c.measuredBounds, r = Math.max(p.width + r, 0), q = Math.max(p.height + q, 0), m = c.alignment, m.Mb() && (m = a.defaultAlignment), m.eb() || (m = Ac), c = c.alignmentFocus, c.Mb() && (c = Ac), w ? (w = !1, e.h(m.x * f + m.offsetX - (c.x * p.width + c.offsetX) - l.left, m.y * g + m.offsetY - (c.y * p.height + c.offsetY) - l.top, r, q)) : ec(e, m.x * f + m.offsetX - (c.x * p.width + c.offsetX) - l.left, m.y * g + m.offsetY - (c.y * p.height + c.offsetY) - l.top, r, q));
        w ? e.assign(v) : u ? e.Dv(v.x, v.y, v.width, v.height) : ec(e, v.x,
            v.y, v.width, v.height);
        N.free(v)
    };
    zm.prototype.arrange = function (a, b, c) {
        var d = b.length,
            e = a.zb(),
            f = e.measuredBounds,
            g = f.width;
        f = f.height;
        var h = a.padding,
            k = h.left;
        h = h.top;
        var l = k - c.x,
            m = h - c.y;
        e.arrange(l, m, g, f);
        for (var n = 0; n < d; n++) {
            var p = b[n];
            if (p !== e) {
                var r = p.measuredBounds,
                    q = r.width;
                r = r.height;
                m = p.alignment;
                m.Mb() && (m = a.defaultAlignment);
                m.eb() || (m = Ac);
                var u = p.alignmentFocus;
                u.Mb() && (u = Ac);
                l = null;
                p instanceof X && "" !== p.Jg && (l = p.Xa(p.Jg), l === p && (l = null));
                if (null !== l) {
                    var v = l.naturalBounds;
                    for (u = I.allocAt(u.x * v.width - u.offsetX, u.y * v.height -
                            u.offsetY); l !== p;) l.transform.ra(u), l = l.panel;
                    l = m.x * g + m.offsetX - u.x;
                    m = m.y * f + m.offsetY - u.y;
                    I.free(u)
                } else l = m.x * g + m.offsetX - (u.x * q + u.offsetX), m = m.y * f + m.offsetY - (u.y * r + u.offsetY);
                l -= c.x;
                m -= c.y;
                p.visible && p.arrange(k + l, h + m, q, r)
            }
        }
    };

    function Am() {
        this.name = "Base";
        this.name = "Auto"
    }
    la(Am, Ol);
    Am.prototype.measure = function (a, b, c, d, e, f, g) {
        var h = d.length,
            k = a.zb(),
            l = k.margin,
            m = b,
            n = c,
            p = l.right + l.left,
            r = l.top + l.bottom;
        k.measure(b, c, f, g);
        l = k.measuredBounds;
        var q = 0,
            u = null;
        k instanceof Lf && (u = k, q = u.strokeWidth * u.scale);
        var v = Math.max(l.width + p, 0);
        l = Math.max(l.height + r, 0);
        var w = Bm(k),
            y = w.x * v + w.offsetX;
        w = w.y * l + w.offsetY;
        var z = Cm(k),
            A = z.x * v + z.offsetX;
        z = z.y * l + z.offsetY;
        isFinite(b) && (m = Math.max(Math.abs(y - A) - q, 0));
        isFinite(c) && (n = Math.max(Math.abs(w - z) - q, 0));
        q = M.alloc();
        q.h(0, 0);
        a = wm(a);
        for (z = 0; z < h; z++) w =
            d[z], w === k || !w.visible && w !== a || (l = w.margin, v = l.right + l.left, y = l.top + l.bottom, w.measure(m, n, 0, 0), l = w.measuredBounds, v = Math.max(l.width + v, 0), l = Math.max(l.height + y, 0), q.h(Math.max(v, q.width), Math.max(l, q.height)));
        if (1 === h) e.width = v, e.height = l, M.free(q);
        else {
            w = Bm(k);
            z = Cm(k);
            h = d = 0;
            z.x !== w.x && z.y !== w.y && (d = q.width / Math.abs(z.x - w.x), h = q.height / Math.abs(z.y - w.y));
            M.free(q);
            q = 0;
            null !== u && (q = u.strokeWidth * u.scale, Ag(u) === Bg && (d = h = Math.max(d, h)));
            d += Math.abs(w.offsetX) + Math.abs(z.offsetX) + q;
            h += Math.abs(w.offsetY) +
                Math.abs(z.offsetY) + q;
            u = k.stretch;
            u === Vk && (u = kl(k, !1));
            switch (u) {
                case zg:
                    g = f = 0;
                    break;
                case vd:
                    isFinite(b) && (d = b);
                    isFinite(c) && (h = c);
                    break;
                case Wk:
                    isFinite(b) && (d = b);
                    g = 0;
                    break;
                case Xk:
                    f = 0, isFinite(c) && (h = c)
            }
            k.om();
            k.measure(d, h, f, g);
            e.width = k.measuredBounds.width + p;
            e.height = k.measuredBounds.height + r
        }
    };
    Am.prototype.arrange = function (a, b) {
        var c = b.length,
            d = a.zb(),
            e = d.measuredBounds,
            f = N.alloc();
        f.h(0, 0, 1, 1);
        var g = d.margin,
            h = g.left;
        g = g.top;
        var k = a.padding,
            l = k.left;
        k = k.top;
        d.arrange(l + h, k + g, e.width, e.height);
        var m = Bm(d),
            n = Cm(d),
            p = m.y * e.height + m.offsetY,
            r = n.x * e.width + n.offsetX;
        n = n.y * e.height + n.offsetY;
        f.x = m.x * e.width + m.offsetX;
        f.y = p;
        ec(f, r, n, 0, 0);
        f.x += h + l;
        f.y += g + k;
        for (e = 0; e < c; e++) h = b[e], h !== d && (l = h.measuredBounds, g = h.margin, k = Math.max(l.width + g.right + g.left, 0), m = Math.max(l.height + g.top + g.bottom, 0), p = h.alignment,
            p.Mb() && (p = a.defaultAlignment), p.eb() || (p = Ac), k = f.width * p.x + p.offsetX - k * p.x + g.left + f.x, g = f.height * p.y + p.offsetY - m * p.y + g.top + f.y, h.visible && (fc(f.x, f.y, f.width, f.height, k, g, l.width, l.height) ? h.arrange(k, g, l.width, l.height) : h.arrange(k, g, l.width, l.height, new N(f.x, f.y, f.width, f.height))));
        N.free(f)
    };

    function Dm() {
        this.name = "Base";
        this.name = "Table"
    }
    la(Dm, Ol);
    Dm.prototype.measure = function (a, b, c, d, e, f, g) {
        for (var h = d.length, k = Fa(), l = Fa(), m = 0; m < h; m++) {
            var n = d[m],
                p = n instanceof X ? n : null;
            if (null === p || p.type !== X.TableRow && p.type !== X.TableColumn || !n.visible) k.push(n);
            else {
                l.push(p);
                for (var r = p.W.j, q = r.length, u = 0; u < q; u++) {
                    var v = r[u];
                    p.type === X.TableRow ? v.row = n.row : p.type === X.TableColumn && (v.column = n.column);
                    k.push(v)
                }
            }
        }
        h = k.length;
        0 === h && (a.getRowDefinition(0), a.getColumnDefinition(0));
        for (var w = [], y = 0; y < h; y++) {
            var z = k[y];
            lj(z, !0);
            ll(z, !0);
            w[z.row] || (w[z.row] = []);
            w[z.row][z.column] || (w[z.row][z.column] = []);
            w[z.row][z.column].push(z)
        }
        Ha(k);
        var A = Fa(),
            C = Fa(),
            G = Fa(),
            L = {
                count: 0
            },
            K = {
                count: 0
            },
            V = b,
            Q = c,
            ca = a.rb;
        h = ca.length;
        for (var pa = 0; pa < h; pa++) {
            var O = ca[pa];
            void 0 !== O && (O.actual = 0)
        }
        ca = a.mb;
        h = ca.length;
        for (var xa = 0; xa < h; xa++) O = ca[xa], void 0 !== O && (O.actual = 0);
        for (var Ma = w.length, hb = 0, Ea = 0; Ea < Ma; Ea++) w[Ea] && (hb = Math.max(hb, w[Ea].length));
        var xb = Math.min(a.topIndex, Ma - 1),
            Ad = Math.min(a.leftIndex, hb - 1),
            ib = 0;
        Ma = w.length;
        for (var Xb = wm(a), $a = 0; $a < Ma; $a++)
            if (w[$a]) {
                hb =
                    w[$a].length;
                for (var Md = a.getRowDefinition($a), wc = Md.actual = 0; wc < hb; wc++)
                    if (w[$a][wc]) {
                        var zf = a.getColumnDefinition(wc);
                        void 0 === A[wc] && (zf.actual = 0, A[wc] = !0);
                        for (var Ye = w[$a][wc], De = Ye.length, lh = 0; lh < De; lh++) {
                            var Dc = Ye[lh];
                            if (Dc.visible || Dc === Xb) {
                                var Af = 1 < Dc.rowSpan || 1 < Dc.columnSpan;
                                Af && ($a < xb || wc < Ad || C.push(Dc));
                                var Ze = Dc.margin,
                                    Nd = Ze.right + Ze.left,
                                    Tj = Ze.top + Ze.bottom;
                                var Eb = Dl(Dc, Md, zf, !1);
                                var Bf = Dc.desiredSize,
                                    Bd = !isNaN(Bf.height),
                                    jc = !isNaN(Bf.width) && Bd;
                                Af || Eb === zg || jc || $a < xb || wc < Ad || (void 0 !==
                                    L[wc] || Eb !== vd && Eb !== Wk || (L[wc] = -1, L.count++), void 0 !== K[$a] || Eb !== vd && Eb !== Xk || (K[$a] = -1, K.count++), G.push(Dc));
                                Dc.measure(Infinity, Infinity, 0, 0);
                                if (!($a < xb || wc < Ad)) {
                                    var $e = Dc.measuredBounds,
                                        Wc = Math.max($e.width + Nd, 0),
                                        dg = Math.max($e.height + Tj, 0);
                                    if (1 === Dc.rowSpan && (Eb === zg || Eb === Wk)) {
                                        O = a.getRowDefinition($a);
                                        var mh = O.uc();
                                        ib = Math.max(dg - O.actual, 0);
                                        ib + mh > Q && (ib = Math.max(Q - mh, 0));
                                        var nn = 0 === O.actual;
                                        O.actual = O.actual + ib;
                                        Q = Math.max(Q - (ib + (nn ? mh : 0)), 0)
                                    }
                                    if (1 === Dc.columnSpan && (Eb === zg || Eb === Xk)) {
                                        O = a.getColumnDefinition(wc);
                                        var eg = O.uc();
                                        ib = Math.max(Wc - O.actual, 0);
                                        ib + eg > V && (ib = Math.max(V - eg, 0));
                                        var Uj = 0 === O.actual;
                                        O.actual = O.actual + ib;
                                        V = Math.max(V - (ib + (Uj ? eg : 0)), 0)
                                    }
                                    Af && Dc.om()
                                }
                            }
                        }
                    }
            } Ha(A);
        var Yb = 0,
            Oc = 0;
        h = a.columnCount;
        for (var cc = 0; cc < h; cc++) {
            var fg = a.mb[cc];
            void 0 !== fg && (Yb += fg.ha, 0 !== fg.ha && (Yb += fg.uc()))
        }
        h = a.rowCount;
        for (var nh = 0; nh < h; nh++) {
            var af = a.rb[nh];
            void 0 !== af && (Oc += af.ha, 0 !== af.ha && (Oc += af.uc()))
        }
        V = Math.max(b - Yb, 0);
        var ti = Q = Math.max(c - Oc, 0),
            ge = V;
        h = G.length;
        for (var Ee = 0; Ee < h; Ee++) {
            var kc = G[Ee],
                Vj = a.getRowDefinition(kc.row),
                on = a.getColumnDefinition(kc.column),
                gg = kc.measuredBounds,
                Qb = kc.margin,
                hg = Qb.right + Qb.left,
                Wj = Qb.top + Qb.bottom;
            L[kc.column] = 0 === on.actual && void 0 !== L[kc.column] ? Math.max(gg.width + hg, L[kc.column]) : null;
            K[kc.row] = 0 === Vj.actual && void 0 !== K[kc.row] ? Math.max(gg.height + Wj, K[kc.row]) : null
        }
        var ui = 0,
            ig = 0,
            Cf;
        for (Cf in K) "count" !== Cf && (ui += K[Cf]);
        for (Cf in L) "count" !== Cf && (ig += L[Cf]);
        for (var ab = M.alloc(), jg = 0; jg < h; jg++) {
            var lc = G[jg];
            if (lc.visible || lc === Xb) {
                var Ec = a.getRowDefinition(lc.row),
                    bb = a.getColumnDefinition(lc.column),
                    Cd = 0;
                isFinite(bb.width) ? Cd = bb.width : (isFinite(V) && null !== L[lc.column] ? 0 === ig ? Cd = bb.actual + V : Cd = L[lc.column] / ig * ge : null !== L[lc.column] ? Cd = V : Cd = bb.actual || V, Cd = Math.max(0, Cd - bb.uc()));
                var Dd = 0;
                isFinite(Ec.height) ? Dd = Ec.height : (isFinite(Q) && null !== K[lc.row] ? 0 === ui ? Dd = Ec.actual + Q : Dd = K[lc.row] / ui * ti : null !== K[lc.row] ? Dd = Q : Dd = Ec.actual || Q, Dd = Math.max(0, Dd - Ec.uc()));
                ab.h(Math.max(bb.minimum, Math.min(Cd, bb.maximum)), Math.max(Ec.minimum, Math.min(Dd, Ec.maximum)));
                Eb = Dl(lc, Ec, bb, !1);
                switch (Eb) {
                    case Wk:
                        ab.height =
                            Math.max(ab.height, Ec.actual + Q);
                        break;
                    case Xk:
                        ab.width = Math.max(ab.width, bb.actual + V)
                }
                var Od = lc.margin,
                    pn = Od.right + Od.left,
                    oh = Od.top + Od.bottom;
                lc.om();
                lc.measure(ab.width, ab.height, bb.minimum, Ec.minimum);
                var ph = lc.measuredBounds,
                    qh = Math.max(ph.width + pn, 0),
                    rh = Math.max(ph.height + oh, 0);
                isFinite(V) && (qh = Math.min(qh, ab.width));
                isFinite(Q) && (rh = Math.min(rh, ab.height));
                var kg = 0;
                kg = Ec.actual;
                Ec.actual = Math.max(Ec.actual, rh);
                ib = Ec.actual - kg;
                Q = Math.max(Q - ib, 0);
                kg = bb.actual;
                bb.actual = Math.max(bb.actual, qh);
                ib = bb.actual - kg;
                V = Math.max(V - ib, 0)
            }
        }
        Ha(G);
        var Ed = M.alloc(),
            Xc = Fa(),
            he = Fa();
        h = C.length;
        if (0 !== h)
            for (var qb = 0; qb < Ma; qb++)
                if (w[qb]) {
                    hb = w[qb].length;
                    var vi = a.getRowDefinition(qb);
                    Xc[qb] = vi.actual;
                    for (var md = 0; md < hb; md++)
                        if (w[qb][md]) {
                            var qn = a.getColumnDefinition(md);
                            he[md] = qn.actual
                        }
                } for (var ie = 0; ie < h; ie++) {
            var Na = C[ie];
            if (Na.visible || Na === Xb) {
                var Fd = a.getRowDefinition(Na.row),
                    mc = a.getColumnDefinition(Na.column);
                ab.h(Math.max(mc.minimum, Math.min(b, mc.maximum)), Math.max(Fd.minimum, Math.min(c, Fd.maximum)));
                Eb = Dl(Na, Fd, mc, !1);
                switch (Eb) {
                    case vd:
                        0 !== he[mc.index] && (ab.width = Math.min(ab.width, he[mc.index]));
                        0 !== Xc[Fd.index] && (ab.height = Math.min(ab.height, Xc[Fd.index]));
                        break;
                    case Wk:
                        0 !== he[mc.index] && (ab.width = Math.min(ab.width, he[mc.index]));
                        break;
                    case Xk:
                        0 !== Xc[Fd.index] && (ab.height = Math.min(ab.height, Xc[Fd.index]))
                }
                isFinite(mc.width) && (ab.width = mc.width);
                isFinite(Fd.height) && (ab.height = Fd.height);
                Ed.h(0, 0);
                for (var Fe = 1; Fe < Na.rowSpan && !(Na.row + Fe >= a.rowCount); Fe++) O = a.getRowDefinition(Na.row + Fe), ib = 0,
                    ib = Eb === vd || Eb === Xk ? Math.max(O.minimum, 0 === Xc[Na.row + Fe] ? O.maximum : Math.min(Xc[Na.row + Fe], O.maximum)) : Math.max(O.minimum, isNaN(O.Pc) ? O.maximum : Math.min(O.Pc, O.maximum)), Ed.height += ib;
                for (var Df = 1; Df < Na.columnSpan && !(Na.column + Df >= a.columnCount); Df++) O = a.getColumnDefinition(Na.column + Df), ib = 0, ib = Eb === vd || Eb === Wk ? Math.max(O.minimum, 0 === he[Na.column + Df] ? O.maximum : Math.min(he[Na.column + Df], O.maximum)) : Math.max(O.minimum, isNaN(O.Pc) ? O.maximum : Math.min(O.Pc, O.maximum)), Ed.width += ib;
                ab.width += Ed.width;
                ab.height +=
                    Ed.height;
                var bf = Na.margin,
                    Pd = bf.right + bf.left,
                    Ge = bf.top + bf.bottom;
                Na.measure(ab.width, ab.height, f, g);
                for (var cf = Na.measuredBounds, He = Math.max(cf.width + Pd, 0), Ie = Math.max(cf.height + Ge, 0), nd = 0, lg = 0; lg < Na.rowSpan && !(Na.row + lg >= a.rowCount); lg++) O = a.getRowDefinition(Na.row + lg), nd += O.total || 0;
                if (nd < Ie) {
                    var je = Ie - nd,
                        rn = Ie - nd;
                    if (null !== Na.spanAllocation)
                        for (var sn = Na.spanAllocation, od = 0; od < Na.rowSpan && !(0 >= je) && !(Na.row + od >= a.rowCount); od++) {
                            O = a.getRowDefinition(Na.row + od);
                            var mg = O.ha || 0,
                                tn = sn(Na, O, rn);
                            O.actual =
                                Math.min(O.maximum, mg + tn);
                            O.ha !== mg && (je -= O.ha - mg)
                        }
                    for (; 0 < je;) {
                        var sh = O.ha || 0;
                        isNaN(O.height) && O.maximum > sh && (O.actual = Math.min(O.maximum, sh + je), O.ha !== sh && (je -= O.ha - sh));
                        if (0 === O.index) break;
                        O = a.getRowDefinition(O.index - 1)
                    }
                }
                for (var Xj = 0, Yj = 0; Yj < Na.columnSpan && !(Na.column + Yj >= a.columnCount); Yj++) O = a.getColumnDefinition(Na.column + Yj), Xj += O.total || 0;
                if (Xj < He) {
                    var wi = He - Xj,
                        Lt = He - Xj;
                    if (null !== Na.spanAllocation)
                        for (var Mt = Na.spanAllocation, Zj = 0; Zj < Na.columnSpan && !(0 >= wi) && !(Na.column + Zj >= a.columnCount); Zj++) {
                            O =
                                a.getColumnDefinition(Na.column + Zj);
                            var un = O.ha || 0,
                                Nt = Mt(Na, O, Lt);
                            O.actual = Math.min(O.maximum, un + Nt);
                            O.ha !== un && (wi -= O.ha - un)
                        }
                    for (; 0 < wi;) {
                        var ak = O.ha || 0;
                        isNaN(O.width) && O.maximum > ak && (O.actual = Math.min(O.maximum, ak + wi), O.ha !== ak && (wi -= O.ha - ak));
                        if (0 === O.index) break;
                        O = a.getColumnDefinition(O.index - 1)
                    }
                }
            }
        }
        Ha(C);
        M.free(Ed);
        M.free(ab);
        void 0 !== Xc && Ha(Xc);
        void 0 !== he && Ha(he);
        var ng = 0,
            og = 0,
            bk = a.desiredSize,
            jr = a.maxSize;
        Eb = kl(a, !0);
        var xi = Oc = Yb = 0,
            yi = 0;
        h = a.columnCount;
        for (var ck = 0; ck < h; ck++) void 0 !== a.mb[ck] &&
            (O = a.getColumnDefinition(ck), isFinite(O.width) ? (xi += O.width, xi += O.uc()) : Em(O) === Fm ? (xi += O.ha, xi += O.uc()) : 0 !== O.ha && (Yb += O.ha, Yb += O.uc()));
        isFinite(bk.width) ? ng = Math.min(bk.width, jr.width) : ng = Eb !== zg && isFinite(b) ? b : Yb;
        ng = Math.max(ng, a.minSize.width);
        ng = Math.max(ng - xi, 0);
        for (var Ot = 0 === Yb ? 1 : Math.max(ng / Yb, 1), ek = 0; ek < h; ek++) void 0 !== a.mb[ek] && (O = a.getColumnDefinition(ek), isFinite(O.width) || Em(O) === Fm || (O.actual = O.ha * Ot), O.position = e.width, 0 !== O.ha && (e.width += O.ha, e.width += O.uc()));
        h = a.rowCount;
        for (var fk =
                0; fk < h; fk++) void 0 !== a.rb[fk] && (O = a.getRowDefinition(fk), isFinite(O.height) ? (yi += O.height, yi += O.uc()) : Em(O) === Fm ? (yi += O.ha, yi += O.uc()) : 0 !== O.ha && (Oc += O.ha, 0 !== O.ha && (Oc += O.uc())));
        isFinite(bk.height) ? og = Math.min(bk.height, jr.height) : og = Eb !== zg && isFinite(c) ? c : Oc;
        og = Math.max(og, a.minSize.height);
        og = Math.max(og - yi, 0);
        for (var Pt = 0 === Oc ? 1 : Math.max(og / Oc, 1), gk = 0; gk < h; gk++) void 0 !== a.rb[gk] && (O = a.getRowDefinition(gk), isFinite(O.height) || Em(O) === Fm || (O.actual = O.ha * Pt), O.position = e.height, 0 !== O.ha && (e.height +=
            O.ha, 0 !== O.ha && (e.height += O.uc())));
        h = l.length;
        for (var vn = 0; vn < h; vn++) {
            var pd = l[vn],
                wn = 0,
                xn = 0;
            pd.type === X.TableRow ? (wn = e.width, O = a.getRowDefinition(pd.row), xn = O.actual) : (O = a.getColumnDefinition(pd.column), wn = O.actual, xn = e.height);
            pd.measuredBounds.h(0, 0, wn, xn);
            lj(pd, !1);
            w[pd.row] || (w[pd.row] = []);
            w[pd.row][pd.column] || (w[pd.row][pd.column] = []);
            w[pd.row][pd.column].push(pd)
        }
        Ha(l);
        a.rp = w
    };
    Dm.prototype.arrange = function (a, b, c) {
        var d = b.length,
            e = a.padding,
            f = e.left;
        e = e.top;
        for (var g = a.rp, h, k, l = g.length, m = 0, n = 0; n < l; n++) g[n] && (m = Math.max(m, g[n].length));
        for (n = Math.min(a.topIndex, l - 1); n !== l && (void 0 === a.rb[n] || 0 === a.rb[n].ha);) n++;
        n = Math.min(n, l - 1);
        n = -a.rb[n].position;
        for (h = Math.min(a.leftIndex, m - 1); h !== m && (void 0 === a.mb[h] || 0 === a.mb[h].ha);) h++;
        h = Math.min(h, m - 1);
        for (var p = -a.mb[h].position, r = M.alloc(), q = 0; q < l; q++)
            if (g[q]) {
                m = g[q].length;
                var u = a.getRowDefinition(q);
                k = u.position + n + e;
                0 !== u.ha &&
                    (k += u.iv());
                for (var v = 0; v < m; v++)
                    if (g[q][v]) {
                        var w = a.getColumnDefinition(v);
                        h = w.position + p + f;
                        0 !== w.ha && (h += w.iv());
                        for (var y = g[q][v], z = y.length, A = 0; A < z; A++) {
                            var C = y[A],
                                G = C.measuredBounds,
                                L = C instanceof X ? C : null;
                            if (null === L || L.type !== X.TableRow && L.type !== X.TableColumn) {
                                r.h(0, 0);
                                for (var K = 1; K < C.rowSpan && !(q + K >= a.rowCount); K++) L = a.getRowDefinition(q + K), r.height += L.total;
                                for (K = 1; K < C.columnSpan && !(v + K >= a.columnCount); K++) L = a.getColumnDefinition(v + K), r.width += L.total;
                                var V = w.ha + r.width,
                                    Q = u.ha + r.height;
                                K =
                                    h;
                                L = k;
                                var ca = V,
                                    pa = Q,
                                    O = h,
                                    xa = k,
                                    Ma = V,
                                    hb = Q;
                                h + V > c.width && (Ma = Math.max(c.width - h, 0));
                                k + Q > c.height && (hb = Math.max(c.height - k, 0));
                                var Ea = C.alignment;
                                if (Ea.Mb()) {
                                    Ea = a.defaultAlignment;
                                    Ea.eb() || (Ea = Ac);
                                    var xb = Ea.x;
                                    var Ad = Ea.y;
                                    var ib = Ea.offsetX;
                                    Ea = Ea.offsetY;
                                    var Xb = w.alignment,
                                        $a = u.alignment;
                                    Xb.eb() && (xb = Xb.x, ib = Xb.offsetX);
                                    $a.eb() && (Ad = $a.y, Ea = $a.offsetY)
                                } else xb = Ea.x, Ad = Ea.y, ib = Ea.offsetX, Ea = Ea.offsetY;
                                if (isNaN(xb) || isNaN(Ad)) Ad = xb = .5, Ea = ib = 0;
                                Xb = G.width;
                                $a = G.height;
                                var Md = C.margin,
                                    wc = Md.left + Md.right,
                                    zf = Md.top +
                                    Md.bottom,
                                    Ye = Dl(C, u, w, !1);
                                !isNaN(C.desiredSize.width) || Ye !== vd && Ye !== Wk || (Xb = Math.max(V - wc, 0));
                                !isNaN(C.desiredSize.height) || Ye !== vd && Ye !== Xk || ($a = Math.max(Q - zf, 0));
                                V = C.maxSize;
                                Q = C.minSize;
                                Xb = Math.min(V.width, Xb);
                                $a = Math.min(V.height, $a);
                                Xb = Math.max(Q.width, Xb);
                                $a = Math.max(Q.height, $a);
                                V = $a + zf;
                                K += ca * xb - (Xb + wc) * xb + ib + Md.left;
                                L += pa * Ad - V * Ad + Ea + Md.top;
                                C.visible && (fc(O, xa, Ma, hb, K, L, G.width, G.height) ? C.arrange(K, L, Xb, $a) : C.arrange(K, L, Xb, $a, new N(O, xa, Ma, hb)))
                            } else C.ml(), C.actualBounds.ea(), ca = C.actualBounds,
                                K = N.allocAt(ca.x, ca.y, ca.width, ca.height), ca.x = L.type === X.TableRow ? f : h, ca.y = L.type === X.TableColumn ? e : k, ca.width = G.width, ca.height = G.height, C.actualBounds.freeze(), ll(C, !1), $b(K, ca) || (G = C.part, null !== G && (G.Jh(), C.To(G))), N.free(K)
                        }
                    }
            } M.free(r);
        for (a = 0; a < d; a++) c = b[a], f = c instanceof X ? c : null, null === f || f.type !== X.TableRow && f.type !== X.TableColumn || (f = c.actualBounds, c.naturalBounds.ea(), c.naturalBounds.h(0, 0, f.width, f.height), c.naturalBounds.freeze())
    };

    function Gm() {
        this.name = "Base";
        this.name = "TableRow"
    }
    la(Gm, Ol);
    Gm.prototype.measure = function () {};
    Gm.prototype.arrange = function () {};

    function Hm() {
        this.name = "Base";
        this.name = "TableColumn"
    }
    la(Hm, Ol);
    Hm.prototype.measure = function () {};
    Hm.prototype.arrange = function () {};

    function Im() {
        this.name = "Base";
        this.name = "Viewbox"
    }
    la(Im, Ol);
    Im.prototype.measure = function (a, b, c, d, e, f, g) {
        1 < d.length && B("Viewbox Panel cannot contain more than one GraphObject.");
        d = d[0];
        d.ya = 1;
        d.om();
        d.measure(Infinity, Infinity, f, g);
        var h = d.measuredBounds,
            k = d.margin,
            l = k.right + k.left;
        k = k.top + k.bottom;
        if (isFinite(b) || isFinite(c)) {
            var m = d.scale,
                n = h.width;
            h = h.height;
            var p = Math.max(b - l, 0),
                r = Math.max(c - k, 0),
                q = 1;
            a.viewboxStretch === Bg ? 0 !== n && 0 !== h && (q = Math.min(p / n, r / h)) : 0 !== n && 0 !== h && (q = Math.max(p / n, r / h));
            0 === q && (q = 1E-4);
            d.ya *= q;
            m !== d.scale && (lj(d, !0), d.measure(Infinity,
                Infinity, f, g))
        }
        h = d.measuredBounds;
        e.width = isFinite(b) ? b : Math.max(h.width + l, 0);
        e.height = isFinite(c) ? c : Math.max(h.height + k, 0)
    };
    Im.prototype.arrange = function (a, b, c) {
        b = b[0];
        var d = b.measuredBounds,
            e = b.margin,
            f = Math.max(d.width + (e.right + e.left), 0);
        e = Math.max(d.height + (e.top + e.bottom), 0);
        var g = b.alignment;
        g.Mb() && (g = a.defaultAlignment);
        g.eb() || (g = Ac);
        b.arrange(c.width * g.x - f * g.x + g.offsetX, c.height * g.y - e * g.y + g.offsetY, d.width, d.height)
    };

    function Jm() {
        this.name = "Base";
        this.name = "Grid"
    }
    la(Jm, Ol);
    Jm.prototype.measure = function () {};
    Jm.prototype.arrange = function () {};
    Jm.prototype.bc = function (a, b, c) {
        c = a.uf() * c.scale;
        0 >= c && (c = 1);
        var d = a.gridCellSize,
            e = d.width;
        d = d.height;
        var f = a.naturalBounds,
            g = a.actualBounds,
            h = f.width,
            k = f.height,
            l = Math.ceil(h / e),
            m = Math.ceil(k / d),
            n = a.gridOrigin;
        b.save();
        b.beginPath();
        b.rect(0, 0, h, k);
        b.clip();
        for (var p = [], r = a.W.j, q = r.length, u = 0; u < q; u++) {
            var v = r[u],
                w = [];
            p.push(w);
            if (v.visible) {
                var y = v.interval;
                if (!(0 > y)) {
                    v = dk(v.figure);
                    for (var z = 0; z < q; z++)
                        if (z !== u) {
                            var A = r[z];
                            A.visible && dk(A.figure) === v && (A = A.interval, A > y && w.push(A))
                        }
                }
            }
        }
        r = a.W.j;
        q =
            r.length;
        for (u = 0; u < q; u++) {
            var C = r[u];
            if (C.visible && (w = C.interval, !(2 > e * Math.abs(w) * c))) {
                y = C.opacity;
                v = 1;
                if (1 !== y) {
                    if (0 === y) continue;
                    v = b.globalAlpha;
                    b.globalAlpha = v * y
                }
                z = p[u];
                A = !1;
                var G = C.strokeDashArray;
                null !== G && (A = !0, b.ht(G, C.strokeDashOffset));
                if ("LineV" === C.figure && null !== C.stroke && 0 < C.strokeWidth) {
                    b.lineWidth = C.strokeWidth;
                    ii(a, b, C.stroke, !1, !1, f, g);
                    b.beginPath();
                    for (G = C = Math.floor(-n.x / e); G <= C + l; G++) {
                        var L = G * e + n.x;
                        0 <= L && L <= h && Km(G, w, z) && (b.moveTo(L, 0), b.lineTo(L, k))
                    }
                    b.stroke()
                } else if ("LineH" ===
                    C.figure && null !== C.stroke && 0 < C.strokeWidth) {
                    b.lineWidth = C.strokeWidth;
                    ii(a, b, C.stroke, !1, !1, f, g);
                    b.beginPath();
                    for (G = C = Math.floor(-n.y / d); G <= C + m; G++) L = G * d + n.y, 0 <= L && L <= k && Km(G, w, z) && (b.moveTo(0, L), b.lineTo(h, L));
                    b.stroke()
                } else if ("BarV" === C.figure && null !== C.fill)
                    for (ii(a, b, C.fill, !0, !1, f, g), C = C.width, isNaN(C) && (C = e), L = G = Math.floor(-n.x / e); L <= G + l; L++) {
                        var K = L * e + n.x;
                        0 <= K && K <= h && Km(L, w, z) && b.fillRect(K, 0, C, k)
                    } else if ("BarH" === C.figure && null !== C.fill)
                        for (ii(a, b, C.fill, !0, !1, f, g), C = C.height, isNaN(C) &&
                            (C = d), L = G = Math.floor(-n.y / d); L <= G + m; L++) K = L * d + n.y, 0 <= K && K <= k && Km(L, w, z) && b.fillRect(0, K, h, C);
                A && b.ft();
                1 !== y && (b.globalAlpha = v)
            }
        }
        b.restore();
        b.sc(!1)
    };

    function Km(a, b, c) {
        if (0 > b) return 0 === a % b;
        if (0 !== a % b) return !1;
        b = c.length;
        for (var d = 0; d < b; d++)
            if (0 === a % c[d]) return !1;
        return !0
    }

    function Lm() {
        this.name = "Base";
        this.name = "Link"
    }
    la(Lm, Ol);
    Lm.prototype.measure = function (a, b, c, d, e) {
        c = d.length;
        if (a instanceof Je || a instanceof S) {
            var f = null,
                g = null,
                h = null;
            a instanceof S && (g = f = a);
            a instanceof Je && (h = a, f = h.adornedPart);
            if (f instanceof S) {
                var k = f;
                if (0 === c) Vb(a.naturalBounds, 0, 0), a.measuredBounds.h(0, 0, 0, 0);
                else {
                    var l = a instanceof Je ? null : f.path,
                        m = f.routeBounds;
                    b = a.vg;
                    b.h(0, 0, m.width, m.height);
                    var n = k.points;
                    f = f.pointsCount;
                    null !== h ? h.nk(!1) : null !== g && g.nk(!1);
                    var p = m.width,
                        r = m.height;
                    a.location.h(m.x, m.y);
                    a.l.length = 0;
                    null !== l && (Mm(a, p, r, l),
                        h = l.measuredBounds, b.Hc(h), a.l.push(h));
                    h = rd.alloc();
                    for (var q = I.alloc(), u = I.alloc(), v = 0; v < c; v++) {
                        var w = d[v];
                        if (w !== l)
                            if (w.isPanelMain && w instanceof Lf) {
                                Mm(a, p, r, w);
                                var y = w.measuredBounds;
                                b.Hc(y);
                                a.l.push(y)
                            } else if (2 > f) w.measure(Infinity, Infinity, 0, 0), y = w.measuredBounds, b.Hc(y), a.l.push(y);
                        else {
                            var z = w.segmentIndex,
                                A = w.segmentFraction,
                                C = w.alignmentFocus;
                            C.jc() && (C = Ac);
                            var G = w.segmentOrientation,
                                L = w.segmentOffset;
                            if (isNaN(z)) {
                                var K = k.ka;
                                y = Fa();
                                K.zv(A, y);
                                var V = I.allocAt(y[0], y[1]);
                                V.add(k.i(0));
                                K.type ===
                                    wd ? V.offset(-K.startX, -K.startY) : (K = K.figures.first(), V.offset(-K.startX, -K.startY));
                                K = y[2];
                                if (G !== bg) {
                                    var Q = k.computeAngle(w, G, K);
                                    w.Yb = Q
                                }
                                Q = V.x - m.x;
                                var ca = V.y - m.y;
                                I.free(V);
                                Ha(y)
                            } else if (z < -f || z >= f) ca = k.midPoint, K = k.midAngle, G !== bg && (Q = k.computeAngle(w, G, K), w.Yb = Q), Q = ca.x - m.x, ca = ca.y - m.y;
                            else {
                                Q = 0;
                                0 <= z ? (ca = n.L(z), y = z < f - 1 ? n.L(z + 1) : ca) : (Q = f + z, ca = n.L(Q), y = 0 < Q ? n.L(Q - 1) : ca);
                                if (ca.Ma(y)) {
                                    0 <= z ? (K = 0 < z ? n.L(z - 1) : ca, Q = z < f - 2 ? n.L(z + 2) : y) : (K = Q < f - 1 ? n.L(Q + 1) : ca, Q = 1 < Q ? n.L(Q - 2) : y);
                                    V = K.Ae(ca);
                                    var pa = y.Ae(Q);
                                    K = V > pa + 10 ?
                                        0 <= z ? K.Ta(ca) : ca.Ta(K) : pa > V + 10 ? 0 <= z ? y.Ta(Q) : Q.Ta(y) : 0 <= z ? K.Ta(Q) : Q.Ta(K)
                                } else K = 0 <= z ? ca.Ta(y) : y.Ta(ca);
                                G !== bg && (Q = k.computeAngle(w, G, K), w.Yb = Q);
                                Q = ca.x + (y.x - ca.x) * A - m.x;
                                ca = ca.y + (y.y - ca.y) * A - m.y
                            }
                            w.measure(Infinity, Infinity, 0, 0);
                            y = w.measuredBounds;
                            V = w.naturalBounds;
                            var O = 0;
                            w instanceof Lf && (O = w.strokeWidth);
                            pa = V.width + O;
                            var xa = V.height + O;
                            h.reset();
                            h.translate(-y.x, -y.y);
                            h.scale(w.scale, w.scale);
                            h.rotate(G === bg ? w.angle : K, pa / 2, xa / 2);
                            G !== Nm && G !== Om || h.rotate(90, pa / 2, xa / 2);
                            G !== Pm && G !== Qm || h.rotate(-90, pa /
                                2, xa / 2);
                            G === Rm && (45 < K && 135 > K || 225 < K && 315 > K) && h.rotate(-K, pa / 2, xa / 2);
                            V = new N(0, 0, pa, xa);
                            q.dj(V, C);
                            h.ra(q);
                            C = -q.x + O / 2 * w.scale;
                            w = -q.y + O / 2 * w.scale;
                            u.assign(L);
                            O = isNaN(L.x);
                            var Ma = isNaN(L.y);
                            if (O || Ma) {
                                pa = pa / 2 + 3;
                                xa = xa / 2 + 3;
                                var hb = 45 <= K && 135 >= K,
                                    Ea = 225 <= K && 315 >= K;
                                G === bg && (hb || Ea) ? (u.x = Ma ? pa : L.y, u.y = O ? xa : L.x, hb ? 0 <= z || isNaN(z) && .5 > A || !O || (u.y = -xa) : Ea && ((0 <= z || isNaN(z) && .5 > A) && O && (u.y = -xa), Ma && (u.x = -pa))) : (O && (u.x = 0 <= z || isNaN(z) && .5 > A ? pa : -pa), Ma && (u.y = -xa), u.rotate(K))
                            } else u.rotate(K);
                            Q += u.x;
                            ca += u.y;
                            V.set(y);
                            V.h(Q + C, ca + w, y.width, y.height);
                            a.l.push(V);
                            b.Hc(V)
                        }
                    }
                    if (null !== g)
                        for (d = g.labelNodes; d.next();) d.value.measure(Infinity, Infinity);
                    a.vg = b;
                    a = a.location;
                    a.h(a.x + b.x, a.y + b.y);
                    Vb(e, b.width || 0, b.height || 0);
                    rd.free(h);
                    I.free(q);
                    I.free(u)
                }
            }
        }
    };
    Lm.prototype.arrange = function (a, b) {
        var c = b.length;
        if (a instanceof Je || a instanceof S) {
            var d = null,
                e = null,
                f = null;
            a instanceof S && (e = d = a);
            a instanceof Je && (f = a, d = f.adornedPart);
            var g = a instanceof Je ? null : d.path;
            if (0 !== a.l.length) {
                var h = a.l,
                    k = 0;
                if (null !== g && k < a.l.length) {
                    var l = h[k];
                    k++;
                    g.arrange(l.x - a.vg.x, l.y - a.vg.y, l.width, l.height)
                }
                for (l = 0; l < c; l++) {
                    var m = b[l];
                    if (m !== g && k < a.l.length) {
                        var n = h[k];
                        k++;
                        m.arrange(n.x - a.vg.x, n.y - a.vg.y, n.width, n.height)
                    }
                }
            }
            b = d.points;
            c = b.count;
            if (2 <= c && a instanceof S)
                for (d =
                    a.labelNodes; d.next();) {
                    var p = a;
                    g = d.value;
                    h = g.segmentIndex;
                    k = g.segmentFraction;
                    var r = g.alignmentFocus;
                    l = g.segmentOrientation;
                    m = g.segmentOffset;
                    if (isNaN(h)) {
                        n = p.ka;
                        var q = Fa();
                        n.zv(k, q);
                        var u = I.allocAt(q[0], q[1]);
                        u.add(p.i(0));
                        n.type === wd ? u.offset(-n.startX, -n.startY) : (n = n.figures.first(), u.offset(-n.startX, -n.startY));
                        n = q[2];
                        l !== bg && (p = p.computeAngle(g, l, n), g.angle = p);
                        p = u.x;
                        var v = u.y;
                        I.free(u);
                        Ha(q)
                    } else if (h < -c || h >= c) v = p.midPoint, n = p.midAngle, l !== bg && (p = p.computeAngle(g, l, n), g.angle = p), p = v.x, v = v.y;
                    else {
                        u = 0;
                        0 <= h ? (q = b.j[h], v = h < c - 1 ? b.j[h + 1] : q) : (u = c + h, q = b.j[u], v = 0 < u ? b.j[u - 1] : q);
                        if (q.Ma(v)) {
                            0 <= h ? (n = 0 < h ? b.j[h - 1] : q, u = h < c - 2 ? b.j[h + 2] : v) : (n = u < c - 1 ? b.j[u + 1] : q, u = 1 < u ? b.j[u - 2] : v);
                            var w = n.Ae(q),
                                y = v.Ae(u);
                            n = w > y + 10 ? 0 <= h ? n.Ta(q) : q.Ta(n) : y > w + 10 ? 0 <= h ? v.Ta(u) : u.Ta(v) : 0 <= h ? n.Ta(u) : u.Ta(n)
                        } else n = 0 <= h ? q.Ta(v) : v.Ta(q);
                        l !== bg && (p = p.computeAngle(g, l, n), g.angle = p);
                        p = q.x + (v.x - q.x) * k;
                        v = q.y + (v.y - q.y) * k
                    }
                    if (r.wt()) g.location = new I(p, v);
                    else {
                        r.jc() && (r = Ac);
                        q = rd.alloc();
                        q.reset();
                        q.scale(g.scale, g.scale);
                        q.rotate(g.angle, 0,
                            0);
                        var z = g.naturalBounds;
                        u = N.allocAt(0, 0, z.width, z.height);
                        w = I.alloc();
                        w.dj(u, r);
                        q.ra(w);
                        r = -w.x;
                        y = -w.y;
                        var A = z.width,
                            C = z.height;
                        z = I.alloc();
                        z.assign(m);
                        var G = isNaN(m.x),
                            L = isNaN(m.y);
                        if (G || L) {
                            A = A / 2 + 3;
                            C = C / 2 + 3;
                            var K = 45 <= n && 135 >= n,
                                V = 225 <= n && 315 >= n;
                            l === bg && (K || V) ? (z.x = L ? A : m.y, z.y = G ? C : m.x, K ? 0 <= h || isNaN(h) && .5 > k || !G || (z.y = -C) : V && ((0 <= h || isNaN(h) && .5 > k) && G && (z.y = -C), L && (z.x = -A))) : (G && (z.x = 0 <= h || isNaN(h) && .5 > k ? A : -A), L && (z.y = -C), z.rotate(n))
                        } else z.rotate(n);
                        p += z.x;
                        v += z.y;
                        q.qw(u);
                        r += u.x;
                        y += u.y;
                        h = I.allocAt(p +
                            r, v + y);
                        g.move(h);
                        I.free(h);
                        I.free(z);
                        I.free(w);
                        N.free(u);
                        rd.free(q)
                    }
                }
            null !== f ? f.nk(!1) : null !== e && e.nk(!1)
        }
    };

    function Mm(a, b, c, d) {
        if (!1 !== qj(d)) {
            var e = d.strokeWidth;
            0 === e && a instanceof Je && a.type === X.Link && a.adornedObject instanceof Lf && (e = a.adornedObject.strokeWidth);
            e *= d.ya;
            a instanceof S && null !== a.ka ? (a = a.ka.bounds, hl(d, a.x - e / 2, a.y - e / 2, a.width + e, a.height + e)) : a instanceof Je && null !== a.adornedPart.ka ? (a = a.adornedPart.ka.bounds, hl(d, a.x - e / 2, a.y - e / 2, a.width + e, a.height + e)) : hl(d, -(e / 2), -(e / 2), b + e, c + e);
            lj(d, !1)
        }
    }

    function Sm() {
        this.name = "Base";
        this.name = "Graduated"
    }
    la(Sm, Ol);
    Sm.prototype.measure = function (a, b, c, d, e, f, g) {
        var h = a.zb();
        a.Zg = [];
        var k = h.margin,
            l = k.right + k.left,
            m = k.top + k.bottom;
        h.measure(b, c, f, g);
        var n = h.measuredBounds,
            p = new N(-k.left, -k.top, Math.max(n.width + l, 0), Math.max(n.height + m, 0));
        a.Zg.push(p);
        e.assign(p);
        for (var r = h.geometry, q = h.strokeWidth, u = r.flattenedSegments, v = r.flattenedLengths, w = r.flattenedTotalLength, y = u.length, z = 0, A = 0, C = Fa(), G = 0; G < y; G++) {
            var L = u[G],
                K = [];
            A = z = 0;
            for (var V = L.length, Q = 0; Q < V; Q += 2) {
                var ca = L[Q],
                    pa = L[Q + 1];
                if (0 !== Q) {
                    var O = 180 * Math.atan2(pa -
                        A, ca - z) / Math.PI;
                    0 > O && (O += 360);
                    K.push(O)
                }
                z = ca;
                A = pa
            }
            C.push(K)
        }
        if (null === a.$g) {
            for (var xa = [], Ma = a.W.j, hb = Ma.length, Ea = 0; Ea < hb; Ea++) {
                var xb = Ma[Ea],
                    Ad = [];
                xa.push(Ad);
                if (xb.visible) {
                    var ib = xb.interval;
                    if (!(0 > ib))
                        for (var Xb = 0; Xb < hb; Xb++)
                            if (Xb !== Ea) {
                                var $a = Ma[Xb];
                                if ($a.visible && xb.constructor === $a.constructor) {
                                    var Md = $a.interval;
                                    Md > ib && Ad.push(Md)
                                }
                            }
                }
            }
            a.$g = xa
        }
        var wc = a.$g;
        var zf = a.W.j,
            Ye = zf.length,
            De = 0,
            lh = 0,
            Dc = w;
        a.uj = [];
        for (var Af, Ze = 0; Ze < Ye; Ze++) {
            var Nd = zf[Ze];
            Af = [];
            if (Nd.visible && Nd !== h) {
                var Tj = Math.abs(Nd.interval),
                    Eb = a.graduatedTickUnit;
                if (!(2 > Eb * Tj * w / a.graduatedRange)) {
                    var Bf = v[0][0],
                        Bd = 0,
                        jc = 0;
                    lh = w * Nd.graduatedStart - 1E-4;
                    Dc = w * Nd.graduatedEnd + 1E-4;
                    var $e = Eb * Tj,
                        Wc = a.graduatedTickBase;
                    if (Wc < a.graduatedMin) {
                        var dg = (a.graduatedMin - Wc) / $e;
                        dg = 0 === dg % 1 ? dg : Math.floor(dg + 1);
                        Wc += dg * $e
                    } else Wc > a.graduatedMin + $e && (Wc -= Math.floor((Wc - a.graduatedMin) / $e) * $e);
                    for (var mh = wc[Ze]; Wc <= a.graduatedMax;) {
                        a: {
                            for (var nn = mh.length, eg = 0; eg < nn; eg++)
                                if (J.$((Wc - a.graduatedTickBase) % (mh[eg] * a.graduatedTickUnit), 0)) {
                                    var Uj = !1;
                                    break a
                                } Uj = !0
                        }
                        if (Uj && (null === Nd.graduatedSkip || !Nd.graduatedSkip(Wc)) && (De = (Wc - a.graduatedMin) * w / a.graduatedRange, De > w && (De = w), lh <= De && De <= Dc)) {
                            for (var Yb = C[Bd][jc], Oc = v[Bd][jc]; Bd < v.length;) {
                                for (; De > Bf && jc < v[Bd].length - 1;) jc++, Yb = C[Bd][jc], Oc = v[Bd][jc], Bf += Oc;
                                if (De <= Bf) break;
                                Bd++;
                                jc = 0;
                                Yb = C[Bd][jc];
                                Oc = v[Bd][jc];
                                Bf += Oc
                            }
                            var cc = u[Bd],
                                fg = cc[2 * jc],
                                nh = cc[2 * jc + 1],
                                af = (De - (Bf - Oc)) / Oc,
                                ti = new I(fg + (cc[2 * jc + 2] - fg) * af + q / 2 - r.bounds.x, nh + (cc[2 * jc + 3] - nh) * af + q / 2 - r.bounds.y);
                            ti.scale(h.scale, h.scale);
                            var ge = Yb,
                                Ee = C[Bd];
                            1E-4 >
                                af ? 0 < jc ? ge = Ee[jc - 1] : J.$(cc[0], cc[cc.length - 2]) && J.$(cc[1], cc[cc.length - 1]) && (ge = Ee[Ee.length - 1]) : .9999 < af && (jc + 1 < Ee.length ? ge = Ee[jc + 1] : J.$(cc[0], cc[cc.length - 2]) && J.$(cc[1], cc[cc.length - 1]) && (ge = Ee[0]));
                            Yb !== ge && (180 < Math.abs(Yb - ge) && (Yb < ge ? Yb += 360 : ge += 360), Yb = (Yb + ge) / 2 % 360);
                            if (Nd instanceof Wg) {
                                var kc = "";
                                null !== Nd.graduatedFunction ? (kc = Nd.graduatedFunction(Wc), kc = null !== kc && void 0 !== kc ? kc.toString() : "") : kc = (+Wc.toFixed(2)).toString();
                                "" !== kc && Af.push({
                                    xm: ti,
                                    angle: Yb,
                                    text: kc
                                })
                            } else Af.push({
                                xm: ti,
                                angle: Yb
                            })
                        }
                        Wc += $e
                    }
                }
            }
            a.uj.push(Af)
        }
        Ha(C);
        var Vj = a.uj;
        if (null !== Vj)
            for (var on = d.length, gg = 0; gg < on; gg++) {
                var Qb = d[gg],
                    hg = Vj[gg];
                if (Qb.visible && Qb !== h && 0 !== hg.length) {
                    if (Qb instanceof Lf) {
                        var Wj = a,
                            ui = e,
                            ig = Qb.alignmentFocus;
                        ig.jc() && (ig = xc);
                        var Cf = Qb.angle;
                        Qb.Yb = 0;
                        Qb.measure(Infinity, Infinity, 0, 0);
                        Qb.Yb = Cf;
                        var ab = Qb.measuredBounds,
                            jg = ab.width,
                            lc = ab.height,
                            Ec = N.allocAt(0, 0, jg, lc),
                            bb = I.alloc();
                        bb.dj(Ec, ig);
                        N.free(Ec);
                        for (var Cd = -bb.x, Dd = -bb.y, Od = new N, pn = hg.length, oh = 0; oh < pn; oh++)
                            for (var ph = hg[oh], qh = ph.xm.x,
                                    rh = ph.xm.y, kg = ph.angle, Ed = 0; 4 > Ed; Ed++) {
                                switch (Ed) {
                                    case 0:
                                        bb.h(Cd, Dd);
                                        break;
                                    case 1:
                                        bb.h(Cd + jg, Dd);
                                        break;
                                    case 2:
                                        bb.h(Cd, Dd + lc);
                                        break;
                                    case 3:
                                        bb.h(Cd + jg, Dd + lc)
                                }
                                bb.rotate(kg + Qb.angle);
                                bb.offset(qh, rh);
                                0 === oh && 0 === Ed ? Od.h(bb.x, bb.y, 0, 0) : Od.He(bb);
                                bb.offset(-qh, -rh);
                                bb.rotate(-kg - Qb.angle)
                            }
                        I.free(bb);
                        null !== Wj.Zg && Wj.Zg.push(Od);
                        ec(ui, Od.x, Od.y, Od.width, Od.height)
                    } else if (Qb instanceof Wg) {
                        var Xc = a,
                            he = e;
                        null === Xc.vh && (Xc.vh = new Wg);
                        var qb = Xc.vh;
                        Tm(qb, Qb);
                        var vi = Qb.alignmentFocus;
                        vi.jc() && (vi = xc);
                        for (var md =
                                Qb.segmentOrientation, qn = Qb.segmentOffset, ie = new N, Na = 0, Fd = 0, mc = 0, Fe = 0, Df = hg.length, bf = 0; bf < Df; bf++) {
                            var Pd = hg[bf];
                            Na = Pd.xm.x;
                            Fd = Pd.xm.y;
                            mc = Pd.angle;
                            md !== bg && (Fe = S.computeAngle(md, mc), qb.Yb = Fe);
                            qb.text = Pd.text || "";
                            qb.measure(Infinity, Infinity, 0, 0);
                            var Ge = qb.measuredBounds,
                                cf = qb.naturalBounds,
                                He = cf.width,
                                Ie = cf.height,
                                nd = rd.alloc();
                            nd.reset();
                            nd.translate(-Ge.x, -Ge.y);
                            nd.scale(qb.scale, qb.scale);
                            nd.rotate(md === bg ? qb.angle : mc, He / 2, Ie / 2);
                            md !== Nm && md !== Om || nd.rotate(90, He / 2, Ie / 2);
                            md !== Pm && md !== Qm || nd.rotate(-90,
                                He / 2, Ie / 2);
                            md === Rm && (45 < mc && 135 > mc || 225 < mc && 315 > mc) && nd.rotate(-mc, He / 2, Ie / 2);
                            var lg = N.allocAt(0, 0, He, Ie),
                                je = I.alloc();
                            je.dj(lg, vi);
                            nd.ra(je);
                            var rn = -je.x,
                                sn = -je.y,
                                od = I.alloc();
                            od.assign(qn);
                            isNaN(od.x) && (od.x = He / 2 + 3);
                            isNaN(od.y) && (od.y = -(Ie / 2 + 3));
                            od.rotate(mc);
                            Na += od.x + rn;
                            Fd += od.y + sn;
                            var mg = new N(Na, Fd, Ge.width, Ge.height),
                                tn = new N(Ge.x, Ge.y, Ge.width, Ge.height),
                                sh = new N(cf.x, cf.y, cf.width, cf.height);
                            Pd.Zz = Fe;
                            Pd.lineCount = qb.lineCount;
                            Pd.lines = [qb.pb, qb.ti, qb.ge, qb.te, qb.Qb, qb.fb, qb.ee];
                            Pd.actualBounds =
                                mg;
                            Pd.measuredBounds = tn;
                            Pd.naturalBounds = sh;
                            0 === bf ? ie.assign(mg) : ie.Hc(mg);
                            I.free(od);
                            I.free(je);
                            N.free(lg);
                            rd.free(nd)
                        }
                        null !== Xc.Zg && Xc.Zg.push(ie);
                        ec(he, ie.x, ie.y, ie.width, ie.height)
                    }
                    lj(Qb, !1)
                }
            }
    };
    Sm.prototype.arrange = function (a, b, c) {
        if (null !== a.Zg) {
            var d = a.zb(),
                e = a.uj;
            if (null !== e) {
                var f = a.Zg,
                    g = 0,
                    h = f[g];
                g++;
                null !== d && d.arrange(h.x - c.x, h.y - c.y, h.width, h.height);
                for (var k = b.length, l = 0; l < k; l++) {
                    var m = b[l];
                    h = e[l];
                    m.visible && m !== d && 0 !== h.length && (h = f[g], g++, m.arrange(h.x - c.x, h.y - c.y, h.width, h.height))
                }
                a.Zg = null
            }
        }
    };
    Sm.prototype.bc = function (a, b, c) {
        var d = c.ni;
        c.ni = !0;
        var e = a.naturalBounds,
            f = e.width;
        e = e.height;
        b.save();
        b.beginPath();
        b.rect(-1, -1, f + 1, e + 1);
        b.clip();
        f = a.zb();
        f.bc(b, c);
        e = a.uf() * c.scale;
        0 >= e && (e = 1);
        for (var g = f.actualBounds, h = a.W.j, k = a.uj, l = h.length, m = 0; m < l; m++) {
            var n = h[m],
                p = k[m],
                r = p.length;
            if (n.visible && n !== f && 0 !== p.length)
                if (n instanceof Lf) {
                    if (!(2 > a.graduatedTickUnit * n.interval * f.geometry.flattenedTotalLength / a.graduatedRange * e)) {
                        var q = n.measuredBounds,
                            u = n.strokeWidth * n.scale,
                            v = n.alignmentFocus;
                        v.jc() &&
                            (v = xc);
                        for (var w = 0; w < r; w++) {
                            var y = p[w].xm,
                                z = p[w].angle,
                                A = v,
                                C = n.kb;
                            C.reset();
                            C.translate(y.x + g.x, y.y + g.y);
                            C.rotate(z + n.angle, 0, 0);
                            C.translate(-q.width * A.x + A.offsetX + u / 2, -q.height * A.y + A.offsetY + u / 2);
                            C.scale(n.scale, n.scale);
                            Al(n, !1);
                            n.Qh.set(n.kb);
                            n.Wk = n.scale;
                            Bl(n, !1);
                            n.bc(b, c);
                            n.kb.reset()
                        }
                    }
                } else if (n instanceof Wg)
                for (null === a.vh && (a.vh = new Wg), q = a.vh, Tm(q, n), n = 0; n < r; n++) u = p[n], u.actualBounds && u.measuredBounds && u.naturalBounds && (q.Tb = u.text || "", q.Yb = u.Zz || 0, q.Nc = u.lineCount || 0, v = u.lines, void 0 !==
                    v && (q.pb = v[0], q.ti = v[1], q.ge = v[2], q.te = v[3], q.Qb = v[4], q.fb = v[5], q.ee = v[6]), u.naturalBounds && (q.oc = u.naturalBounds), u.actualBounds && (v = u.actualBounds, q.arrange(v.x, v.y, v.width, v.height)), v = u.actualBounds, q.arrange(v.x, v.y, v.width, v.height), w = u.measuredBounds, u = u.naturalBounds, y = q.kb, y.reset(), y.translate(v.x + g.x, v.y + g.y), y.translate(-w.x, -w.y), il(q, y, u.x, u.y, u.width, u.height), Al(q, !1), q.Qh.set(q.kb), q.Wk = q.scale, Bl(q, !1), q.bc(b, c))
        }
        c.ni = d;
        b.restore();
        b.sc(!0)
    };

    function X(a) {
        Y.call(this);
        this.pa = void 0 === a ? X.Position : a;
        null === this.pa && B("Panel type not specified or PanelLayout not loaded: " + a);
        this.W = new E;
        this.bb = sc;
        this.pa === X.Grid && (this.isAtomic = !0);
        this.un = Zc;
        this.Qf = Vk;
        this.pa === X.Table && Um(this);
        this.Yp = Bg;
        this.Sn = Ob;
        this.Tn = Fb;
        this.Pn = 0;
        this.On = 100;
        this.Rn = 10;
        this.Qn = 0;
        this.ci = this.hb = this.$g = this.Zg = this.uj = null;
        this.io = NaN;
        this.le = this.si = null;
        this.ql = "category";
        this.Jd = null;
        this.vg = new N(NaN, NaN, NaN, NaN);
        this.vh = this.rp = this.Hi = null;
        this.Jg = ""
    }
    la(X, Y);

    function Um(a) {
        a.nj = sc;
        a.Rg = 1;
        a.ii = null;
        a.hi = null;
        a.Qg = 1;
        a.Pg = null;
        a.gi = null;
        a.rb = [];
        a.mb = [];
        a.Mj = Vm;
        a.kj = Vm;
        a.Ki = 0;
        a.vi = 0
    }
    X.prototype.cloneProtected = function (a) {
        Y.prototype.cloneProtected.call(this, a);
        a.pa = this.pa;
        a.bb = this.bb.G();
        a.un = this.un.G();
        a.Qf = this.Qf;
        if (a.pa === X.Table) {
            a.nj = this.nj.G();
            a.Rg = this.Rg;
            a.ii = this.ii;
            a.hi = this.hi;
            a.Qg = this.Qg;
            a.Pg = this.Pg;
            a.gi = this.gi;
            var b = [];
            if (0 < this.rb.length)
                for (var c = this.rb, d = c.length, e = 0; e < d; e++)
                    if (void 0 !== c[e]) {
                        var f = c[e].copy();
                        f.cj(a);
                        b[e] = f
                    } a.rb = b;
            b = [];
            if (0 < this.mb.length)
                for (c = this.mb, d = c.length, e = 0; e < d; e++) void 0 !== c[e] && (f = c[e].copy(), f.cj(a), b[e] = f);
            a.mb = b;
            a.Mj =
                this.Mj;
            a.kj = this.kj;
            a.Ki = this.Ki;
            a.vi = this.vi
        }
        a.Yp = this.Yp;
        a.Sn = this.Sn.G();
        a.Tn = this.Tn.G();
        a.Pn = this.Pn;
        a.On = this.On;
        a.Rn = this.Rn;
        a.Qn = this.Qn;
        a.uj = this.uj;
        a.$g = this.$g;
        a.hb = this.hb;
        a.ci = this.ci;
        a.io = this.io;
        a.si = this.si;
        a.le = this.le;
        a.ql = this.ql;
        a.vg.assign(this.vg);
        a.Jg = this.Jg;
        null !== this.rp && (a.rp = this.rp)
    };
    X.prototype.sf = function (a) {
        Y.prototype.sf.call(this, a);
        a.W = this.W;
        for (var b = a.W.j, c = b.length, d = 0; d < c; d++) b[d].ng = a;
        a.Hi = null
    };
    X.prototype.copy = function () {
        var a = Y.prototype.copy.call(this);
        if (null !== a) {
            for (var b = this.W.j, c = b.length, d = 0; d < c; d++) {
                var e = b[d].copy();
                e.cj(a);
                e.Jj = null;
                var f = a.W,
                    g = f.count;
                f.Kb(g, e);
                f = a.part;
                if (null !== f) {
                    f.Fj = null;
                    null !== e.portId && f instanceof W && (f.Ih = !0);
                    var h = a.diagram;
                    null !== h && h.undoManager.isUndoingRedoing || f.Ya(te, "elements", a, null, e, null, g)
                }
            }
            return a
        }
        return null
    };
    t = X.prototype;
    t.toString = function () {
        return "Panel(" + this.type + ")#" + lb(this)
    };
    t.To = function (a) {
        Y.prototype.To.call(this, a);
        for (var b = this.W.j, c = b.length, d = 0; d < c; d++) b[d].To(a)
    };
    t.Qi = function (a, b) {
        if (this.pa === X.Grid) this.pa.bc(this, a, b);
        else if (this.pa === X.Graduated) this.pa.bc(this, a, b);
        else {
            this.pa === X.Table && (a.lineCap = "butt", Wm(this, a, !0, this.rb, !0), Wm(this, a, !1, this.mb, !0), Xm(this, a, !0, this.rb), Xm(this, a, !1, this.mb), Wm(this, a, !0, this.rb, !1), Wm(this, a, !1, this.mb, !1));
            var c = this.isClipping && this.pa === X.Spot;
            c && a.save();
            for (var d = this.zb(), e = this.W.j, f = e.length, g = 0; g < f; g++) {
                var h = e[g];
                c && h === d && (a.clipInsteadOfFill = !0);
                h.bc(a, b);
                c && h === d && (a.clipInsteadOfFill = !1)
            }
            c && (a.restore(),
                a.sc(!0))
        }
    };

    function Xm(a, b, c, d) {
        for (var e = d.length, f = a.actualBounds, g = a.naturalBounds, h = !0, k = 0; k < e; k++) {
            var l = d[k];
            if (void 0 !== l)
                if (h) h = !1;
                else if (0 !== l.actual) {
                if (c) {
                    if (l.position > f.height) continue
                } else if (l.position > f.width) continue;
                var m = l.separatorStrokeWidth;
                isNaN(m) && (m = c ? a.Rg : a.Qg);
                var n = l.separatorStroke;
                null === n && (n = c ? a.ii : a.Pg);
                if (0 !== m && null !== n) {
                    ii(a, b, n, !1, !1, g, f);
                    n = !1;
                    var p = l.separatorDashArray;
                    null === p && (p = c ? a.hi : a.gi);
                    null !== p && (n = !0, b.ht(p, 0));
                    b.beginPath();
                    p = l.position + m;
                    c ? p > f.height && (m -=
                        p - f.height) : p > f.width && (m -= p - f.width);
                    l = l.position + m / 2;
                    b.lineWidth = m;
                    m = a.bb;
                    c ? (l += m.top, p = f.width - m.right, b.moveTo(m.left, l), b.lineTo(p, l)) : (l += m.left, p = f.height - m.bottom, b.moveTo(l, m.top), b.lineTo(l, p));
                    b.stroke();
                    n && b.ft()
                }
            }
        }
    }

    function Wm(a, b, c, d, e) {
        for (var f = d.length, g = a.actualBounds, h = a.naturalBounds, k = 0; k < f; k++) {
            var l = d[k];
            if (void 0 !== l && null !== l.background && l.coversSeparators !== e && 0 !== l.actual) {
                var m = c ? g.height : g.width;
                if (!(l.position > m)) {
                    var n = l.uc(),
                        p = l.separatorStrokeWidth;
                    isNaN(p) && (p = c ? a.Rg : a.Qg);
                    var r = l.separatorStroke;
                    null === r && (r = c ? a.ii : a.Pg);
                    null === r && (p = 0);
                    n -= p;
                    p = l.position + p;
                    n += l.actual;
                    p + n > m && (n = m - p);
                    0 >= n || (m = a.bb, ii(a, b, l.background, !0, !1, h, g), c ? b.fillRect(m.left, p + m.top, g.width - (m.left + m.right), n) : b.fillRect(p +
                        m.left, m.top, n, g.height - (m.top + m.bottom)))
                }
            }
        }
    }

    function dk(a) {
        return "LineV" === a || "BarV" === a
    }
    t.hk = function (a, b, c, d, e) {
        var f = this.$d(),
            g = this.transform,
            h = 1 / (g.m11 * g.m22 - g.m12 * g.m21),
            k = g.m22 * h,
            l = -g.m12 * h,
            m = -g.m21 * h,
            n = g.m11 * h,
            p = h * (g.m21 * g.dy - g.m22 * g.dx),
            r = h * (g.m12 * g.dx - g.m11 * g.dy);
        if (null !== this.areaBackground) return g = this.actualBounds, J.Uc(g.left, g.top, g.right, g.bottom, a, b, c, d, e);
        if (null !== this.background) return f = a * k + b * m + p, h = a * l + b * n + r, a = c * k + d * m + p, k = c * l + d * n + r, e.h(0, 0), c = this.naturalBounds, f = J.Uc(0, 0, c.width, c.height, f, h, a, k, e), e.transform(g), f;
        f || (k = 1, m = l = 0, n = 1, r = p = 0);
        h = a * k + b * m + p;
        a = a * l + b *
            n + r;
        k = c * k + d * m + p;
        c = c * l + d * n + r;
        e.h(k, c);
        d = (k - h) * (k - h) + (c - a) * (c - a);
        l = !1;
        n = this.W.j;
        r = n.length;
        m = I.alloc();
        p = null;
        b = Infinity;
        var q = null,
            u = this.isClipping && this.pa === X.Spot;
        u && (q = I.alloc(), p = this.zb(), (l = p.hk(h, a, k, c, q)) && (b = (h - q.x) * (h - q.x) + (a - q.y) * (a - q.y)));
        for (var v = 0; v < r; v++) {
            var w = n[v];
            w.visible && w !== p && w.hk(h, a, k, c, m) && (l = !0, w = (h - m.x) * (h - m.x) + (a - m.y) * (a - m.y), w < d && (d = w, e.set(m)))
        }
        u && (b > d && e.set(q), I.free(q));
        I.free(m);
        f && e.transform(g);
        return l
    };
    t.o = function (a) {
        if (!0 !== qj(this)) {
            Y.prototype.o.call(this, a);
            a = null;
            if (this.pa === X.Auto || this.pa === X.Link) a = this.zb();
            for (var b = this.W.j, c = b.length, d = 0; d < c; d++) {
                var e = b[d];
                (e === a || e.isPanelMain) && e.o(!0);
                if (!e.desiredSize.v()) {
                    var f = kl(e, !1);
                    (e instanceof xg || e instanceof X || e instanceof Wg || f !== zg) && e.o(!0)
                }
            }
        }
    };
    t.om = function () {
        if (!1 === qj(this)) {
            lj(this, !0);
            ll(this, !0);
            for (var a = this.W.j, b = a.length, c = 0; c < b; c++) a[c].om()
        }
    };
    t.ml = function () {
        if (0 !== (this.F & 2048) === !1) {
            Al(this, !0);
            Bl(this, !0);
            for (var a = this.W.j, b = a.length, c = 0; c < b; c++) a[c].Fv()
        }
    };
    t.Fv = function () {
        Bl(this, !0);
        for (var a = this.W.j, b = a.length, c = 0; c < b; c++) a[c].Fv()
    };
    t.sm = function (a, b, c, d) {
        var e = this.vg;
        e.h(0, 0, 0, 0);
        var f = this.desiredSize,
            g = this.minSize;
        void 0 === c && (c = g.width, d = g.height);
        c = Math.max(c, g.width);
        d = Math.max(d, g.height);
        var h = this.maxSize;
        isNaN(f.width) || (a = Math.min(f.width, h.width));
        isNaN(f.height) || (b = Math.min(f.height, h.height));
        a = Math.max(c, a);
        b = Math.max(d, b);
        var k = this.bb;
        a = Math.max(a - k.left - k.right, 0);
        b = Math.max(b - k.top - k.bottom, 0);
        var l = this.W.j;
        0 !== l.length && this.pa.measure(this, a, b, l, e, c, d);
        a = e.width + k.left + k.right;
        k = e.height + k.top + k.bottom;
        isFinite(f.width) && (a = f.width);
        isFinite(f.height) && (k = f.height);
        a = Math.min(h.width, a);
        k = Math.min(h.height, k);
        a = Math.max(g.width, a);
        k = Math.max(g.height, k);
        a = Math.max(c, a);
        k = Math.max(d, k);
        Vb(e, a, k);
        Vb(this.naturalBounds, a, k);
        hl(this, 0, 0, a, k)
    };
    t.zb = function () {
        if (null === this.Hi) {
            var a = this.W.j,
                b = a.length;
            if (0 === b) return null;
            for (var c = 0; c < b; c++) {
                var d = a[c];
                if (!0 === d.isPanelMain) return this.Hi = d
            }
            this.Hi = a[0]
        }
        return this.Hi
    };

    function wm(a) {
        return null !== a.part ? a.part.locationObject : null
    }
    t.Fh = function (a, b, c, d) {
        var e = this.W.j;
        this.actualBounds.h(a, b, c, d);
        if (0 !== e.length) {
            if (!this.desiredSize.v()) {
                a = kl(this, !0);
                var f = this.measuredBounds;
                b = f.width;
                f = f.height;
                var g = this.fh,
                    h = g.left + g.right;
                g = g.top + g.bottom;
                b === c && f === d && (a = zg);
                switch (a) {
                    case zg:
                        if (b > c || f > d) this.o(), this.measure(b > c ? c : b, f > d ? d : f, 0, 0);
                        break;
                    case vd:
                        this.o(!0);
                        this.measure(c + h, d + g, 0, 0);
                        break;
                    case Wk:
                        this.o(!0);
                        this.measure(c + h, f + g, 0, 0);
                        break;
                    case Xk:
                        this.o(!0), this.measure(b + h, d + g, 0, 0)
                }
            }
            this.pa.arrange(this, e, this.vg)
        }
    };
    t.Hh = function (a) {
        var b = this.naturalBounds,
            c = wm(this);
        if (fc(0, 0, b.width, b.height, a.x, a.y)) {
            b = this.W.j;
            for (var d = b.length, e = I.allocAt(0, 0); d--;) {
                var f = b[d];
                if (f.visible || f === c)
                    if (zb(e.set(a), f.transform), f.aa(e)) return I.free(e), !0
            }
            I.free(e);
            return null === this.gb && null === this.dc ? !1 : !0
        }
        return !1
    };
    t.it = function (a) {
        if (this.Jk === a) return this;
        for (var b = this.W.j, c = b.length, d = 0; d < c; d++) {
            var e = b[d].it(a);
            if (null !== e) return e
        }
        return null
    };
    t.Km = function (a, b) {
        b(this, a);
        if (a instanceof X) {
            a = a.W.j;
            for (var c = a.length, d = 0; d < c; d++) this.Km(a[d], b)
        }
    };

    function Dj(a, b) {
        Ym(a, a, b)
    }

    function Ym(a, b, c) {
        c(b);
        b = b.W.j;
        for (var d = b.length, e = 0; e < d; e++) {
            var f = b[e];
            f instanceof X && Ym(a, f, c)
        }
    }

    function Zm(a, b) {
        $m(a, a, b)
    }

    function $m(a, b, c) {
        c(b);
        if (b instanceof X) {
            b = b.W.j;
            for (var d = b.length, e = 0; e < d; e++) $m(a, b[e], c)
        }
    }
    t.hm = function (a) {
        return an(this, this, a)
    };

    function an(a, b, c) {
        if (c(b)) return b;
        if (b instanceof X) {
            b = b.W.j;
            for (var d = b.length, e = 0; e < d; e++) {
                var f = an(a, b[e], c);
                if (null !== f) return f
            }
        }
        return null
    }
    t.Xa = function (a) {
        if (this.name === a) return this;
        var b = this.W.j,
            c = b.length;
        null === this.si && null === this.le || (c = bn(this));
        for (var d = 0; d < c; d++) {
            var e = b[d];
            if (e instanceof X) {
                var f = e.Xa(a);
                if (null !== f) return f
            }
            if (e.name === a) return e
        }
        return null
    };

    function cn(a) {
        a = a.W.j;
        for (var b = a.length, c = 0, d = 0; d < b; d++) {
            var e = a[d];
            if (e instanceof X) c = Math.max(c, cn(e));
            else if (e instanceof Lf) {
                a: {
                    switch (e.Zk) {
                        case "None":
                        case "Square":
                        case "Ellipse":
                        case "Circle":
                        case "LineH":
                        case "LineV":
                        case "FramedRectangle":
                        case "RoundedRectangle":
                        case "Line1":
                        case "Line2":
                        case "Border":
                        case "Cube1":
                        case "Cube2":
                        case "Junction":
                        case "Cylinder1":
                        case "Cylinder2":
                        case "Cylinder3":
                        case "Cylinder4":
                        case "PlusLine":
                        case "XLine":
                        case "ThinCross":
                        case "ThickCross":
                            e = 0;
                            break a
                    }
                    e =
                    e.th / 2 * e.Oj * e.uf()
                }
                c = Math.max(c, e)
            }
        }
        return c
    }
    t.$d = function () {
        return !(this.type === X.TableRow || this.type === X.TableColumn)
    };
    t.Ub = function (a, b, c) {
        if (!1 === this.pickable) return null;
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        if (rj(this)) return null;
        var d = this.naturalBounds,
            e = 1 / this.uf(),
            f = this.$d(),
            g = f ? a : zb(I.allocAt(a.x, a.y), this.transform),
            h = this.diagram,
            k = 10,
            l = 5;
        null !== h && (k = h.mm("extraTouchArea"), l = k / 2);
        if (fc(-(l * e), -(l * e), d.width + k * e, d.height + k * e, g.x, g.y)) {
            if (!this.isAtomic) {
                e = this.W.j;
                var m = e.length;
                h = I.alloc();
                l = (k = this.isClipping && this.pa === X.Spot) ? this.zb() : null;
                if (k && (l.$d() ? zb(h.set(a), l.transform) : h.set(a), !l.aa(h))) return I.free(h),
                    f || I.free(g), null;
                for (var n = wm(this); m--;) {
                    var p = e[m];
                    if (p.visible || p === n)
                        if (p.$d() ? zb(h.set(a), p.transform) : h.set(a), !k || p !== l) {
                            var r = null;
                            p instanceof X ? r = p.Ub(h, b, c) : !0 === p.pickable && p.aa(h) && (r = p);
                            if (null !== r && (null !== b && (r = b(r)), null !== r && (null === c || c(r)))) return I.free(h), f || I.free(g), r
                        }
                }
                I.free(h)
            }
            if (null === this.background && null === this.areaBackground) return f || I.free(g), null;
            a = fc(0, 0, d.width, d.height, g.x, g.y) ? this : null;
            f || I.free(g);
            return a
        }
        f || I.free(g);
        return null
    };
    t.Ti = function (a, b, c, d) {
        if (!1 === this.pickable) return !1;
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        var e = this.naturalBounds,
            f = this.$d(),
            g = f ? a : zb(I.allocAt(a.x, a.y), this.transform);
        e = fc(0, 0, e.width, e.height, g.x, g.y);
        if (this.type === X.TableRow || this.type === X.TableColumn || e) {
            if (!this.isAtomic) {
                for (var h = this.W.j, k = h.length, l = I.alloc(), m = wm(this); k--;) {
                    var n = h[k];
                    if (n.visible || n === m) {
                        n.$d() ? zb(l.set(a), n.transform) : l.set(a);
                        var p = n;
                        n = n instanceof X ? n : null;
                        (null !== n ? n.Ti(l, b, c, d) : p.aa(l)) && !1 !== p.pickable &&
                            (null !== b && (p = b(p)), null === p || null !== c && !c(p) || d.add(p))
                    }
                }
                I.free(l)
            }
            f || I.free(g);
            return e && (null !== this.background || null !== this.areaBackground)
        }
        f || I.free(g);
        return !1
    };
    t.tf = function (a, b, c, d, e, f) {
        if (!1 === this.pickable) return !1;
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        var g = f;
        void 0 === f && (g = rd.alloc(), g.reset());
        g.multiply(this.transform);
        if (this.Gh(a, g)) return dn(this, b, c, e), void 0 === f && rd.free(g), !0;
        if (this.Gc(a, g)) {
            if (!this.isAtomic)
                for (var h = wm(this), k = this.W.j, l = k.length; l--;) {
                    var m = k[l];
                    if (m.visible || m === h) {
                        var n = m.actualBounds,
                            p = this.naturalBounds;
                        if (!(n.x > p.width || n.y > p.height || 0 > n.x + n.width || 0 > n.y + n.height)) {
                            n = m;
                            m = m instanceof X ? m : null;
                            p = rd.alloc();
                            p.set(g);
                            if (null !== m ? m.tf(a, b, c, d, e, p) : jl(n, a, d, p)) null !== b && (n = b(n)), null === n || null !== c && !c(n) || e.add(n);
                            rd.free(p)
                        }
                    }
                }
            void 0 === f && rd.free(g);
            return d
        }
        void 0 === f && rd.free(g);
        return !1
    };

    function dn(a, b, c, d) {
        for (var e = a.W.j, f = e.length; f--;) {
            var g = e[f];
            if (g.visible) {
                var h = g.actualBounds,
                    k = a.naturalBounds;
                h.x > k.width || h.y > k.height || 0 > h.x + h.width || 0 > h.y + h.height || (g instanceof X && dn(g, b, c, d), null !== b && (g = b(g)), null === g || null !== c && !c(g) || d.add(g))
            }
        }
    }
    t.Ag = function (a, b, c, d, e, f) {
        if (!1 === this.pickable) return !1;
        void 0 === c && (c = null);
        void 0 === d && (d = null);
        var g = this.naturalBounds,
            h = this.$d(),
            k = h ? a : zb(I.allocAt(a.x, a.y), this.transform),
            l = h ? b : zb(I.allocAt(b.x, b.y), this.transform),
            m = k.Ae(l),
            n = 0 < k.x && k.x < g.width && 0 < k.y && k.y < g.height || Ab(k.x, k.y, 0, 0, 0, g.height) <= m || Ab(k.x, k.y, 0, g.height, g.width, g.height) <= m || Ab(k.x, k.y, g.width, g.height, g.width, 0) <= m || Ab(k.x, k.y, g.width, 0, 0, 0) <= m;
        g = k.dd(0, 0) <= m && k.dd(0, g.height) <= m && k.dd(g.width, 0) <= m && k.dd(g.width, g.height) <=
            m;
        h || (I.free(k), I.free(l));
        if (n) {
            if (!this.isAtomic) {
                k = I.alloc();
                l = I.alloc();
                m = wm(this);
                for (var p = this.W.j, r = p.length; r--;) {
                    var q = p[r];
                    if (q.visible || q === m) {
                        var u = q.actualBounds,
                            v = this.naturalBounds;
                        if (!h || !(u.x > v.width || u.y > v.height || 0 > u.x + u.width || 0 > u.y + u.height))
                            if (q.$d() ? (u = q.transform, zb(k.set(a), u), zb(l.set(b), u)) : (k.set(a), l.set(b)), u = q, q = q instanceof X ? q : null, null !== q ? q.Ag(k, l, c, d, e, f) : u.Lx(k, l, e)) null !== c && (u = c(u)), null === u || null !== d && !d(u) || f.add(u)
                    }
                }
                I.free(k);
                I.free(l)
            }
            return e ? n : g
        }
        return !1
    };

    function Bm(a) {
        var b = null;
        a instanceof Lf && (b = a.spot1, b === Zc && (b = null), a = a.geometry, null !== a && null === b && (b = a.spot1));
        null === b && (b = vc);
        return b
    }

    function Cm(a) {
        var b = null;
        a instanceof Lf && (b = a.spot2, b === Zc && (b = null), a = a.geometry, null !== a && null === b && (b = a.spot2));
        null === b && (b = Gc);
        return b
    }
    t.add = function (a) {
        this.Kb(this.W.count, a)
    };
    t.L = function (a) {
        return this.W.L(a)
    };
    t.Kb = function (a, b) {
        b instanceof U && B("Cannot add a Part to a Panel: " + b + "; use a Panel instead");
        if (this === b || this.Dg(b)) this === b && B("Cannot make a Panel contain itself: " + this.toString()), B("Cannot make a Panel indirectly contain itself: " + this.toString() + " already contains " + b.toString());
        var c = b.panel;
        null !== c && c !== this && B("Cannot add a GraphObject that already belongs to another Panel to this Panel: " + b.toString() + ", already contained by " + c.toString() + ", cannot be shared by this Panel: " + this.toString());
        this.pa !== X.Grid || b instanceof Lf || B("Can only add Shapes to a Grid Panel, not: " + b);
        this.pa !== X.Graduated || b instanceof Lf || b instanceof Wg || B("Can only add Shapes or TextBlocks to a Graduated Panel, not: " + b);
        b.cj(this);
        b.Jj = null;
        if (null !== this.itemArray) {
            var d = b.data;
            null !== d && "object" === typeof d && (null === this.Jd && (this.Jd = new H), this.Jd.add(d, b))
        }
        var e = this.W;
        d = -1;
        if (c === this) {
            for (var f = -1, g = this.W.j, h = g.length, k = 0; k < h; k++)
                if (g[k] === b) {
                    f = k;
                    break
                } if (-1 !== f) {
                if (f === a || f + 1 >= e.count && a >= e.count) return;
                e.lb(f);
                d = f
            } else B("element " + b.toString() + " has panel " + c.toString() + " but is not contained by it.")
        }
        if (0 > a || a > e.count) a = e.count;
        e.Kb(a, b);
        if (0 === a || b.isPanelMain) this.Hi = null;
        qj(this) || this.o();
        b.o(!1);
        null !== b.portId ? this.Ih = !0 : b instanceof X && !0 === b.Ih && (this.Ih = !0);
        this.$g = null;
        c = this.part;
        null !== c && (c.Fj = null, c.gh = NaN, this.Ih && c instanceof W && (c.Ih = !0), c.Ih && c instanceof W && (c.rc = null), e = this.diagram, null !== e && e.undoManager.isUndoingRedoing || (-1 !== d && c.Ya(ue, "elements", this, b, null, d, null), c.Ya(te,
            "elements", this, null, b, null, a), this.Eg() || en(this, b, !1)))
    };

    function fn(a, b) {
        a.F = b ? a.F | 16777216 : a.F & -16777217
    }
    t.remove = function (a) {
        for (var b = this.W.j, c = b.length, d = -1, e = 0; e < c; e++)
            if (b[e] === a) {
                d = e;
                break
            } - 1 !== d && this.Fc(d, !0)
    };
    t.lb = function (a) {
        0 <= a && this.Fc(a, !0)
    };
    t.Fc = function (a, b) {
        var c = this.W,
            d = c.L(a);
        d.Jj = null;
        d.cj(null);
        if (null !== this.Jd) {
            var e = d.data;
            "object" === typeof e && this.Jd.remove(e)
        }
        c.lb(a);
        lj(this, !1);
        this.o();
        this.Hi === d && (this.Hi = null);
        this.$g = null;
        var f = this.part;
        null !== f && (f.Fj = null, f.gh = NaN, f.Lb(), f instanceof W && (d instanceof X ? d.Km(d, function (a, c) {
            Sl(f, c, b)
        }) : Sl(f, d, b)), c = this.diagram, null !== c && c.undoManager.isUndoingRedoing || f.Ya(ue, "elements", this, d, null, a, null))
    };
    X.prototype.getRowDefinition = function (a) {
        0 > a && va(a, ">= 0", X, "getRowDefinition:idx");
        a = Math.round(a);
        var b = this.rb;
        if (void 0 === b) return null;
        if (void 0 === b[a]) {
            var c = new Rj;
            c.cj(this);
            c.isRow = !0;
            c.index = a;
            b[a] = c
        }
        return b[a]
    };
    X.prototype.Yv = function (a) {
        0 > a && va(a, ">= 0", X, "removeRowDefinition:idx");
        a = Math.round(a);
        var b = this.rb;
        void 0 !== b && (this.Ya(ue, "coldefs", this, b[a], null, a, null), b[a] && delete b[a], this.o())
    };
    X.prototype.getColumnDefinition = function (a) {
        0 > a && va(a, ">= 0", X, "getColumnDefinition:idx");
        a = Math.round(a);
        var b = this.mb;
        if (void 0 === b) return null;
        if (void 0 === b[a]) {
            var c = new Rj;
            c.cj(this);
            c.isRow = !1;
            c.index = a;
            b[a] = c
        }
        return b[a]
    };
    t = X.prototype;
    t.Wv = function (a) {
        0 > a && va(a, ">= 0", X, "removeColumnDefinition:idx");
        a = Math.round(a);
        var b = this.mb;
        void 0 !== b && (this.Ya(ue, "coldefs", this, b[a], null, a, null), b[a] && delete b[a], this.o())
    };
    t.pz = function (a) {
        if (0 > a || this.type !== X.Table) return -1;
        for (var b = 0, c = this.rb, d = c.length, e = this.Ki; e < d; e++) {
            var f = c[e];
            if (void 0 !== f && (b += f.total, a < b)) break
        }
        return e
    };
    t.hz = function (a) {
        if (0 > a || this.type !== X.Table) return -1;
        for (var b = 0, c = this.mb, d = c.length, e = this.vi; e < d; e++) {
            var f = c[e];
            if (void 0 !== f && (b += f.total, a < b)) break
        }
        return e
    };
    t.Kz = function (a, b) {
        void 0 === b && (b = new I(NaN, NaN));
        if (this.type !== X.Graduated) return b.h(NaN, NaN), b;
        a = Math.min(Math.max(a, this.graduatedMin), this.graduatedMax);
        var c = this.zb();
        c.geometry.yv((a - this.graduatedMin) / this.graduatedRange, b);
        return c.transform.ra(b)
    };
    t.Lz = function (a) {
        if (this.type !== X.Graduated) return NaN;
        var b = this.zb();
        b.transform.Vd(a);
        return b.geometry.Px(a) * this.graduatedRange + this.graduatedMin
    };

    function Il(a) {
        a = a.ci;
        return null !== a && a.s
    }

    function yg(a) {
        var b = a.ci;
        if (null === b) null !== a.data && B("Template cannot have .data be non-null: " + a), a.ci = b = new E;
        else if (b.s) return;
        var c = new E;
        fn(a, !1);
        a.Km(a, function (a, d) {
            var e = d.$a;
            if (null !== e)
                for (Fl(d, !1), e = e.iterator; e.next();) {
                    var f = e.value;
                    f.mode === gn && Fl(d, !0);
                    var g = f.sourceName;
                    null !== g && ("/" === g && fn(a, !0), g = gl(f, a, d), null !== g && (c.add(g), null === g.Pl && (g.Pl = new E), g.Pl.add(f)));
                    b.add(f)
                }
            if (d instanceof X && d.type === X.Table) {
                if (0 < d.rb.length)
                    for (a = d.rb, e = a.length, f = 0; f < e; f++)
                        if (g = a[f], void 0 !==
                            g && null !== g.$a)
                            for (var h = g.$a.iterator; h.next();) {
                                var k = h.value;
                                k.bd = g;
                                k.Qp = 2;
                                k.Vl = g.index;
                                b.add(k)
                            }
                if (0 < d.mb.length)
                    for (d = d.mb, a = d.length, e = 0; e < a; e++)
                        if (f = d[e], void 0 !== f && null !== f.$a)
                            for (g = f.$a.iterator; g.next();) h = g.value, h.bd = f, h.Qp = 1, h.Vl = f.index, b.add(h)
            }
        });
        for (var d = c.iterator; d.next();) {
            var e = d.value;
            if (null !== e.Pl) {
                Fl(e, !0);
                for (var f = e.Pl.iterator; f.next();) {
                    var g = f.value;
                    null === e.$a && (e.$a = new E);
                    e.$a.add(g)
                }
            }
            e.Pl = null
        }
        for (d = b.iterator; d.next();)
            if (e = d.value, f = e.bd, null !== f) {
                e.bd = null;
                var h =
                    e.targetProperty,
                    k = h.indexOf(".");
                0 < k && f instanceof X && (g = h.substring(0, k), h = h.substr(k + 1), k = f.Xa(g), null !== k ? (f = k, e.targetProperty = h) : wa('Warning: unable to find GraphObject named "' + g + '" for Binding: ' + e.toString()));
                f instanceof Rj ? (g = lb(f.panel), e.gj = void 0 === g ? -1 : g, f.panel.Jk = e.gj) : f instanceof Y ? (g = lb(f), e.gj = void 0 === g ? -1 : g, f.Jk = e.gj) : B("Unknown type of binding target: " + f)
            } b.freeze();
        a instanceof U && a.Wb() && a.yb()
    }
    t.Wy = function () {
        var a = this.copy();
        Zm(a, function (a) {
            a instanceof X && (a.ci = null, a.hb = null);
            var b = a.$a;
            null !== b && (a.$a = null, b.each(function (b) {
                a.bind(b.copy())
            }));
            b = a.Kg;
            null !== b && (a.Kg = null, b.each(function (b) {
                Jl(a, b.value.copy())
            }))
        });
        return a
    };
    t.Ba = function (a) {
        var b = this.ci;
        if (null !== b)
            for (void 0 === a && (a = ""), b = b.iterator; b.next();) {
                var c = b.value,
                    d = c.sourceProperty;
                if ("" === a || "" === d || d === a)
                    if (d = c.targetProperty, null !== c.converter || "" !== d) {
                        d = this.data;
                        var e = c.sourceName;
                        if (null !== e) d = "" === e ? this : "/" === e ? this : "." === e ? this : ".." === e ? this : this.Xa(e);
                        else {
                            var f = this.diagram;
                            null !== f && c.isToModel && (d = f.model.modelData)
                        }
                        if (null !== d) {
                            f = this;
                            var g = c.gj;
                            if (-1 !== g) {
                                if (f = this.it(g), null === f) continue
                            } else null !== c.bd && (f = c.bd);
                            "/" === e ? d = f.part : "." ===
                                e ? d = f : ".." === e && (d = f.panel);
                            e = c.Qp;
                            if (0 !== e) {
                                if (!(f instanceof X)) continue;
                                1 === e ? f = f.getColumnDefinition(c.Vl) : 2 === e && (f = f.getRowDefinition(c.Vl))
                            }
                            void 0 !== f && c.tw(f, d)
                        }
                    }
            }
    };

    function hn(a, b) {
        a = a.W.j;
        for (var c = a.length, d = b.length, e = 0, f = null; e < c && !(f = a[e], f instanceof X && null !== f.data);) e++, f = a[e];
        if (c - e !== d) return !0;
        if (null === f) return 0 < d;
        for (var g = 0; e < c && g < d;) {
            f = a[e];
            if (!(f instanceof X) || f.data !== b[g]) return !0;
            e++;
            g++
        }
        return !1
    }

    function bn(a) {
        if (a.type === X.Spot || a.type === X.Auto) return Math.min(a.W.length, 1);
        if (a.type === X.Link) {
            a = a.W;
            for (var b = a.length, c = 0; c < b; c++) {
                var d = a.L(c);
                if (!(d instanceof Lf && d.isPanelMain)) break
            }
            return c
        }
        return a.type === X.Table && 0 < a.W.length && (a = a.W.L(0), a.isPanelMain && a instanceof X && (a.type === X.TableRow || a.type === X.TableColumn)) ? 1 : 0
    }
    t.Gt = function () {
        for (var a = bn(this); this.W.length > a;) this.Fc(this.W.length - 1, !1);
        a = this.itemArray;
        if (null !== a)
            for (var b = a.length, c = 0; c < b; c++) jn(this, a[c], c)
    };
    t.Kx = function (a) {
        return void 0 === a || null === a || null === this.Jd ? null : this.Jd.H(a)
    };

    function jn(a, b, c) {
        if (!(void 0 === b || null === b || 0 > c)) {
            var d = kn(a, b),
                e = a.itemTemplateMap,
                f = null;
            null !== e && (f = e.H(d));
            null === f && (ln || (ln = !0, wa('No item template Panel found for category "' + d + '" on ' + a), wa("  Using default item template."), d = new X, e = new Wg, e.bind(new Ji("text", "", Ja)), d.add(e), mn = d), f = mn);
            d = f;
            null !== d && (yg(d), d = d.copy(), 0 !== (d.F & 16777216) && (e = a.Ui(), null !== e && fn(e, !0)), "object" === typeof b && (null === a.Jd && (a.Jd = new H), a.Jd.add(b, d)), e = c + bn(a), a.Kb(e, d), d.hb = b, yn(a, e, c), d.hb = null, d.data =
                b)
        }
    }

    function yn(a, b, c) {
        for (a = a.W; b < a.length;) {
            var d = a.L(b);
            if (d instanceof X) {
                var e = b,
                    f = c;
                d.type === X.TableRow ? d.row = e : d.type === X.TableColumn && (d.column = e);
                d.itemIndex = f
            }
            b++;
            c++
        }
    }

    function kn(a, b) {
        if (null === b) return "";
        a = a.ql;
        if ("function" === typeof a) a = a(b);
        else if ("string" === typeof a && "object" === typeof b) {
            if ("" === a) return "";
            a = zn(b, a)
        } else return "";
        if (void 0 === a) return "";
        if ("string" === typeof a) return a;
        B("Panel.getCategoryForItemData found a non-string category for " + b + ": " + a);
        return ""
    }

    function en(a, b, c) {
        var d = b.enabledChanged;
        null !== d && d(b, c);
        if (b instanceof X) {
            b = b.W.j;
            d = b.length;
            for (var e = 0; e < d; e++) {
                var f = b[e];
                c && f instanceof X && !f.isEnabled || en(a, f, c)
            }
        }
    }

    function An(a, b) {
        Nl.add(a, b)
    }
    ma.Object.defineProperties(X.prototype, {
        type: {
            get: function () {
                return this.pa
            },
            set: function (a) {
                var b = this.pa;
                b !== a && (this.pa = a, this.pa === X.Grid ? this.isAtomic = !0 : this.pa === X.Table && Um(this), this.o(), this.g("type", b, a))
            }
        },
        elements: {
            get: function () {
                return this.W.iterator
            }
        },
        naturalBounds: {
            get: function () {
                return this.oc
            }
        },
        padding: {
            get: function () {
                return this.bb
            },
            set: function (a) {
                "number" ===
                typeof a ? (0 > a && va(a, ">= 0", X, "padding"), a = new oc(a)) : (0 > a.left && va(a.left, ">= 0", X, "padding:value.left"), 0 > a.right && va(a.right, ">= 0", X, "padding:value.right"), 0 > a.top && va(a.top, ">= 0", X, "padding:value.top"), 0 > a.bottom && va(a.bottom, ">= 0", X, "padding:value.bottom"));
                var b = this.bb;
                b.w(a) || (this.bb = a = a.G(), this.o(), this.g("padding", b, a))
            }
        },
        defaultAlignment: {
            get: function () {
                return this.un
            },
            set: function (a) {
                var b = this.un;
                b.w(a) || (this.un = a = a.G(), this.o(), this.g("defaultAlignment",
                    b, a))
            }
        },
        defaultStretch: {
            get: function () {
                return this.Qf
            },
            set: function (a) {
                var b = this.Qf;
                b !== a && (this.Qf = a, this.o(), this.g("defaultStretch", b, a))
            }
        },
        defaultSeparatorPadding: {
            get: function () {
                return void 0 === this.nj ? sc : this.nj
            },
            set: function (a) {
                if (void 0 !== this.nj) {
                    "number" === typeof a && (a = new oc(a));
                    var b = this.nj;
                    b.w(a) || (this.nj = a = a.G(), this.o(), this.g("defaultSeparatorPadding", b, a))
                }
            }
        },
        defaultRowSeparatorStroke: {
            get: function () {
                return void 0 ===
                    this.ii ? null : this.ii
            },
            set: function (a) {
                var b = this.ii;
                b !== a && (null === a || "string" === typeof a || a instanceof tl) && (a instanceof tl && a.freeze(), this.ii = a, this.M(), this.g("defaultRowSeparatorStroke", b, a))
            }
        },
        defaultRowSeparatorStrokeWidth: {
            get: function () {
                return void 0 === this.Rg ? 1 : this.Rg
            },
            set: function (a) {
                if (void 0 !== this.Rg) {
                    var b = this.Rg;
                    b !== a && isFinite(a) && 0 <= a && (this.Rg = a, this.o(), this.g("defaultRowSeparatorStrokeWidth", b, a))
                }
            }
        },
        defaultRowSeparatorDashArray: {
            get: function () {
                return void 0 === this.hi ? null : this.hi
            },
            set: function (a) {
                if (void 0 !== this.hi) {
                    var b = this.hi;
                    if (b !== a) {
                        if (null !== a) {
                            for (var c = a.length, d = 0, e = 0; e < c; e++) {
                                var f = a[e];
                                "number" === typeof f && 0 <= f && isFinite(f) || B("defaultRowSeparatorDashArray value " + f + " at index " + e + " must be a positive number or zero.");
                                d += f
                            }
                            if (0 === d) {
                                if (null === b) return;
                                a = null
                            }
                        }
                        this.hi = a;
                        this.M();
                        this.g("defaultRowSeparatorDashArray", b, a)
                    }
                }
            }
        },
        defaultColumnSeparatorStroke: {
            get: function () {
                return void 0 ===
                    this.Pg ? null : this.Pg
            },
            set: function (a) {
                if (void 0 !== this.Pg) {
                    var b = this.Pg;
                    b !== a && (null === a || "string" === typeof a || a instanceof tl) && (a instanceof tl && a.freeze(), this.Pg = a, this.M(), this.g("defaultColumnSeparatorStroke", b, a))
                }
            }
        },
        defaultColumnSeparatorStrokeWidth: {
            get: function () {
                return void 0 === this.Qg ? 1 : this.Qg
            },
            set: function (a) {
                if (void 0 !== this.Qg) {
                    var b = this.Qg;
                    b !== a && isFinite(a) && 0 <= a && (this.Qg = a, this.o(), this.g("defaultColumnSeparatorStrokeWidth", b, a))
                }
            }
        },
        defaultColumnSeparatorDashArray: {
            get: function () {
                return void 0 === this.gi ? null : this.gi
            },
            set: function (a) {
                if (void 0 !== this.gi) {
                    var b = this.gi;
                    if (b !== a) {
                        if (null !== a) {
                            for (var c = a.length, d = 0, e = 0; e < c; e++) {
                                var f = a[e];
                                "number" === typeof f && 0 <= f && isFinite(f) || B("defaultColumnSeparatorDashArray value " + f + " at index " + e + " must be a positive number or zero.");
                                d += f
                            }
                            if (0 === d) {
                                if (null === b) return;
                                a = null
                            }
                        }
                        this.gi = a;
                        this.M();
                        this.g("defaultColumnSeparatorDashArray", b, a)
                    }
                }
            }
        },
        viewboxStretch: {
            get: function () {
                return this.Yp
            },
            set: function (a) {
                var b = this.Yp;
                b !== a && (this.Yp = a, this.o(), this.g("viewboxStretch", b, a))
            }
        },
        gridCellSize: {
            get: function () {
                return this.Sn
            },
            set: function (a) {
                var b = this.Sn;
                if (!b.w(a)) {
                    a.v() && 0 !== a.width && 0 !== a.height || B("Invalid Panel.gridCellSize: " + a);
                    this.Sn = a.G();
                    var c = this.diagram;
                    null !== c && this === c.grid && mj(c);
                    this.M();
                    this.g("gridCellSize", b, a)
                }
            }
        },
        gridOrigin: {
            get: function () {
                return this.Tn
            },
            set: function (a) {
                var b = this.Tn;
                if (!b.w(a)) {
                    a.v() ||
                        B("Invalid Panel.gridOrigin: " + a);
                    this.Tn = a.G();
                    var c = this.diagram;
                    null !== c && this === c.grid && mj(c);
                    this.M();
                    this.g("gridOrigin", b, a)
                }
            }
        },
        graduatedMin: {
            get: function () {
                return this.Pn
            },
            set: function (a) {
                var b = this.Pn;
                b !== a && (this.Pn = a, this.o(), this.g("graduatedMin", b, a), el(this) && (a = this.part, null !== a && fl(this, a, "graduatedRange")))
            }
        },
        graduatedMax: {
            get: function () {
                return this.On
            },
            set: function (a) {
                var b = this.On;
                b !== a && (this.On = a, this.o(), this.g("graduatedMax",
                    b, a), el(this) && (a = this.part, null !== a && fl(this, a, "graduatedRange")))
            }
        },
        graduatedRange: {
            get: function () {
                return this.graduatedMax - this.graduatedMin
            }
        },
        graduatedTickUnit: {
            get: function () {
                return this.Rn
            },
            set: function (a) {
                var b = this.Rn;
                b !== a && 0 < a && (this.Rn = a, this.o(), this.g("graduatedTickUnit", b, a))
            }
        },
        graduatedTickBase: {
            get: function () {
                return this.Qn
            },
            set: function (a) {
                var b = this.Qn;
                b !== a && (this.Qn = a, this.o(), this.g("graduatedTickBase",
                    b, a))
            }
        },
        Ih: {
            get: function () {
                return 0 !== (this.F & 8388608)
            },
            set: function (a) {
                0 !== (this.F & 8388608) !== a && (this.F ^= 8388608)
            }
        },
        rowCount: {
            get: function () {
                return void 0 === this.rb ? 0 : this.rb.length
            }
        },
        columnCount: {
            get: function () {
                return void 0 === this.mb ? 0 : this.mb.length
            }
        },
        rowSizing: {
            get: function () {
                return void 0 === this.Mj ? Vm : this.Mj
            },
            set: function (a) {
                if (void 0 !== this.Mj) {
                    var b = this.Mj;
                    b !== a && (this.Mj =
                        a, this.o(), this.g("rowSizing", b, a))
                }
            }
        },
        columnSizing: {
            get: function () {
                return void 0 === this.kj ? Vm : this.kj
            },
            set: function (a) {
                if (void 0 !== this.kj) {
                    var b = this.kj;
                    b !== a && (this.kj = a, this.o(), this.g("columnSizing", b, a))
                }
            }
        },
        topIndex: {
            get: function () {
                return void 0 === this.Ki ? 0 : this.Ki
            },
            set: function (a) {
                if (void 0 !== this.Ki) {
                    var b = this.Ki;
                    b !== a && ((!isFinite(a) || 0 > a) && B("Panel.topIndex must be greater than zero and a real number, not: " + a), this.Ki = a, this.o(),
                        this.g("topIndex", b, a))
                }
            }
        },
        leftIndex: {
            get: function () {
                return void 0 === this.vi ? 0 : this.vi
            },
            set: function (a) {
                if (void 0 !== this.vi) {
                    var b = this.vi;
                    b !== a && ((!isFinite(a) || 0 > a) && B("Panel.leftIndex must be greater than zero and a real number, not: " + a), this.vi = a, this.o(), this.g("leftIndex", b, a))
                }
            }
        },
        data: {
            get: function () {
                return this.hb
            },
            set: function (a) {
                var b = this.hb;
                if (b !== a) {
                    var c = this instanceof U && !(this instanceof Je);
                    yg(this);
                    this.hb = a;
                    var d = this.diagram;
                    null !== d && (c ? (c = d.partManager, this instanceof S ? (null !== b && c.Ne.remove(b), null !== a && c.Ne.add(a, this)) : this instanceof U && (null !== b && c.Oe.remove(b), null !== a && c.Oe.add(a, this))) : (c = this.panel, null !== c && null !== c.Jd && (null !== b && c.Jd.remove(b), null !== a && c.Jd.add(a, this))));
                    this.g("data", b, a);
                    null !== d && d.undoManager.isUndoingRedoing || null !== a && this.Ba()
                }
            }
        },
        itemIndex: {
            get: function () {
                return this.io
            },
            set: function (a) {
                var b = this.io;
                b !== a && (this.io = a, this.g("itemIndex", b, a))
            }
        },
        itemArray: {
            get: function () {
                return this.si
            },
            set: function (a) {
                var b = this.si;
                if (b !== a || null !== a && hn(this, a)) {
                    var c = this.diagram;
                    b !== a && (null !== c && null !== b && Ij(c.partManager, this, c), this.si = a, null !== c && null !== a && Fj(c.partManager, this));
                    this.g("itemArray", b, a);
                    null !== c && c.undoManager.isUndoingRedoing || this.Gt()
                }
            }
        },
        itemTemplate: {
            get: function () {
                return null === this.le ? null : this.le.H("")
            },
            set: function (a) {
                if (null === this.le) {
                    if (null === a) return;
                    this.le = new H
                }
                var b = this.le.H("");
                b !== a && ((a instanceof U || a.isPanelMain) && B("Panel.itemTemplate must not be a Part or be Panel.isPanelMain: " + a), this.le.add("", a), this.g("itemTemplate", b, a), a = this.diagram, null !== a && a.undoManager.isUndoingRedoing || this.Gt())
            }
        },
        itemTemplateMap: {
            get: function () {
                return this.le
            },
            set: function (a) {
                var b = this.le;
                if (b !== a) {
                    for (var c = a.iterator; c.next(););
                    this.le = a;
                    this.g("itemTemplateMap", b, a);
                    a = this.diagram;
                    null !== a && a.undoManager.isUndoingRedoing || this.Gt()
                }
            }
        },
        itemCategoryProperty: {
            get: function () {
                return this.ql
            },
            set: function (a) {
                var b = this.ql;
                b !== a && (this.ql = a, this.g("itemCategoryProperty", b, a))
            }
        },
        isAtomic: {
            get: function () {
                return 0 !== (this.F & 1048576)
            },
            set: function (a) {
                var b = 0 !== (this.F & 1048576);
                b !== a && (this.F ^= 1048576, this.g("isAtomic", b, a))
            }
        },
        isClipping: {
            get: function () {
                return 0 !== (this.F & 2097152)
            },
            set: function (a) {
                var b = 0 !== (this.F & 2097152);
                b !== a && (a && this.type !== X.Spot && wa("Warning: Panel.isClipping set on non-Spot Panel: " +
                    this.toString()), this.F ^= 2097152, this.o(), this.g("isClipping", b, a))
            }
        },
        isOpposite: {
            get: function () {
                return 0 !== (this.F & 33554432)
            },
            set: function (a) {
                var b = 0 !== (this.F & 33554432);
                b !== a && (this.F ^= 33554432, this.o(), this.g("isOpposite", b, a))
            }
        },
        isEnabled: {
            get: function () {
                return 0 !== (this.F & 4194304)
            },
            set: function (a) {
                var b = 0 !== (this.F & 4194304);
                if (b !== a) {
                    var c = null === this.panel || this.panel.Eg();
                    this.F ^= 4194304;
                    this.g("isEnabled", b, a);
                    b = this.diagram;
                    null !==
                        b && b.undoManager.isUndoingRedoing || c && en(this, this, a)
                }
            }
        },
        alignmentFocusName: {
            get: function () {
                return this.Jg
            },
            set: function (a) {
                var b = this.Jg;
                b !== a && (this.Jg = a, this.o(), this.g("alignmentFocusName", b, a))
            }
        }
    });
    ma.Object.defineProperties(X, {
        Position: {
            get: function () {
                return Nl.H("Position")
            }
        },
        Horizontal: {
            get: function () {
                return Nl.H("Horizontal")
            }
        },
        Vertical: {
            get: function () {
                return Nl.H("Vertical")
            }
        },
        Spot: {
            get: function () {
                return Nl.H("Spot")
            }
        },
        Auto: {
            get: function () {
                return Nl.H("Auto")
            }
        },
        Table: {
            get: function () {
                return Nl.H("Table")
            }
        },
        Viewbox: {
            get: function () {
                return Nl.H("Viewbox")
            }
        },
        TableRow: {
            get: function () {
                return Nl.H("TableRow")
            }
        },
        TableColumn: {
            get: function () {
                return Nl.H("TableColumn")
            }
        },
        Link: {
            get: function () {
                return Nl.H("Link")
            }
        },
        Grid: {
            get: function () {
                return Nl.H("Grid")
            }
        },
        Graduated: {
            get: function () {
                return Nl.H("Graduated")
            }
        }
    });
    X.prototype.findItemPanelForData = X.prototype.Kx;
    X.prototype.rebuildItemElements = X.prototype.Gt;
    X.prototype.updateTargetBindings = X.prototype.Ba;
    X.prototype.copyTemplate = X.prototype.Wy;
    X.prototype.graduatedValueForPoint = X.prototype.Lz;
    X.prototype.graduatedPointForValue = X.prototype.Kz;
    X.prototype.findColumnForLocalX = X.prototype.hz;
    X.prototype.findRowForLocalY = X.prototype.pz;
    X.prototype.removeColumnDefinition = X.prototype.Wv;
    X.prototype.removeRowDefinition = X.prototype.Yv;
    X.prototype.removeAt = X.prototype.lb;
    X.prototype.remove = X.prototype.remove;
    X.prototype.insertAt = X.prototype.Kb;
    X.prototype.elt = X.prototype.L;
    X.prototype.add = X.prototype.add;
    X.prototype.findObject = X.prototype.Xa;
    X.prototype.findInVisualTree = X.prototype.hm;
    X.prototype.walkVisualTreeFrom = X.prototype.Km;
    X.prototype.findMainElement = X.prototype.zb;
    var ln = !1,
        mn = null,
        Nl = new H;
    X.className = "Panel";
    X.definePanelLayout = An;
    An("Position", new vm);
    An("Vertical", new ym);
    An("Auto", new Am);
    An("Link", new Lm);

    function Rj() {
        Ya(this);
        this.ng = null;
        this.Rr = !0;
        this.Pa = 0;
        this.Pc = NaN;
        this.ih = 0;
        this.hh = Infinity;
        this.vb = Zc;
        this.ma = this.ha = 0;
        this.$a = null;
        this.Hp = Bn;
        this.ve = Vk;
        this.Bp = this.qg = null;
        this.Cp = NaN;
        this.gb = this.Nj = null;
        this.qn = !1
    }
    Rj.prototype.copy = function () {
        var a = new Rj;
        a.Rr = this.Rr;
        a.Pa = this.Pa;
        a.Pc = this.Pc;
        a.ih = this.ih;
        a.hh = this.hh;
        a.vb = this.vb;
        a.ha = this.ha;
        a.ma = this.ma;
        a.ve = this.ve;
        a.Hp = this.Hp;
        null === this.qg ? a.qg = null : a.qg = this.qg.G();
        a.Bp = this.Bp;
        a.Cp = this.Cp;
        a.Nj = null;
        null !== this.Nj && (a.separatorDashArray = Ba(this.separatorDashArray));
        a.gb = this.gb;
        a.qn = this.qn;
        a.$a = this.$a;
        return a
    };
    t = Rj.prototype;
    t.et = function (a) {
        a.isRow ? this.height = a.height : this.width = a.width;
        this.minimum = a.minimum;
        this.maximum = a.maximum;
        this.alignment = a.alignment;
        this.stretch = a.stretch;
        this.sizing = a.sizing;
        this.qg = null === a.separatorPadding ? null : a.separatorPadding.G();
        this.separatorStroke = a.separatorStroke;
        this.separatorStrokeWidth = a.separatorStrokeWidth;
        this.Nj = null;
        a.separatorDashArray && (this.Nj = Ba(a.separatorDashArray));
        this.background = a.background;
        this.coversSeparators = a.coversSeparators;
        this.$a = a.$a
    };
    t.cb = function (a) {
        a.classType === Rj && (this.sizing = a)
    };
    t.toString = function () {
        return "RowColumnDefinition " + (this.isRow ? "(Row " : "(Column ") + this.index + ") #" + lb(this)
    };
    t.cj = function (a) {
        this.ng = a
    };
    t.iv = function () {
        var a = 0,
            b = 0,
            c = this.ng,
            d = this.isRow;
        if (null !== c && c.type === X.Table)
            for (var e = d ? c.rb.length : c.mb.length, f = 0; f < e; f++) {
                var g = d ? c.rb[f] : c.mb[f];
                if (void 0 !== g) {
                    b = g.index;
                    break
                }
            }
        this.index !== b && (b = this.separatorStroke, null === b && null !== c && (b = this.isRow ? c.defaultRowSeparatorStroke : c.defaultColumnSeparatorStroke), null !== b && (a = this.separatorStrokeWidth, isNaN(a) && (null !== c ? a = this.isRow ? c.defaultRowSeparatorStrokeWidth : c.defaultColumnSeparatorStrokeWidth : a = 0)));
        b = this.qg;
        if (null === b)
            if (null !== c) b =
                c.defaultSeparatorPadding;
            else return a;
        return a + (this.isRow ? b.top : b.left)
    };
    t.uc = function () {
        var a = 0,
            b = this.ng,
            c = 0,
            d = this.isRow;
        if (null !== b && b.type === X.Table)
            for (var e = d ? b.rb.length : b.mb.length, f = 0; f < e; f++) {
                var g = d ? b.rb[f] : b.mb[f];
                if (void 0 !== g) {
                    c = g.index;
                    break
                }
            }
        this.index !== c && (c = this.separatorStroke, null === c && null !== b && (c = d ? b.defaultRowSeparatorStroke : b.defaultColumnSeparatorStroke), null !== c && (a = this.separatorStrokeWidth, isNaN(a) && (null !== b ? a = d ? b.defaultRowSeparatorStrokeWidth : b.defaultColumnSeparatorStrokeWidth : a = 0)));
        d = this.qg;
        if (null === d)
            if (null !== b) d = b.defaultSeparatorPadding;
            else return a;
        return a + (this.isRow ? d.top + d.bottom : d.left + d.right)
    };
    t.xb = function (a, b, c) {
        var d = this.ng;
        if (null !== d && (d.Ya(re, a, this, b, c, void 0, void 0), null !== this.$a && (b = d.diagram, null !== b && !b.skipsModelSourceBindings && (d = d.Ui(), null !== d && (b = d.data, null !== b)))))
            for (c = this.$a.iterator; c.next();) c.value.Qq(this, b, a, d)
    };

    function Em(a) {
        if (a.sizing === Bn) {
            var b = a.ng;
            return a.isRow ? b.rowSizing : b.columnSizing
        }
        return a.sizing
    }
    t.bind = function (a) {
        a.bd = this;
        var b = this.panel;
        if (null !== b) {
            var c = b.Ui();
            null !== c && Il(c) && B("Cannot add a Binding to a RowColumnDefinition that is already frozen: " + a + " on " + b)
        }
        null === this.$a && (this.$a = new E);
        this.$a.add(a)
    };
    ma.Object.defineProperties(Rj.prototype, {
        panel: {
            get: function () {
                return this.ng
            }
        },
        isRow: {
            get: function () {
                return this.Rr
            },
            set: function (a) {
                this.Rr = a
            }
        },
        index: {
            get: function () {
                return this.Pa
            },
            set: function (a) {
                this.Pa = a
            }
        },
        height: {
            get: function () {
                return this.Pc
            },
            set: function (a) {
                var b = this.Pc;
                b !== a && (0 > a && va(a, ">= 0", Rj, "height"), this.Pc = a, this.actual = this.ha, null !== this.panel && this.panel.o(),
                    this.xb("height", b, a))
            }
        },
        width: {
            get: function () {
                return this.Pc
            },
            set: function (a) {
                var b = this.Pc;
                b !== a && (0 > a && va(a, ">= 0", Rj, "width"), this.Pc = a, this.actual = this.ha, null !== this.panel && this.panel.o(), this.xb("width", b, a))
            }
        },
        minimum: {
            get: function () {
                return this.ih
            },
            set: function (a) {
                var b = this.ih;
                b !== a && ((0 > a || !isFinite(a)) && va(a, ">= 0", Rj, "minimum"), this.ih = a, this.actual = this.ha, null !== this.panel && this.panel.o(), this.xb("minimum", b, a))
            }
        },
        maximum: {
            get: function () {
                return this.hh
            },
            set: function (a) {
                var b = this.hh;
                b !== a && (0 > a && va(a, ">= 0", Rj, "maximum"), this.hh = a, this.actual = this.ha, null !== this.panel && this.panel.o(), this.xb("maximum", b, a))
            }
        },
        alignment: {
            get: function () {
                return this.vb
            },
            set: function (a) {
                var b = this.vb;
                b.w(a) || (this.vb = a.G(), null !== this.panel && this.panel.o(), this.xb("alignment", b, a))
            }
        },
        stretch: {
            get: function () {
                return this.ve
            },
            set: function (a) {
                var b = this.ve;
                b !== a && (this.ve =
                    a, null !== this.panel && this.panel.o(), this.xb("stretch", b, a))
            }
        },
        separatorPadding: {
            get: function () {
                return this.qg
            },
            set: function (a) {
                "number" === typeof a && (a = new oc(a));
                var b = this.qg;
                null !== a && null !== b && b.w(a) || (null !== a && (a = a.G()), this.qg = a, null !== this.panel && this.panel.o(), this.xb("separatorPadding", b, a))
            }
        },
        separatorStroke: {
            get: function () {
                return this.Bp
            },
            set: function (a) {
                var b = this.Bp;
                b !== a && (null !== a && Rl(a, "RowColumnDefinition.separatorStroke"),
                    a instanceof tl && a.freeze(), this.Bp = a, null !== this.panel && this.panel.o(), this.xb("separatorStroke", b, a))
            }
        },
        separatorStrokeWidth: {
            get: function () {
                return this.Cp
            },
            set: function (a) {
                var b = this.Cp;
                b !== a && (this.Cp = a, null !== this.panel && this.panel.o(), this.xb("separatorStrokeWidth", b, a))
            }
        },
        separatorDashArray: {
            get: function () {
                return this.Nj
            },
            set: function (a) {
                var b = this.Nj;
                if (b !== a) {
                    if (null !== a) {
                        for (var c = a.length, d = 0, e = 0; e < c; e++) {
                            var f = a[e];
                            "number" ===
                            typeof f && 0 <= f && isFinite(f) || B("separatorDashArray value " + f + " at index " + e + " must be a positive number or zero.");
                            d += f
                        }
                        if (0 === d) {
                            if (null === b) return;
                            a = null
                        }
                    }
                    this.Nj = a;
                    null !== this.panel && this.panel.M();
                    this.xb("separatorDashArray", b, a)
                }
            }
        },
        background: {
            get: function () {
                return this.gb
            },
            set: function (a) {
                var b = this.gb;
                b !== a && (null !== a && Rl(a, "RowColumnDefinition.background"), a instanceof tl && a.freeze(), this.gb = a, null !== this.panel && this.panel.M(), this.xb("background", b, a))
            }
        },
        coversSeparators: {
            get: function () {
                return this.qn
            },
            set: function (a) {
                var b = this.qn;
                b !== a && (this.qn = a, null !== this.panel && this.panel.M(), this.xb("coversSeparators", b, a))
            }
        },
        sizing: {
            get: function () {
                return this.Hp
            },
            set: function (a) {
                var b = this.Hp;
                b !== a && (this.Hp = a, null !== this.panel && this.panel.o(), this.xb("sizing", b, a))
            }
        },
        actual: {
            get: function () {
                return this.ha
            },
            set: function (a) {
                this.ha = isNaN(this.Pc) ? Math.max(Math.min(this.hh, a), this.ih) : Math.max(Math.min(this.hh,
                    this.Pc), this.ih)
            }
        },
        total: {
            get: function () {
                return this.ha + this.uc()
            },
            set: function (a) {
                this.ha = isNaN(this.Pc) ? Math.max(Math.min(this.hh, a), this.ih) : Math.max(Math.min(this.hh, this.Pc), this.ih);
                this.ha = Math.max(0, this.ha - this.uc())
            }
        },
        position: {
            get: function () {
                return this.ma
            },
            set: function (a) {
                this.ma = a
            }
        }
    });
    Rj.prototype.bind = Rj.prototype.bind;
    Rj.prototype.computeEffectiveSpacing = Rj.prototype.uc;
    Rj.prototype.computeEffectiveSpacingTop = Rj.prototype.iv;
    var Bn = new D(Rj, "Default", 0),
        Fm = new D(Rj, "None", 1),
        Vm = new D(Rj, "ProportionalExtra", 2);
    Rj.className = "RowColumnDefinition";
    Rj.Default = Bn;
    Rj.None = Fm;
    Rj.ProportionalExtra = Vm;

    function Lf() {
        Y.call(this);
        this.Qd = this.ka = null;
        this.Zk = "None";
        this.Nn = Vk;
        this.Dc = this.$k = "black";
        this.th = 1;
        this.Rl = "butt";
        this.Sl = "miter";
        this.Oj = 10;
        this.rh = null;
        this.sh = 0;
        this.jf = this.hf = Zc;
        this.$o = this.Zo = NaN;
        this.Zn = !1;
        this.bp = null;
        this.al = this.Yl = "None";
        this.Hd = 1;
        this.Fd = 0;
        this.Dd = 1;
        this.Ed = null
    }
    la(Lf, Y);
    Lf.prototype.cloneProtected = function (a) {
        Y.prototype.cloneProtected.call(this, a);
        a.ka = this.ka;
        a.Zk = this.Zk;
        a.Nn = this.Nn;
        a.Qd = this.Qd;
        a.$k = this.$k;
        a.Dc = this.Dc;
        a.th = this.th;
        a.Rl = this.Rl;
        a.Sl = this.Sl;
        a.Oj = this.Oj;
        null !== this.rh && (a.rh = Ba(this.rh));
        a.sh = this.sh;
        a.hf = this.hf.G();
        a.jf = this.jf.G();
        a.Zo = this.Zo;
        a.$o = this.$o;
        a.Zn = this.Zn;
        a.bp = this.bp;
        a.Yl = this.Yl;
        a.al = this.al;
        a.Hd = this.Hd;
        a.Fd = this.Fd;
        a.Dd = this.Dd;
        a.Ed = this.Ed
    };
    t = Lf.prototype;
    t.cb = function (a) {
        a === zg || a === Bg || a === Yk || a === Vk ? this.geometryStretch = a : Y.prototype.cb.call(this, a)
    };
    t.toString = function () {
        return "Shape(" + ("None" !== this.figure ? this.figure : "None" !== this.toArrow ? this.toArrow : this.fromArrow) + ")#" + lb(this)
    };

    function Cn(a, b, c, d) {
        var e = c.length;
        if (!(4 > e)) {
            var f = d.measuredBounds,
                g = Math.max(1, f.width);
            f = f.height;
            for (var h = c[0], k = c[1], l, m, n, p, r, q, u = 0, v = Fa(), w = 2; w < e; w += 2) l = c[w], m = c[w + 1], n = l - h, h = m - k, 0 === n && (n = .001), p = h / n, r = Math.atan2(h, n), q = Math.sqrt(n * n + h * h), v.push([n, r, p, q]), u += q, h = l, k = m;
            h = c[0];
            k = c[1];
            n = d.measuredBounds.width;
            d instanceof Lf && (n -= d.strokeWidth);
            1 > n && (n = 1);
            e = c = n;
            l = g / 2;
            m = 0 === l ? !1 : !0;
            w = 0;
            q = v[w];
            n = q[0];
            r = q[1];
            p = q[2];
            q = q[3];
            for (var y = 0; .1 <= u;) {
                0 === y && (m ? (e = c, e -= l, u -= l, m = !1) : e = c, 0 === e && (e = 1));
                if (e > u) {
                    Ha(v);
                    return
                }
                e > q ? (y = e - q, e = q) : y = 0;
                var z = Math.sqrt(e * e / (1 + p * p));
                0 > n && (z = -z);
                h += z;
                k += p * z;
                a.translate(h, k);
                a.rotate(r);
                a.translate(-(g / 2), -(f / 2));
                0 === y && d.Qi(a, b);
                a.translate(g / 2, f / 2);
                a.rotate(-r);
                a.translate(-h, -k);
                u -= e;
                q -= e;
                if (0 !== y) {
                    w++;
                    if (w === v.length) {
                        Ha(v);
                        return
                    }
                    q = v[w];
                    n = q[0];
                    r = q[1];
                    p = q[2];
                    q = q[3];
                    e = y
                }
            }
            Ha(v)
        }
    }
    t.Qi = function (a, b) {
        var c = this.Dc,
            d = this.$k;
        if (null !== c || null !== d) {
            var e = this.actualBounds,
                f = this.naturalBounds;
            null !== d && ii(this, a, d, !0, !1, f, e);
            var g = this.part,
                h = this.th;
            null !== c && 0 === h && null !== g && (h = g.type === X.Link && g instanceof Je && "Selection" === g.category && g.adornedObject instanceof Lf && g.adornedPart.zb() === g.adornedObject ? g.adornedObject.strokeWidth : 0);
            null !== c && 0 !== h && (ii(this, a, c, !1, !1, f, e), a.lineWidth = h, a.lineJoin = this.Sl, a.lineCap = this.Rl, a.miterLimit = this.Oj);
            e = !1;
            g && b.Be("drawShadows") &&
                (e = g.isShadowed);
            g = !0;
            null === c || null !== d && "transparent" !== d || (g = !1);
            f = !1;
            var k = this.strokeDashArray;
            null !== k && (f = !0, a.ht(k, this.sh));
            var l = this.ka;
            if (null !== l) {
                if (l.type === wd) a.beginPath(), a.moveTo(l.startX, l.startY), a.lineTo(l.endX, l.endY), null !== d && a.Ud(d), 0 !== h && null !== c && a.fj();
                else if (l.type === Gd) {
                    var m = l.startX;
                    k = l.startY;
                    var n = l.endX,
                        p = l.endY;
                    l = Math.min(m, n);
                    var r = Math.min(k, p);
                    m = Math.abs(n - m);
                    k = Math.abs(p - k);
                    a.beginPath();
                    a.rect(l, r, m, k);
                    null !== d && a.Ud(d);
                    if (null !== c) {
                        g && e && sl(a);
                        if (0 !== h) {
                            if (0 ===
                                m || 0 === k) a.beginPath(), a.rect(l, r, Math.max(m, .1), Math.max(k, .1));
                            a.fj()
                        }
                        g && e && rl(a)
                    }
                } else if (l.type === Hd) m = l.startX, k = l.startY, n = l.endX, p = l.endY, l = Math.abs(n - m) / 2, r = Math.abs(p - k) / 2, m = Math.min(m, n) + l, k = Math.min(k, p) + r, a.beginPath(), a.moveTo(m, k - r), a.bezierCurveTo(m + J.Ig * l, k - r, m + l, k - J.Ig * r, m + l, k), a.bezierCurveTo(m + l, k + J.Ig * r, m + J.Ig * l, k + r, m, k + r), a.bezierCurveTo(m - J.Ig * l, k + r, m - l, k + J.Ig * r, m - l, k), a.bezierCurveTo(m - l, k - J.Ig * r, m - J.Ig * l, k - r, m, k - r), a.closePath(), null !== d && a.Ud(d), 0 !== h && null !== c && (g && e ? (sl(a),
                    a.fj(), rl(a)) : a.fj());
                else if (l.type === ud)
                    for (k = l.figures, l = k.length, r = 0; r < l; r++) {
                        m = k.j[r];
                        a.beginPath();
                        a.moveTo(m.startX, m.startY);
                        n = m.segments.j;
                        p = n.length;
                        for (var q = null, u = 0; u < p; u++) {
                            var v = n[u];
                            switch (v.type) {
                                case Wd:
                                    a.moveTo(v.endX, v.endY);
                                    break;
                                case yd:
                                    a.lineTo(v.endX, v.endY);
                                    break;
                                case Xd:
                                    a.bezierCurveTo(v.point1X, v.point1Y, v.point2X, v.point2Y, v.endX, v.endY);
                                    break;
                                case Yd:
                                    a.quadraticCurveTo(v.point1X, v.point1Y, v.endX, v.endY);
                                    break;
                                case Zd:
                                    if (v.radiusX === v.radiusY) {
                                        var w = Math.PI / 180;
                                        a.arc(v.point1X,
                                            v.point1Y, v.radiusX, v.startAngle * w, (v.startAngle + v.sweepAngle) * w, 0 > v.sweepAngle, null !== q ? q.endX : m.startX, null !== q ? q.endY : m.startY)
                                    } else if (q = ae(v, m), w = q.length, 0 === w) a.lineTo(v.centerX, v.centerY);
                                    else
                                        for (var y = 0; y < w; y++) {
                                            var z = q[y];
                                            0 === y && a.lineTo(z[0], z[1]);
                                            a.bezierCurveTo(z[2], z[3], z[4], z[5], z[6], z[7])
                                        }
                                    break;
                                case $d:
                                    y = w = 0;
                                    if (null !== q && q.type === Zd) {
                                        q = ae(q, m);
                                        z = q.length;
                                        if (0 === z) {
                                            a.lineTo(v.centerX, v.centerY);
                                            break
                                        }
                                        q = q[z - 1] || null;
                                        null !== q && (w = q[6], y = q[7])
                                    } else w = null !== q ? q.endX : m.startX, y = null !==
                                        q ? q.endY : m.startY;
                                    q = be(v, m, w, y);
                                    w = q.length;
                                    if (0 === w) {
                                        a.lineTo(v.centerX, v.centerY);
                                        break
                                    }
                                    for (y = 0; y < w; y++) z = q[y], a.bezierCurveTo(z[2], z[3], z[4], z[5], z[6], z[7]);
                                    break;
                                default:
                                    B("Segment not of valid type: " + v.type)
                            }
                            v.isClosed && a.closePath();
                            q = v
                        }
                        e ? m.isShadowed ? (!0 === m.isFilled && "transparent" !== d && null !== d && a.Ud(d), 0 !== h && null !== c && (g && sl(a), a.fj(), g && rl(a))) : (g && sl(a), !0 === m.isFilled && "transparent" !== d && null !== d && a.Ud(d), 0 !== h && null !== c && a.fj(), g && rl(a)) : (!0 === m.isFilled && null !== d && a.Ud(d), 0 !== h && null !==
                            c && a.fj())
                    }
                f && a.ft();
                if (null !== this.pathPattern) {
                    c = this.pathPattern;
                    c.measure(Infinity, Infinity);
                    d = c.measuredBounds;
                    c.arrange(0, 0, d.width, d.height);
                    h = this.geometry;
                    a.save();
                    a.beginPath();
                    d = Fa();
                    if (h.type === wd) d.push(h.startX), d.push(h.startY), d.push(h.endX), d.push(h.endY), Cn(a, b, d, c);
                    else if (h.type === ud)
                        for (h = h.figures.iterator; h.next();) {
                            e = h.value;
                            d.length = 0;
                            d.push(e.startX);
                            d.push(e.startY);
                            g = e.startX;
                            f = e.startY;
                            k = g;
                            l = f;
                            r = e.segments.j;
                            m = r.length;
                            for (n = 0; n < m; n++) {
                                p = r[n];
                                switch (p.type) {
                                    case Wd:
                                        Cn(a,
                                            b, d, c);
                                        d.length = 0;
                                        d.push(p.endX);
                                        d.push(p.endY);
                                        g = p.endX;
                                        f = p.endY;
                                        k = g;
                                        l = f;
                                        break;
                                    case yd:
                                        d.push(p.endX);
                                        d.push(p.endY);
                                        g = p.endX;
                                        f = p.endY;
                                        break;
                                    case Xd:
                                        J.ye(g, f, p.point1X, p.point1Y, p.point2X, p.point2Y, p.endX, p.endY, .5, d);
                                        g = p.endX;
                                        f = p.endY;
                                        break;
                                    case Yd:
                                        J.Cq(g, f, p.point1X, p.point1Y, p.endX, p.endY, .5, d);
                                        g = p.endX;
                                        f = p.endY;
                                        break;
                                    case Zd:
                                        u = ae(p, e);
                                        v = u.length;
                                        if (0 === v) {
                                            d.push(p.centerX);
                                            d.push(p.centerY);
                                            g = p.centerX;
                                            f = p.centerY;
                                            break
                                        }
                                        for (q = 0; q < v; q++) w = u[q], J.ye(g, f, w[2], w[3], w[4], w[5], w[6], w[7], .5, d), g = w[6],
                                            f = w[7];
                                        break;
                                    case $d:
                                        u = be(p, e, g, f);
                                        v = u.length;
                                        if (0 === v) {
                                            d.push(p.centerX);
                                            d.push(p.centerY);
                                            g = p.centerX;
                                            f = p.centerY;
                                            break
                                        }
                                        for (q = 0; q < v; q++) w = u[q], J.ye(g, f, w[2], w[3], w[4], w[5], w[6], w[7], .5, d), g = w[6], f = w[7];
                                        break;
                                    default:
                                        B("Segment not of valid type: " + p.type)
                                }
                                p.isClosed && (d.push(k), d.push(l), Cn(a, b, d, c))
                            }
                            Cn(a, b, d, c)
                        } else if (h.type === Gd) d.push(h.startX), d.push(h.startY), d.push(h.endX), d.push(h.startY), d.push(h.endX), d.push(h.endY), d.push(h.startX), d.push(h.endY), d.push(h.startX), d.push(h.startY), Cn(a,
                            b, d, c);
                        else if (h.type === Hd) {
                        f = new ke;
                        f.startX = h.endX;
                        f.startY = (h.startY + h.endY) / 2;
                        g = new le(Zd);
                        g.startAngle = 0;
                        g.sweepAngle = 360;
                        g.centerX = (h.startX + h.endX) / 2;
                        g.centerY = (h.startY + h.endY) / 2;
                        g.radiusX = Math.abs(h.startX - h.endX) / 2;
                        g.radiusY = Math.abs(h.startY - h.endY) / 2;
                        f.add(g);
                        h = ae(g, f);
                        e = h.length;
                        if (0 === e) d.push(g.centerX), d.push(g.centerY);
                        else
                            for (g = f.startX, f = f.startY, k = 0; k < e; k++) l = h[k], J.ye(g, f, l[2], l[3], l[4], l[5], l[6], l[7], .5, d), g = l[6], f = l[7];
                        Cn(a, b, d, c)
                    }
                    Ha(d);
                    a.restore();
                    a.sc(!1)
                }
            }
        }
    };
    t.ga = function (a, b) {
        void 0 === b && (b = new I);
        if (a instanceof P) {
            a.jc() && B("getDocumentPoint Spot must be a real, specific Spot, not: " + a.toString());
            var c = this.naturalBounds,
                d = this.strokeWidth;
            b.h(a.x * (c.width + d) - d / 2 + c.x + a.offsetX, a.y * (c.height + d) - d / 2 + c.y + a.offsetY)
        } else b.set(a);
        this.ud.ra(b);
        return b
    };
    t.lm = function (a) {
        void 0 === a && (a = new N);
        var b = this.naturalBounds,
            c = this.ud;
        b = N.allocAt(b.x, b.y, b.width, b.height);
        var d = this.strokeWidth;
        b.Vc(d / 2, d / 2);
        d = I.allocAt(b.x, b.y).transform(c);
        a.h(d.x, d.y, 0, 0);
        d.h(b.right, b.y).transform(c);
        ec(a, d.x, d.y, 0, 0);
        d.h(b.right, b.bottom).transform(c);
        ec(a, d.x, d.y, 0, 0);
        d.h(b.x, b.bottom).transform(c);
        ec(a, d.x, d.y, 0, 0);
        N.free(b);
        I.free(d);
        return a
    };
    t.Hh = function (a, b) {
        var c = this.geometry;
        if (null === c || null === this.fill && null === this.stroke) return !1;
        var d = c.bounds,
            e = this.strokeWidth / 2;
        c.type !== wd || b || (e += 2);
        var f = N.alloc();
        f.assign(d);
        f.Vc(e + 2, e + 2);
        if (!f.aa(a)) return N.free(f), !1;
        d = e + 1E-4;
        if (c.type === wd) {
            if (null === this.stroke) return !1;
            d = (c.endX - c.startX) * (a.x - c.startX) + (c.endY - c.startY) * (a.y - c.startY);
            if (0 > (c.startX - c.endX) * (a.x - c.endX) + (c.startY - c.endY) * (a.y - c.endY) || 0 > d) return !1;
            N.free(f);
            return J.Nb(c.startX, c.startY, c.endX, c.endY, e, a.x, a.y)
        }
        if (c.type ===
            Gd) {
            b = c.startX;
            var g = c.startY,
                h = c.endX;
            c = c.endY;
            f.x = Math.min(b, h);
            f.y = Math.min(g, c);
            f.width = Math.abs(h - b);
            f.height = Math.abs(c - g);
            if (null === this.fill) {
                f.Vc(-d, -d);
                if (f.aa(a)) return N.free(f), !1;
                f.Vc(d, d)
            }
            null !== this.stroke && f.Vc(e, e);
            a = f.aa(a);
            N.free(f);
            return a
        }
        if (c.type === Hd) {
            g = c.startX;
            e = c.startY;
            h = c.endX;
            var k = c.endY;
            c = Math.min(g, h);
            b = Math.min(e, k);
            g = Math.abs(h - g) / 2;
            e = Math.abs(k - e) / 2;
            c = a.x - (c + g);
            b = a.y - (b + e);
            if (null === this.fill) {
                g -= d;
                e -= d;
                if (0 >= g || 0 >= e || 1 >= c * c / (g * g) + b * b / (e * e)) return N.free(f), !1;
                g += d;
                e += d
            }
            null !== this.stroke && (g += d, e += d);
            N.free(f);
            return 0 >= g || 0 >= e ? !1 : 1 >= c * c / (g * g) + b * b / (e * e)
        }
        if (c.type === ud) return N.free(f), null === this.fill ? ee(c, a.x, a.y, e) : ce(c, a, e, 1 < this.strokeWidth, b);
        B("Unknown Geometry type: " + c.type);
        return !1
    };
    t.sm = function (a, b, c, d) {
        var e = this.desiredSize,
            f = this.th;
        a = Math.max(a, 0);
        b = Math.max(b, 0);
        if (null !== this.Qd) var g = this.geometry.bounds;
        else {
            var h = this.figure,
                k = Dn[h];
            if (void 0 === k) {
                var l = J.Je[h];
                "string" === typeof l && (l = J.Je[l]);
                "function" === typeof l ? (k = l(null, 100, 100), Dn[h] = k) : B("Unsupported Figure: " + h)
            }
            g = k.bounds
        }
        h = g.width;
        k = g.height;
        l = g.width;
        var m = g.height;
        switch (kl(this, !0)) {
            case zg:
                d = c = 0;
                break;
            case vd:
                l = Math.max(a - f, 0);
                m = Math.max(b - f, 0);
                break;
            case Wk:
                l = Math.max(a - f, 0);
                d = 0;
                break;
            case Xk:
                c = 0, m =
                    Math.max(b - f, 0)
        }
        isFinite(e.width) && (l = e.width);
        isFinite(e.height) && (m = e.height);
        e = this.maxSize;
        g = this.minSize;
        c = Math.max(c - f, g.width);
        d = Math.max(d - f, g.height);
        l = Math.min(e.width, l);
        m = Math.min(e.height, m);
        l = isFinite(l) ? Math.max(c, l) : Math.max(h, c);
        m = isFinite(m) ? Math.max(d, m) : Math.max(k, d);
        c = Ag(this);
        switch (c) {
            case zg:
                break;
            case vd:
                h = l;
                k = m;
                break;
            case Bg:
                c = Math.min(l / h, m / k);
                isFinite(c) || (c = 1);
                h *= c;
                k *= c;
                break;
            default:
                B(c + " is not a valid geometryStretch.")
        }
        null !== this.Qd ? (h = Math.max(h, .01), k = Math.max(k,
            .01), g = null !== this.Qd ? this.Qd : this.ka, e = h, d = k, c = g.copy(), g = g.bounds, e /= g.width, d /= g.height, isFinite(e) || (e = 1), isFinite(d) || (d = 1), 1 === e && 1 === d || c.scale(e, d), this.ka = c) : null !== this.ka && J.$(this.ka.kl, a - f) && J.$(this.ka.jl, b - f) || (this.ka = Lf.makeGeometry(this, h, k));
        g = this.ka.bounds;
        Infinity === a || Infinity === b ? hl(this, g.x - f / 2, g.y - f / 2, 0 === a && 0 === h ? 0 : g.width + f, 0 === b && 0 === k ? 0 : g.height + f) : hl(this, -(f / 2), -(f / 2), l + f, m + f)
    };

    function Ag(a) {
        var b = a.geometryStretch;
        return null !== a.Qd ? b === Vk ? vd : b : b === Vk ? Dn[a.figure].defaultStretch : b
    }
    t.Fh = function (a, b, c, d) {
        ml(this, a, b, c, d)
    };
    t.Uc = function (a, b, c) {
        return this.hk(a.x, a.y, b.x, b.y, c)
    };
    t.hk = function (a, b, c, d, e) {
        var f = this.transform,
            g = 1 / (f.m11 * f.m22 - f.m12 * f.m21),
            h = f.m22 * g,
            k = -f.m12 * g,
            l = -f.m21 * g,
            m = f.m11 * g,
            n = g * (f.m21 * f.dy - f.m22 * f.dx),
            p = g * (f.m12 * f.dx - f.m11 * f.dy);
        f = a * h + b * l + n;
        g = a * k + b * m + p;
        h = c * h + d * l + n;
        k = c * k + d * m + p;
        n = this.th / 2;
        l = this.ka;
        null === l && (this.measure(Infinity, Infinity), l = this.ka);
        p = l.bounds;
        m = !1;
        if (l.type === wd)
            if (1.5 >= this.strokeWidth) m = J.De(l.startX, l.startY, l.endX, l.endY, f, g, h, k, e);
            else {
                l.startX === l.endX ? (d = n, m = 0) : (b = (l.endY - l.startY) / (l.endX - l.startX), m = n / Math.sqrt(1 + b * b), d = m *
                    b);
                b = Fa();
                a = new I;
                J.De(l.startX + d, l.startY + m, l.endX + d, l.endY + m, f, g, h, k, a) && b.push(a);
                a = new I;
                J.De(l.startX - d, l.startY - m, l.endX - d, l.endY - m, f, g, h, k, a) && b.push(a);
                a = new I;
                J.De(l.startX + d, l.startY + m, l.startX - d, l.startY - m, f, g, h, k, a) && b.push(a);
                a = new I;
                J.De(l.endX + d, l.endY + m, l.endX - d, l.endY - m, f, g, h, k, a) && b.push(a);
                h = b.length;
                if (0 === h) return Ha(b), !1;
                m = !0;
                k = Infinity;
                for (d = 0; d < h; d++) a = b[d], c = (a.x - f) * (a.x - f) + (a.y - g) * (a.y - g), c < k && (k = c, e.x = a.x, e.y = a.y);
                Ha(b)
            }
        else if (l.type === Gd) m = J.Uc(p.x - n, p.y - n, p.x + p.width +
            n, p.y + p.height + n, f, g, h, k, e);
        else if (l.type === Hd) {
            b = N.allocAt(p.x, p.y, p.width, p.height).Vc(n, n);
            a: if (0 === b.width) m = J.De(b.x, b.y, b.x, b.y + b.height, f, g, h, k, e);
                else if (0 === b.height) m = J.De(b.x, b.y, b.x + b.width, b.y, f, g, h, k, e);
            else {
                a = b.width / 2;
                l = b.height / 2;
                d = b.x + a;
                m = b.y + l;
                c = 9999;
                f !== h && (c = (g - k) / (f - h));
                if (9999 > Math.abs(c)) {
                    k = g - m - c * (f - d);
                    if (0 > a * a * c * c + l * l - k * k) {
                        e.x = NaN;
                        e.y = NaN;
                        m = !1;
                        break a
                    }
                    n = Math.sqrt(a * a * c * c + l * l - k * k);
                    h = (-(a * a * c * k) + a * l * n) / (l * l + a * a * c * c) + d;
                    a = (-(a * a * c * k) - a * l * n) / (l * l + a * a * c * c) + d;
                    l = c * (h - d) + k + m;
                    k = c *
                        (a - d) + k + m;
                    Math.abs((f - h) * (f - h)) + Math.abs((g - l) * (g - l)) < Math.abs((f - a) * (f - a)) + Math.abs((g - k) * (g - k)) ? (e.x = h, e.y = l) : (e.x = a, e.y = k)
                } else {
                    h = l * l;
                    k = f - d;
                    h -= h / (a * a) * k * k;
                    if (0 > h) {
                        e.x = NaN;
                        e.y = NaN;
                        m = !1;
                        break a
                    }
                    k = Math.sqrt(h);
                    h = m + k;
                    k = m - k;
                    Math.abs(h - g) < Math.abs(k - g) ? (e.x = f, e.y = h) : (e.x = f, e.y = k)
                }
                m = !0
            }
            N.free(b)
        } else if (l.type === ud) {
            p = I.alloc();
            var r = h - f;
            var q = k - g;
            var u = r * r + q * q;
            e.x = h;
            e.y = k;
            for (var v = 0; v < l.figures.count; v++) {
                var w = l.figures.j[v],
                    y = w.segments;
                r = w.startX;
                q = w.startY;
                for (var z = r, A = q, C = 0; C < y.count; C++) {
                    var G =
                        y.j[C],
                        L = G.type;
                    var K = G.endX;
                    var V = G.endY;
                    var Q = !1;
                    switch (L) {
                        case Wd:
                            z = K;
                            A = V;
                            break;
                        case yd:
                            Q = En(r, q, K, V, f, g, h, k, p);
                            break;
                        case Xd:
                            Q = J.eq(r, q, G.point1X, G.point1Y, G.point2X, G.point2Y, K, V, f, g, h, k, .6, p);
                            break;
                        case Yd:
                            Q = J.eq(r, q, (r + 2 * G.point1X) / 3, (q + 2 * G.point1Y) / 3, (2 * G.point1X + K) / 3, (2 * G.point1X + K) / 3, K, V, f, g, h, k, .6, p);
                            break;
                        case Zd:
                        case $d:
                            L = G.type === Zd ? ae(G, w) : be(G, w, r, q);
                            var ca = L.length;
                            if (0 === ca) {
                                Q = En(r, q, G.centerX, G.centerY, f, g, h, k, p);
                                break
                            }
                            V = null;
                            for (K = 0; K < ca; K++) {
                                V = L[K];
                                if (0 === K && En(r, q, V[0], V[1],
                                        f, g, h, k, p)) {
                                    var pa = Fn(f, g, p, u, e);
                                    pa < u && (u = pa, m = !0)
                                }
                                J.eq(V[0], V[1], V[2], V[3], V[4], V[5], V[6], V[7], f, g, h, k, .6, p) && (pa = Fn(f, g, p, u, e), pa < u && (u = pa, m = !0))
                            }
                            K = V[6];
                            V = V[7];
                            break;
                        default:
                            B("Unknown Segment type: " + L)
                    }
                    r = K;
                    q = V;
                    Q && (Q = Fn(f, g, p, u, e), Q < u && (u = Q, m = !0));
                    G.isClosed && (K = z, V = A, En(r, q, K, V, f, g, h, k, p) && (G = Fn(f, g, p, u, e), G < u && (u = G, m = !0)))
                }
            }
            f = c - a;
            g = d - b;
            h = Math.sqrt(f * f + g * g);
            0 !== h && (f /= h, g /= h);
            e.x -= f * n;
            e.y -= g * n;
            I.free(p)
        } else B("Unknown Geometry type: " + l.type);
        if (!m) return !1;
        this.transform.ra(e);
        return !0
    };

    function Fn(a, b, c, d, e) {
        a = c.x - a;
        b = c.y - b;
        b = a * a + b * b;
        return b < d ? (e.x = c.x, e.y = c.y, b) : d
    }

    function En(a, b, c, d, e, f, g, h, k) {
        var l = !1,
            m = (e - g) * (b - d) - (f - h) * (a - c);
        if (0 === m) return !1;
        k.x = ((e * h - f * g) * (a - c) - (e - g) * (a * d - b * c)) / m;
        k.y = ((e * h - f * g) * (b - d) - (f - h) * (a * d - b * c)) / m;
        (a > c ? a - c : c - a) < (b > d ? b - d : d - b) ? (a = b < d ? b : d, b = b < d ? d : b, (k.y > a || J.$(k.y, a)) && (k.y < b || J.$(k.y, b)) && (l = !0)) : (b = a < c ? a : c, a = a < c ? c : a, (k.x > b || J.$(k.x, b)) && (k.x < a || J.$(k.x, a)) && (l = !0));
        return l
    }
    t.Gh = function (a, b) {
        if (void 0 === b) return a.ze(this.actualBounds);
        var c = this.ka;
        null === c && (this.measure(Infinity, Infinity), c = this.ka);
        c = c.bounds;
        var d = this.strokeWidth / 2,
            e = !1,
            f = I.alloc();
        f.h(c.x - d, c.y - d);
        a.aa(b.ra(f)) && (f.h(c.x - d, c.bottom + d), a.aa(b.ra(f)) && (f.h(c.right + d, c.bottom + d), a.aa(b.ra(f)) && (f.h(c.right + d, c.y - d), a.aa(b.ra(f)) && (e = !0))));
        I.free(f);
        return e
    };
    t.Gc = function (a, b) {
        if (this.Gh(a, b) || void 0 === b && (b = this.transform, a.ze(this.actualBounds))) return !0;
        var c = rd.alloc();
        c.set(b);
        c.tt();
        var d = a.left,
            e = a.right,
            f = a.top;
        a = a.bottom;
        var g = I.alloc();
        g.h(d, f);
        c.ra(g);
        if (this.Hh(g, !0)) return I.free(g), !0;
        g.h(e, f);
        c.ra(g);
        if (this.Hh(g, !0)) return I.free(g), !0;
        g.h(d, a);
        c.ra(g);
        if (this.Hh(g, !0)) return I.free(g), !0;
        g.h(e, a);
        c.ra(g);
        if (this.Hh(g, !0)) return I.free(g), !0;
        var h = I.alloc(),
            k = I.alloc();
        c.set(b);
        c.Lv(this.transform);
        c.tt();
        h.x = e;
        h.y = f;
        h.transform(c);
        g.x =
            d;
        g.y = f;
        g.transform(c);
        b = !1;
        Gn(this, g, h, k) ? b = !0 : (g.x = e, g.y = a, g.transform(c), Gn(this, g, h, k) ? b = !0 : (h.x = d, h.y = a, h.transform(c), Gn(this, g, h, k) ? b = !0 : (g.x = d, g.y = f, g.transform(c), Gn(this, g, h, k) && (b = !0))));
        I.free(g);
        rd.free(c);
        I.free(h);
        I.free(k);
        return b
    };

    function Gn(a, b, c, d) {
        if (!a.Uc(b, c, d)) return !1;
        a = b.x;
        b = b.y;
        var e = c.x,
            f = c.y;
        c = d.x;
        d = d.y;
        if (a === e) return b < f ? (a = b, b = f) : a = f, d >= a && d <= b;
        a < e ? (d = a, a = e) : d = e;
        return c >= d && c <= a
    }
    t.Lx = function (a, b, c) {
        function d(a, b) {
            for (var c = a.length, d = 0; d < c; d += 2)
                if (b.dd(a[d], a[d + 1]) > e) return !0;
            return !1
        }
        if (c && null !== this.fill && this.Hh(a, !0)) return !0;
        var e = a.Ae(b),
            f = e;
        1.5 < this.strokeWidth && (e = this.strokeWidth / 2 + Math.sqrt(e), e *= e);
        b = this.ka;
        if (null === b && (this.measure(Infinity, Infinity), b = this.ka, null === b)) return !1;
        if (!c) {
            var g = b.bounds,
                h = g.x,
                k = g.y,
                l = g.x + g.width;
            g = g.y + g.height;
            if (Bb(a.x, a.y, h, k) <= e && Bb(a.x, a.y, l, k) <= e && Bb(a.x, a.y, h, g) <= e && Bb(a.x, a.y, l, g) <= e) return !0
        }
        h = b.startX;
        k = b.startY;
        l =
            b.endX;
        g = b.endY;
        if (b.type === wd) {
            if (c = (h - l) * (a.x - l) + (k - g) * (a.y - g), Ab(a.x, a.y, h, k, l, g) <= (0 <= (l - h) * (a.x - h) + (g - k) * (a.y - k) && 0 <= c ? e : f)) return !0
        } else {
            if (b.type === Gd) return b = !1, c && (b = Ab(a.x, a.y, h, k, h, g) <= e || Ab(a.x, a.y, h, k, l, k) <= e || Ab(a.x, a.y, l, k, l, g) <= e || Ab(a.x, a.y, h, g, l, g) <= e), b;
            if (b.type === Hd) {
                b = a.x - (h + l) / 2;
                f = a.y - (k + g) / 2;
                var m = Math.abs(l - h) / 2,
                    n = Math.abs(g - k) / 2;
                if (0 === m || 0 === n) return Ab(a.x, a.y, h, k, l, g) <= e ? !0 : !1;
                if (c) {
                    if (a = J.bz(m, n, b, f), a * a <= e) return !0
                } else return Bb(b, f, -m, 0) >= e || Bb(b, f, 0, -n) >= e || Bb(b,
                    f, 0, n) >= e || Bb(b, f, m, 0) >= e ? !1 : !0
            } else if (b.type === ud) {
                l = b.bounds;
                f = l.x;
                h = l.y;
                k = l.x + l.width;
                l = l.y + l.height;
                if (a.x > k && a.x < f && a.y > l && a.y < h && Ab(a.x, a.y, f, h, f, l) > e && Ab(a.x, a.y, f, h, k, h) > e && Ab(a.x, a.y, k, l, f, l) > e && Ab(a.x, a.y, k, l, k, h) > e) return !1;
                f = Math.sqrt(e);
                if (c) {
                    if (null === this.fill ? ee(b, a.x, a.y, f) : ce(b, a, f, !0, !1)) return !0
                } else {
                    c = b.figures;
                    for (b = 0; b < c.count; b++) {
                        f = c.j[b];
                        g = f.startX;
                        m = f.startY;
                        if (a.dd(g, m) > e) return !1;
                        h = f.segments.j;
                        k = h.length;
                        for (l = 0; l < k; l++) switch (n = h[l], n.type) {
                            case Wd:
                            case yd:
                                g = n.endX;
                                m = n.endY;
                                if (a.dd(g, m) > e) return !1;
                                break;
                            case Xd:
                                var p = Fa();
                                J.ye(g, m, n.point1X, n.point1Y, n.point2X, n.point2Y, n.endX, n.endY, .8, p);
                                g = d(p, a);
                                Ha(p);
                                if (g) return !1;
                                g = n.endX;
                                m = n.endY;
                                if (a.dd(g, m) > e) return !1;
                                break;
                            case Yd:
                                p = Fa();
                                J.Cq(g, m, n.point1X, n.point1Y, n.endX, n.endY, .8, p);
                                g = d(p, a);
                                Ha(p);
                                if (g) return !1;
                                g = n.endX;
                                m = n.endY;
                                if (a.dd(g, m) > e) return !1;
                                break;
                            case Zd:
                            case $d:
                                p = n.type === Zd ? ae(n, f) : be(n, f, g, m);
                                var r = p.length;
                                if (0 === r) {
                                    g = n.centerX;
                                    m = n.centerY;
                                    if (a.dd(g, m) > e) return !1;
                                    break
                                }
                                n = null;
                                for (var q = Fa(), u = 0; u <
                                    r; u++)
                                    if (n = p[u], q.length = 0, J.ye(n[0], n[1], n[2], n[3], n[4], n[5], n[6], n[7], .8, q), d(q, a)) return Ha(q), !1;
                                Ha(q);
                                null !== n && (g = n[6], m = n[7]);
                                break;
                            default:
                                B("Unknown Segment type: " + n.type)
                        }
                    }
                    return !0
                }
            }
        }
        return !1
    };
    t.cc = function () {
        this.ka = null
    };

    function Hn(a) {
        var b = a.diagram;
        null !== b && b.undoManager.isUndoingRedoing || (a.segmentOrientation = In, "None" !== a.Yl ? (a.segmentIndex = -1, a.alignmentFocus = fd) : "None" !== a.al && (a.segmentIndex = 0, a.alignmentFocus = new P(1 - fd.x, fd.y)))
    }
    Lf.makeGeometry = function (a, b, c) {
        if ("None" !== a.toArrow) var d = Jn[a.toArrow];
        else "None" !== a.fromArrow ? d = Jn[a.fromArrow] : (d = J.Je[a.figure], "string" === typeof d && (d = J.Je[d]), void 0 === d && B("Unknown Shape.figure: " + a.figure), d = d(a, b, c), d.kl = b, d.jl = c);
        if (null === d) {
            var e = J.Je.Rectangle;
            "function" === typeof e && (d = e(a, b, c))
        }
        return d
    };

    function Kn(a) {
        var b = Jn[a];
        if (void 0 === b) {
            var c = a.toLowerCase();
            if ("none" === c) return "None";
            b = Jn[c];
            if (void 0 === b) {
                var d = null,
                    e;
                for (e in J.Nm)
                    if (e.toLowerCase() === c) {
                        d = e;
                        break
                    } if (null !== d) return a = Id(J.Nm[d], !1), Jn[d] = a, c !== d && (Jn[c] = d), d
            }
        }
        return "string" === typeof b ? b : b instanceof td ? a : null
    }
    ma.Object.defineProperties(Lf.prototype, {
        geometry: {
            get: function () {
                return null !== this.ka ? this.ka : this.Qd
            },
            set: function (a) {
                var b = this.ka;
                if (b !== a) {
                    null !== a ? this.Qd = this.ka = a.freeze() : this.Qd = this.ka = null;
                    var c = this.part;
                    null !== c && (c.gh = NaN);
                    this.o();
                    this.g("geometry", b, a);
                    el(this) && (a = this.part, null !== a && fl(this, a, "geometryString"))
                }
            }
        },
        geometryString: {
            get: function () {
                return null === this.geometry ? "" : this.geometry.toString()
            },
            set: function (a) {
                a =
                    Id(a);
                var b = a.normalize();
                this.geometry = a;
                this.position = a = I.allocAt(-b.x, -b.y);
                I.free(a)
            }
        },
        isGeometryPositioned: {
            get: function () {
                return this.Zn
            },
            set: function (a) {
                var b = this.Zn;
                b !== a && (this.Zn = a, this.o(), this.g("isGeometryPositioned", b, a))
            }
        },
        fill: {
            get: function () {
                return this.$k
            },
            set: function (a) {
                var b = this.$k;
                b !== a && (null !== a && Rl(a, "Shape.fill"), a instanceof tl && a.freeze(), this.$k = a, this.M(), this.g("fill", b, a))
            }
        },
        stroke: {
            get: function () {
                return this.Dc
            },
            set: function (a) {
                var b = this.Dc;
                b !== a && (null !== a && Rl(a, "Shape.stroke"), a instanceof tl && a.freeze(), this.Dc = a, this.M(), this.g("stroke", b, a))
            }
        },
        strokeWidth: {
            get: function () {
                return this.th
            },
            set: function (a) {
                var b = this.th;
                if (b !== a)
                    if (0 <= a) {
                        this.th = a;
                        this.o();
                        var c = this.part;
                        null !== c && (c.gh = NaN);
                        this.g("strokeWidth", b, a)
                    } else va(a, "value >= 0", Lf, "strokeWidth:value")
            }
        },
        strokeCap: {
            get: function () {
                return this.Rl
            },
            set: function (a) {
                var b =
                    this.Rl;
                b !== a && ("string" !== typeof a || "butt" !== a && "round" !== a && "square" !== a ? va(a, '"butt", "round", or "square"', Lf, "strokeCap") : (this.Rl = a, this.M(), this.g("strokeCap", b, a)))
            }
        },
        strokeJoin: {
            get: function () {
                return this.Sl
            },
            set: function (a) {
                var b = this.Sl;
                b !== a && ("string" !== typeof a || "miter" !== a && "bevel" !== a && "round" !== a ? va(a, '"miter", "bevel", or "round"', Lf, "strokeJoin") : (this.Sl = a, this.M(), this.g("strokeJoin", b, a)))
            }
        },
        strokeMiterLimit: {
            get: function () {
                return this.Oj
            },
            set: function (a) {
                var b = this.Oj;
                if (b !== a && 1 <= a) {
                    this.Oj = a;
                    this.M();
                    var c = this.part;
                    null !== c && (c.gh = NaN);
                    this.g("strokeMiterLimit", b, a)
                }
            }
        },
        strokeDashArray: {
            get: function () {
                return this.rh
            },
            set: function (a) {
                var b = this.rh;
                if (b !== a) {
                    if (null !== a) {
                        for (var c = a.length, d = 0, e = 0; e < c; e++) {
                            var f = a[e];
                            0 <= f && isFinite(f) || B("strokeDashArray:value " + f + " at index " + e + " must be a positive number or zero.");
                            d += f
                        }
                        if (0 === d) {
                            if (null === b) return;
                            a = null
                        }
                    }
                    this.rh = a;
                    this.M();
                    this.g("strokeDashArray",
                        b, a)
                }
            }
        },
        strokeDashOffset: {
            get: function () {
                return this.sh
            },
            set: function (a) {
                var b = this.sh;
                b !== a && 0 <= a && (this.sh = a, this.M(), this.g("strokeDashOffset", b, a))
            }
        },
        figure: {
            get: function () {
                return this.Zk
            },
            set: function (a) {
                var b = this.Zk;
                if (b !== a) {
                    var c = J.Je[a];
                    "function" === typeof c ? c = a : (c = J.Je[a.toLowerCase()]) || B("Unknown Shape.figure: " + a);
                    b !== c && (a = this.part, null !== a && (a.gh = NaN), this.Zk = c, this.Qd = null, this.cc(), this.o(), this.g("figure", b, c))
                }
            }
        },
        toArrow: {
            get: function () {
                return this.Yl
            },
            set: function (a) {
                var b = this.Yl;
                !0 === a ? a = "Standard" : !1 === a && (a = "");
                if (b !== a) {
                    var c = Kn(a);
                    null === c ? B("Unknown Shape.toArrow: " + a) : b !== c && (this.Yl = c, this.Qd = null, this.cc(), this.o(), Hn(this), this.g("toArrow", b, c))
                }
            }
        },
        fromArrow: {
            get: function () {
                return this.al
            },
            set: function (a) {
                var b = this.al;
                !0 === a ? a = "Standard" : !1 === a && (a = "");
                if (b !== a) {
                    var c = Kn(a);
                    null === c ? B("Unknown Shape.fromArrow: " + a) : b !== c && (this.al = c, this.Qd = null, this.cc(), this.o(),
                        Hn(this), this.g("fromArrow", b, c))
                }
            }
        },
        spot1: {
            get: function () {
                return this.hf
            },
            set: function (a) {
                var b = this.hf;
                b.w(a) || (this.hf = a = a.G(), this.o(), this.g("spot1", b, a))
            }
        },
        spot2: {
            get: function () {
                return this.jf
            },
            set: function (a) {
                var b = this.jf;
                b.w(a) || (this.jf = a = a.G(), this.o(), this.g("spot2", b, a))
            }
        },
        parameter1: {
            get: function () {
                return this.Zo
            },
            set: function (a) {
                var b = this.Zo;
                b !== a && (this.Zo = a, this.cc(), this.o(), this.g("parameter1",
                    b, a))
            }
        },
        parameter2: {
            get: function () {
                return this.$o
            },
            set: function (a) {
                var b = this.$o;
                b !== a && (this.$o = a, this.cc(), this.o(), this.g("parameter2", b, a))
            }
        },
        naturalBounds: {
            get: function () {
                if (null !== this.ka) return this.oc.assign(this.ka.bounds), this.oc;
                var a = this.desiredSize;
                return new N(0, 0, a.width, a.height)
            }
        },
        pathPattern: {
            get: function () {
                return this.bp
            },
            set: function (a) {
                var b = this.bp;
                b !== a && (this.bp = a, this.M(), this.g("pathPattern",
                    b, a))
            }
        },
        geometryStretch: {
            get: function () {
                return this.Nn
            },
            set: function (a) {
                var b = this.Nn;
                b !== a && (this.Nn = a, this.g("geometryStretch", b, a))
            }
        },
        interval: {
            get: function () {
                return this.Hd
            },
            set: function (a) {
                var b = this.Hd;
                a = Math.round(a);
                if (b !== a && 0 !== a && isFinite(a)) {
                    this.Hd = a;
                    var c = this.diagram;
                    null !== c && this.panel === c.grid && mj(c);
                    this.o();
                    c = this.panel;
                    null !== c && (c.$g = null);
                    this.g("interval", b, a)
                }
            }
        },
        graduatedStart: {
            get: function () {
                return this.Fd
            },
            set: function (a) {
                var b = this.Fd;
                b !== a && (0 > a ? a = 0 : 1 < a && (a = 1), this.Fd = a, this.o(), this.g("graduatedStart", b, a))
            }
        },
        graduatedEnd: {
            get: function () {
                return this.Dd
            },
            set: function (a) {
                var b = this.Dd;
                b !== a && (0 > a ? a = 0 : 1 < a && (a = 1), this.Dd = a, this.o(), this.g("graduatedEnd", b, a))
            }
        },
        graduatedSkip: {
            get: function () {
                return this.Ed
            },
            set: function (a) {
                var b = this.Ed;
                b !== a && (this.Ed = a, this.o(), this.g("graduatedSkip", b, a))
            }
        }
    });
    Lf.prototype.intersectsRect = Lf.prototype.Gc;
    Lf.prototype.containedInRect = Lf.prototype.Gh;
    Lf.prototype.getNearestIntersectionPoint = Lf.prototype.Uc;
    Lf.prototype.getDocumentBounds = Lf.prototype.lm;
    Lf.prototype.getDocumentPoint = Lf.prototype.ga;
    var Jn = new db,
        Dn = new db;
    Lf.className = "Shape";
    Lf.getFigureGenerators = function () {
        var a = new H,
            b;
        for (b in J.Je) b !== b.toLowerCase() && a.add(b, J.Je[b]);
        a.freeze();
        return a
    };
    Lf.defineFigureGenerator = function (a, b) {
        var c = a.toLowerCase(),
            d = J.Je;
        d[a] = b;
        d[c] = a
    };
    Lf.getArrowheadGeometries = function () {
        var a = new H;
        for (d in J.Nm)
            if (void 0 === Jn[d]) {
                var b = Id(J.Nm[d], !1);
                Jn[d] = b;
                b = d.toLowerCase();
                b !== d && (Jn[b] = d)
            } for (var c in Jn)
            if (c !== c.toLowerCase()) {
                var d = Jn[c];
                d instanceof td && a.add(c, d)
            } a.freeze();
        return a
    };
    Lf.defineArrowheadGeometry = function (a, b) {
        var c = null;
        "string" === typeof b ? c = Id(b, !1) : c = b;
        b = a.toLowerCase();
        "none" !== b && a !== b || B("Shape.defineArrowheadGeometry name must not be empty or None or all-lower-case: " + a);
        var d = Jn;
        d[a] = c;
        d[b] = a
    };

    function Wg() {
        Y.call(this);
        Ln || (Mn = Ug ? (new Ck(null)).context : null, Ln = !0);
        this.ix = this.Tb = "";
        this.Dc = "black";
        this.fe = "13px sans-serif";
        this.Ii = "start";
        this.Cd = zg;
        this.Mi = bd;
        this.xj = !0;
        this.pi = this.ri = !1;
        this.lg = Nn;
        this.wg = On;
        this.$r = this.pb = this.Nc = 0;
        this.Du = this.Eu = null;
        this.Dn = !1;
        this.zc = this.en = this.Rp = this.Ji = this.Sp = null;
        this.gf = this.ff = 0;
        this.ne = Infinity;
        this.ti = 0;
        this.ge = null;
        this.te = 0;
        this.ee = this.fb = this.Qb = null;
        this.Hd = 1;
        this.Fd = 0;
        this.Dd = 1;
        this.Ed = this.tj = null
    }
    la(Wg, Y);
    Wg.prototype.cloneProtected = function (a) {
        Y.prototype.cloneProtected.call(this, a);
        a.Tb = this.Tb;
        a.ix = this.ix;
        a.Dc = this.Dc;
        a.fe = this.fe;
        a.Ii = this.Ii;
        a.Cd = this.Cd;
        a.Mi = this.Mi;
        a.xj = this.xj;
        a.ri = this.ri;
        a.pi = this.pi;
        a.lg = this.lg;
        a.wg = this.wg;
        a.Nc = this.Nc;
        a.$r = this.$r;
        a.pb = this.pb;
        a.Eu = this.Eu;
        a.Du = this.Du;
        a.Dn = this.Dn;
        a.Sp = this.Sp;
        a.Ji = this.Ji;
        a.Rp = this.Rp;
        a.en = this.en;
        a.zc = this.zc;
        a.ff = this.ff;
        a.gf = this.gf;
        a.ne = this.ne;
        a.ge = this.ge;
        a.te = this.te;
        a.Qb = this.Qb;
        a.fb = this.fb;
        a.ee = this.ee;
        a.ti = this.ti;
        a.Hd =
            this.Hd;
        a.Fd = this.Fd;
        a.Dd = this.Dd;
        a.tj = this.tj;
        a.Ed = this.Ed
    };

    function Tm(a, b) {
        a.F = b.F | 6144;
        a.qb = b.opacity;
        a.gb = b.background;
        a.dc = b.areaBackground;
        a.Lc = b.desiredSize.G();
        a.eg = b.minSize.G();
        a.dg = b.maxSize.G();
        a.bg = b.bg.copy();
        a.ya = b.scale;
        a.Yb = b.angle;
        a.ve = b.stretch;
        a.fh = b.margin.G();
        a.vb = b.alignment.G();
        a.Fk = b.alignmentFocus.G();
        a.Hl = b.segmentFraction;
        a.Il = b.segmentOffset.G();
        a.Jl = b.segmentOrientation;
        null !== b.ld && (a.ld = b.ld.copy());
        a.Ll = b.shadowVisible;
        b instanceof Wg && (a.Tb = b.Tb, a.Dc = b.Dc, a.fe = b.fe, a.Ii = b.Ii, a.Cd = b.Cd, a.Mi = b.Mi, a.xj = b.xj, a.ri = b.ri, a.pi = b.pi,
            a.lg = b.lg, a.wg = b.wg, a.ge = null, a.ff = b.ff, a.gf = b.gf, a.ne = b.ne, a.ti = b.ti, a.Hd = b.Hd, a.Fd = b.Fd, a.Dd = b.Dd, a.tj = b.tj, a.Ed = b.Ed)
    }
    t = Wg.prototype;
    t.cb = function (a) {
        a.classType === Wg ? this.wrap = a : Y.prototype.cb.call(this, a)
    };
    t.toString = function () {
        return 22 < this.Tb.length ? 'TextBlock("' + this.Tb.substring(0, 20) + '"...)' : 'TextBlock("' + this.Tb + '")'
    };
    t.o = function () {
        Y.prototype.o.call(this);
        this.Du = this.Eu = null
    };
    t.Qi = function (a, b) {
        if (null !== this.Dc && 0 !== this.Tb.length && null !== this.fe) {
            var c = this.naturalBounds,
                d = this.actualBounds,
                e = c.width,
                f = c.height,
                g = Pn(this),
                h = a.textAlign = this.Ii,
                k = b.nl;
            "start" === h ? h = k ? "right" : "left" : "end" === h && (h = k ? "left" : "right");
            k = this.ri;
            var l = this.pi;
            ii(this, a, this.Dc, !0, !1, c, d);
            (k || l) && ii(this, a, this.Dc, !1, !1, c, d);
            d = 0;
            c = !1;
            var m = I.allocAt(0, 0);
            this.ud.ra(m);
            var n = I.allocAt(0, g);
            this.ud.ra(n);
            var p = m.Ae(n);
            I.free(m);
            I.free(n);
            m = b.scale;
            8 > p * m * m && (c = !0);
            b.Db !== a && (c = !1);
            !1 === b.Be("textGreeking") &&
                (c = !1);
            b = this.ff;
            p = this.gf;
            switch (this.flip) {
                case $k:
                    a.translate(e, 0);
                    a.scale(-1, 1);
                    break;
                case Zk:
                    a.translate(0, f);
                    a.scale(1, -1);
                    break;
                case al:
                    a.translate(e, f), a.scale(-1, -1)
            }
            m = this.Nc;
            n = (b + g + p) * m;
            f > n && (d = this.Mi, d = d.y * f - d.y * n + d.offsetY);
            if (1 === m && null !== this.ee) p = this.pb, p > e && (p = e), this.Pi(this.ee, a, 0, d + b, e, g, p, c, h, k, l);
            else if (null !== this.Qb && null !== this.fb)
                for (n = 0; n < m; n++) {
                    var r = this.Qb[n];
                    r > e && (r = e);
                    d += b;
                    this.Pi(this.fb[n], a, 0, d, e, g, r, c, h, k, l);
                    d += g + p
                }
            switch (this.flip) {
                case $k:
                    a.scale(-1, 1);
                    a.translate(-e,
                        0);
                    break;
                case Zk:
                    a.scale(1, -1);
                    a.translate(0, -f);
                    break;
                case al:
                    a.scale(-1, -1), a.translate(-e, -f)
            }
        }
    };
    t.Pi = function (a, b, c, d, e, f, g, h, k, l, m) {
        var n = 0;
        h ? ("left" === k ? n = 0 : "right" === k ? n = e - g : "center" === k && (n = (e - g) / 2), b.fillRect(c + n, d + .25 * f, g, 1)) : ("left" === k ? n = 0 : "right" === k ? n = e : "center" === k && (n = e / 2), e = null !== Qn ? Qn(this, f) : .75 * f, b.fillText(a, c + n, d + e), a = f / 20 | 0, 0 === a && (a = 1), "right" === k ? n -= g : "center" === k && (n -= g / 2), l && (k = null !== Rn ? Rn(this, f) : .8 * f, b.beginPath(), b.lineWidth = a, b.moveTo(c + n, d + k), b.lineTo(c + n + g, d + k), b.stroke()), m && (b.beginPath(), b.lineWidth = a, d = d + f - f / 2.2 | 0, 0 !== a % 2 && (d += .5), b.moveTo(c + n, d), b.lineTo(c +
            n + g, d), b.stroke()))
    };
    t.sm = function (a, b, c, d) {
        this.ti = a;
        var e = this.fe;
        null !== Mn && Sn !== e && (Sn = Mn.font = e);
        this.pb = this.te = 0;
        this.ee = this.fb = this.Qb = this.ge = null;
        var f;
        if (isNaN(this.desiredSize.width)) {
            e = this.Tb.replace(/\r\n/g, "\n").replace(/\r/g, "\n");
            if (0 === e.length) e = 0;
            else if (this.isMultiline) {
                for (var g = f = 0, h = !1; !h;) {
                    var k = e.indexOf("\n", g); - 1 === k && (k = e.length, h = !0);
                    f = Math.max(f, Tn(e.substr(g, k - g).trim()));
                    g = k + 1
                }
                e = f
            } else f = e.indexOf("\n", 0), 0 <= f && (e = e.substr(0, f)), e = Tn(e);
            e = Math.min(e, a / this.scale);
            e = Math.max(8, e)
        } else e =
            this.desiredSize.width;
        null !== this.panel && (e = Math.min(e, this.panel.maxSize.width));
        f = Un(this, e);
        isNaN(this.desiredSize.height) ? f = Math.min(f, b / this.scale) : f = this.desiredSize.height;
        g = f;
        if (0 !== this.pb && null !== this.Qb && null !== this.fb && this.lg === Vn && (b = this.fe, b = this.lg === Vn ? Wn(b) : 0, h = this.ff + this.gf, h = Math.max(0, Pn(this) + h), g = Math.min(this.maxLines - 1, Math.max(Math.floor(g / h + .01) - 1, 0)), !(g + 1 >= this.fb.length))) {
            h = this.fb[g];
            for (b = Math.max(1, a - b); Tn(h) > b && 1 < h.length;) h = h.substr(0, h.length - 1);
            h += Xn;
            b = Tn(h);
            this.fb[g] = h;
            this.fb = this.fb.slice(0, g + 1);
            this.Qb[g] = b;
            this.Qb = this.Qb.slice(0, g + 1);
            this.te = this.fb.length;
            this.pb = Math.max(this.pb, b);
            this.Nc = this.te;
            1 === this.Nc && (this.ee = this.fb[0])
        }
        if (this.wrap === Yn || isNaN(this.desiredSize.width)) e = isNaN(a) ? this.pb : Math.min(a, this.pb), isNaN(this.desiredSize.width) && (e = Math.max(8, e));
        e = Math.max(c, e);
        f = Math.max(d, f);
        Vb(this.oc, e, f);
        hl(this, 0, 0, e, f)
    };
    t.Fh = function (a, b, c, d) {
        ml(this, a, b, c, d)
    };

    function Zn(a, b, c) {
        if (null === a.ee) a.ee = b, a.pb = c;
        else {
            if (null === a.fb || null === a.Qb) a.fb = [], a.Qb = [], a.fb.push(a.ee), a.Qb.push(a.pb);
            a.fb.push(b);
            a.Qb.push(c)
        }
    }

    function $n(a, b, c, d) {
        b = b.trim();
        var e = 0;
        var f = a.fe;
        var g = a.ff + a.gf;
        g = Math.max(0, Pn(a) + g);
        var h = a.lg === Vn ? Wn(f) : 0;
        if (a.Nc >= a.ne) null !== d && d.h(0, g);
        else {
            var k = b;
            if (a.wg === ao)
                if (a.te = 1, f = Tn(b), 0 === h || f <= c) a.pb = Math.max(a.pb, f), Zn(a, b, a.pb), null !== d && d.h(f, g);
                else {
                    e = bo(a, k);
                    k = k.substr(e.length);
                    b = bo(a, k);
                    for (f = Tn(e + b); 0 < b.length && f <= c;) e += b, k = k.substr(b.length), b = bo(a, k), f = Tn((e + b).trim());
                    e += b.trim();
                    for (c = Math.max(1, c - h); Tn(e) > c && 1 < e.length;) e = e.substr(0, e.length - 1);
                    e += Xn;
                    b = Tn(e);
                    a.pb = b;
                    Zn(a, e, b);
                    null !==
                        d && d.h(b, g)
                }
            else {
                h = 0;
                0 === k.length && (h = 1, Zn(a, k, 0));
                for (; 0 < k.length;) {
                    var l = bo(a, k);
                    for (k = k.substr(l.length); Tn(l) > c;) {
                        var m = 1;
                        f = Tn(l.substr(0, m));
                        for (b = 0; f <= c;) m++, b = f, f = Tn(l.substr(0, m));
                        if (1 === m) {
                            var n = f;
                            e = Math.max(e, f)
                        } else n = b, e = Math.max(e, b);
                        m--;
                        1 > m && (m = 1);
                        Zn(a, l.substr(0, m), n);
                        h++;
                        l = l.substr(m);
                        if (a.Nc + h > a.ne) break
                    }
                    b = bo(a, k);
                    for (f = Tn(l + b); 0 < b.length && f <= c;) l += b, k = k.substr(b.length), b = bo(a, k), f = Tn((l + b).trim());
                    l = l.trim();
                    if ("" !== l && ("\u00ad" === l[l.length - 1] && (l = l.substring(0, l.length - 1) + "\u2010"),
                            0 === b.length ? (m = f, e = Math.max(e, f)) : (m = b = Tn(l), e = Math.max(e, b)), Zn(a, l, m), h++, a.Nc + h > a.ne)) break
                }
                a.te = Math.min(a.ne, h);
                a.pb = Math.max(a.pb, e);
                null !== d && d.h(a.pb, g * a.te)
            }
        }
    }

    function bo(a, b) {
        if (a.wg === co) return b.substr(0, 1);
        a = b.length;
        for (var c = 0, d = eo; c < a && !d.test(b.charAt(c));) c++;
        for (; c < a && d.test(b.charAt(c));) c++;
        return c >= a ? b : b.substr(0, c)
    }

    function Tn(a) {
        return null === Mn ? 8 * a.length : Mn.measureText(a).width
    }

    function Pn(a) {
        if (null !== a.ge) return a.ge;
        var b = a.fe;
        if (null === Mn) {
            var c = 16;
            return a.ge = c
        }
        void 0 !== fo[b] && 5E3 > go ? c = fo[b] : (c = 1.3 * Mn.measureText("M").width, fo[b] = c, go++);
        return a.ge = c
    }

    function Wn(a) {
        if (null === Mn) return 6;
        if (void 0 !== ho[a] && 5E3 > io) var b = ho[a];
        else b = Mn.measureText(Xn).width, ho[a] = b, io++;
        return b
    }

    function Un(a, b) {
        var c = a.Tb.replace(/\r\n/g, "\n").replace(/\r/g, "\n"),
            d = a.ff + a.gf;
        d = Math.max(0, Pn(a) + d);
        if (0 === c.length) return a.pb = 0, a.Nc = 1, d;
        if (!a.isMultiline) {
            var e = c.indexOf("\n", 0);
            0 <= e && (c = c.substr(0, e))
        }
        e = 0;
        for (var f = a.Nc = 0, g, h = !1; !h;) {
            g = c.indexOf("\n", f); - 1 === g && (g = c.length, h = !0);
            if (f <= g) {
                f = c.substr(f, g - f);
                if (a.wg !== ao) {
                    a.te = 0;
                    var k = M.alloc();
                    $n(a, f, b, k);
                    e += k.height;
                    M.free(k);
                    a.Nc += a.te
                } else $n(a, f, b, null), e += d, a.Nc++;
                a.Nc === a.ne && (h = !0)
            }
            f = g + 1
        }
        return a.$r = e
    }
    ma.Object.defineProperties(Wg.prototype, {
        font: {
            get: function () {
                return this.fe
            },
            set: function (a) {
                var b = this.fe;
                b !== a && (this.fe = a, this.ge = null, this.o(), this.g("font", b, a))
            }
        },
        text: {
            get: function () {
                return this.Tb
            },
            set: function (a) {
                var b = this.Tb;
                null !== a && void 0 !== a ? a = a.toString() : a = "";
                b !== a && (this.Tb = a, this.o(), this.g("text", b, a))
            }
        },
        textAlign: {
            get: function () {
                return this.Ii
            },
            set: function (a) {
                var b = this.Ii;
                b === a || "start" !==
                    a && "end" !== a && "left" !== a && "right" !== a && "center" !== a || (this.Ii = a, this.M(), this.g("textAlign", b, a))
            }
        },
        flip: {
            get: function () {
                return this.Cd
            },
            set: function (a) {
                var b = this.Cd;
                b !== a && (this.Cd = a, this.M(), this.g("flip", b, a))
            }
        },
        verticalAlignment: {
            get: function () {
                return this.Mi
            },
            set: function (a) {
                var b = this.Mi;
                b.w(a) || (this.Mi = a = a.G(), Cl(this), this.g("verticalAlignment", b, a))
            }
        },
        naturalBounds: {
            get: function () {
                if (!this.oc.v()) {
                    var a =
                        M.alloc();
                    $n(this, this.Tb, 999999, a);
                    var b = a.width;
                    M.free(a);
                    a = Un(this, b);
                    var c = this.desiredSize;
                    isNaN(c.width) || (b = c.width);
                    isNaN(c.height) || (a = c.height);
                    Vb(this.oc, b, a)
                }
                return this.oc
            }
        },
        isMultiline: {
            get: function () {
                return this.xj
            },
            set: function (a) {
                var b = this.xj;
                b !== a && (this.xj = a, this.o(), this.g("isMultiline", b, a))
            }
        },
        isUnderline: {
            get: function () {
                return this.ri
            },
            set: function (a) {
                var b = this.ri;
                b !== a && (this.ri = a, this.M(), this.g("isUnderline", b,
                    a))
            }
        },
        isStrikethrough: {
            get: function () {
                return this.pi
            },
            set: function (a) {
                var b = this.pi;
                b !== a && (this.pi = a, this.M(), this.g("isStrikethrough", b, a))
            }
        },
        wrap: {
            get: function () {
                return this.wg
            },
            set: function (a) {
                var b = this.wg;
                b !== a && (this.wg = a, this.o(), this.g("wrap", b, a))
            }
        },
        overflow: {
            get: function () {
                return this.lg
            },
            set: function (a) {
                var b = this.lg;
                b !== a && (this.lg = a, this.o(), this.g("overflow", b, a))
            }
        },
        stroke: {
            get: function () {
                return this.Dc
            },
            set: function (a) {
                var b = this.Dc;
                b !== a && (null !== a && Rl(a, "TextBlock.stroke"), a instanceof tl && a.freeze(), this.Dc = a, this.M(), this.g("stroke", b, a))
            }
        },
        lineCount: {
            get: function () {
                return this.Nc
            }
        },
        editable: {
            get: function () {
                return this.Dn
            },
            set: function (a) {
                var b = this.Dn;
                b !== a && (this.Dn = a, this.g("editable", b, a))
            }
        },
        textEditor: {
            get: function () {
                return this.Sp
            },
            set: function (a) {
                var b = this.Sp;
                b !== a &&
                    (this.Sp = a, this.g("textEditor", b, a))
            }
        },
        errorFunction: {
            get: function () {
                return this.zc
            },
            set: function (a) {
                var b = this.zc;
                b !== a && (this.zc = a, this.g("errorFunction", b, a))
            }
        },
        interval: {
            get: function () {
                return this.Hd
            },
            set: function (a) {
                var b = this.Hd;
                a = Math.round(a);
                if (b !== a && 0 !== a && isFinite(a)) {
                    this.Hd = a;
                    this.o();
                    var c = this.panel;
                    null !== c && (c.$g = null);
                    this.g("interval", b, a)
                }
            }
        },
        graduatedStart: {
            get: function () {
                return this.Fd
            },
            set: function (a) {
                var b = this.Fd;
                b !== a && (0 > a ? a = 0 : 1 < a && (a = 1), this.Fd = a, this.o(), this.g("graduatedStart", b, a))
            }
        },
        graduatedEnd: {
            get: function () {
                return this.Dd
            },
            set: function (a) {
                var b = this.Dd;
                b !== a && (0 > a ? a = 0 : 1 < a && (a = 1), this.Dd = a, this.o(), this.g("graduatedEnd", b, a))
            }
        },
        graduatedFunction: {
            get: function () {
                return this.tj
            },
            set: function (a) {
                var b = this.tj;
                b !== a && (this.tj = a, this.o(), this.g("graduatedFunction", b, a))
            }
        },
        graduatedSkip: {
            get: function () {
                return this.Ed
            },
            set: function (a) {
                var b = this.Ed;
                b !== a && (this.Ed = a, this.o(), this.g("graduatedSkip", b, a))
            }
        },
        textValidation: {
            get: function () {
                return this.Ji
            },
            set: function (a) {
                var b = this.Ji;
                b !== a && (this.Ji = a, this.g("textValidation", b, a))
            }
        },
        textEdited: {
            get: function () {
                return this.Rp
            },
            set: function (a) {
                var b = this.Rp;
                b !== a && (this.Rp = a, this.g("textEdited", b, a))
            }
        },
        spacingAbove: {
            get: function () {
                return this.ff
            },
            set: function (a) {
                var b =
                    this.ff;
                b !== a && (this.ff = a, this.g("spacingAbove", b, a))
            }
        },
        spacingBelow: {
            get: function () {
                return this.gf
            },
            set: function (a) {
                var b = this.gf;
                b !== a && (this.gf = a, this.g("spacingBelow", b, a))
            }
        },
        maxLines: {
            get: function () {
                return this.ne
            },
            set: function (a) {
                var b = this.ne;
                b !== a && (a = Math.floor(a), 0 >= a && va(a, "> 0", Wg, "maxLines"), this.ne = a, this.g("maxLines", b, a), this.o())
            }
        },
        metrics: {
            get: function () {
                return {
                    arrSize: null !== this.Qb ? this.Qb : [this.pb],
                    arrText: null !== this.fb ? this.fb : [this.ee],
                    maxLineWidth: this.pb,
                    fontHeight: this.ge
                }
            }
        },
        choices: {
            get: function () {
                return this.en
            },
            set: function (a) {
                var b = this.en;
                b !== a && (this.en = a, this.g("choices", b, a))
            }
        }
    });
    var Qn = null,
        Rn = null,
        ao = new D(Wg, "None", 0),
        Yn = new D(Wg, "WrapFit", 1),
        On = new D(Wg, "WrapDesiredSize", 2),
        co = new D(Wg, "WrapBreakAll", 3),
        Nn = new D(Wg, "OverflowClip", 0),
        Vn = new D(Wg, "OverflowEllipsis", 1),
        eo = /[ \u200b\u00ad]/,
        fo = new db,
        go = 0,
        ho = new db,
        io = 0,
        Xn = "...",
        Sn = "",
        Mn = null,
        Ln = !1;
    Wg.className = "TextBlock";
    Wg.getEllipsis = function () {
        return Xn
    };
    Wg.setEllipsis = function (a) {
        Xn = a;
        ho = new db;
        io = 0
    };
    Wg.getBaseline = function () {
        return Qn
    };
    Wg.setBaseline = function (a) {
        Qn = a;
        a = Pa();
        for (var b = a.length, c = 0; c < b; c++) a[c].Ee()
    };
    Wg.getUnderline = function () {
        return Rn
    };
    Wg.setUnderline = function (a) {
        Rn = a;
        a = Pa();
        for (var b = a.length, c = 0; c < b; c++) a[c].Ee()
    };
    Wg.isValidFont = function (a) {
        Ln || (Mn = Ug ? (new Ck(null)).context : null, Ln = !0);
        if (null === Mn) return !0;
        var b = Mn.font;
        if (a === b || "10px sans-serif" === a) return !0;
        Mn.font = "10px sans-serif";
        Mn.font = a;
        var c = Mn.font;
        if ("10px sans-serif" !== c) return Mn.font = b, !0;
        Mn.font = "19px serif";
        var d = Mn.font;
        Mn.font = a;
        c = Mn.font;
        Mn.font = b;
        return c !== d
    };
    Wg.None = ao;
    Wg.WrapFit = Yn;
    Wg.WrapDesiredSize = On;
    Wg.WrapBreakAll = co;
    Wg.OverflowClip = Nn;
    Wg.OverflowEllipsis = Vn;

    function jo() {
        this.Qb = [];
        this.fb = []
    }
    jo.prototype.reset = function () {
        this.Qb = [];
        this.fb = []
    };
    jo.prototype.et = function (a) {
        this.Qb = Ba(a.Qb);
        this.fb = Ba(a.fb)
    };
    jo.className = "TextBlockMetrics";

    function kk() {
        Y.call(this);
        this.Vg = null;
        this.Jp = "";
        this.qh = nc;
        this.fl = vd;
        this.kf = this.zc = null;
        this.el = Ac;
        this.Cd = zg;
        this.Ul = null;
        this.tu = !1;
        this.Er = !0;
        this.vl = !1;
        this.Nl = null
    }
    la(kk, Y);
    kk.prototype.cloneProtected = function (a) {
        Y.prototype.cloneProtected.call(this, a);
        a.element = this.Vg;
        a.Jp = this.Jp;
        a.qh = this.qh.G();
        a.fl = this.fl;
        a.Cd = this.Cd;
        a.zc = this.zc;
        a.kf = this.kf;
        a.el = this.el.G();
        a.Er = this.Er;
        a.Nl = this.Nl
    };
    t = kk.prototype;
    t.cb = function (a) {
        a === zg || a === Bg || a === Yk ? this.imageStretch = a : Y.prototype.cb.call(this, a)
    };
    t.toString = function () {
        return "Picture(" + this.source + ")#" + lb(this)
    };

    function mk(a) {
        void 0 === a && (a = "");
        "" !== a ? ko[a] && (delete ko[a], lo--) : (ko = new db, lo = 0)
    }

    function mo(a, b) {
        a.Pr = !0;
        a.bl = !1;
        for (var c, d = Pa(), e = d.length, f = 0; f < e; f++) {
            var g = d[f];
            c = a.getAttribute("src");
            var h = g.Ci.H(c);
            if (null !== h)
                for (var k = h.length, l = 0; l < k; l++) c = h[l], g.ss.add(c), g.Pb(), void 0 === a.Ou && (a.Ou = b, null !== c.kf && c.kf(c, b))
        }
    }

    function no(a, b) {
        a.bl = b;
        for (var c, d = Pa(), e = d.length, f = 0; f < e; f++) {
            var g = d[f],
                h = a.getAttribute("src");
            c = g.Ci.H(h);
            if (null !== c) {
                g = c.length;
                h = Fa();
                for (var k = 0; k < g; k++) h.push(c[k]);
                for (k = 0; k < g; k++) c = h[k], null !== c.zc && c.zc(c, b);
                Ha(h)
            }
        }
    }
    t.Ee = function () {
        this.M()
    };
    t.Qi = function (a, b) {
        var c = this.Vg;
        if (null !== c) {
            var d = c.getAttribute("src");
            c instanceof HTMLImageElement && (null === d || "" === d) && B('Element has no source ("src") attribute: ' + c);
            if (!(c.bl instanceof Event)) {
                d = this.naturalBounds;
                var e = 0,
                    f = 0,
                    g = this.tu,
                    h = g ? +c.width : c.naturalWidth;
                g = g ? +c.height : c.naturalHeight;
                void 0 === h && c.videoWidth && (h = c.videoWidth);
                void 0 === g && c.videoHeight && (g = c.videoHeight);
                h = h || d.width;
                g = g || d.height;
                if (0 !== h && 0 !== g) {
                    var k = h,
                        l = g;
                    this.sourceRect.v() && (e = this.qh.x, f = this.qh.y, h = this.qh.width,
                        g = this.qh.height);
                    var m = h,
                        n = g,
                        p = this.fl,
                        r = this.el;
                    switch (p) {
                        case zg:
                            if (this.sourceRect.v()) break;
                            m >= d.width && (e = e + r.offsetX + (m * r.x - d.width * r.x));
                            n >= d.height && (f = f + r.offsetY + (n * r.y - d.height * r.y));
                            h = Math.min(d.width, m);
                            g = Math.min(d.height, n);
                            break;
                        case vd:
                            m = d.width;
                            n = d.height;
                            break;
                        case Bg:
                        case Yk:
                            p === Bg ? (p = Math.min(d.height / n, d.width / m), m *= p, n *= p) : p === Yk && (p = Math.max(d.height / n, d.width / m), m *= p, n *= p, m >= d.width && (e = (e + r.offsetX + (m * r.x - d.width * r.x) / m) * h), n >= d.height && (f = (f + r.offsetY + (n * r.y - d.height * r.y) /
                                n) * g), h *= 1 / (m / d.width), g *= 1 / (n / d.height), m = d.width, n = d.height)
                    }
                    p = this.uf() * b.scale;
                    var q = m * p * n * p,
                        u = h * g / q,
                        v = c.__goCache;
                    p = null;
                    var w = oo;
                    if (c.Pr && void 0 !== v && 4 < q && u > w * w)
                        for (null === v.Oi && (po(v, 4, k, l, c), po(v, 16, k, l, c)), k = v.Oi, l = k.length, q = 0; q < l; q++)
                            if (k[q].ratio * k[q].ratio < u) p = k[q];
                            else break;
                    if (!b.Xk) {
                        if (null === this.Ul)
                            if (null === this.Vg) this.Ul = !1;
                            else {
                                k = (new Ck(null)).context;
                                k.drawImage(this.Vg, 0, 0);
                                try {
                                    k.getImageData(0, 0, 1, 1).data[3] && (this.Ul = !1), this.Ul = !1
                                } catch (y) {
                                    this.Ul = !0
                                }
                            } if (this.Ul) return
                    }
                    k =
                        0;
                    m < d.width && (k = r.offsetX + (d.width * r.x - m * r.x));
                    l = 0;
                    n < d.height && (l = r.offsetY + (d.height * r.y - n * r.y));
                    switch (this.flip) {
                        case $k:
                            a.translate(Math.min(d.width, m), 0);
                            a.scale(-1, 1);
                            break;
                        case Zk:
                            a.translate(0, Math.min(d.height, n));
                            a.scale(1, -1);
                            break;
                        case al:
                            a.translate(Math.min(d.width, m), Math.min(d.height, n)), a.scale(-1, -1)
                    }
                    if (b.Be("pictureRatioOptimization") && !b.ni && void 0 !== v && null !== p && 1 !== p.ratio) {
                        a.save();
                        b = p.ratio;
                        try {
                            a.drawImage(p.source, e / b, f / b, Math.min(p.source.width, h / b), Math.min(p.source.height,
                                g / b), k, l, Math.min(d.width, m), Math.min(d.height, n))
                        } catch (y) {
                            this.Er = !1
                        }
                        a.restore()
                    } else try {
                        a.drawImage(c, e, f, h, g, k, l, Math.min(d.width, m), Math.min(d.height, n))
                    } catch (y) {
                        this.Er = !1
                    }
                    switch (this.flip) {
                        case $k:
                            a.scale(-1, 1);
                            a.translate(-Math.min(d.width, m), 0);
                            break;
                        case Zk:
                            a.scale(1, -1);
                            a.translate(0, -Math.min(d.height, n));
                            break;
                        case al:
                            a.scale(-1, -1), a.translate(-Math.min(d.width, m), -Math.min(d.height, n))
                    }
                }
            }
        }
    };
    t.sm = function (a, b, c, d) {
        var e = this.desiredSize,
            f = kl(this, !0),
            g = this.Vg,
            h = this.tu;
        if (h || !this.vl && g && g.complete) this.vl = !0;
        null === g && (isFinite(e.width) || (a = 0), isFinite(e.height) || (b = 0));
        isFinite(e.width) || f === vd || f === Wk ? (isFinite(a) || (a = this.sourceRect.v() ? this.sourceRect.width : h ? +g.width : g.naturalWidth), c = 0) : null !== g && !1 !== this.vl && (a = this.sourceRect.v() ? this.sourceRect.width : h ? +g.width : g.naturalWidth);
        isFinite(e.height) || f === vd || f === Xk ? (isFinite(b) || (b = this.sourceRect.v() ? this.sourceRect.height : h ?
            +g.height : g.naturalHeight), d = 0) : null !== g && !1 !== this.vl && (b = this.sourceRect.v() ? this.sourceRect.height : h ? +g.height : g.naturalHeight);
        isFinite(e.width) && (a = e.width);
        isFinite(e.height) && (b = e.height);
        e = this.maxSize;
        f = this.minSize;
        c = Math.max(c, f.width);
        d = Math.max(d, f.height);
        a = Math.min(e.width, a);
        b = Math.min(e.height, b);
        a = Math.max(c, a);
        b = Math.max(d, b);
        null === g || g.complete || (isFinite(a) || (a = 0), isFinite(b) || (b = 0));
        Vb(this.oc, a, b);
        hl(this, 0, 0, a, b)
    };
    t.Fh = function (a, b, c, d) {
        ml(this, a, b, c, d)
    };
    ma.Object.defineProperties(kk.prototype, {
        element: {
            get: function () {
                return this.Vg
            },
            set: function (a) {
                var b = this.Vg;
                if (b !== a) {
                    null === a || a instanceof HTMLImageElement || a instanceof HTMLVideoElement || a instanceof HTMLCanvasElement || B("Picture.element must be an instance of Image, Canvas, or Video, not: " + a);
                    this.tu = a instanceof HTMLCanvasElement;
                    this.Vg = a;
                    if (null !== a)
                        if (a instanceof HTMLCanvasElement || !0 === a.complete) a.bl instanceof Event && null !== this.zc && this.zc(this, a.bl),
                            !0 === a.Pr && null !== this.kf && this.kf(this, a.Ou), a.Pr = !0, this.desiredSize.v() || (lj(this, !1), this.o());
                        else {
                            var c = this;
                            a.Vw || (a.addEventListener("load", function (b) {
                                mo(a, b);
                                c.desiredSize.v() || (lj(c, !1), c.o())
                            }), a.addEventListener("error", function (b) {
                                no(a, b)
                            }), a.Vw = !0)
                        } this.g("element", b, a);
                    this.M()
                }
            }
        },
        source: {
            get: function () {
                return this.Jp
            },
            set: function (a) {
                var b = this.Jp;
                if (b !== a) {
                    this.Jp = a;
                    var c = ko,
                        d = this.diagram,
                        e = null;
                    if (void 0 !== c[a]) e = c[a];
                    else {
                        30 < lo && (mk(), c = ko);
                        e = ta("img");
                        var f = this;
                        e.addEventListener("load", function (a) {
                            mo(e, a);
                            f.desiredSize.v() || (lj(f, !1), f.o())
                        });
                        e.addEventListener("error", function (a) {
                            no(e, a)
                        });
                        e.Vw = !0;
                        var g = this.Nl;
                        null !== g && (e.crossOrigin = g(this));
                        e.src = a;
                        c[a] = e;
                        lo++
                    }
                    null !== d && lk(d, this);
                    this.element = e;
                    null !== d && jk(d, this);
                    void 0 === e.__goCache && (e.__goCache = new qo);
                    this.o();
                    this.M();
                    this.g("source", b, a)
                }
            }
        },
        sourceCrossOrigin: {
            get: function () {
                return this.Nl
            },
            set: function (a) {
                if (this.Nl !== a && (this.Nl = a, null !== this.element)) {
                    var b =
                        this.element.getAttribute("src");
                    null === a && "string" === typeof b ? this.element.crossOrigin = null : null !== a && (this.element.crossOrigin = a(this));
                    this.element.src = b
                }
            }
        },
        sourceRect: {
            get: function () {
                return this.qh
            },
            set: function (a) {
                var b = this.qh;
                b.w(a) || (this.qh = a = a.G(), this.M(), this.g("sourceRect", b, a))
            }
        },
        imageStretch: {
            get: function () {
                return this.fl
            },
            set: function (a) {
                var b = this.fl;
                b !== a && (this.fl = a, this.M(), this.g("imageStretch", b, a))
            }
        },
        flip: {
            get: function () {
                return this.Cd
            },
            set: function (a) {
                var b = this.Cd;
                b !== a && (this.Cd = a, this.M(), this.g("flip", b, a))
            }
        },
        imageAlignment: {
            get: function () {
                return this.el
            },
            set: function (a) {
                var b = this.el;
                b.w(a) || (this.el = a = a.G(), this.o(), this.g("imageAlignment", b, a))
            }
        },
        errorFunction: {
            get: function () {
                return this.zc
            },
            set: function (a) {
                var b = this.zc;
                b !== a && (this.zc = a, this.g("errorFunction", b, a))
            }
        },
        successFunction: {
            get: function () {
                return this.kf
            },
            set: function (a) {
                var b = this.kf;
                b !== a && (this.kf = a, this.g("successFunction", b, a))
            }
        },
        naturalBounds: {
            get: function () {
                return this.oc
            }
        }
    });
    var ko = null,
        lo = 0,
        oo = 4;
    kk.className = "Picture";
    ko = new db;
    kk.clearCache = mk;

    function qo() {
        this.Oi = null
    }

    function po(a, b, c, d, e) {
        null === a.Oi && (a.Oi = []);
        var f = new Ck(null),
            g = f.context,
            h = 1 / b;
        f.width = c / b;
        f.height = d / b;
        0 !== f.width && 0 !== f.height && (b = new ro(f.Ea, b), c = 1, 0 < a.Oi.length && (c = a.Oi[a.Oi.length - 1], e = c.source, c = c.ratio), g.setTransform(h * c, 0, 0, h * c, 0, 0), g.drawImage(e, 0, 0), a.Oi.push(b))
    }
    qo.className = "PictureCacheArray";

    function ro(a, b) {
        this.source = a;
        this.ratio = b
    }
    ro.className = "PictureCacheInstance";

    function so() {
        this.mt = new td;
        this.fc = null
    }
    t = so.prototype;
    t.reset = function (a) {
        null !== a ? (a.ea(), this.mt = a, a.figures.clear()) : this.mt = new td;
        this.fc = null
    };

    function Kd(a, b, c, d, e) {
        a.fc = new ke;
        a.fc.startX = b;
        a.fc.startY = c;
        a.fc.isFilled = d;
        a.mt.figures.add(a.fc);
        void 0 !== e && (a.fc.isShadowed = e)
    }

    function Sd(a) {
        var b = a.fc.segments.length;
        0 < b && a.fc.segments.L(b - 1).close()
    }
    t.Lq = function (a) {
        this.fc.isShadowed = a
    };
    t.moveTo = function (a, b, c) {
        void 0 === c && (c = !1);
        var d = new le(Wd);
        d.endX = a;
        d.endY = b;
        c && d.close();
        this.fc.segments.add(d)
    };
    t.lineTo = function (a, b, c) {
        void 0 === c && (c = !1);
        var d = new le(yd);
        d.endX = a;
        d.endY = b;
        c && d.close();
        this.fc.segments.add(d)
    };

    function Ld(a, b, c, d, e, f, g) {
        var h;
        void 0 === h && (h = !1);
        var k = new le(Xd);
        k.point1X = b;
        k.point1Y = c;
        k.point2X = d;
        k.point2Y = e;
        k.endX = f;
        k.endY = g;
        h && k.close();
        a.fc.segments.add(k)
    }

    function Qd(a, b, c, d, e) {
        var f;
        void 0 === f && (f = !1);
        var g = new le(Yd);
        g.point1X = b;
        g.point1Y = c;
        g.endX = d;
        g.endY = e;
        f && g.close();
        a.fc.segments.add(g)
    }
    t.arcTo = function (a, b, c, d, e, f, g) {
        void 0 === f && (f = 0);
        void 0 === g && (g = !1);
        var h = new le(Zd);
        h.startAngle = a;
        h.sweepAngle = b;
        h.centerX = c;
        h.centerY = d;
        h.radiusX = e;
        h.radiusY = 0 !== f ? f : e;
        g && h.close();
        this.fc.segments.add(h)
    };

    function Rd(a, b, c, d, e, f, g, h) {
        var k;
        void 0 === k && (k = !1);
        b = new le($d, g, h, b, c, d, e, f);
        k && b.close();
        a.fc.segments.add(b)
    }

    function Jd(a) {
        var b = Td;
        if (null !== b) return Td = null, b.reset(a), b;
        b = new so;
        b.reset(a);
        return b
    }
    var Td = null;
    so.className = "StreamGeometryContext";

    function to(a, b) {
        var c = a.toLowerCase(),
            d = J.Je;
        d[a] = b;
        d[c] = a
    }
    to("Rectangle", function (a, b, c) {
        a = 50 > J.Gf;
        var d = "r" + b + "," + c,
            e = J.Ff[d];
        if (void 0 !== e) return e;
        e = new td(Gd);
        e.endX = b;
        e.endY = c;
        a && (J.Ff[d] = e, J.Gf++);
        return e
    });
    to("Square", function (a, b, c) {
        a = 50 > J.Gf;
        var d = "s" + b + "," + c,
            e = J.Ff[d];
        if (void 0 !== e) return e;
        e = new td(Gd);
        e.endX = b;
        e.endY = c;
        e.defaultStretch = Bg;
        a && (J.Ff[d] = e, J.Gf++);
        return e
    });
    to("RoundedRectangle", function (a, b, c) {
        var d = 50 > J.Gf,
            e = "rr" + b + "," + c,
            f = J.Ff[e];
        if (void 0 === f) {
            f = a ? a.parameter1 : NaN;
            if (isNaN(f) || 0 >= f) f = 5;
            f = Math.min(f, b / 3);
            f = Math.min(f, c / 3);
            a = f * J.Ig;
            f = (new td).add((new ke(f, 0, !0)).add(new le(yd, b - f, 0)).add(new le(Xd, b, f, b - a, 0, b, a)).add(new le(yd, b, c - f)).add(new le(Xd, b - f, c, b, c - a, b - a, c)).add(new le(yd, f, c)).add(new le(Xd, 0, c - f, a, c, 0, c - a)).add(new le(yd, 0, f)).add((new le(Xd, f, 0, 0, a, a, 0)).close()));
            1 < a && (f.spot1 = new P(0, 0, a, a), f.spot2 = new P(1, 1, -a, -a));
            d && (J.Ff[e] = f, J.Gf++)
        }
        return f
    });
    to("Border", "RoundedRectangle");
    to("Ellipse", function (a, b, c) {
        a = 50 > J.Gf;
        var d = "e" + b + "," + c,
            e = J.Ff[d];
        if (void 0 !== e) return e;
        e = new td(Hd);
        e.endX = b;
        e.endY = c;
        e.spot1 = hd;
        e.spot2 = id;
        a && (J.Ff[d] = e, J.Gf++);
        return e
    });
    to("Circle", function (a, b, c) {
        a = 50 > J.Gf;
        var d = "c" + b + "," + c,
            e = J.Ff[d];
        if (void 0 !== e) return e;
        e = new td(Hd);
        e.endX = b;
        e.endY = c;
        e.spot1 = hd;
        e.spot2 = id;
        e.defaultStretch = Bg;
        a && (J.Ff[d] = e, J.Gf++);
        return e
    });
    to("TriangleRight", function (a, b, c) {
        return (new td).add((new ke(0, 0)).add(new le(yd, b, .5 * c)).add((new le(yd, 0, c)).close())).Jm(0, .25, .5, .75)
    });
    to("TriangleDown", function (a, b, c) {
        return (new td).add((new ke(0, 0)).add(new le(yd, b, 0)).add((new le(yd, .5 * b, c)).close())).Jm(.25, 0, .75, .5)
    });
    to("TriangleLeft", function (a, b, c) {
        return (new td).add((new ke(b, c)).add(new le(yd, 0, .5 * c)).add((new le(yd, b, 0)).close())).Jm(.5, .25, 1, .75)
    });
    to("TriangleUp", function (a, b, c) {
        return (new td).add((new ke(b, c)).add(new le(yd, 0, c)).add((new le(yd, .5 * b, 0)).close())).Jm(.25, .5, .75, 1)
    });
    to("Triangle", "TriangleUp");
    to("Diamond", function (a, b, c) {
        return (new td).add((new ke(.5 * b, 0)).add(new le(yd, 0, .5 * c)).add(new le(yd, .5 * b, c)).add((new le(yd, b, .5 * c)).close())).Jm(.25, .25, .75, .75)
    });
    to("LineH", function (a, b, c) {
        a = new td(wd);
        a.startX = 0;
        a.startY = c / 2;
        a.endX = b;
        a.endY = c / 2;
        return a
    });
    to("LineV", function (a, b, c) {
        a = new td(wd);
        a.startX = b / 2;
        a.startY = 0;
        a.endX = b / 2;
        a.endY = c;
        return a
    });
    to("None", "Rectangle");
    to("BarH", "Rectangle");
    to("BarV", "Rectangle");
    to("MinusLine", "LineH");
    to("PlusLine", function (a, b, c) {
        return (new td).add((new ke(0, c / 2, !1)).add(new le(yd, b, c / 2)).add(new le(Wd, b / 2, 0)).add(new le(yd, b / 2, c)))
    });
    to("XLine", function (a, b, c) {
        return (new td).add((new ke(0, c, !1)).add(new le(yd, b, 0)).add(new le(Wd, 0, 0)).add(new le(yd, b, c)))
    });
    J.Nm = {
        "": "",
        Standard: "F1 m 0,0 l 8,4 -8,4 2,-4 z",
        Backward: "F1 m 8,0 l -2,4 2,4 -8,-4 z",
        Triangle: "F1 m 0,0 l 8,4.62 -8,4.62 z",
        BackwardTriangle: "F1 m 8,4 l 0,4 -8,-4 8,-4 0,4 z",
        Boomerang: "F1 m 0,0 l 8,4 -8,4 4,-4 -4,-4 z",
        BackwardBoomerang: "F1 m 8,0 l -8,4 8,4 -4,-4 4,-4 z",
        SidewaysV: "m 0,0 l 8,4 -8,4 0,-1 6,-3 -6,-3 0,-1 z",
        BackwardV: "m 8,0 l -8,4 8,4 0,-1 -6,-3 6,-3 0,-1 z",
        OpenTriangle: "m 0,0 l 8,4 -8,4",
        BackwardOpenTriangle: "m 8,0 l -8,4 8,4",
        OpenTriangleLine: "m 0,0 l 8,4 -8,4 m 8.5,0 l 0,-8",
        BackwardOpenTriangleLine: "m 8,0 l  -8,4 8,4 m -8.5,0 l 0,-8",
        OpenTriangleTop: "m 0,0 l 8,4 m 0,4",
        BackwardOpenTriangleTop: "m 8,0 l -8,4 m 0,4",
        OpenTriangleBottom: "m 0,8 l 8,-4",
        BackwardOpenTriangleBottom: "m 0,4 l 8,4",
        HalfTriangleTop: "F1 m 0,0 l 0,4 8,0 z m 0,8",
        BackwardHalfTriangleTop: "F1 m 8,0 l 0,4 -8,0 z m 0,8",
        HalfTriangleBottom: "F1 m 0,4 l 0,4 8,-4 z",
        BackwardHalfTriangleBottom: "F1 m 8,4 l 0,4 -8,-4 z",
        ForwardSemiCircle: "m 4,0 b 270 180 0 4 4",
        BackwardSemiCircle: "m 4,8 b 90 180 0 -4 4",
        Feather: "m 0,0 l 3,4 -3,4",
        BackwardFeather: "m 3,0 l -3,4 3,4",
        DoubleFeathers: "m 0,0 l 3,4 -3,4 m 3,-8 l 3,4 -3,4",
        BackwardDoubleFeathers: "m 3,0 l -3,4 3,4 m 3,-8 l -3,4 3,4",
        TripleFeathers: "m 0,0 l 3,4 -3,4 m 3,-8 l 3,4 -3,4 m 3,-8 l 3,4 -3,4",
        BackwardTripleFeathers: "m 3,0 l -3,4 3,4 m 3,-8 l -3,4 3,4 m 3,-8 l -3,4 3,4",
        ForwardSlash: "m 0,8 l 5,-8",
        BackSlash: "m 0,0 l 5,8",
        DoubleForwardSlash: "m 0,8 l 4,-8 m -2,8 l 4,-8",
        DoubleBackSlash: "m 0,0 l 4,8 m -2,-8 l 4,8",
        TripleForwardSlash: "m 0,8 l 4,-8 m -2,8 l 4,-8 m -2,8 l 4,-8",
        TripleBackSlash: "m 0,0 l 4,8 m -2,-8 l 4,8 m -2,-8 l 4,8",
        Fork: "m 0,4 l 8,0 m -8,0 l 8,-4 m -8,4 l 8,4",
        BackwardFork: "m 8,4 l -8,0 m 8,0 l -8,-4 m 8,4 l -8,4",
        LineFork: "m 0,0 l 0,8 m 0,-4 l 8,0 m -8,0 l 8,-4 m -8,4 l 8,4",
        BackwardLineFork: "m 8,4 l -8,0 m 8,0 l -8,-4 m 8,4 l -8,4 m 8,-8 l 0,8",
        CircleFork: "F1 m 6,4 b 0 360 -3 0 3 z m 0,0 l 6,0 m -6,0 l 6,-4 m -6,4 l 6,4",
        BackwardCircleFork: "F1 m 0,4 l 6,0 m -6,-4 l 6,4 m -6,4 l 6,-4 m 6,0 b 0 360 -3 0 3",
        CircleLineFork: "F1 m 6,4 b 0 360 -3 0 3 z m 1,-4 l 0,8 m 0,-4 l 6,0 m -6,0 l 6,-4 m -6,4 l 6,4",
        BackwardCircleLineFork: "F1 m 0,4 l 6,0 m -6,-4 l 6,4 m -6,4 l 6,-4 m 0,-4 l 0,8 m 7,-4 b 0 360 -3 0 3",
        Circle: "F1 m 8,4 b 0 360 -4 0 4 z",
        Block: "F1 m 0,0 l 0,8 8,0 0,-8 z",
        StretchedDiamond: "F1 m 0,3 l 5,-3 5,3 -5,3 -5,-3 z",
        Diamond: "F1 m 0,4 l 4,-4 4,4 -4,4 -4,-4 z",
        Chevron: "F1 m 0,0 l 5,0 3,4 -3,4 -5,0 3,-4 -3,-4 z",
        StretchedChevron: "F1 m 0,0 l 8,0 3,4 -3,4 -8,0 3,-4 -3,-4 z",
        NormalArrow: "F1 m 0,2 l 4,0 0,-2 4,4 -4,4 0,-2 -4,0 z",
        X: "m 0,0 l 8,8 m 0,-8 l -8,8",
        TailedNormalArrow: "F1 m 0,0 l 2,0 1,2 3,0 0,-2 2,4 -2,4 0,-2 -3,0 -1,2 -2,0 1,-4 -1,-4 z",
        DoubleTriangle: "F1 m 0,0 l 4,4 -4,4 0,-8 z  m 4,0 l 4,4 -4,4 0,-8 z",
        BigEndArrow: "F1 m 0,0 l 5,2 0,-2 3,4 -3,4 0,-2 -5,2 0,-8 z",
        ConcaveTailArrow: "F1 m 0,2 h 4 v -2 l 4,4 -4,4 v -2 h -4 l 2,-2 -2,-2 z",
        RoundedTriangle: "F1 m 0,1 a 1,1 0 0 1 1,-1 l 7,3 a 0.5,1 0 0 1 0,2 l -7,3 a 1,1 0 0 1 -1,-1 l 0,-6 z",
        SimpleArrow: "F1 m 1,2 l -1,-2 2,0 1,2 -1,2 -2,0 1,-2 5,0 0,-2 2,2 -2,2 0,-2 z",
        AccelerationArrow: "F1 m 0,0 l 0,8 0.2,0 0,-8 -0.2,0 z m 2,0 l 0,8 1,0 0,-8 -1,0 z m 3,0 l 2,0 2,4 -2,4 -2,0 0,-8 z",
        BoxArrow: "F1 m 0,0 l 4,0 0,2 2,0 0,-2 2,4 -2,4 0,-2 -2,0 0,2 -4,0 0,-8 z",
        TriangleLine: "F1 m 8,4 l -8,-4 0,8 8,-4 z m 0.5,4 l 0,-8",
        CircleEndedArrow: "F1 m 10,4 l -2,-3 0,2 -2,0 0,2 2,0 0,2 2,-3 z m -4,0 b 0 360 -3 0 3 z",
        DynamicWidthArrow: "F1 m 0,3 l 2,0 2,-1 2,-2 2,4 -2,4 -2,-2 -2,-1 -2,0 0,-2 z",
        EquilibriumArrow: "m 0,3 l 8,0 -3,-3 m 3,5 l -8,0 3,3",
        FastForward: "F1 m 0,0 l 3.5,4 0,-4 3.5,4 0,-4 1,0 0,8 -1,0 0,-4 -3.5,4 0,-4 -3.5,4 0,-8 z",
        Kite: "F1 m 0,4 l 2,-4 6,4 -6,4 -2,-4 z",
        HalfArrowTop: "F1 m 0,0 l 4,4 4,0 -8,-4 z m 0,8",
        HalfArrowBottom: "F1 m 0,8 l 4,-4 4,0 -8,4 z",
        OpposingDirectionDoubleArrow: "F1 m 0,4 l 2,-4 0,2 4,0 0,-2 2,4 -2,4 0,-2 -4,0 0,2 -2,-4 z",
        PartialDoubleTriangle: "F1 m 0,0 4,3 0,-3 4,4 -4,4 0,-3 -4,3 0,-8 z",
        LineCircle: "F1 m 0,0 l 0,8 m 7 -4 b 0 360 -3 0 3 z",
        DoubleLineCircle: "F1 m 0,0 l 0,8 m 2,-8 l 0,8 m 7 -4 b 0 360 -3 0 3 z",
        TripleLineCircle: "F1 m 0,0 l 0,8 m 2,-8 l 0,8 m 2,-8 l 0,8 m 7 -4 b 0 360 -3 0 3 z",
        CircleLine: "F1 m 6 4 b 0 360 -3 0 3 z m 1,-4 l 0,8",
        DiamondCircle: "F1 m 8,4 l -4,4 -4,-4 4,-4 4,4 m 8,0 b 0 360 -4 0 4 z",
        PlusCircle: "F1 m 8,4 b 0 360 -4 0 4 l -8 0 z m -4 -4 l 0 8",
        OpenRightTriangleTop: "m 8,0 l 0,4 -8,0 m 0,4",
        OpenRightTriangleBottom: "m 8,8 l 0,-4 -8,0",
        Line: "m 0,0 l 0,8",
        DoubleLine: "m 0,0 l 0,8 m 2,0 l 0,-8",
        TripleLine: "m 0,0 l 0,8 m 2,0 l 0,-8 m 2,0 l 0,8",
        PentagonArrow: "F1 m 8,4 l -4,-4 -4,0 0,8 4,0 4,-4 z"
    };

    function U(a) {
        X.call(this, a);
        this.D = 2408959;
        this.eh = this.Lf = "";
        this.mp = this.ip = this.yp = this.mo = null;
        this.Ap = "";
        this.Hf = this.Wn = this.zp = this.ph = null;
        this.kp = "";
        this.jp = Rb;
        this.Tb = this.np = "";
        this.ui = this.hn = this.di = null;
        this.cg = (new I(NaN, NaN)).freeze();
        this.to = "";
        this.Xe = null;
        this.uo = vc;
        this.op = Zc;
        this.Do = Gb;
        this.vo = Hb;
        this.An = null;
        this.no = 127;
        this.Ep = Ib;
        this.Dp = "gray";
        this.df = 4;
        this.Xw = -1;
        this.aq = NaN;
        this.yy = new N;
        this.Fj = null;
        this.gh = NaN
    }
    la(U, X);
    U.prototype.cloneProtected = function (a) {
        X.prototype.cloneProtected.call(this, a);
        a.D = this.D & -4097 | 49152;
        a.Lf = this.Lf;
        a.eh = this.eh;
        a.mo = this.mo;
        a.yp = this.yp;
        a.ip = this.ip;
        a.mp = this.mp;
        a.Ap = this.Ap;
        a.zp = this.zp;
        a.Wn = this.Wn;
        a.Hf = null;
        a.kp = this.kp;
        a.jp = this.jp.G();
        a.np = this.np;
        a.op = this.op.G();
        a.Tb = this.Tb;
        a.hn = this.hn;
        a.cg.assign(this.cg);
        a.to = this.to;
        a.uo = this.uo.G();
        a.Do = this.Do.G();
        a.vo = this.vo.G();
        a.An = this.An;
        a.no = this.no;
        a.Ep = this.Ep.G();
        a.Dp = this.Dp;
        a.df = this.df;
        a.aq = this.aq
    };
    U.prototype.sf = function (a) {
        X.prototype.sf.call(this, a);
        a.Jh();
        a.ph = null;
        a.Xe = null;
        a.Fj = null
    };
    U.prototype.toString = function () {
        var a = Ia(this.constructor) + "#" + lb(this);
        null !== this.data && (a += "(" + Ja(this.data) + ")");
        return a
    };
    U.prototype.vk = function (a, b, c, d, e, f, g) {
        var h = this.diagram;
        null !== h && (a === te && "elements" === b ? e instanceof X ? Dj(e, function (a) {
            Fj(h.partManager, a);
            Ej(h, a)
        }) : jk(h, e) : a === ue && "elements" === b && (e instanceof X ? Dj(e, function (a) {
            Ij(h.partManager, a, h)
        }) : lk(h, e)), h.Ya(a, b, c, d, e, f, g))
    };
    U.prototype.Ba = function (a) {
        X.prototype.Ba.call(this, a);
        if (null !== this.data) {
            for (var b = this.W.j, c = b.length, d = 0; d < c; d++) {
                var e = b[d];
                e instanceof X && Dj(e, function (a) {
                    null !== a.data && a.Ba()
                })
            }
            for (b = this.adornments; b.next();) b.value.Ba(a)
        }
    };
    U.prototype.updateRelationshipsFromData = function () {
        null !== this.data && this.diagram.partManager.updateRelationshipsFromData(this)
    };
    U.prototype.fk = function (a) {
        var b = this.Hf;
        return null === b ? null : b.H(a)
    };
    U.prototype.Ch = function (a, b) {
        if (null !== b) {
            var c = null,
                d = this.Hf;
            null !== d && (c = d.H(a));
            if (c !== b) {
                if (null !== c) {
                    var e = c.diagram;
                    null !== e && e.remove(c)
                }
                null === d && (this.Hf = d = new H);
                b.Lf !== a && (b.category = a);
                d.add(a, b);
                a = this.diagram;
                null !== a && (a.add(b), a = b.adornedObject, null !== a && (a = a.Ui(), null !== a && (b.data = a.data)))
            }
        }
    };
    U.prototype.Af = function (a) {
        var b = this.Hf;
        if (null !== b) {
            var c = b.H(a);
            if (null !== c) {
                var d = c.diagram;
                null !== d && d.remove(c)
            }
            b.remove(a);
            0 === b.count && (this.Hf = null)
        }
    };
    U.prototype.Yj = function () {
        var a = this.Hf;
        if (null !== a) {
            var b = Fa();
            for (a = a.iterator; a.next();) b.push(a.key);
            a = b.length;
            for (var c = 0; c < a; c++) this.Af(b[c]);
            Ha(b)
        }
    };
    U.prototype.updateAdornments = function () {
        var a = this.diagram;
        if (null !== a) {
            for (var b = this.adornments; b.next();) {
                var c = b.value;
                c.o();
                c.placeholder && c.placeholder.o()
            }
            a: {
                if (this.isSelected && this.selectionAdorned && (b = this.selectionObject, null !== b && this.actualBounds.v() && this.isVisible() && b.zf() && b.actualBounds.v())) {
                    c = this.fk("Selection");
                    if (null === c) {
                        c = this.selectionAdornmentTemplate;
                        null === c && (c = this.Kh() ? a.linkSelectionAdornmentTemplate : this instanceof T ? a.groupSelectionAdornmentTemplate : a.nodeSelectionAdornmentTemplate);
                        if (!(c instanceof Je)) break a;
                        yg(c);
                        c = c.copy();
                        null !== c && (this.Kh() && this.selectionObject === this.path && (c.type = X.Link), c.adornedObject = b)
                    }
                    if (null !== c) {
                        c.type === X.Link && c.o();
                        this.Ch("Selection", c);
                        break a
                    }
                }
                this.Af("Selection")
            }
            uo(this, a);
            for (b = this.adornments; b.next();) b.value.Ba()
        }
    };
    U.prototype.Lb = function () {
        var a = this.diagram;
        null !== a && (Ri(a), 0 !== (this.D & 16384) !== !0 && (gi(this, !0), a.Pb()))
    };

    function fi(a) {
        0 !== (a.D & 16384) !== !1 && (a.updateAdornments(), gi(a, !1))
    }

    function uo(a, b) {
        b.toolManager.mouseDownTools.each(function (b) {
            b.isEnabled && b.updateAdornments(a)
        });
        b.toolManager.updateAdornments(a)
    }

    function vo(a) {
        if (!1 === sj(a)) {
            wo(a, !0);
            a.ml();
            var b = a.diagram;
            null !== b && (b.nd.add(a), b.Pb())
        }
    }

    function xo(a) {
        a.D |= 2097152;
        if (!1 !== sj(a)) {
            var b = a.position,
                c = a.location;
            c.v() && b.v() || yo(a, b, c);
            c = a.ub;
            var d = N.alloc().assign(c);
            c.ea();
            c.x = b.x;
            c.y = b.y;
            c.freeze();
            a.Et(d, c);
            N.free(d);
            wo(a, !1)
        }
    }
    U.prototype.move = function (a, b) {
        !0 === b ? this.location = a : this.position = a
    };
    U.prototype.moveTo = function (a, b, c) {
        a = I.allocAt(a, b);
        this.move(a, c);
        I.free(a)
    };
    U.prototype.isVisible = function () {
        if (!this.visible) return !1;
        var a = this.layer;
        if (null !== a) {
            if (!a.visible) return !1;
            a = a.diagram;
            if (null !== a && a.animationManager.Dt(this)) return !0
        }
        a = this.containingGroup;
        return null === a || a.isSubGraphExpanded && a.isVisible() ? !0 : !1
    };
    t = U.prototype;
    t.Ob = function (a) {
        var b = this.diagram;
        a ? (this.C(4), this.Lb(), null !== b && b.nd.add(this)) : (this.C(8), this.Yj());
        this.Jh();
        null !== b && (b.Na(), b.M())
    };
    t.Xa = function (a) {
        if (this.name === a) return this;
        var b = this.Fj;
        null === b && (this.Fj = b = new H);
        if (null !== b.H(a)) return b.H(a);
        var c = X.prototype.Xa.call(this, a);
        if (null !== c) return b.set(a, c), c;
        b.set(a, null);
        return null
    };
    t.vf = function (a, b, c) {
        void 0 === c && (c = new I);
        b = b.jc() ? Ac : b;
        var d = a.naturalBounds;
        c.h(d.width * b.x + b.offsetX, d.height * b.y + b.offsetY);
        if (null === a || a === this) return c;
        a.transform.ra(c);
        for (a = a.panel; null !== a && a !== this;) a.transform.ra(c), a = a.panel;
        this.bg.ra(c);
        c.offset(-this.nc.x, -this.nc.y);
        return c
    };
    t.lm = function (a) {
        void 0 === a && (a = new N);
        return a.assign(this.actualBounds)
    };
    t.yb = function () {
        !0 === qj(this) && this.measure(Infinity, Infinity);
        this.arrange()
    };

    function Bj(a, b) {
        var c = a.yy;
        isNaN(a.gh) && (a.gh = cn(a));
        var d = a.gh;
        var e = 2 * d;
        if (!a.isShadowed) return c.h(b.x - 1 - d, b.y - 1 - d, b.width + 2 + e, b.height + 2 + e), c;
        d = b.x;
        e = b.y;
        var f = b.width;
        b = b.height;
        var g = a.shadowBlur;
        a = a.shadowOffset;
        f += g;
        b += g;
        d -= g / 2;
        e -= g / 2;
        0 < a.x ? f += a.x : (d += a.x, f -= a.x);
        0 < a.y ? b += a.y : (e += a.y, b -= a.y);
        c.h(d - 1, e - 1, f + 2, b + 2);
        return c
    }
    U.prototype.arrange = function () {
        if (!1 === rj(this)) xo(this);
        else {
            var a = this.ub,
                b = N.alloc();
            b.assign(a);
            a.ea();
            var c = wg(this);
            this.Fh(0, 0, this.nc.width, this.nc.height);
            var d = this.position;
            yo(this, d, this.location);
            a.x = d.x;
            a.y = d.y;
            a.freeze();
            this.Et(b, a);
            ll(this, !1);
            b.w(a) ? this.yd(c) : !this.Wb() || J.A(b.width, a.width) && J.A(b.height, a.height) || 0 <= this.Xw && this.C(16);
            N.free(b);
            wo(this, !1)
        }
    };
    t = U.prototype;
    t.Et = function (a, b) {
        var c = this.diagram;
        if (null !== c) {
            var d = !1;
            if (!1 === c.ki && a.v()) {
                var e = N.alloc();
                e.assign(c.documentBounds);
                e.kw(c.padding);
                a.x > e.x && a.y > e.y && a.right < e.right && a.bottom < e.bottom && b.x > e.x && b.y > e.y && b.right < e.right && b.bottom < e.bottom && (d = !0);
                N.free(e)
            }
            0 !== (this.D & 65536) !== !0 && a.w(b) || Gj(this, d, c);
            c.M();
            $b(a, b) || (this instanceof W && !c.undoManager.isUndoingRedoing && this.fd(), this.Jh())
        }
    };
    t.gw = function (a, b) {
        if (this.Kh() || !a.v()) return !1;
        var c = this.diagram;
        if (null !== c && (zo(this, c, a, b), !0 === c.undoManager.isUndoingRedoing)) return !0;
        this.ma = a;
        this.D &= -2097153;
        c = this.cg;
        if (c.v()) {
            var d = c.copy();
            c.h(c.x + (a.x - b.x), c.y + (a.y - b.y));
            this.g("location", d, c.copy())
        }!1 === sj(this) && !1 === rj(this) && (vo(this), xo(this));
        return !0
    };

    function zo(a, b, c, d) {
        null === b || a instanceof Je || (b = b.animationManager, b.Ze && Jh(b, a, d.copy(), c.copy()))
    }
    t.Kq = function (a, b, c) {
        var d = this.cg,
            e = this.ma;
        if (c) {
            if (d.x === a && d.y === b) return;
            sj(this) || rj(this) ? e.h(NaN, NaN) : e.h(e.x + a - d.x, e.y + b - d.y);
            d.h(a, b)
        } else {
            if (e.x === a && e.y === b) return;
            sj(this) || rj(this) ? d.h(NaN, NaN) : d.h(d.x + a - e.x, d.y + b - e.y);
            e.h(a, b)
        }
        vo(this)
    };
    t.hw = function () {
        this.D &= -2097153;
        vo(this)
    };

    function yo(a, b, c) {
        var d = I.alloc(),
            e = a.locationSpot,
            f = a.locationObject;
        e.jc() && B("determineOffset: Part's locationSpot must be real: " + e.toString());
        var g = f.naturalBounds,
            h = f instanceof Lf ? f.strokeWidth : 0;
        d.xk(0, 0, g.width + h, g.height + h, e);
        if (f !== a)
            for (d.offset(-h / 2, -h / 2), f.transform.ra(d), e = f.panel; null !== e && e !== a;) e.transform.ra(d), e = e.panel;
        a.bg.ra(d);
        d.offset(-a.nc.x, -a.nc.y);
        e = a.diagram;
        f = c.v();
        g = b.v();
        f && g ? 0 !== (a.D & 2097152) ? Ao(a, b, c, e, d) : Bo(a, b, c, e, d) : f ? Ao(a, b, c, e, d) : g && Bo(a, b, c, e, d);
        a.D |= 2097152;
        I.free(d);
        a.ml()
    }

    function Ao(a, b, c, d, e) {
        var f = b.x,
            g = b.y;
        b.h(c.x - e.x, c.y - e.y);
        null !== d && (c = d.animationManager, (e = c.isAnimating) || !c.Ze || a instanceof Je || Jh(c, a, new I(f, g), b), e || b.x === f && b.y === g || (c = d.skipsUndoManager, d.skipsUndoManager = !0, a.g("position", new I(f, g), b), d.skipsUndoManager = c))
    }

    function Bo(a, b, c, d, e) {
        var f = c.copy();
        c.h(b.x + e.x, b.y + e.y);
        c.w(f) || null === d || (b = d.skipsUndoManager, d.skipsUndoManager = !0, a.g("location", f, c.copy()), d.skipsUndoManager = b)
    }

    function Gj(a, b, c) {
        nl(a, !1);
        a instanceof W && xk(c, a);
        a.layer.isTemporary || b || c.Na();
        b = a.ub;
        var d = c.viewportBounds;
        d.v() ? wg(a) ? (dc(b, d) || a.yd(!1), a.updateAdornments()) : b.Gc(d) ? (a.yd(!0), a.updateAdornments()) : a.Lb() : c.mi = !0
    }
    t.bj = function () {
        return !0
    };
    t.Wb = function () {
        return !0
    };
    t.Kh = function () {
        return !1
    };
    t.xf = function () {
        return !0
    };

    function Co(a, b, c, d) {
        b.constructor === a.constructor || Do || (Do = !0, wa('Should not change the class of the Part when changing category from "' + c + '" to "' + d + '"'), wa("  Old class: " + Ia(a.constructor) + ", new class: " + Ia(b.constructor) + ", part: " + a.toString()));
        a.Yj();
        var e = a.data;
        c = a.layerName;
        var f = a.isSelected,
            g = a.isHighlighted,
            h = !0,
            k = !0,
            l = !1;
        a instanceof W && (h = a.isTreeLeaf, k = a.isTreeExpanded, l = a.wasTreeExpanded);
        b.sf(a);
        b.cloneProtected(a);
        a.Lf = d;
        a.o();
        a.M();
        b = a.diagram;
        d = !0;
        null !== b && (d = b.skipsUndoManager,
            b.skipsUndoManager = !0);
        a.hb = e;
        a.D = f ? a.D | 4096 : a.D & -4097;
        a.D = g ? a.D | 524288 : a.D & -524289;
        a instanceof W && (a.P = h ? a.P | 4 : a.P & -5, a.P = k ? a.P | 1 : a.P & -2, a.P = l ? a.P | 2 : a.P & -3);
        null !== e && a.Ba();
        e = a.layerName;
        e !== c && (a.eh = c, a.layerName = e);
        null !== b && (b.skipsUndoManager = d);
        a.Wb() && a.C(64)
    }
    U.prototype.canCopy = function () {
        if (!this.copyable) return !1;
        var a = this.layer;
        if (null === a) return !0;
        if (!a.allowCopy) return !1;
        a = a.diagram;
        return null === a ? !0 : a.allowCopy ? !0 : !1
    };
    U.prototype.canDelete = function () {
        if (!this.deletable) return !1;
        var a = this.layer;
        if (null === a) return !0;
        if (!a.allowDelete) return !1;
        a = a.diagram;
        return null === a ? !0 : a.allowDelete ? !0 : !1
    };
    U.prototype.canEdit = function () {
        if (!this.textEditable) return !1;
        var a = this.layer;
        if (null === a) return !0;
        if (!a.allowTextEdit) return !1;
        a = a.diagram;
        return null === a ? !0 : a.allowTextEdit ? !0 : !1
    };
    U.prototype.canGroup = function () {
        if (!this.groupable) return !1;
        var a = this.layer;
        if (null === a) return !0;
        if (!a.allowGroup) return !1;
        a = a.diagram;
        return null === a ? !0 : a.allowGroup ? !0 : !1
    };
    U.prototype.canMove = function () {
        if (!this.movable) return !1;
        var a = this.layer;
        if (null === a) return !0;
        if (!a.allowMove) return !1;
        a = a.diagram;
        return null === a ? !0 : a.allowMove ? !0 : !1
    };
    U.prototype.canReshape = function () {
        if (!this.reshapable) return !1;
        var a = this.layer;
        if (null === a) return !0;
        if (!a.allowReshape) return !1;
        a = a.diagram;
        return null === a ? !0 : a.allowReshape ? !0 : !1
    };
    U.prototype.canResize = function () {
        if (!this.resizable) return !1;
        var a = this.layer;
        if (null === a) return !0;
        if (!a.allowResize) return !1;
        a = a.diagram;
        return null === a ? !0 : a.allowResize ? !0 : !1
    };
    U.prototype.canRotate = function () {
        if (!this.rotatable) return !1;
        var a = this.layer;
        if (null === a) return !0;
        if (!a.allowRotate) return !1;
        a = a.diagram;
        return null === a ? !0 : a.allowRotate ? !0 : !1
    };
    U.prototype.canSelect = function () {
        if (!this.selectable) return !1;
        var a = this.layer;
        if (null === a) return !0;
        if (!a.allowSelect) return !1;
        a = a.diagram;
        return null === a ? !0 : a.allowSelect ? !0 : !1
    };

    function gi(a, b) {
        a.D = b ? a.D | 16384 : a.D & -16385
    }

    function sj(a) {
        return 0 !== (a.D & 32768)
    }

    function wo(a, b) {
        a.D = b ? a.D | 32768 : a.D & -32769
    }

    function nl(a, b) {
        a.D = b ? a.D | 65536 : a.D & -65537
    }

    function wg(a) {
        return 0 !== (a.D & 131072)
    }
    t = U.prototype;
    t.yd = function (a) {
        this.D = a ? this.D | 131072 : this.D & -131073
    };

    function Eo(a, b) {
        a.D = b ? a.D | 1048576 : a.D & -1048577
    }
    t.Jh = function () {
        var a = this.containingGroup;
        null !== a && (a.o(), null !== a.placeholder && a.placeholder.o(), a.fd())
    };
    t.M = function () {
        var a = this.diagram;
        null !== a && !rj(this) && !sj(this) && this.isVisible() && this.ub.v() && a.M(Bj(this, this.ub))
    };
    t.o = function () {
        X.prototype.o.call(this);
        var a = this.diagram;
        null !== a && (a.nd.add(this), this instanceof W && null !== this.labeledLink && Cl(this.labeledLink), a.Pb(!0))
    };
    t.qq = function (a) {
        a || (a = this.di, null !== a && Fo(a, this))
    };
    t.rq = function (a) {
        a || (a = this.di, null !== a && Go(a, this))
    };
    t.dk = function () {
        var a = this.data;
        if (null !== a) {
            var b = this.diagram;
            null !== b && (b = b.model, null !== b && b.Am(a))
        }
    };
    t.qz = function () {
        return Ho(this, this)
    };

    function Ho(a, b) {
        var c = b.containingGroup;
        return null !== c ? 1 + Ho(a, c) : b instanceof W && (b = b.labeledLink, null !== b) ? Ho(a, b) : 0
    }
    t.uz = function () {
        return Io(this, this)
    };

    function Io(a, b) {
        var c = b.containingGroup;
        return null !== c || b instanceof W && (c = b.labeledLink, null !== c) ? Io(a, c) : b
    }
    t.Wd = function (a) {
        return a instanceof T ? Jo(this, this, a) : !1
    };

    function Jo(a, b, c) {
        if (b === c || null === c) return !1;
        var d = b.containingGroup;
        return null === d || d !== c && !Jo(a, d, c) ? b instanceof W && (b = b.labeledLink, null !== b) ? Jo(a, b, c) : !1 : !0
    }
    t.Ix = function (a) {
        if (null === a) return null;
        if (this === a) return this.containingGroup;
        for (var b = this; null !== b;) {
            b instanceof T && Eo(b, !0);
            if (b instanceof W) {
                var c = b.labeledLink;
                null !== c && (b = c)
            }
            b = b.containingGroup
        }
        c = null;
        for (b = a; null !== b;) {
            if (0 !== (b.D & 1048576)) {
                c = b;
                break
            }
            b instanceof W && (a = b.labeledLink, null !== a && (b = a));
            b = b.containingGroup
        }
        for (b = this; null !== b;) b instanceof T && Eo(b, !1), b instanceof W && (a = b.labeledLink, null !== a && (b = a)), b = b.containingGroup;
        return c
    };
    U.prototype.canLayout = function () {
        if (!this.isLayoutPositioned || !this.isVisible()) return !1;
        var a = this.layer;
        return null !== a && a.isTemporary || this instanceof W && this.isLinkLabel ? !1 : !0
    };
    U.prototype.C = function (a) {
        void 0 === a && (a = 16777215);
        if (this.isLayoutPositioned && 0 !== (a & this.layoutConditions)) {
            var b = this.layer;
            null !== b && b.isTemporary || this instanceof W && this.isLinkLabel ? b = !1 : (b = this.diagram, b = null !== b && b.undoManager.isUndoingRedoing ? !1 : !0)
        } else b = !1;
        if (b)
            if (b = this.di, null !== b) {
                var c = b.layout;
                null !== c ? c.C() : b.C(a)
            } else a = this.diagram, null !== a && (a = a.layout, null !== a && a.C())
    };

    function Hj(a) {
        if (!a.isVisible()) return !1;
        a = a.layer;
        return null !== a && a.isTemporary ? !1 : !0
    }

    function Sk(a, b, c, d, e, f) {
        void 0 === f && (f = null);
        if (!(a.contains(b) || null !== f && !f(b) || b instanceof Je))
            if (a.add(b), b instanceof W) {
                if (c && b instanceof T)
                    for (var g = b.memberParts; g.next();) Sk(a, g.value, c, d, e, f);
                if (!1 !== e)
                    for (g = b.linksConnected; g.next();) {
                        var h = g.value;
                        if (!a.contains(h)) {
                            var k = h.fromNode,
                                l = h.toNode;
                            k = null === k || a.contains(k);
                            l = null === l || a.contains(l);
                            (e ? k && l : k || l) && Sk(a, h, c, d, e, f)
                        }
                    }
                if (1 < d)
                    for (b = b.vv(); b.next();) Sk(a, b.value, c, d - 1, e, f)
            } else if (b instanceof S)
            for (b = b.labelNodes; b.next();) Sk(a,
                b.value, c, d, e, f)
    }
    ma.Object.defineProperties(U.prototype, {
        key: {
            get: function () {
                var a = this.diagram;
                if (null !== a) return a.model.ja(this.data)
            }
        },
        adornments: {
            get: function () {
                return null === this.Hf ? fb : this.Hf.iteratorValues
            }
        },
        layer: {
            get: function () {
                return this.ui
            }
        },
        diagram: {
            get: function () {
                var a = this.ui;
                return null !== a ? a.diagram : null
            }
        },
        layerName: {
            get: function () {
                return this.eh
            },
            set: function (a) {
                var b =
                    this.eh;
                if (b !== a) {
                    var c = this.diagram;
                    if (null === c || null !== c.im(a) && !c.partManager.addsToTemporaryLayer)
                        if (this.eh = a, null !== c && c.Na(), this.g("layerName", b, a), b = this.layer, null !== b && b.name !== a && (c = b.diagram, null !== c && (a = c.im(a), null !== a && a !== b))) {
                            var d = b.Fc(-1, this, !0);
                            0 <= d && c.Ya(ue, "parts", b, this, null, d, !0);
                            d = a.aj(99999999, this, !0);
                            b.visible !== a.visible && this.Ob(a.visible);
                            0 <= d && c.Ya(te, "parts", a, null, this, !0, d);
                            d = this.layerChanged;
                            if (null !== d) {
                                var e = c.Z;
                                c.Z = !0;
                                d(this, b, a);
                                c.Z = e
                            }
                        }
                }
            }
        },
        layerChanged: {
            get: function () {
                return this.mo
            },
            set: function (a) {
                var b = this.mo;
                b !== a && (this.mo = a, this.g("layerChanged", b, a))
            }
        },
        zOrder: {
            get: function () {
                return this.aq
            },
            set: function (a) {
                var b = this.aq;
                if (b !== a) {
                    this.aq = a;
                    var c = this.layer;
                    null !== c && ji(c, -1, this);
                    this.g("zOrder", b, a);
                    a = this.diagram;
                    null !== a && a.M()
                }
            }
        },
        locationObject: {
            get: function () {
                if (null === this.Xe) {
                    var a = this.locationObjectName;
                    "" !== a ? (a = this.Xa(a), null !== a ? this.Xe = a : this.Xe = this) :
                        this instanceof Je ? this.type !== X.Link && null !== this.placeholder ? this.Xe = this.placeholder : this.Xe = this : this.Xe = this
                }
                return this.Xe.visible ? this.Xe : this
            }
        },
        minLocation: {
            get: function () {
                return this.Do
            },
            set: function (a) {
                var b = this.Do;
                b.w(a) || (this.Do = a = a.G(), this.g("minLocation", b, a))
            }
        },
        maxLocation: {
            get: function () {
                return this.vo
            },
            set: function (a) {
                var b = this.vo;
                b.w(a) || (this.vo = a = a.G(), this.g("maxLocation", b, a))
            }
        },
        locationObjectName: {
            get: function () {
                return this.to
            },
            set: function (a) {
                var b = this.to;
                b !== a && (this.to = a, this.Xe = null, this.o(), this.g("locationObjectName", b, a))
            }
        },
        locationSpot: {
            get: function () {
                return this.uo
            },
            set: function (a) {
                var b = this.uo;
                b.w(a) || (this.uo = a = a.G(), this.o(), this.g("locationSpot", b, a))
            }
        },
        location: {
            get: function () {
                return this.cg
            },
            set: function (a) {
                var b = a.x,
                    c = a.y,
                    d = this.cg,
                    e = d.x,
                    f = d.y;
                (e === b || isNaN(e) && isNaN(b)) && (f === c || isNaN(f) && isNaN(c)) ||
                (a = a.copy(), b = a, this.Kh() ? b = !1 : (this.cg = b, this.D |= 2097152, !1 === rj(this) && (vo(this), c = this.ma, c.v() && (e = c.copy(), c.h(c.x + (b.x - d.x), c.y + (b.y - d.y)), zo(this, this.diagram, c, e), this.g("position", e, c))), b = !0), b && this.g("location", d.copy(), a.copy()))
            }
        },
        category: {
            get: function () {
                return this.Lf
            },
            set: function (a) {
                var b = this.Lf;
                if (b !== a) {
                    var c = this.diagram,
                        d = this.data,
                        e = null;
                    if (null !== c && null !== d && !(this instanceof Je)) {
                        var f = c.model.undoManager;
                        f.isEnabled && !f.isUndoingRedoing && (e =
                            this.clone(), e.W.addAll(this.W))
                    }
                    this.Lf = a;
                    this.g("category", b, a);
                    null === c || null === d || this instanceof Je ? this instanceof Je && (e = this.adornedPart, null !== e && (a = e.Hf, null !== a && a.remove(b), e.Ch(this.category, this))) : (f = c.model, f.undoManager.isUndoingRedoing || (this.Kh() ? (c.partManager.setLinkCategoryForData(d, a), c = c.partManager.findLinkTemplateForCategory(a), null !== c && (yg(c), c = c.copy(), null !== c && Co(this, c, b, a))) : (null !== f && f.Jq(d, a), c = Ko(c.partManager, d, a), null !== c && (yg(c), c = c.copy(), null === c || c instanceof S || (d = this.location.copy(), Co(this, c, b, a), this.location.v() || (this.location = d)))), null !== e && (b = this.clone(), b.W.addAll(this.W), this.g("self", e, b))))
                }
            }
        },
        self: {
            get: function () {
                return this
            },
            set: function (a) {
                Co(this, a, this.category, a.category)
            }
        },
        copyable: {
            get: function () {
                return 0 !== (this.D & 1)
            },
            set: function (a) {
                var b = 0 !== (this.D & 1);
                b !== a && (this.D ^= 1, this.g("copyable", b, a))
            }
        },
        deletable: {
            get: function () {
                return 0 !== (this.D &
                    2)
            },
            set: function (a) {
                var b = 0 !== (this.D & 2);
                b !== a && (this.D ^= 2, this.g("deletable", b, a))
            }
        },
        textEditable: {
            get: function () {
                return 0 !== (this.D & 4)
            },
            set: function (a) {
                var b = 0 !== (this.D & 4);
                b !== a && (this.D ^= 4, this.g("textEditable", b, a), this.Lb())
            }
        },
        groupable: {
            get: function () {
                return 0 !== (this.D & 8)
            },
            set: function (a) {
                var b = 0 !== (this.D & 8);
                b !== a && (this.D ^= 8, this.g("groupable", b, a))
            }
        },
        movable: {
            get: function () {
                return 0 !== (this.D & 16)
            },
            set: function (a) {
                var b = 0 !== (this.D & 16);
                b !== a && (this.D ^= 16, this.g("movable", b, a))
            }
        },
        selectionAdorned: {
            get: function () {
                return 0 !== (this.D & 32)
            },
            set: function (a) {
                var b = 0 !== (this.D & 32);
                b !== a && (this.D ^= 32, this.g("selectionAdorned", b, a), this.Lb())
            }
        },
        isInDocumentBounds: {
            get: function () {
                return 0 !== (this.D & 64)
            },
            set: function (a) {
                var b = 0 !== (this.D & 64);
                if (b !== a) {
                    this.D ^= 64;
                    var c = this.diagram;
                    null !== c && c.Na();
                    this.g("isInDocumentBounds", b, a)
                }
            }
        },
        isLayoutPositioned: {
            get: function () {
                return 0 !== (this.D & 128)
            },
            set: function (a) {
                var b = 0 !== (this.D & 128);
                b !== a && (this.D ^= 128, this.g("isLayoutPositioned", b, a), this.C(a ? 4 : 8))
            }
        },
        selectable: {
            get: function () {
                return 0 !== (this.D & 256)
            },
            set: function (a) {
                var b = 0 !== (this.D & 256);
                b !== a && (this.D ^= 256, this.g("selectable", b, a), this.Lb())
            }
        },
        reshapable: {
            get: function () {
                return 0 !== (this.D & 512)
            },
            set: function (a) {
                var b = 0 !== (this.D & 512);
                b !== a && (this.D ^= 512, this.g("reshapable",
                    b, a), this.Lb())
            }
        },
        resizable: {
            get: function () {
                return 0 !== (this.D & 1024)
            },
            set: function (a) {
                var b = 0 !== (this.D & 1024);
                b !== a && (this.D ^= 1024, this.g("resizable", b, a), this.Lb())
            }
        },
        rotatable: {
            get: function () {
                return 0 !== (this.D & 2048)
            },
            set: function (a) {
                var b = 0 !== (this.D & 2048);
                b !== a && (this.D ^= 2048, this.g("rotatable", b, a), this.Lb())
            }
        },
        isSelected: {
            get: function () {
                return 0 !== (this.D & 4096)
            },
            set: function (a) {
                var b = 0 !== (this.D & 4096);
                if (b !== a) {
                    var c = this.diagram;
                    if (!a || this.canSelect() && !(null !== c && c.selection.count >= c.maxSelectionCount)) {
                        this.D ^= 4096;
                        var d = !1;
                        if (null !== c) {
                            d = c.skipsUndoManager;
                            c.skipsUndoManager = !0;
                            var e = c.selection;
                            e.ea();
                            a ? e.add(this) : e.remove(this);
                            e.freeze()
                        }
                        this.g("isSelected", b, a);
                        this.Lb();
                        a = this.selectionChanged;
                        null !== a && a(this);
                        null !== c && (c.Pb(), c.skipsUndoManager = d)
                    }
                }
            }
        },
        isHighlighted: {
            get: function () {
                return 0 !== (this.D & 524288)
            },
            set: function (a) {
                var b = 0 !== (this.D & 524288);
                if (b !== a) {
                    this.D ^= 524288;
                    var c = this.diagram;
                    null !== c && (c = c.highlighteds, c.ea(), a ? c.add(this) : c.remove(this), c.freeze());
                    this.g("isHighlighted", b, a);
                    this.M();
                    a = this.highlightedChanged;
                    null !== a && a(this)
                }
            }
        },
        isShadowed: {
            get: function () {
                return 0 !== (this.D & 8192)
            },
            set: function (a) {
                var b = 0 !== (this.D & 8192);
                b !== a && (this.D ^= 8192, this.g("isShadowed", b, a), this.M())
            }
        },
        isAnimated: {
            get: function () {
                return 0 !== (this.D & 262144)
            },
            set: function (a) {
                var b = 0 !== (this.D &
                    262144);
                b !== a && (this.D ^= 262144, this.g("isAnimated", b, a))
            }
        },
        highlightedChanged: {
            get: function () {
                return this.Wn
            },
            set: function (a) {
                var b = this.Wn;
                b !== a && (this.Wn = a, this.g("highlightedChanged", b, a))
            }
        },
        selectionObjectName: {
            get: function () {
                return this.Ap
            },
            set: function (a) {
                var b = this.Ap;
                b !== a && (this.Ap = a, this.ph = null, this.g("selectionObjectName", b, a))
            }
        },
        selectionAdornmentTemplate: {
            get: function () {
                return this.yp
            },
            set: function (a) {
                var b =
                    this.yp;
                b !== a && (this.yp = a, this.g("selectionAdornmentTemplate", b, a))
            }
        },
        selectionObject: {
            get: function () {
                if (null === this.ph) {
                    var a = this.selectionObjectName;
                    null !== a && "" !== a ? (a = this.Xa(a), null !== a ? this.ph = a : this.ph = this) : this instanceof S ? (a = this.path, null !== a ? this.ph = a : this.ph = this) : this.ph = this
                }
                return this.ph
            }
        },
        selectionChanged: {
            get: function () {
                return this.zp
            },
            set: function (a) {
                var b = this.zp;
                b !== a && (this.zp = a, this.g("selectionChanged", b, a))
            }
        },
        resizeAdornmentTemplate: {
            get: function () {
                return this.ip
            },
            set: function (a) {
                var b = this.ip;
                b !== a && (this.ip = a, this.g("resizeAdornmentTemplate", b, a))
            }
        },
        resizeObjectName: {
            get: function () {
                return this.kp
            },
            set: function (a) {
                var b = this.kp;
                b !== a && (this.kp = a, this.g("resizeObjectName", b, a))
            }
        },
        resizeObject: {
            get: function () {
                var a = this.resizeObjectName;
                return "" !== a && (a = this.Xa(a), null !== a) ? a : this
            }
        },
        resizeCellSize: {
            get: function () {
                return this.jp
            },
            set: function (a) {
                var b = this.jp;
                b.w(a) || (this.jp = a = a.G(), this.g("resizeCellSize", b, a))
            }
        },
        rotateAdornmentTemplate: {
            get: function () {
                return this.mp
            },
            set: function (a) {
                var b = this.mp;
                b !== a && (this.mp = a, this.g("rotateAdornmentTemplate", b, a))
            }
        },
        rotateObjectName: {
            get: function () {
                return this.np
            },
            set: function (a) {
                var b = this.np;
                b !== a && (this.np = a, this.g("rotateObjectName", b, a))
            }
        },
        rotateObject: {
            get: function () {
                var a = this.rotateObjectName;
                return "" !== a && (a = this.Xa(a), null !== a) ? a : this
            }
        },
        rotationSpot: {
            get: function () {
                return this.op
            },
            set: function (a) {
                var b = this.op;
                b.w(a) || (this.op = a = a.G(), this.g("rotationSpot", b, a))
            }
        },
        text: {
            get: function () {
                return this.Tb
            },
            set: function (a) {
                var b = this.Tb;
                b !== a && (this.Tb = a, this.g("text", b, a))
            }
        },
        containingGroup: {
            get: function () {
                return this.di
            },
            set: function (a) {
                if (this.Wb()) {
                    var b =
                        this.di;
                    if (b !== a) {
                        null === a || this !== a && !a.Wd(this) || (this === a && B("Cannot make a Group a member of itself: " + this.toString()), B("Cannot make a Group indirectly contain itself: " + this.toString() + " already contains " + a.toString()));
                        this.C(2);
                        var c = this.diagram;
                        null !== b ? Go(b, this) : this instanceof T && null !== c && c.zh.remove(this);
                        this.di = a;
                        null !== a ? Fo(a, this) : this instanceof T && null !== c && c.zh.add(this);
                        this.C(1);
                        if (null !== c && c.Z) {
                            var d = this.data,
                                e = c.model;
                            if (null !== d && e.jk()) {
                                var f = e.ja(null !== a ? a.data : null);
                                e.Mt(d, f)
                            }
                        }
                        d = this.containingGroupChanged;
                        null !== d && (e = !0, null !== c && (e = c.Z, c.Z = !0), d(this, b, a), null !== c && (c.Z = e));
                        if (this instanceof T)
                            for (c = new F, Sk(c, this, !0, 0, !0), c = c.iterator; c.next();)
                                if (d = c.value, d instanceof W)
                                    for (d = d.linksConnected; d.next();) Lo(d.value);
                        if (this instanceof W) {
                            for (c = this.linksConnected; c.next();) Lo(c.value);
                            c = this.labeledLink;
                            null !== c && Lo(c)
                        }
                        this.g("containingGroup", b, a);
                        null !== a && (b = a.layer, null !== b && ji(b, -1, a))
                    }
                } else B("cannot set the Part.containingGroup of a Link or Adornment")
            }
        },
        containingGroupChanged: {
            get: function () {
                return this.hn
            },
            set: function (a) {
                var b = this.hn;
                b !== a && (this.hn = a, this.g("containingGroupChanged", b, a))
            }
        },
        isTopLevel: {
            get: function () {
                return null !== this.containingGroup || this instanceof W && null !== this.labeledLink ? !1 : !0
            }
        },
        layoutConditions: {
            get: function () {
                return this.no
            },
            set: function (a) {
                var b = this.no;
                b !== a && (this.no = a, this.g("layoutConditions", b, a))
            }
        },
        dragComputation: {
            get: function () {
                return this.An
            },
            set: function (a) {
                var b = this.An;
                b !== a && (this.An = a, this.g("dragComputation", b, a))
            }
        },
        shadowOffset: {
            get: function () {
                return this.Ep
            },
            set: function (a) {
                var b = this.Ep;
                b.w(a) || (this.Ep = a = a.G(), this.M(), this.g("shadowOffset", b, a))
            }
        },
        shadowColor: {
            get: function () {
                return this.Dp
            },
            set: function (a) {
                var b = this.Dp;
                b !== a && (this.Dp = a, this.M(), this.g("shadowColor", b, a))
            }
        },
        shadowBlur: {
            get: function () {
                return this.df
            },
            set: function (a) {
                var b = this.df;
                b !== a && (this.df = a, this.M(), this.g("shadowBlur", b, a))
            }
        }
    });
    U.prototype.invalidateLayout = U.prototype.C;
    U.prototype.findCommonContainingGroup = U.prototype.Ix;
    U.prototype.isMemberOf = U.prototype.Wd;
    U.prototype.findTopLevelPart = U.prototype.uz;
    U.prototype.findSubGraphLevel = U.prototype.qz;
    U.prototype.ensureBounds = U.prototype.yb;
    U.prototype.getDocumentBounds = U.prototype.lm;
    U.prototype.getRelativePoint = U.prototype.vf;
    U.prototype.findObject = U.prototype.Xa;
    U.prototype.moveTo = U.prototype.moveTo;
    U.prototype.invalidateAdornments = U.prototype.Lb;
    U.prototype.clearAdornments = U.prototype.Yj;
    U.prototype.removeAdornment = U.prototype.Af;
    U.prototype.addAdornment = U.prototype.Ch;
    U.prototype.findAdornment = U.prototype.fk;
    U.prototype.updateTargetBindings = U.prototype.Ba;
    var Do = !1;
    U.className = "Part";
    U.LayoutNone = 0;
    U.LayoutAdded = 1;
    U.LayoutRemoved = 2;
    U.LayoutShown = 4;
    U.LayoutHidden = 8;
    U.LayoutNodeSized = 16;
    U.LayoutGroupLayout = 32;
    U.LayoutNodeReplaced = 64;
    U.LayoutStandard = 127;
    U.LayoutAll = 16777215;

    function Je(a) {
        U.call(this, a);
        this.D &= -257;
        this.eh = "Adornment";
        this.ae = null;
        this.ax = 0;
        this.qx = !1;
        this.l = [];
        this.Sa = null
    }
    la(Je, U);
    Je.prototype.toString = function () {
        var a = this.adornedPart;
        return "Adornment(" + this.category + ")" + (null !== a ? a.toString() : "")
    };
    Je.prototype.updateRelationshipsFromData = function () {};
    Je.prototype.nk = function (a) {
        var b = this.adornedObject.part;
        if (b instanceof S && this.adornedObject instanceof Lf) {
            var c = b.path;
            b.nk(a);
            a = c.geometry;
            b = this.W.j;
            c = b.length;
            for (var d = 0; d < c; d++) {
                var e = b[d];
                e.isPanelMain && e instanceof Lf && (e.ka = a)
            }
        }
    };
    Je.prototype.bj = function () {
        var a = this.ae;
        if (null === a) return !0;
        a = a.part;
        return null === a || !rj(a)
    };
    Je.prototype.Wb = function () {
        return !1
    };
    Je.prototype.vk = function (a, b, c, d, e, f, g) {
        if (a === te && "elements" === b)
            if (e instanceof xg) null === this.Sa && (this.Sa = e);
            else {
                if (e instanceof X) {
                    var h = e.hm(function (a) {
                        return a instanceof xg
                    });
                    h instanceof xg && null === this.Sa && (this.Sa = h)
                }
            }
        else a === ue && "elements" === b && null !== this.Sa && (d === this.Sa ? this.Sa = null : d instanceof X && this.Sa.Dg(d) && (this.Sa = null));
        U.prototype.vk.call(this, a, b, c, d, e, f, g)
    };
    Je.prototype.updateAdornments = function () {};
    Je.prototype.dk = function () {};
    ma.Object.defineProperties(Je.prototype, {
        placeholder: {
            get: function () {
                return this.Sa
            }
        },
        adornedObject: {
            get: function () {
                return this.ae
            },
            set: function (a) {
                var b = this.adornedPart,
                    c = null;
                null !== a && (c = a.part);
                null === b || null !== a && b === c || b.Af(this.category);
                this.ae = a;
                null !== c && c.Ch(this.category, this)
            }
        },
        adornedPart: {
            get: function () {
                var a = this.ae;
                return null !== a ? a.part : null
            }
        },
        containingGroup: {
            get: function () {
                return null
            }
        }
    });
    Je.className = "Adornment";

    function W(a) {
        U.call(this, a);
        this.P = 13;
        this.Wa = new E;
        this.Wp = this.rl = this.xi = this.po = this.oo = null;
        this.Ik = tc;
        this.rc = this.Me = null;
        this.fp = Mo;
        this.Ah = !1
    }
    la(W, U);
    W.prototype.cloneProtected = function (a) {
        U.prototype.cloneProtected.call(this, a);
        a.P = this.P;
        a.P = this.P & -17;
        a.oo = this.oo;
        a.po = this.po;
        a.xi = this.xi;
        a.Wp = this.Wp;
        a.Ik = this.Ik.G();
        a.fp = this.fp
    };
    t = W.prototype;
    t.sf = function (a) {
        U.prototype.sf.call(this, a);
        a.fd();
        a.Me = this.Me;
        a.rc = null
    };

    function No(a, b) {
        null !== b && (null === a.Me && (a.Me = new F), a.Me.add(b))
    }

    function Oo(a, b, c, d) {
        if (null === b || null === a.Me) return null;
        for (var e = a.Me.iterator; e.next();) {
            var f = e.value;
            if (f.Bt === a && f.Mv === b && f.Zx === c && f.$x === d || f.Bt === b && f.Mv === a && f.Zx === d && f.$x === c) return f
        }
        return null
    }
    t.Tz = function (a, b, c) {
        if (void 0 === b || null === b) b = "";
        if (void 0 === c || null === c) c = "";
        a = Oo(this, a, b, c);
        null !== a && a.nm()
    };
    t.vk = function (a, b, c, d, e, f, g) {
        a === te && "elements" === b ? this.rc = null : a === ue && "elements" === b && (this.rc = null);
        U.prototype.vk.call(this, a, b, c, d, e, f, g)
    };
    t.fd = function (a) {
        void 0 === a && (a = null);
        for (var b = this.linksConnected; b.next();) {
            var c = b.value;
            null !== a && a.contains(c) || (Po(this, c.fromPort), Po(this, c.toPort), c.Oa())
        }
    };

    function ol(a, b) {
        for (var c = a.linksConnected; c.next();) {
            var d = c.value;
            if (d.fromPort === b || d.toPort === b) Po(a, d.fromPort), Po(a, d.toPort), d.Oa()
        }
    }

    function Po(a, b) {
        null !== b && (b = b.ep, null !== b && b.nm(), a = a.containingGroup, null === a || a.isSubGraphExpanded || Po(a, a.port))
    }
    t.bj = function () {
        return !0
    };
    W.prototype.getAvoidableRect = function (a) {
        a.set(this.actualBounds);
        a.cq(this.Ik);
        return a
    };
    W.prototype.findVisibleNode = function () {
        for (var a = this; null !== a && !a.isVisible();) a = a.containingGroup;
        return a
    };
    W.prototype.isVisible = function () {
        if (!U.prototype.isVisible.call(this)) return !1;
        var a = !0,
            b = pi,
            c = this.diagram;
        if (null !== c) {
            if (c.animationManager.Dt(this)) return !0;
            a = c.isTreePathToChildren;
            b = c.treeCollapsePolicy
        }
        if (b === pi) {
            if (a = this.Bg(), null !== a && !a.isTreeExpanded) return !1
        } else if (b === Ek) {
            if (a = a ? this.sv() : this.tv(), 0 < a.count && a.all(function (a) {
                    return !a.isTreeExpanded
                })) return !1
        } else if (b === Fk && (a = a ? this.sv() : this.tv(), 0 < a.count && a.any(function (a) {
                return !a.isTreeExpanded
            }))) return !1;
        a = this.labeledLink;
        return null !== a ? a.isVisible() : !0
    };
    W.prototype.Ob = function (a) {
        U.prototype.Ob.call(this, a);
        for (var b = this.linksConnected; b.next();) b.value.Ob(a)
    };
    W.prototype.Jx = function () {
        var a = new F,
            b = new F;
        Qo(this, this, a, b);
        return b.iterator
    };

    function Qo(a, b, c, d) {
        if (!c.has(b)) {
            c.add(b);
            var e = !0,
                f = a.diagram;
            null !== f && (e = f.isTreePathToChildren);
            b.linksConnected.each(function (f) {
                f.isTreeLink ? (e ? f.fromNode === b : f.toNode === b) && Qo(a, e ? f.toNode : f.fromNode, c, d) : d.add(f)
            })
        }
    }
    W.prototype.findLinksConnected = function (a) {
        void 0 === a && (a = null);
        if (null === a) return this.Wa.iterator;
        var b = new jb(this.Wa),
            c = this;
        b.predicate = function (b) {
            return b.fromNode === c && b.fromPortId === a || b.toNode === c && b.toPortId === a
        };
        return b
    };
    t = W.prototype;
    t.lq = function (a) {
        void 0 === a && (a = null);
        var b = new jb(this.Wa),
            c = this;
        b.predicate = function (b) {
            return b.fromNode !== c ? !1 : null === a ? !0 : b.fromPortId === a
        };
        return b
    };
    t.vd = function (a) {
        void 0 === a && (a = null);
        var b = new jb(this.Wa),
            c = this;
        b.predicate = function (b) {
            return b.toNode !== c ? !1 : null === a ? !0 : b.toPortId === a
        };
        return b
    };
    t.rv = function (a) {
        void 0 === a && (a = null);
        for (var b = null, c = null, d = this.Wa.iterator; d.next();) {
            var e = d.value;
            if (e.fromNode === this) {
                if (null === a || e.fromPortId === a) e = e.toNode, null !== b ? b.add(e) : null !== c && c !== e ? (b = new F, b.add(c), b.add(e)) : c = e
            } else e.toNode !== this || null !== a && e.toPortId !== a || (e = e.fromNode, null !== b ? b.add(e) : null !== c && c !== e ? (b = new F, b.add(c), b.add(e)) : c = e)
        }
        return null !== b ? b.iterator : null !== c ? new gb(c) : fb
    };
    t.tv = function (a) {
        void 0 === a && (a = null);
        for (var b = null, c = null, d = this.Wa.iterator; d.next();) {
            var e = d.value;
            e.fromNode !== this || null !== a && e.fromPortId !== a || (e = e.toNode, null !== b ? b.add(e) : null !== c && c !== e ? (b = new F, b.add(c), b.add(e)) : c = e)
        }
        return null !== b ? b.iterator : null !== c ? new gb(c) : fb
    };
    t.sv = function (a) {
        void 0 === a && (a = null);
        for (var b = null, c = null, d = this.Wa.iterator; d.next();) {
            var e = d.value;
            e.toNode !== this || null !== a && e.toPortId !== a || (e = e.fromNode, null !== b ? b.add(e) : null !== c && c !== e ? (b = new F, b.add(c), b.add(e)) : c = e)
        }
        return null !== b ? b.iterator : null !== c ? new gb(c) : fb
    };
    t.lz = function (a, b, c) {
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        var d = new jb(this.Wa),
            e = this;
        d.predicate = function (d) {
            return (d.fromNode !== e || d.toNode !== a || null !== b && d.fromPortId !== b || null !== c && d.toPortId !== c) && (d.fromNode !== a || d.toNode !== e || null !== c && d.fromPortId !== c || null !== b && d.toPortId !== b) ? !1 : !0
        };
        return d
    };
    t.mz = function (a, b, c) {
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        var d = new jb(this.Wa),
            e = this;
        d.predicate = function (d) {
            return d.fromNode !== e || d.toNode !== a || null !== b && d.fromPortId !== b || null !== c && d.toPortId !== c ? !1 : !0
        };
        return d
    };

    function Ro(a, b, c) {
        Po(a, c);
        var d = a.Wa.contains(b);
        d || a.Wa.add(b);
        if (!d || b.fromNode === b.toNode) {
            var e = a.linkConnected;
            if (null !== e) {
                var f = !0,
                    g = a.diagram;
                null !== g && (f = g.Z, g.Z = !0);
                e(a, b, c);
                null !== g && (g.Z = f)
            }
        }!d && b.isTreeLink && (c = b.fromNode, b = b.toNode, null !== c && null !== b && c !== b && (d = !0, a = a.diagram, null !== a && (d = a.isTreePathToChildren), e = d ? b : c, f = d ? c : b, e.Ah || (e.Ah = f), !f.isTreeLeaf || null !== a && a.undoManager.isUndoingRedoing || (d ? c === f && (f.isTreeLeaf = !1) : b === f && (f.isTreeLeaf = !1))))
    }

    function So(a, b, c) {
        Po(a, c);
        var d = a.Wa.remove(b),
            e = null;
        if (d || b.toNode === b.fromNode) {
            var f = a.linkDisconnected;
            e = a.diagram;
            if (null !== f) {
                var g = !0;
                null !== e && (g = e.Z, e.Z = !0);
                f(a, b, c);
                null !== e && (e.Z = g)
            }
        }
        d && b.isTreeLink && (c = !0, null !== e && (c = e.isTreePathToChildren), a = c ? b.toNode : b.fromNode, b = c ? b.fromNode : b.toNode, null !== a && (a.Ah = !1), null === b || b.isTreeLeaf || (0 === b.Wa.count ? (b.Ah = null, null !== e && e.undoManager.isUndoingRedoing || (b.isTreeLeaf = !0)) : Dk(b)))
    }

    function Dk(a) {
        a.Ah = !1;
        if (0 !== a.Wa.count) {
            var b = !0,
                c = a.diagram;
            if (null === c || !c.undoManager.isUndoingRedoing) {
                null !== c && (b = c.isTreePathToChildren);
                for (c = a.Wa.iterator; c.next();) {
                    var d = c.value;
                    if (d.isTreeLink)
                        if (b) {
                            if (d.fromNode === a) {
                                a.isTreeLeaf = !1;
                                return
                            }
                        } else if (d.toNode === a) {
                        a.isTreeLeaf = !1;
                        return
                    }
                }
                a.isTreeLeaf = !0
            }
        }
    }
    W.prototype.updateRelationshipsFromData = function () {
        var a = this.diagram;
        null !== a && a.partManager.updateRelationshipsFromData(this)
    };
    t = W.prototype;
    t.qq = function (a) {
        U.prototype.qq.call(this, a);
        a || (Dk(this), a = this.rl, null !== a && To(a, this))
    };
    t.rq = function (a) {
        U.prototype.rq.call(this, a);
        a || (a = this.rl, null !== a && null !== a.ad && (a.ad.remove(this), a.o()))
    };
    t.dk = function () {
        if (0 < this.Wa.count) {
            var a = this.diagram;
            if (null !== a)
                for (var b = null !== a.commandHandler ? a.commandHandler.deletesConnectedLinks : !0, c = this.Wa.copy().iterator; c.next();) {
                    var d = c.value;
                    b ? a.remove(d) : (d.fromNode === this && (d.fromNode = null), d.toNode === this && (d.toNode = null))
                }
        }
        this.labeledLink = null;
        U.prototype.dk.call(this)
    };
    t.lt = function (a) {
        if (null === this.rc) {
            if ("" === a && !1 === this.Ih) return this;
            Uo(this)
        }
        var b = this.rc.H(a);
        return null !== b || "" !== a && (b = this.rc.H(""), null !== b) ? b : this
    };

    function Uo(a) {
        null === a.rc ? a.rc = new H : a.rc.clear();
        a.Km(a, function (a, c) {
            Tl(a, c)
        });
        0 === a.rc.count && a.rc.add("", a)
    }

    function Tl(a, b) {
        var c = b.portId;
        null !== c && null !== a.rc && a.rc.add(c, b)
    }

    function Sl(a, b, c) {
        var d = b.portId;
        if (null !== d && (null !== a.rc && a.rc.remove(d), b = a.diagram, null !== b && c)) {
            c = null;
            for (a = a.findLinksConnected(d); a.next();) d = a.value, null === c && (c = Fa()), c.push(d);
            if (null !== c) {
                for (a = 0; a < c.length; a++) b.remove(c[a]);
                Ha(c)
            }
        }
    }
    t.Vz = function (a) {
        if (null === a || a === this) return !1;
        var b = !0,
            c = this.diagram;
        null !== c && (b = c.isTreePathToChildren);
        c = this;
        if (b)
            for (; c !== a;) {
                b = null;
                for (var d = c.Wa.iterator; d.next();) {
                    var e = d.value;
                    if (e.isTreeLink && (b = e.fromNode, b !== c && b !== this)) break
                }
                if (b === this || null === b || b === c) return !1;
                c = b
            } else
                for (; c !== a;) {
                    b = null;
                    for (d = c.Wa.iterator; d.next() && (e = d.value, !e.isTreeLink || (b = e.toNode, b === c || b === this)););
                    if (b === this || null === b || b === c) return !1;
                    c = b
                }
        return !0
    };
    t.yz = function () {
        var a = !0,
            b = this.diagram;
        null !== b && (a = b.isTreePathToChildren);
        b = this;
        if (a)
            for (;;) {
                a = null;
                for (var c = b.Wa.iterator; c.next();) {
                    var d = c.value;
                    if (d.isTreeLink && (a = d.fromNode, a !== b && a !== this)) break
                }
                if (a === this) return this;
                if (null === a || a === b) return b;
                b = a
            } else
                for (;;) {
                    a = null;
                    for (c = b.Wa.iterator; c.next() && (d = c.value, !d.isTreeLink || (a = d.toNode, a === b || a === this)););
                    if (a === this) return this;
                    if (null === a || a === b) return b;
                    b = a
                }
    };
    t.iz = function (a) {
        if (null === a) return null;
        if (this === a) return this;
        for (var b = this; null !== b;) Eo(b, !0), b = b.Bg();
        var c = null;
        for (b = a; null !== b;) {
            if (0 !== (b.D & 1048576)) {
                c = b;
                break
            }
            b = b.Bg()
        }
        for (b = this; null !== b;) Eo(b, !1), b = b.Bg();
        return c
    };
    t.Vi = function () {
        var a = !0,
            b = this.diagram;
        null !== b && (a = b.isTreePathToChildren);
        b = this.Wa.iterator;
        if (a)
            for (; b.next();) {
                if (a = b.value, a.isTreeLink && a.fromNode !== this) return a
            } else
                for (; b.next();)
                    if (a = b.value, a.isTreeLink && a.toNode !== this) return a;
        return null
    };
    t.Bg = function () {
        var a = this.Ah;
        if (null === a) return null;
        if (a instanceof W) return a;
        var b = !0;
        a = this.diagram;
        null !== a && (b = a.isTreePathToChildren);
        a = this.Wa.iterator;
        if (b)
            for (; a.next();) {
                if (b = a.value, b.isTreeLink && (b = b.fromNode, b !== this)) return this.Ah = b
            } else
                for (; a.next();)
                    if (b = a.value, b.isTreeLink && (b = b.toNode, b !== this)) return this.Ah = b;
        return this.Ah = null
    };
    t.wz = function () {
        function a(b, d) {
            if (null !== b) {
                d.add(b);
                var c = b.Vi();
                null !== c && (d.add(c), a(b.Bg(), d))
            }
        }
        var b = new F;
        a(this, b);
        return b
    };
    t.vz = function () {
        return Vo(this, this)
    };

    function Vo(a, b) {
        b = b.Bg();
        return null === b ? 0 : 1 + Vo(a, b)
    }
    t.nq = function () {
        var a = !0,
            b = this.diagram;
        null !== b && (a = b.isTreePathToChildren);
        b = new jb(this.Wa);
        var c = this;
        b.predicate = a ? function (a) {
            return a.isTreeLink && a.fromNode === c ? !0 : !1
        } : function (a) {
            return a.isTreeLink && a.toNode === c ? !0 : !1
        };
        return b
    };
    t.vv = function () {
        var a = !0,
            b = this.diagram;
        null !== b && (a = b.isTreePathToChildren);
        var c = b = null,
            d = this.Wa.iterator;
        if (a)
            for (; d.next();) a = d.value, a.isTreeLink && a.fromNode === this && (a = a.toNode, null !== b ? b.add(a) : null !== c && c !== a ? (b = new E, b.add(c), b.add(a)) : c = a);
        else
            for (; d.next();) a = d.value, a.isTreeLink && a.toNode === this && (a = a.fromNode, null !== b ? b.add(a) : null !== c && c !== a ? (b = new E, b.add(c), b.add(a)) : c = a);
        return null !== b ? b.iterator : null !== c ? new gb(c) : fb
    };
    t.xz = function (a) {
        void 0 === a && (a = Infinity);
        var b = new F;
        Sk(b, this, !1, a, !0);
        return b
    };
    W.prototype.collapseTree = function (a) {
        void 0 === a && (a = 1);
        1 > a && (a = 1);
        var b = this.diagram;
        if (null !== b && !b.Ce) {
            b.Ce = !0;
            var c = new F;
            c.add(this);
            Wo(this, c, b.isTreePathToChildren, a, b, this, b.treeCollapsePolicy === pi);
            b.Ce = !1
        }
    };

    function Wo(a, b, c, d, e, f, g) {
        if (1 < d)
            for (var h = c ? a.lq() : a.vd(); h.next();) {
                var k = h.value;
                k.isTreeLink && (k = k.pt(a), null === k || k === a || b.contains(k) || (b.add(k), Wo(k, b, c, d - 1, e, f, g)))
            } else Xo(a, b, c, e, f, g)
    }

    function Xo(a, b, c, d, e, f) {
        for (var g = e === a ? !0 : a.isTreeExpanded, h = c ? a.lq() : a.vd(); h.next();) {
            var k = h.value;
            if (k.isTreeLink && (k = k.pt(a), null !== k && k !== a)) {
                var l = b.contains(k);
                l || b.add(k);
                g && (f && d.Tj(k, e), k.Jh(), k.Ob(!1));
                k.isTreeExpanded && (k.wasTreeExpanded = k.isTreeExpanded, l || Xo(k, b, c, d, e, f))
            }
        }
        a.isTreeExpanded = !1
    }
    W.prototype.expandTree = function (a) {
        void 0 === a && (a = 2);
        2 > a && (a = 2);
        var b = this.diagram;
        if (null !== b && !b.Ce) {
            b.Ce = !0;
            var c = new F;
            c.add(this);
            Yo(this, c, b.isTreePathToChildren, a, b, this, b.treeCollapsePolicy === pi);
            b.Ce = !1
        }
    };

    function Yo(a, b, c, d, e, f, g) {
        for (var h = f === a ? !1 : a.isTreeExpanded, k = c ? a.lq() : a.vd(); k.next();) {
            var l = k.value;
            l.isTreeLink && (h || l.kd || l.Oa(), l = l.pt(a), null !== l && l !== a && !b.contains(l) && (b.add(l), h || (l.Ob(!0), l.Jh(), g && e.Vj(l, f)), 2 < d || l.wasTreeExpanded)) && (l.wasTreeExpanded = !1, Yo(l, b, c, d - 1, e, f, g))
        }
        a.isTreeExpanded = !0
    }
    ma.Object.defineProperties(W.prototype, {
        portSpreading: {
            get: function () {
                return this.fp
            },
            set: function (a) {
                var b = this.fp;
                b !== a && (this.fp = a, this.g("portSpreading", b, a), a = this.diagram, null !== a && a.undoManager.isUndoingRedoing || this.fd())
            }
        },
        avoidable: {
            get: function () {
                return 0 !== (this.P & 8)
            },
            set: function (a) {
                var b = 0 !== (this.P & 8);
                if (b !== a) {
                    this.P ^= 8;
                    var c = this.diagram;
                    null !== c && xk(c, this);
                    this.g("avoidable", b, a)
                }
            }
        },
        avoidableMargin: {
            get: function () {
                return this.Ik
            },
            set: function (a) {
                "number" === typeof a && (a = new oc(a));
                var b = this.Ik;
                if (!b.w(a)) {
                    this.Ik = a = a.G();
                    var c = this.diagram;
                    null !== c && xk(c, this);
                    this.g("avoidableMargin", b, a)
                }
            }
        },
        linksConnected: {
            get: function () {
                return this.Wa.iterator
            }
        },
        linkConnected: {
            get: function () {
                return this.oo
            },
            set: function (a) {
                var b = this.oo;
                b !== a && (this.oo = a, this.g("linkConnected", b, a))
            }
        },
        linkDisconnected: {
            get: function () {
                return this.po
            },
            set: function (a) {
                var b = this.po;
                b !== a && (this.po = a, this.g("linkDisconnected", b, a))
            }
        },
        linkValidation: {
            get: function () {
                return this.xi
            },
            set: function (a) {
                var b = this.xi;
                b !== a && (this.xi = a, this.g("linkValidation", b, a))
            }
        },
        isLinkLabel: {
            get: function () {
                return null !== this.rl
            }
        },
        labeledLink: {
            get: function () {
                return this.rl
            },
            set: function (a) {
                var b = this.rl;
                if (b !== a) {
                    var c = this.diagram,
                        d = this.data;
                    if (null !== b) {
                        null !== b.ad && (b.ad.remove(this),
                            b.o());
                        if (null !== c && null !== d && !c.undoManager.isUndoingRedoing) {
                            var e = b.data,
                                f = c.model;
                            if (null !== e && f.pm()) {
                                var g = f.ja(d);
                                void 0 !== g && f.ay(e, g)
                            }
                        }
                        this.containingGroup = null
                    }
                    this.rl = a;
                    null !== a && (To(a, this), null === c || null === d || c.undoManager.isUndoingRedoing || (e = a.data, c = c.model, null !== e && c.pm() && (d = c.ja(d), void 0 !== d && c.dv(e, d))), this.containingGroup = a.containingGroup);
                    Cl(this);
                    this.g("labeledLink", b, a)
                }
            }
        },
        port: {
            get: function () {
                return this.lt("")
            }
        },
        ports: {
            get: function () {
                null === this.rc && Uo(this);
                return this.rc.iteratorValues
            }
        },
        isTreeExpanded: {
            get: function () {
                return 0 !== (this.P & 1)
            },
            set: function (a) {
                var b = 0 !== (this.P & 1);
                if (b !== a) {
                    this.P ^= 1;
                    var c = this.diagram;
                    this.g("isTreeExpanded", b, a);
                    b = this.treeExpandedChanged;
                    if (null !== b) {
                        var d = !0;
                        null !== c && (d = c.Z, c.Z = !0);
                        b(this);
                        null !== c && (c.Z = d)
                    }
                    null !== c && c.undoManager.isUndoingRedoing ? this.Ob(a) : a ? this.expandTree() : this.collapseTree()
                }
            }
        },
        wasTreeExpanded: {
            get: function () {
                return 0 !== (this.P & 2)
            },
            set: function (a) {
                var b = 0 !== (this.P & 2);
                b !== a && (this.P ^= 2, this.g("wasTreeExpanded", b, a))
            }
        },
        treeExpandedChanged: {
            get: function () {
                return this.Wp
            },
            set: function (a) {
                var b = this.Wp;
                b !== a && (this.Wp = a, this.g("treeExpandedChanged", b, a))
            }
        },
        isTreeLeaf: {
            get: function () {
                return 0 !== (this.P & 4)
            },
            set: function (a) {
                var b = 0 !== (this.P & 4);
                b !== a && (this.P ^= 4, this.g("isTreeLeaf", b, a))
            }
        }
    });
    W.prototype.expandTree = W.prototype.expandTree;
    W.prototype.collapseTree = W.prototype.collapseTree;
    W.prototype.findTreeParts = W.prototype.xz;
    W.prototype.findTreeChildrenNodes = W.prototype.vv;
    W.prototype.findTreeChildrenLinks = W.prototype.nq;
    W.prototype.findTreeLevel = W.prototype.vz;
    W.prototype.findTreeParentChain = W.prototype.wz;
    W.prototype.findTreeParentNode = W.prototype.Bg;
    W.prototype.findTreeParentLink = W.prototype.Vi;
    W.prototype.findCommonTreeParent = W.prototype.iz;
    W.prototype.findTreeRoot = W.prototype.yz;
    W.prototype.isInTreeOf = W.prototype.Vz;
    W.prototype.findPort = W.prototype.lt;
    W.prototype.findLinksTo = W.prototype.mz;
    W.prototype.findLinksBetween = W.prototype.lz;
    W.prototype.findNodesInto = W.prototype.sv;
    W.prototype.findNodesOutOf = W.prototype.tv;
    W.prototype.findNodesConnected = W.prototype.rv;
    W.prototype.findLinksInto = W.prototype.vd;
    W.prototype.findLinksOutOf = W.prototype.lq;
    W.prototype.findExternalTreeLinksConnected = W.prototype.Jx;
    W.prototype.invalidateConnectedLinks = W.prototype.fd;
    W.prototype.invalidateLinkBundle = W.prototype.Tz;
    var Zo = new D(W, "SpreadingNone", 10),
        Mo = new D(W, "SpreadingEvenly", 11),
        $o = new D(W, "SpreadingPacked", 12);
    W.className = "Node";
    W.SpreadingNone = Zo;
    W.SpreadingEvenly = Mo;
    W.SpreadingPacked = $o;

    function T(a) {
        W.call(this, a);
        this.P |= 4608;
        this.zo = new F;
        this.zl = new F;
        this.Sa = this.Np = this.yi = this.Ao = this.yo = null;
        this.ic = new Ci;
        this.ic.group = this
    }
    la(T, W);
    T.prototype.cloneProtected = function (a) {
        W.prototype.cloneProtected.call(this, a);
        this.P = this.P & -32769;
        a.yo = this.yo;
        a.Ao = this.Ao;
        a.yi = this.yi;
        a.Np = this.Np;
        var b = a.hm(function (a) {
            return a instanceof xg
        });
        b instanceof xg ? a.Sa = b : a.Sa = null;
        null !== this.ic ? (a.ic = this.ic.copy(), a.ic.group = a) : (null !== a.ic && (a.ic.group = null), a.ic = null)
    };
    t = T.prototype;
    t.sf = function (a) {
        W.prototype.sf.call(this, a);
        var b = a.gk();
        for (a = a.memberParts; a.next();) {
            var c = a.value;
            c.o();
            c.C(8);
            c.Yj();
            if (c instanceof W) c.fd(b);
            else if (c instanceof S)
                for (c = c.labelNodes; c.next();) c.value.fd(b)
        }
    };
    t.vk = function (a, b, c, d, e, f, g) {
        if (a === te && "elements" === b)
            if (e instanceof xg) null === this.Sa ? this.Sa = e : this.Sa !== e && B("Cannot insert a second Placeholder into the visual tree of a Group.");
            else {
                if (e instanceof X) {
                    var h = e.hm(function (a) {
                        return a instanceof xg
                    });
                    h instanceof xg && (null === this.Sa ? this.Sa = h : this.Sa !== h && B("Cannot insert a second Placeholder into the visual tree of a Group."))
                }
            }
        else a === ue && "elements" === b && null !== this.Sa && (d === this.Sa ? this.Sa = null : d instanceof X && this.Sa.Dg(d) && (this.Sa = null));
        W.prototype.vk.call(this, a, b, c, d, e, f, g)
    };
    t.Fh = function (a, b, c, d) {
        this.Xe = this.Sa;
        W.prototype.Fh.call(this, a, b, c, d)
    };
    t.yb = function () {
        this.memberParts.each(function (a) {
            a.yb()
        });
        W.prototype.yb.call(this)
    };
    t.bj = function () {
        if (!W.prototype.bj.call(this)) return !1;
        for (var a = this.memberParts; a.next();) {
            var b = a.value;
            if (b instanceof W) {
                if (b.isVisible() && rj(b)) return !1
            } else if (b instanceof S && b.isVisible() && rj(b) && b.fromNode !== this && b.toNode !== this) return !1
        }
        return !0
    };

    function Fo(a, b) {
        if (a.zo.add(b)) {
            b instanceof T && a.zl.add(b);
            var c = a.memberAdded;
            if (null !== c) {
                var d = !0,
                    e = a.diagram;
                null !== e && (d = e.Z, e.Z = !0);
                c(a, b);
                null !== e && (e.Z = d)
            }
            a.isVisible() && a.isSubGraphExpanded || b.Ob(!1)
        }
        b instanceof S && !a.computesBoundsIncludingLinks || (b = a.Sa, null === b && (b = a), b.o())
    }

    function Go(a, b) {
        if (a.zo.remove(b)) {
            b instanceof T && a.zl.remove(b);
            var c = a.memberRemoved;
            if (null !== c) {
                var d = !0,
                    e = a.diagram;
                null !== e && (d = e.Z, e.Z = !0);
                c(a, b);
                null !== e && (e.Z = d)
            }
            a.isVisible() && a.isSubGraphExpanded || b.Ob(!0)
        }
        b instanceof S && !a.computesBoundsIncludingLinks || (b = a.Sa, null === b && (b = a), b.o())
    }
    t.dk = function () {
        if (0 < this.zo.count) {
            var a = this.diagram;
            if (null !== a)
                for (var b = this.zo.copy().iterator; b.next();) a.remove(b.value)
        }
        W.prototype.dk.call(this)
    };
    T.prototype.canAddMembers = function (a) {
        var b = this.diagram;
        if (null === b) return !1;
        b = b.commandHandler;
        for (a = Uk(a).iterator; a.next();)
            if (!b.isValidMember(this, a.value)) return !1;
        return !0
    };
    T.prototype.addMembers = function (a, b) {
        var c = this.diagram;
        if (null === c) return !1;
        c = c.commandHandler;
        var d = !0;
        for (a = Uk(a).iterator; a.next();) {
            var e = a.value;
            !b || c.isValidMember(this, e) ? e.containingGroup = this : d = !1
        }
        return d
    };
    T.prototype.canUngroup = function () {
        if (!this.ungroupable) return !1;
        var a = this.layer;
        if (null !== a && !a.allowUngroup) return !1;
        a = a.diagram;
        return null === a || a.allowUngroup ? !0 : !1
    };
    t = T.prototype;
    t.fd = function (a) {
        void 0 === a && (a = null);
        var b = 0 !== (this.P & 65536);
        W.prototype.fd.call(this, a);
        if (!b)
            for (0 !== (this.P & 65536) !== !0 && (this.P = this.P ^ 65536), b = this.qv(); b.next();) {
                var c = b.value;
                if (null === a || !a.contains(c)) {
                    var d = c.fromNode;
                    null !== d && d !== this && d.Wd(this) && !d.isVisible() ? (Po(d, c.fromPort), Po(d, c.toPort), c.Oa()) : (d = c.toNode, null !== d && d !== this && d.Wd(this) && !d.isVisible() && (Po(d, c.fromPort), Po(d, c.toPort), c.Oa()))
                }
            }
    };
    t.qv = function () {
        var a = this.gk();
        a.add(this);
        for (var b = new F, c = a.iterator; c.next();) {
            var d = c.value;
            if (d instanceof W)
                for (d = d.linksConnected; d.next();) {
                    var e = d.value;
                    a.contains(e) || b.add(e)
                }
        }
        return b.iterator
    };
    t.kz = function () {
        var a = this.gk();
        a.add(this);
        for (var b = new F, c = a.iterator; c.next();) {
            var d = c.value;
            if (d instanceof W)
                for (d = d.linksConnected; d.next();) {
                    var e = d.value,
                        f = e.fromNode;
                    a.contains(f) && f !== this || b.add(f);
                    e = e.toNode;
                    a.contains(e) && e !== this || b.add(e)
                }
        }
        return b.iterator
    };
    t.jz = function () {
        function a(b, d) {
            null !== b && (d.add(b), a(b.containingGroup, d))
        }
        var b = new F;
        a(this, b);
        return b
    };
    t.gk = function () {
        var a = new F;
        Sk(a, this, !0, 0, !0);
        a.remove(this);
        return a
    };
    t.Ob = function (a) {
        W.prototype.Ob.call(this, a);
        for (var b = this.memberParts; b.next();) b.value.Ob(a)
    };
    T.prototype.collapseSubGraph = function () {
        var a = this.diagram;
        if (null !== a && !a.Ce) {
            a.Ce = !0;
            var b = this.gk();
            ap(this, b, a, this);
            a.Ce = !1
        }
    };

    function ap(a, b, c, d) {
        for (var e = a.memberParts; e.next();) {
            var f = e.value;
            f.Ob(!1);
            f instanceof T && f.isSubGraphExpanded && (f.wasSubGraphExpanded = f.isSubGraphExpanded, ap(f, b, c, d));
            if (f instanceof W) f.fd(b), c.Tj(f, d);
            else if (f instanceof S)
                for (f = f.labelNodes; f.next();) f.value.fd(b)
        }
        a.isSubGraphExpanded = !1
    }
    T.prototype.expandSubGraph = function () {
        var a = this.diagram;
        if (null !== a && !a.Ce) {
            a.Ce = !0;
            var b = this.gk();
            bp(this, b, a, this);
            a.Ce = !1
        }
    };

    function bp(a, b, c, d) {
        for (var e = a.memberParts; e.next();) {
            var f = e.value;
            f.Ob(!0);
            f instanceof T && f.wasSubGraphExpanded && (f.wasSubGraphExpanded = !1, bp(f, b, c, d));
            if (f instanceof W) f.fd(b), c.Vj(f, d);
            else if (f instanceof S)
                for (f = f.labelNodes; f.next();) f.value.fd(b)
        }
        a.isSubGraphExpanded = !0
    }
    T.prototype.move = function (a, b) {
        void 0 === b && (b = !1);
        var c = b ? this.location : this.position,
            d = c.x;
        c = c.y;
        var e = a.x,
            f = a.y;
        if (!(d === e || isNaN(d) && isNaN(e)) || !(c === f || isNaN(c) && isNaN(f))) {
            d = e - (isNaN(d) ? 0 : d);
            c = f - (isNaN(c) ? 0 : c);
            f = I.alloc();
            W.prototype.move.call(this, a, b);
            a = new F;
            for (b = this.gk().iterator; b.next();)
                if (e = b.value, e instanceof S && (e.suspendsRouting && a.add(e), e.kd || e.fromNode !== this && e.toNode !== this)) e.suspendsRouting = !0;
            for (b.reset(); b.next();)
                if (e = b.value, !(e.Kh() || e instanceof W && e.isLinkLabel)) {
                    var g =
                        e.position,
                        h = e.location;
                    g.v() ? (f.x = g.x + d, f.y = g.y + c, e.position = f) : h.v() && (f.x = h.x + d, f.y = h.y + c, e.location = f)
                } for (b.reset(); b.next();)
                if (e = b.value, e instanceof S && (e.suspendsRouting = a.contains(e), e.kd || e.fromNode !== this && e.toNode !== this)) g = e.position, f.x = g.x + d, f.y = g.y + c, f.v() ? e.move(f) : e.Oa(), Oj(e) && e.Oa();
            I.free(f)
        }
    };
    ma.Object.defineProperties(T.prototype, {
        placeholder: {
            get: function () {
                return this.Sa
            }
        },
        computesBoundsAfterDrag: {
            get: function () {
                return 0 !== (this.P & 2048)
            },
            set: function (a) {
                var b = 0 !== (this.P & 2048);
                b !== a && (this.P ^= 2048, this.g("computesBoundsAfterDrag", b, a))
            }
        },
        computesBoundsIncludingLinks: {
            get: function () {
                return 0 !== (this.P & 4096)
            },
            set: function (a) {
                var b = 0 !== (this.P & 4096);
                b !== a && (this.P ^= 4096, this.g("computesBoundsIncludingLinks",
                    b, a))
            }
        },
        computesBoundsIncludingLocation: {
            get: function () {
                return 0 !== (this.P & 8192)
            },
            set: function (a) {
                var b = 0 !== (this.P & 8192);
                b !== a && (this.P ^= 8192, this.g("computesBoundsIncludingLocation", b, a))
            }
        },
        handlesDragDropForMembers: {
            get: function () {
                return 0 !== (this.P & 16384)
            },
            set: function (a) {
                var b = 0 !== (this.P & 16384);
                b !== a && (this.P ^= 16384, this.g("handlesDragDropForMembers", b, a))
            }
        },
        memberParts: {
            get: function () {
                return this.zo.iterator
            }
        },
        layout: {
            get: function () {
                return this.ic
            },
            set: function (a) {
                var b = this.ic;
                if (b !== a) {
                    null !== b && (b.diagram = null, b.group = null);
                    this.ic = a;
                    var c = this.diagram;
                    null !== a && (a.diagram = c, a.group = this);
                    null !== c && (c.If = !0);
                    this.g("layout", b, a);
                    null !== c && c.Pb()
                }
            }
        },
        memberAdded: {
            get: function () {
                return this.yo
            },
            set: function (a) {
                var b = this.yo;
                b !== a && (this.yo = a, this.g("memberAdded", b, a))
            }
        },
        memberRemoved: {
            get: function () {
                return this.Ao
            },
            set: function (a) {
                var b = this.Ao;
                b !== a && (this.Ao = a, this.g("memberRemoved", b, a))
            }
        },
        memberValidation: {
            get: function () {
                return this.yi
            },
            set: function (a) {
                var b = this.yi;
                b !== a && (this.yi = a, this.g("memberValidation", b, a))
            }
        },
        ungroupable: {
            get: function () {
                return 0 !== (this.P & 256)
            },
            set: function (a) {
                var b = 0 !== (this.P & 256);
                b !== a && (this.P ^= 256, this.g("ungroupable", b, a))
            }
        },
        isSubGraphExpanded: {
            get: function () {
                return 0 !== (this.P & 512)
            },
            set: function (a) {
                var b = 0 !== (this.P & 512);
                if (b !== a) {
                    this.P ^= 512;
                    var c = this.diagram;
                    this.g("isSubGraphExpanded", b, a);
                    b = this.subGraphExpandedChanged;
                    if (null !== b) {
                        var d = !0;
                        null !== c && (d = c.Z, c.Z = !0);
                        b(this);
                        null !== c && (c.Z = d)
                    }
                    null !== c && c.undoManager.isUndoingRedoing ? (null !== this.Sa && this.Sa.o(), this.memberParts.each(function (a) {
                        a.updateAdornments()
                    })) : a ? this.expandSubGraph() : this.collapseSubGraph()
                }
            }
        },
        wasSubGraphExpanded: {
            get: function () {
                return 0 !== (this.P & 1024)
            },
            set: function (a) {
                var b =
                    0 !== (this.P & 1024);
                b !== a && (this.P ^= 1024, this.g("wasSubGraphExpanded", b, a))
            }
        },
        subGraphExpandedChanged: {
            get: function () {
                return this.Np
            },
            set: function (a) {
                var b = this.Np;
                b !== a && (this.Np = a, this.g("subGraphExpandedChanged", b, a))
            }
        },
        uk: {
            get: function () {
                return 0 !== (this.P & 32768)
            },
            set: function (a) {
                0 !== (this.P & 32768) !== a && (this.P ^= 32768)
            }
        }
    });
    T.prototype.expandSubGraph = T.prototype.expandSubGraph;
    T.prototype.collapseSubGraph = T.prototype.collapseSubGraph;
    T.prototype.findSubGraphParts = T.prototype.gk;
    T.prototype.findContainingGroupChain = T.prototype.jz;
    T.prototype.findExternalNodesConnected = T.prototype.kz;
    T.prototype.findExternalLinksConnected = T.prototype.qv;
    T.prototype.ensureBounds = T.prototype.yb;
    T.className = "Group";

    function xg() {
        Y.call(this);
        this.bb = sc;
        this.tp = new N(NaN, NaN, NaN, NaN)
    }
    la(xg, Y);
    xg.prototype.cloneProtected = function (a) {
        Y.prototype.cloneProtected.call(this, a);
        a.bb = this.bb.G();
        a.tp = this.tp.copy()
    };
    xg.prototype.Hh = function (a) {
        if (null === this.background && null === this.areaBackground) return !1;
        var b = this.naturalBounds;
        return fc(0, 0, b.width, b.height, a.x, a.y)
    };
    xg.prototype.sm = function () {
        var a = this.part;
        null !== a && (a instanceof T || a instanceof Je) || B("Placeholder is not inside a Group or Adornment.");
        if (a instanceof T) {
            var b = this.computeBorder(this.tp),
                c = this.minSize,
                d = this.oc;
            Vb(d, (isFinite(c.width) ? Math.max(c.width, b.width) : b.width) || 0, (isFinite(c.height) ? Math.max(c.height, b.height) : b.height) || 0);
            hl(this, 0, 0, d.width, d.height);
            d = a.memberParts;
            for (c = !1; d.next();)
                if (d.value.isVisible()) {
                    c = !0;
                    break
                } d = a.diagram;
            !c || null === d || d.animationManager.Gv(a) || isNaN(b.x) ||
                isNaN(b.y) || (c = I.alloc(), c.dj(b, a.locationSpot), c.w(a.location) || (a.location = new I(c.x, c.y)), I.free(c))
        } else {
            b = this.oc;
            c = this.bb;
            d = c.left + c.right;
            var e = c.top + c.bottom,
                f = a.adornedObject;
            a.angle = f.Xi();
            var g = 0;
            f instanceof Lf && (g = f.strokeWidth);
            var h = f.uf(),
                k = f.naturalBounds,
                l = (k.width + g) * h;
            g = (k.height + g) * h;
            a.type !== X.Link && (f = f.ga("Selection" === a.category ? vc : a.locationSpot, I.alloc()), a.location = f, I.free(f));
            isNaN(l) || isNaN(g) ? (a = a.adornedObject, l = a.ga(vc, I.alloc()), f = N.allocAt(l.x, l.y, 0, 0), f.He(a.ga(Gc,
                l)), f.He(a.ga(yc, l)), f.He(a.ga(Cc, l)), Vb(b, f.width + d || 0, f.height + e || 0), hl(this, -c.left, -c.top, b.width, b.height), I.free(l), N.free(f)) : (Vb(b, l + d || 0, g + e || 0), hl(this, -c.left, -c.top, b.width, b.height))
        }
    };
    xg.prototype.Fh = function (a, b, c, d) {
        this.actualBounds.h(a, b, c, d)
    };
    xg.prototype.computeBorder = function (a) {
        var b = this.part,
            c = b.diagram;
        if (null !== c && b instanceof T && !b.layer.isTemporary && b.computesBoundsAfterDrag && this.tp.v()) {
            var d = c.toolManager.findTool("Dragging");
            if (d === c.currentTool && (c = d.computeBorder(b, this.tp, a), null !== c)) return c
        }
        c = N.alloc();
        d = this.computeMemberBounds(c);
        var e = this.bb;
        b instanceof T && !b.isSubGraphExpanded ? a.h(d.x - e.left, d.y - e.top, 0, 0) : a.h(d.x - e.left, d.y - e.top, Math.max(d.width + e.left + e.right, 0), Math.max(d.height + e.top + e.bottom, 0));
        N.free(c);
        b instanceof T && b.computesBoundsIncludingLocation && b.location.v() && a.He(b.location);
        return a
    };
    xg.prototype.computeMemberBounds = function (a) {
        if (!(this.part instanceof T)) return a.h(0, 0, 0, 0), a;
        for (var b = this.part, c = Infinity, d = Infinity, e = -Infinity, f = -Infinity, g = b.memberParts; g.next();) {
            var h = g.value;
            if (h.isVisible()) {
                if (h instanceof S) {
                    if (!b.computesBoundsIncludingLinks) continue;
                    if (qj(h)) continue;
                    if (h.fromNode === b || h.toNode === b) continue
                }
                h = h.actualBounds;
                h.left < c && (c = h.left);
                h.top < d && (d = h.top);
                h.right > e && (e = h.right);
                h.bottom > f && (f = h.bottom)
            }
        }
        isFinite(c) && isFinite(d) ? a.h(c, d, e - c, f - d) : (b = b.location,
            a.h(b.x, b.y, 0, 0));
        return a
    };
    ma.Object.defineProperties(xg.prototype, {
        padding: {
            get: function () {
                return this.bb
            },
            set: function (a) {
                "number" === typeof a && (a = new oc(a));
                var b = this.bb;
                b.w(a) || (this.bb = a = a.G(), this.g("padding", b, a))
            }
        }
    });
    xg.className = "Placeholder";

    function S() {
        U.call(this, X.Link);
        this.Qa = 8;
        this.Qe = null;
        this.Re = "";
        this.lf = this.Mn = null;
        this.mf = "";
        this.Vp = null;
        this.Dk = bg;
        this.pn = 0;
        this.rn = bg;
        this.sn = NaN;
        this.Lj = cp;
        this.Ip = .5;
        this.ad = null;
        this.wb = (new E).freeze();
        this.oh = this.jh = null;
        this.El = new N;
        this.ka = new td;
        this.Yn = !0;
        this.I = this.u = this.Kf = this.Tf = null;
        this.l = [];
        this.Vu = new I;
        this.Gr = this.mx = this.lx = null;
        this.qu = NaN;
        this.O = null
    }
    la(S, U);
    S.prototype.cloneProtected = function (a) {
        U.prototype.cloneProtected.call(this, a);
        a.Qa = this.Qa & -113;
        a.Re = this.Re;
        a.Mn = this.Mn;
        a.mf = this.mf;
        a.Vp = this.Vp;
        a.Dk = this.Dk;
        a.pn = this.pn;
        a.rn = this.rn;
        a.sn = this.sn;
        a.Lj = this.Lj;
        a.Ip = this.Ip;
        null !== this.O && (a.O = this.O.copy())
    };
    t = S.prototype;
    t.sf = function (a) {
        U.prototype.sf.call(this, a);
        this.Re = a.Re;
        this.mf = a.mf;
        a.jh = null;
        a.Oa();
        a.Kf = this.Kf;
        var b = a.fromPort;
        null !== b && Po(a.fromNode, b);
        b = a.toPort;
        null !== b && Po(a.toNode, b)
    };
    t.cb = function (a) {
        a.classType === S ? 2 === (a.value & 2) ? this.routing = a : a === qg || a === ag || a === $f ? this.curve = a : a === dp || a === ep || a === fp ? this.adjusting = a : a !== cp && a !== bg && B("Unknown Link enum value for a Link property: " + a) : U.prototype.cb.call(this, a)
    };
    t.Ec = function () {
        null === this.O && (this.O = new dl)
    };
    t.bj = function () {
        var a = this.fromNode;
        if (null !== a) {
            var b = a.findVisibleNode();
            null !== b && (a = b);
            if (rj(a) || sj(a)) return !1
        }
        a = this.toNode;
        return null !== a && (b = a.findVisibleNode(), null !== b && (a = b), rj(a) || sj(a)) ? !1 : !0
    };
    t.gw = function () {
        return !1
    };
    t.hw = function () {};
    t.Wb = function () {
        return !1
    };
    S.prototype.computeAngle = function (a, b, c) {
        return S.computeAngle(b, c)
    };
    S.computeAngle = function (a, b) {
        switch (a) {
            default:
            case bg:
                a = 0;
                break;
            case In:
                a = b;
                break;
            case Nm:
                a = b + 90;
                break;
            case Pm:
                a = b - 90;
                break;
            case gp:
                a = b + 180;
                break;
            case hp:
                a = J.zq(b);
                90 < a && 270 > a && (a -= 180);
                break;
            case Om:
                a = J.zq(b + 90);
                90 < a && 270 > a && (a -= 180);
                break;
            case Qm:
                a = J.zq(b - 90);
                90 < a && 270 > a && (a -= 180);
                break;
            case Rm:
                a = J.zq(b);
                if (45 < a && 135 > a || 225 < a && 315 > a) return 0;
                90 < a && 270 > a && (a -= 180)
        }
        return J.zq(a)
    };

    function Lo(a) {
        var b = a.fromNode,
            c = a.toNode,
            d = null;
        null !== b ? d = null !== c ? b.Ix(c) : b.containingGroup : null !== c ? d = c.containingGroup : d = null;
        b = d;
        c = a.di;
        if (c !== b) {
            null !== c && Go(c, a);
            a.di = b;
            null !== b && Fo(b, a);
            var e = a.containingGroupChanged;
            if (null !== e) {
                var f = !0,
                    g = a.diagram;
                null !== g && (f = g.Z, g.Z = !0);
                e(a, c, b);
                null !== g && (g.Z = f)
            }!a.kd || a.lx !== c && a.mx !== c || a.Oa()
        }
        if (a.isLabeledLink)
            for (a = a.labelNodes; a.next();) a.value.containingGroup = d
    }
    t = S.prototype;
    t.Jh = function () {
        var a = this.containingGroup;
        null !== a && this.fromNode !== a && this.toNode !== a && a.computesBoundsIncludingLinks && U.prototype.Jh.call(this)
    };
    t.pt = function (a) {
        var b = this.fromNode;
        return a === b ? this.toNode : b
    };
    t.Fz = function (a) {
        var b = this.fromPort;
        return a === b ? this.toPort : b
    };

    function To(a, b) {
        null === a.ad && (a.ad = new F);
        a.ad.add(b);
        a.o()
    }
    t.qq = function (a) {
        U.prototype.qq.call(this, a);
        ip(this) && this.tq(this.actualBounds);
        if (!a) {
            a = this.Qe;
            var b = null;
            null !== a && (b = this.fromPort, Ro(a, this, b));
            var c = this.lf;
            if (null !== c) {
                var d = this.toPort;
                c === a && d === b || Ro(c, this, d)
            }
            jp(this)
        }
    };
    t.rq = function (a) {
        U.prototype.rq.call(this, a);
        ip(this) && this.tq(this.actualBounds);
        if (!a) {
            a = this.Qe;
            var b = null;
            null !== a && (b = this.fromPort, So(a, this, b));
            var c = this.lf;
            if (null !== c) {
                var d = this.toPort;
                c === a && d === b || So(c, this, d)
            }
            kp(this)
        }
    };
    t.dk = function () {
        this.kd = !0;
        if (null !== this.ad) {
            var a = this.diagram;
            if (null !== a)
                for (var b = this.ad.copy().iterator; b.next();) a.remove(b.value)
        }
        null !== this.data && (a = this.diagram, null !== a && a.partManager.removeDataForLink(this))
    };
    S.prototype.updateRelationshipsFromData = function () {
        if (null !== this.data) {
            var a = this.diagram;
            null !== a && a.partManager.updateRelationshipsFromData(this)
        }
    };
    S.prototype.move = function (a, b) {
        var c = b ? this.location : this.position,
            d = c.x;
        isNaN(d) && (d = 0);
        var e = c.y;
        isNaN(e) && (e = 0);
        d = a.x - d;
        e = a.y - e;
        !0 === b ? U.prototype.move.call(this, a, !1) : (a = I.allocAt(c.x + d, c.y + e), U.prototype.move.call(this, a, !1), I.free(a));
        qf(this, d, e);
        for (a = this.labelNodes; a.next();) b = a.value, c = b.position, b.moveTo(c.x + d, c.y + e)
    };
    S.prototype.canRelinkFrom = function () {
        if (!this.relinkableFrom) return !1;
        var a = this.layer;
        if (null === a) return !0;
        if (!a.allowRelink) return !1;
        a = a.diagram;
        return null === a || a.allowRelink ? !0 : !1
    };
    S.prototype.canRelinkTo = function () {
        if (!this.relinkableTo) return !1;
        var a = this.layer;
        if (null === a) return !0;
        if (!a.allowRelink) return !1;
        a = a.diagram;
        return null === a || a.allowRelink ? !0 : !1
    };
    S.prototype.computeMidPoint = function (a) {
        var b = this.pointsCount;
        if (0 === b) return a.assign(Jb), a;
        if (1 === b) return a.assign(this.i(0)), a;
        if (2 === b) {
            var c = this.i(0),
                d = this.i(1);
            a.h((c.x + d.x) / 2, (c.y + d.y) / 2);
            return a
        }
        if (this.isOrthogonal && (15 <= this.computeCorner() || this.computeCurve() === qg)) return this.ka.yv(.5, a), a.add(this.i(0)), c = this.ka.figures.first(), a.offset(-c.startX, -c.startY), a;
        if (this.computeCurve() === qg) {
            if (3 === b) return this.i(1);
            d = (b - 1) / 3 | 0;
            c = 3 * (d / 2 | 0);
            if (1 === d % 2) {
                d = this.i(c);
                var e = this.i(c + 1),
                    f = this.i(c + 2);
                c = this.i(c + 3);
                J.Qy(d.x, d.y, e.x, e.y, f.x, f.y, c.x, c.y, a)
            } else a.assign(this.i(c));
            return a
        }
        var g = this.flattenedLengths;
        c = this.flattenedTotalLength;
        for (e = f = d = 0; d < c / 2 && f < b;) {
            e = g[f];
            if (d + e > c / 2) break;
            d += e;
            f++
        }
        b = this.i(f);
        f = this.i(f + 1);
        1 > Math.abs(b.x - f.x) ? b.y > f.y ? a.h(b.x, b.y - (c / 2 - d)) : a.h(b.x, b.y + (c / 2 - d)) : 1 > Math.abs(b.y - f.y) ? b.x > f.x ? a.h(b.x - (c / 2 - d), b.y) : a.h(b.x + (c / 2 - d), b.y) : (c = (c / 2 - d) / e, a.h(b.x + c * (f.x - b.x), b.y + c * (f.y - b.y)));
        return a
    };
    S.prototype.computeMidAngle = function () {
        var a = this.pointsCount;
        if (2 > a) return NaN;
        if (2 === a) return this.i(0).Ta(this.i(1));
        if (this.isOrthogonal && (15 <= this.computeCorner() || this.computeCurve() === qg)) return this.ka.Ox(.5);
        if (this.computeCurve() === qg && 4 <= a) {
            var b = (a - 1) / 3 | 0,
                c = 3 * (b / 2 | 0);
            if (1 === b % 2) {
                c = Math.floor(c);
                a = this.i(c);
                b = this.i(c + 1);
                var d = this.i(c + 2);
                c = this.i(c + 3);
                return J.Py(a.x, a.y, b.x, b.y, d.x, d.y, c.x, c.y)
            }
            if (0 < c && c + 1 < a) return this.i(c - 1).Ta(this.i(c + 1))
        }
        b = this.flattenedLengths;
        d = this.flattenedTotalLength;
        var e = 0;
        c = 0;
        for (var f; e < d / 2 && c < a;) {
            f = b[c];
            if (e + f > d / 2) break;
            e += f;
            c++
        }
        b = this.i(c);
        d = this.i(c + 1);
        if (1 > Math.abs(b.x - d.x) && 1 > Math.abs(b.y - d.y)) {
            if (0 < c && c + 2 < a) return this.i(c - 1).Ta(this.i(c + 2))
        } else {
            if (1 > Math.abs(b.x - d.x)) return b.y > d.y ? 270 : 90;
            if (1 > Math.abs(b.y - d.y)) return b.x > d.x ? 180 : 0
        }
        return b.Ta(d)
    };
    t = S.prototype;
    t.i = function (a) {
        return this.wb.j[a]
    };
    t.hd = function (a, b) {
        this.wb.gd(a, b)
    };
    t.K = function (a, b, c) {
        this.wb.gd(a, new I(b, c))
    };
    t.Rz = function (a, b) {
        this.wb.Kb(a, b)
    };
    t.m = function (a, b, c) {
        this.wb.Kb(a, new I(b, c))
    };
    t.xe = function (a) {
        this.wb.add(a)
    };
    t.qf = function (a, b) {
        this.wb.add(new I(a, b))
    };
    t.Xv = function (a) {
        this.wb.lb(a)
    };
    t.Zj = function () {
        this.wb.clear()
    };

    function qf(a, b, c) {
        if (0 !== b || 0 !== c) {
            for (var d = a.kd, e = new E, f = a.wb.iterator; f.next();) {
                var g = f.value;
                e.add((new I(g.x + b, g.y + c)).freeze())
            }
            e.freeze();
            f = a.wb;
            a.wb = e;
            g = a.diagram;
            isNaN(b) || isNaN(c) || null !== g && g.animationManager.qc ? a.o() : (a.cg.h(a.cg.x + b, a.cg.y + c), a.ma.h(a.ma.x + b, a.ma.y + c), Cl(a));
            d && lp(a);
            null !== g && g.animationManager.qc && (a.oh = e);
            a.g("points", f, e)
        }
    }
    t.Nh = function () {
        null === this.jh && (this.jh = this.wb, this.wb = this.wb.copy())
    };
    t.rf = function () {
        if (null !== this.jh) {
            for (var a = this.jh, b = this.wb, c = Infinity, d = Infinity, e = a.j, f = e.length, g = 0; g < f; g++) {
                var h = e[g];
                c = Math.min(h.x, c);
                d = Math.min(h.y, d)
            }
            h = g = Infinity;
            for (var k = b.j, l = k.length, m = 0; m < l; m++) {
                var n = k[m];
                g = Math.min(n.x, g);
                h = Math.min(n.y, h);
                n.freeze()
            }
            b.freeze();
            if (l === f)
                for (f = 0; f < l; f++) {
                    if (m = e[f], n = k[f], m.x - c !== n.x - g || m.y - d !== n.y - h) {
                        this.o();
                        this.cc();
                        break
                    }
                } else this.o(), this.cc();
            this.jh = null;
            c = this.diagram;
            null !== c && c.animationManager.qc && (this.oh = b);
            lp(this);
            this.g("points",
                a, b)
        }
    };
    t.ey = function () {
        null !== this.jh && (this.wb = this.jh, this.jh = null)
    };

    function lp(a) {
        0 === a.wb.count ? a.kd = !1 : (a.kd = !0, a.Gr = null, a.qu = NaN, a.defaultFromPoint = a.i(0), a.defaultToPoint = a.i(a.pointsCount - 1), mp(a, !1))
    }
    t.Oa = function () {
        if (!this.suspendsRouting) {
            var a = this.diagram;
            if (a) {
                if (a.yt.contains(this) || a.undoManager.isUndoingRedoing) return;
                a = a.animationManager;
                if (a.isTicking && !a.isAnimating) return;
                null !== this.oh && !a.isTicking && a.isAnimating && (this.oh = null)
            }
            a = this.path;
            null !== a && (this.kd = !1, this.o(), a.o())
        }
    };
    t.hj = function () {
        if (!this.kd && !this.jv) {
            var a = !0;
            try {
                this.jv = !0, this.Nh(), a = this.computePoints()
            } finally {
                this.jv = !1, a ? this.rf() : this.ey()
            }
        }
    };
    S.prototype.computePoints = function () {
        var a = this.diagram;
        if (null === a) return !1;
        var b = this.fromNode,
            c = null;
        null === b ? (a.mh || (a.Fl = new Lf, a.Fl.desiredSize = Kb, a.Fl.strokeWidth = 0, a.mh = new W, a.mh.add(a.Fl), a.mh.yb()), this.defaultFromPoint && (a.mh.position = a.mh.location = this.defaultFromPoint, a.mh.yb(), b = a.mh, c = a.Fl)) : c = this.fromPort;
        if (null !== c && !b.isVisible()) {
            var d = b.findVisibleNode();
            null !== d && d !== b ? (b = d, c = d.port) : b = d
        }
        this.lx = b;
        if (null === b || !b.location.v()) return !1;
        for (; !(null === c || c.actualBounds.v() && c.zf());) c =
            c.panel;
        if (null === c) return !1;
        var e = this.toNode,
            f = null;
        null === e ? (a.nh || (a.Gl = new Lf, a.Gl.desiredSize = Kb, a.Gl.strokeWidth = 0, a.nh = new W, a.nh.add(a.Gl), a.nh.yb()), this.defaultToPoint && (a.nh.position = a.nh.location = this.defaultToPoint, a.nh.yb(), e = a.nh, f = a.Gl)) : f = this.toPort;
        null === f || e.isVisible() || (a = e.findVisibleNode(), null !== a && a !== e ? (e = a, f = a.port) : e = a);
        this.mx = e;
        if (null === e || !e.location.v()) return !1;
        for (; !(null === f || f.actualBounds.v() && f.zf());) f = f.panel;
        if (null === f) return !1;
        var g = this.pointsCount;
        d = this.computeSpot(!0, c);
        a = this.computeSpot(!1, f);
        var h = np(d),
            k = np(a),
            l = c === f && null !== c,
            m = this.isOrthogonal,
            n = this.curve === qg;
        this.Tf = l && !m ? n = !0 : !1;
        var p = this.computeAdjusting() === bg || l;
        if (!m && !l && h && k) {
            if (h = !1, !p && 3 <= g && (p = this.getLinkPoint(b, c, d, !0, !1, e, f), k = this.getLinkPoint(e, f, a, !1, !1, b, c), h = this.adjustPoints(0, p, g - 1, k)) && (p = this.getLinkPoint(b, c, d, !0, !1, e, f), k = this.getLinkPoint(e, f, a, !1, !1, b, c), this.adjustPoints(0, p, g - 1, k)), !h)
                if (this.Zj(), n) {
                    g = this.getLinkPoint(b, c, d, !0, !1, e, f);
                    p = this.getLinkPoint(e,
                        f, a, !1, !1, b, c);
                    h = p.x - g.x;
                    k = p.y - g.y;
                    l = this.computeCurviness();
                    n = m = 0;
                    var r = g.x + h / 3,
                        q = g.y + k / 3,
                        u = r,
                        v = q;
                    J.A(k, 0) ? v = 0 < h ? v - l : v + l : (m = -h / k, n = Math.sqrt(l * l / (m * m + 1)), 0 > l && (n = -n), u = (0 > k ? -1 : 1) * n + r, v = m * (u - r) + q);
                    r = g.x + 2 * h / 3;
                    q = g.y + 2 * k / 3;
                    var w = r,
                        y = q;
                    J.A(k, 0) ? y = 0 < h ? y - l : y + l : (w = (0 > k ? -1 : 1) * n + r, y = m * (w - r) + q);
                    this.Zj();
                    this.xe(g);
                    this.qf(u, v);
                    this.qf(w, y);
                    this.xe(p);
                    this.hd(0, this.getLinkPoint(b, c, d, !0, !1, e, f));
                    this.hd(3, this.getLinkPoint(e, f, a, !1, !1, b, c))
                } else d = this.getLinkPoint(b, c, d, !0, !1, e, f), a = this.getLinkPoint(e,
                    f, a, !1, !1, b, c), this.hasCurviness() ? (p = a.x - d.x, e = a.y - d.y, f = this.computeCurviness(), b = d.x + p / 2, c = d.y + e / 2, g = b, h = c, J.A(e, 0) ? h = 0 < p ? h - f : h + f : (p = -p / e, g = Math.sqrt(f * f / (p * p + 1)), 0 > f && (g = -g), g = (0 > e ? -1 : 1) * g + b, h = p * (g - b) + c), this.xe(d), this.qf(g, h)) : this.xe(d), this.xe(a)
        } else {
            n = this.isAvoiding;
            p && (m && n || l) && this.Zj();
            var z = l ? this.computeCurviness() : 0;
            n = this.getLinkPoint(b, c, d, !0, m, e, f);
            r = u = q = 0;
            if (m || !h || l) v = this.computeEndSegmentLength(b, c, d, !0), r = this.getLinkDirection(b, c, n, d, !0, m, e, f), l && (h || d.w(a) || !m && 1 === d.x +
                a.x && 1 === d.y + a.y) && (r -= m ? 90 : 30, 0 > z && (r -= 180)), 0 > r ? r += 360 : 360 <= r && (r -= 360), l && (v += Math.abs(z) * (m ? 1 : 2)), 0 === r ? q = v : 90 === r ? u = v : 180 === r ? q = -v : 270 === r ? u = -v : (q = v * Math.cos(r * Math.PI / 180), u = v * Math.sin(r * Math.PI / 180)), d.jc() && l && (v = c.ga(Ac, I.alloc()), w = I.allocAt(v.x + 1E3 * q, v.y + 1E3 * u), this.getLinkPointFromPoint(b, c, v, w, !0, n), I.free(v), I.free(w));
            v = this.getLinkPoint(e, f, a, !1, m, b, c);
            var A = y = w = 0;
            if (m || !k || l) {
                var C = this.computeEndSegmentLength(e, f, a, !1);
                A = this.getLinkDirection(e, f, v, a, !1, m, b, c);
                l && (k || d.w(a) || !m &&
                    1 === d.x + a.x && 1 === d.y + a.y) && (A += m ? 0 : 30, 0 > z && (A += 180));
                0 > A ? A += 360 : 360 <= A && (A -= 360);
                l && (C += Math.abs(z) * (m ? 1 : 2));
                0 === A ? w = C : 90 === A ? y = C : 180 === A ? w = -C : 270 === A ? y = -C : (w = C * Math.cos(A * Math.PI / 180), y = C * Math.sin(A * Math.PI / 180));
                a.jc() && l && (a = f.ga(Ac, I.alloc()), d = I.allocAt(a.x + 1E3 * w, a.y + 1E3 * y), this.getLinkPointFromPoint(e, f, a, d, !1, v), I.free(a), I.free(d))
            }
            a = n;
            if (m || !h || l) a = new I(n.x + q, n.y + u);
            d = v;
            if (m || !k || l) d = new I(v.x + w, v.y + y);
            !p && !m && h && 3 < g && this.adjustPoints(0, n, g - 2, d) ? this.hd(g - 1, v) : !p && !m && k && 3 < g && this.adjustPoints(1,
                a, g - 1, v) ? this.hd(0, n) : !p && (m ? 6 <= g : 4 < g) && this.adjustPoints(1, a, g - 2, d) ? (this.hd(0, n), this.hd(g - 1, v)) : (this.Zj(), this.xe(n), (m || !h || l) && this.xe(a), m && this.addOrthoPoints(a, r, d, A, b, e), (m || !k || l) && this.xe(d), this.xe(v))
        }
        return !0
    };

    function op(a, b) {
        Math.abs(b.x - a.x) > Math.abs(b.y - a.y) ? (b.x >= a.x ? b.x = a.x + 9E9 : b.x = a.x - 9E9, b.y = a.y) : (b.y >= a.y ? b.y = a.y + 9E9 : b.y = a.y - 9E9, b.x = a.x);
        return b
    }
    S.prototype.getLinkPointFromPoint = function (a, b, c, d, e, f) {
        void 0 === f && (f = new I);
        if (null === a || null === b) return f.assign(c), f;
        a.isVisible() || (e = a.findVisibleNode(), null !== e && e !== a && (b = e.port));
        a = null;
        e = b.panel;
        null === e || e.$d() || (e = e.panel);
        if (null === e) {
            e = d.x;
            d = d.y;
            var g = c.x;
            c = c.y
        } else {
            a = e.ud;
            e = 1 / (a.m11 * a.m22 - a.m12 * a.m21);
            g = a.m22 * e;
            var h = -a.m12 * e,
                k = -a.m21 * e,
                l = a.m11 * e,
                m = e * (a.m21 * a.dy - a.m22 * a.dx),
                n = e * (a.m12 * a.dx - a.m11 * a.dy);
            e = d.x * g + d.y * k + m;
            d = d.x * h + d.y * l + n;
            g = c.x * g + c.y * k + m;
            c = c.x * h + c.y * l + n
        }
        b.hk(e, d, g, c, f);
        null !==
            a && f.transform(a);
        return f
    };

    function pp(a, b) {
        var c = b.ep;
        null === c && (c = new qp, c.port = b, c.node = b.part, b.ep = c);
        return rp(c, a)
    }
    S.prototype.getLinkPoint = function (a, b, c, d, e, f, g, h) {
        void 0 === h && (h = new I);
        if (c.eb() && !np(c)) return b.ga(c, h), h;
        if (c.yf()) {
            var k = pp(this, b);
            if (null !== k) {
                h.assign(k.wq);
                if (e && this.routing === sp) {
                    var l = pp(this, g);
                    if (null !== l && k.em < l.em) {
                        k = I.alloc();
                        l = I.alloc();
                        var m = new N(b.ga(vc, k), b.ga(Gc, l)),
                            n = this.computeSpot(!d, g);
                        a = this.getLinkPoint(f, g, n, !d, e, a, b, l);
                        (c.wf(Ic) || c.wf(Jc)) && a.y >= m.y && a.y <= m.y + m.height ? h.y = a.y : (c.wf(Hc) || c.wf(Kc)) && a.x >= m.x && a.x <= m.x + m.width && (h.x = a.x);
                        I.free(k);
                        I.free(l)
                    }
                }
                return h
            }
        }
        c =
            b.ga(.5 === c.x && .5 === c.y ? c : Ac, I.alloc());
        this.pointsCount > (e ? 6 : 2) ? (g = d ? this.i(1) : this.i(this.pointsCount - 2), e && (g = op(c, g.copy()))) : (k = this.computeSpot(!d, g), f = I.alloc(), g = g.ga(.5 === k.x && .5 === k.y ? k : Ac, f), e && (g = op(c, g)), I.free(f));
        this.getLinkPointFromPoint(a, b, c, g, d, h);
        I.free(c);
        return h
    };
    S.prototype.getLinkDirection = function (a, b, c, d, e, f, g, h) {
        a: if (d.eb()) var k = d.x > d.y ? d.x > 1 - d.y ? 0 : d.x < 1 - d.y ? 270 : 315 : d.x < d.y ? d.x > 1 - d.y ? 90 : d.x < 1 - d.y ? 180 : 135 : .5 > d.x ? 225 : .5 < d.x ? 45 : 0;
            else {
                if (d.yf() && (k = pp(this, b), null !== k)) switch (k.yc) {
                    case 1:
                        k = 270;
                        break a;
                    case 2:
                        k = 180;
                        break a;
                    default:
                    case 4:
                        k = 0;
                        break a;
                    case 8:
                        k = 90;
                        break a
                }
                k = b.ga(Ac, I.alloc());
                this.pointsCount > (f ? 6 : 2) ? (h = e ? this.i(1) : this.i(this.pointsCount - 2), h = f ? op(k, h.copy()) : c) : (c = I.alloc(), h = h.ga(Ac, c), I.free(c));
                c = Math.abs(h.x - k.x) > Math.abs(h.y - k.y) ? h.x >=
                    k.x ? 0 : 180 : h.y >= k.y ? 90 : 270;
                I.free(k);
                k = c
            }d.jc() && g.Wd(a) && (k += 180, 360 <= k && (k -= 360));
        if (np(d)) return k;a = b.Xi();
        if (0 === a) return k;45 <= a && 135 > a ? k += 90 : 135 <= a && 225 > a ? k += 180 : 225 <= a && 315 > a && (k += 270);360 <= k && (k -= 360);
        return k
    };
    S.prototype.computeEndSegmentLength = function (a, b, c, d) {
        if (null !== b && c.yf() && (a = pp(this, b), null !== a)) return a.ov;
        a = d ? this.fromEndSegmentLength : this.toEndSegmentLength;
        null !== b && isNaN(a) && (a = d ? b.fromEndSegmentLength : b.toEndSegmentLength);
        isNaN(a) && (a = 10);
        return a
    };
    S.prototype.computeSpot = function (a, b) {
        void 0 === b && (b = null);
        a ? (a = b ? b : this.fromPort, null === a ? a = Ac : (b = this.fromSpot, b.Mb() && (b = a.fromSpot), a = b === Zc ? uc : b)) : (a = b ? b : this.toPort, null === a ? a = Ac : (b = this.toSpot, b.Mb() && (b = a.toSpot), a = b === Zc ? uc : b));
        return a
    };

    function np(a) {
        return a === uc || .5 === a.x && .5 === a.y
    }
    S.prototype.computeOtherPoint = function (a, b) {
        if (this.computeAdjusting() !== bg && 4 < this.pointsCount) return this.computeMidPoint(new I);
        a = b.ga(Ac);
        b = b.ep;
        b = null !== b ? rp(b, this) : null;
        null !== b && (a = b.wq);
        return a
    };
    S.prototype.computeShortLength = function (a) {
        if (a) {
            a = this.fromShortLength;
            if (isNaN(a)) {
                var b = this.fromPort;
                null !== b && (a = b.fromShortLength)
            }
            return isNaN(a) ? 0 : a
        }
        a = this.toShortLength;
        isNaN(a) && (b = this.toPort, null !== b && (a = b.toShortLength));
        return isNaN(a) ? 0 : a
    };
    S.prototype.tf = function (a, b, c, d, e, f) {
        if (!1 === this.pickable) return !1;
        void 0 === b && (b = null);
        void 0 === c && (c = null);
        var g = f;
        void 0 === f && (g = rd.alloc(), g.reset());
        g.multiply(this.transform);
        if (this.Gh(a, g)) return dn(this, b, c, e), void 0 === f && rd.free(g), !0;
        if (this.Gc(a, g)) {
            var h = !1;
            if (!this.isAtomic)
                for (var k = this.W.j, l = k.length; l--;) {
                    var m = k[l];
                    if (m.visible || m === this.locationObject) {
                        var n = m.actualBounds,
                            p = this.naturalBounds;
                        if (!(n.x > p.width || n.y > p.height || 0 > n.x + n.width || 0 > n.y + n.height)) {
                            n = rd.alloc();
                            n.set(g);
                            if (m instanceof X) h = m.tf(a, b, c, d, e, n);
                            else if (this.path === m) {
                                if (m instanceof Lf)
                                    if (h = a, p = d, !1 === m.pickable) h = !1;
                                    else if (n.multiply(m.transform), p) b: {
                                    var r = h,
                                        q = n;
                                    if (m.Gh(r, q)) h = !0;
                                    else {
                                        if (void 0 === q && (q = m.transform, r.ze(m.actualBounds))) {
                                            h = !0;
                                            break b
                                        }
                                        h = r.left;
                                        p = r.right;
                                        var u = r.top;
                                        r = r.bottom;
                                        var v = I.alloc(),
                                            w = I.alloc(),
                                            y = I.alloc(),
                                            z = rd.alloc();
                                        z.set(q);
                                        z.Lv(m.transform);
                                        z.tt();
                                        w.x = p;
                                        w.y = u;
                                        w.transform(z);
                                        v.x = h;
                                        v.y = u;
                                        v.transform(z);
                                        q = !1;
                                        Gn(m, v, w, y) ? q = !0 : (v.x = p, v.y = r, v.transform(z), Gn(m, v, w, y) ? q = !0 : (w.x =
                                            h, w.y = r, w.transform(z), Gn(m, v, w, y) ? q = !0 : (v.x = h, v.y = u, v.transform(z), Gn(m, v, w, y) && (q = !0))));
                                        rd.free(z);
                                        I.free(v);
                                        I.free(w);
                                        I.free(y);
                                        h = q
                                    }
                                }
                                else h = m.Gh(h, n)
                            } else h = jl(m, a, d, n);
                            h && (p = m, null !== b && (p = b(m)), p && (null === c || c(p)) && e.add(p));
                            rd.free(n)
                        }
                    }
                }
            void 0 === f && rd.free(g);
            return h || null !== this.background || null !== this.areaBackground
        }
        void 0 === f && rd.free(g);
        return !1
    };
    S.prototype.computeCurve = function () {
        if (null === this.Tf) {
            var a = this.fromPort,
                b = this.isOrthogonal;
            this.Tf = null !== a && a === this.toPort && !b
        }
        return this.Tf ? qg : this.curve
    };
    S.prototype.computeCorner = function () {
        if (this.curve === qg) return 0;
        var a = this.corner;
        if (isNaN(a) || 0 > a) a = 10;
        return a
    };
    S.prototype.findMidLabel = function () {
        for (var a = this.path, b = this.W.j, c = b.length, d = 0; d < c; d++) {
            var e = b[d];
            if (e !== a && !e.isPanelMain && (-Infinity === e.segmentIndex || isNaN(e.segmentIndex))) return e
        }
        for (a = this.labelNodes; a.next();)
            if (b = a.value, -Infinity === b.segmentIndex || isNaN(b.segmentIndex)) return b;
        return null
    };
    S.prototype.computeSpacing = function () {
        if (!this.isVisible()) return 0;
        var a = Math.max(14, this.computeThickness());
        var b = this.fromPort,
            c = this.toPort;
        if (null !== b && null !== c) {
            var d = this.findMidLabel();
            if (null !== d) {
                var e = d.naturalBounds,
                    f = d.margin,
                    g = isNaN(e.width) ? 30 : e.width * d.scale + f.left + f.right;
                e = isNaN(e.height) ? 14 : e.height * d.scale + f.top + f.bottom;
                d = d.segmentOrientation;
                d === In || d === hp || d === gp ? a = Math.max(a, e) : d === Pm || d === Qm || d === Nm || d === Om ? a = Math.max(a, g) : (b = b.ga(Ac).Ta(c.ga(Ac)) / 180 * Math.PI, a = Math.max(a,
                    Math.abs(Math.sin(b) * g) + Math.abs(Math.cos(b) * e) + 1));
                this.curve === qg && (a *= 1.333)
            }
        }
        return a
    };
    S.prototype.arrangeBundledLinks = function (a, b) {
        if (b)
            for (b = 0; b < a.length; b++) {
                var c = a[b];
                c.computeAdjusting() === bg && c.Oa()
            }
    };
    S.prototype.computeCurviness = function () {
        var a = this.curviness;
        if (isNaN(a)) {
            a = 16;
            var b = this.Kf;
            if (null !== b) {
                for (var c = Fa(), d = 0, e = b.links, f = 0; f < e.length; f++) {
                    var g = e[f].computeSpacing();
                    c.push(g);
                    d += g
                }
                d = -d / 2;
                for (f = 0; f < e.length; f++) {
                    if (e[f] === this) {
                        a = d + c[f] / 2;
                        break
                    }
                    d += c[f]
                }
                b.Bt === this.fromNode && (a = -a);
                Ha(c)
            }
        }
        return a
    };
    S.prototype.computeThickness = function () {
        if (!this.isVisible()) return 0;
        var a = this.path;
        return null !== a ? Math.max(a.strokeWidth, 1) : 1
    };
    S.prototype.hasCurviness = function () {
        return !isNaN(this.curviness) || null !== this.Kf
    };
    S.prototype.adjustPoints = function (a, b, c, d) {
        var e = this.computeAdjusting();
        if (this.isOrthogonal) {
            if (e === ep) return !1;
            e === fp && (e = dp)
        }
        switch (e) {
            case ep:
                var f = this.i(a),
                    g = this.i(c);
                if (!f.Ma(b) || !g.Ma(d)) {
                    e = f.x;
                    f = f.y;
                    var h = g.x - e,
                        k = g.y - f,
                        l = Math.sqrt(h * h + k * k);
                    if (!J.$(l, 0)) {
                        if (J.$(h, 0)) var m = 0 > k ? -Math.PI / 2 : Math.PI / 2;
                        else m = Math.atan(k / Math.abs(h)), 0 > h && (m = Math.PI - m);
                        g = b.x;
                        var n = b.y;
                        h = d.x - g;
                        var p = d.y - n;
                        k = Math.sqrt(h * h + p * p);
                        J.$(h, 0) ? p = 0 > p ? -Math.PI / 2 : Math.PI / 2 : (p = Math.atan(p / Math.abs(h)), 0 > h && (p = Math.PI - p));
                        l =
                            k / l;
                        m = p - m;
                        this.hd(a, b);
                        for (a += 1; a < c; a++) b = this.i(a), h = b.x - e, k = b.y - f, b = Math.sqrt(h * h + k * k), J.$(b, 0) || (J.$(h, 0) ? k = 0 > k ? -Math.PI / 2 : Math.PI / 2 : (k = Math.atan(k / Math.abs(h)), 0 > h && (k = Math.PI - k)), h = k + m, b *= l, this.K(a, g + b * Math.cos(h), n + b * Math.sin(h)));
                        this.hd(c, d)
                    }
                }
                return !0;
            case fp:
                f = this.i(a);
                n = this.i(c);
                if (!f.Ma(b) || !n.Ma(d)) {
                    e = f.x;
                    f = f.y;
                    g = n.x;
                    n = n.y;
                    l = (g - e) * (g - e) + (n - f) * (n - f);
                    h = b.x;
                    m = b.y;
                    k = d.x;
                    p = d.y;
                    var r = 1;
                    if (0 !== k - h) {
                        var q = (p - m) / (k - h);
                        r = Math.sqrt(1 + 1 / (q * q))
                    } else q = 9E9;
                    this.hd(a, b);
                    for (a += 1; a < c; a++) {
                        b = this.i(a);
                        var u = b.x,
                            v = b.y,
                            w = .5;
                        0 !== l && (w = ((e - u) * (e - g) + (f - v) * (f - n)) / l);
                        var y = e + w * (g - e),
                            z = f + w * (n - f);
                        b = Math.sqrt((u - y) * (u - y) + (v - z) * (v - z));
                        v < q * (u - y) + z && (b = -b);
                        0 < q && (b = -b);
                        u = h + w * (k - h);
                        w = m + w * (p - m);
                        0 !== q ? (b = u + b / r, this.K(a, b, w - (b - u) / q)) : this.K(a, u, w + b)
                    }
                    this.hd(c, d)
                }
                return !0;
            case dp:
                a: {
                    if (this.isOrthogonal && (e = this.i(a), f = this.i(a + 1), g = this.i(a + 2), h = f.x, m = f.y, n = h, l = m, J.A(e.y, f.y) ? J.A(f.x, g.x) ? m = b.y : J.A(f.y, g.y) && (h = b.x) : J.A(e.x, f.x) && (J.A(f.y, g.y) ? h = b.x : J.A(f.x, g.x) && (m = b.y)), this.K(a + 1, h, m), e = this.i(c), f = this.i(c -
                            1), g = this.i(c - 2), h = f.x, m = f.y, k = h, p = m, J.A(e.y, f.y) ? J.A(f.x, g.x) ? m = d.y : J.A(f.y, g.y) && (h = d.x) : J.A(e.x, f.x) && (J.A(f.y, g.y) ? h = d.x : J.A(f.x, g.x) && (m = d.y)), this.K(c - 1, h, m), Oj(this))) {
                        this.K(a + 1, n, l);
                        this.K(c - 1, k, p);
                        c = !1;
                        break a
                    }
                    this.hd(a, b);this.hd(c, d);c = !0
                }
                return c;
            default:
                return !1
        }
    };
    S.prototype.addOrthoPoints = function (a, b, c, d, e, f) {
        b = -45 <= b && 45 > b ? 0 : 45 <= b && 135 > b ? 90 : 135 <= b && 225 > b ? 180 : 270;
        d = -45 <= d && 45 > d ? 0 : 45 <= d && 135 > d ? 90 : 135 <= d && 225 > d ? 180 : 270;
        var g = e.actualBounds.copy(),
            h = f.actualBounds.copy();
        if (g.v() && h.v()) {
            g.Vc(8, 8);
            h.Vc(8, 8);
            g.He(a);
            h.He(c);
            if (0 === b)
                if (c.x > a.x || 270 === d && c.y < a.y && h.right > a.x || 90 === d && c.y > a.y && h.right > a.x) {
                    var k = new I(c.x, a.y);
                    var l = new I(c.x, (a.y + c.y) / 2);
                    180 === d ? (k.x = this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, !1), l.x = k.x, l.y = c.y) : 270 === d && c.y < a.y || 90 === d &&
                        c.y > a.y ? (k.x = a.x < h.left ? this.computeMidOrthoPosition(a.x, a.y, h.left, c.y, !1) : a.x < h.right && (270 === d && a.y < h.top || 90 === d && a.y > h.bottom) ? this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, !1) : h.right, l.x = k.x, l.y = c.y) : 0 === d && a.x < h.left && a.y > h.top && a.y < h.bottom && (k.x = a.x, k.y = a.y < c.y ? Math.min(c.y, h.top) : Math.max(c.y, h.bottom), l.y = k.y)
                } else {
                    k = new I(a.x, c.y);
                    l = new I((a.x + c.x) / 2, c.y);
                    if (180 === d || 90 === d && c.y < g.top || 270 === d && c.y > g.bottom) 180 === d && (h.aa(a) || g.aa(c)) ? k.y = this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, !0) :
                        c.y < a.y && (180 === d || 90 === d) ? k.y = this.computeMidOrthoPosition(a.x, g.top, c.x, Math.max(c.y, h.bottom), !0) : c.y > a.y && (180 === d || 270 === d) && (k.y = this.computeMidOrthoPosition(a.x, g.bottom, c.x, Math.min(c.y, h.top), !0)), l.x = c.x, l.y = k.y;
                    if (k.y > g.top && k.y < g.bottom)
                        if (c.x >= g.left && c.x <= a.x || a.x <= h.right && a.x >= c.x) {
                            if (90 === d || 270 === d) k = new I(Math.max((a.x + c.x) / 2, a.x), a.y), l = new I(k.x, c.y)
                        } else k.y = 270 === d || (0 === d || 180 === d) && c.y < a.y ? Math.min(c.y, 0 === d ? g.top : Math.min(g.top, h.top)) : Math.max(c.y, 0 === d ? g.bottom : Math.max(g.bottom,
                            h.bottom)), l.x = c.x, l.y = k.y
                }
            else if (180 === b)
                if (c.x < a.x || 270 === d && c.y < a.y && h.left < a.x || 90 === d && c.y > a.y && h.left < a.x) k = new I(c.x, a.y), l = new I(c.x, (a.y + c.y) / 2), 0 === d ? (k.x = this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, !1), l.x = k.x, l.y = c.y) : 270 === d && c.y < a.y || 90 === d && c.y > a.y ? (k.x = a.x > h.right ? this.computeMidOrthoPosition(a.x, a.y, h.right, c.y, !1) : a.x > h.left && (270 === d && a.y < h.top || 90 === d && a.y > h.bottom) ? this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, !1) : h.left, l.x = k.x, l.y = c.y) : 180 === d && a.x > h.right && a.y > h.top && a.y <
                    h.bottom && (k.x = a.x, k.y = a.y < c.y ? Math.min(c.y, h.top) : Math.max(c.y, h.bottom), l.y = k.y);
                else {
                    k = new I(a.x, c.y);
                    l = new I((a.x + c.x) / 2, c.y);
                    if (0 === d || 90 === d && c.y < g.top || 270 === d && c.y > g.bottom) 0 === d && (h.aa(a) || g.aa(c)) ? k.y = this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, !0) : c.y < a.y && (0 === d || 90 === d) ? k.y = this.computeMidOrthoPosition(a.x, g.top, c.x, Math.max(c.y, h.bottom), !0) : c.y > a.y && (0 === d || 270 === d) && (k.y = this.computeMidOrthoPosition(a.x, g.bottom, c.x, Math.min(c.y, h.top), !0)), l.x = c.x, l.y = k.y;
                    if (k.y > g.top && k.y < g.bottom)
                        if (c.x <=
                            g.right && c.x >= a.x || a.x >= h.left && a.x <= c.x) {
                            if (90 === d || 270 === d) k = new I(Math.min((a.x + c.x) / 2, a.x), a.y), l = new I(k.x, c.y)
                        } else k.y = 270 === d || (0 === d || 180 === d) && c.y < a.y ? Math.min(c.y, 180 === d ? g.top : Math.min(g.top, h.top)) : Math.max(c.y, 180 === d ? g.bottom : Math.max(g.bottom, h.bottom)), l.x = c.x, l.y = k.y
                }
            else if (90 === b)
                if (c.y > a.y || 180 === d && c.x < a.x && h.bottom > a.y || 0 === d && c.x > a.x && h.bottom > a.y) k = new I(a.x, c.y), l = new I((a.x + c.x) / 2, c.y), 270 === d ? (k.y = this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, !0), l.x = c.x, l.y = k.y) : 180 ===
                    d && c.x < a.x || 0 === d && c.x > a.x ? (k.y = a.y < h.top ? this.computeMidOrthoPosition(a.x, a.y, c.x, h.top, !0) : a.y < h.bottom && (180 === d && a.x < h.left || 0 === d && a.x > h.right) ? this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, !0) : h.bottom, l.x = c.x, l.y = k.y) : 90 === d && a.y < h.top && a.x > h.left && a.x < h.right && (k.x = a.x < c.x ? Math.min(c.x, h.left) : Math.max(c.x, h.right), k.y = a.y, l.x = k.x);
                else {
                    k = new I(c.x, a.y);
                    l = new I(c.x, (a.y + c.y) / 2);
                    if (270 === d || 0 === d && c.x < g.left || 180 === d && c.x > g.right) 270 === d && (h.aa(a) || g.aa(c)) ? k.x = this.computeMidOrthoPosition(a.x,
                        a.y, c.x, c.y, !1) : c.x < a.x && (270 === d || 0 === d) ? k.x = this.computeMidOrthoPosition(g.left, a.y, Math.max(c.x, h.right), c.y, !1) : c.x > a.x && (270 === d || 180 === d) && (k.x = this.computeMidOrthoPosition(g.right, a.y, Math.min(c.x, h.left), c.y, !1)), l.x = k.x, l.y = c.y;
                    if (k.x > g.left && k.x < g.right)
                        if (c.y >= g.top && c.y <= a.y || a.y <= h.bottom && a.y >= c.y) {
                            if (0 === d || 180 === d) k = new I(a.x, Math.max((a.y + c.y) / 2, a.y)), l = new I(c.x, k.y)
                        } else k.x = 180 === d || (90 === d || 270 === d) && c.x < a.x ? Math.min(c.x, 90 === d ? g.left : Math.min(g.left, h.left)) : Math.max(c.x, 90 ===
                            d ? g.right : Math.max(g.right, h.right)), l.x = k.x, l.y = c.y
                }
            else if (c.y < a.y || 180 === d && c.x < a.x && h.top < a.y || 0 === d && c.x > a.x && h.top < a.y) k = new I(a.x, c.y), l = new I((a.x + c.x) / 2, c.y), 90 === d ? (k.y = this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, !0), l.x = c.x, l.y = k.y) : 180 === d && c.x < a.x || 0 === d && c.x >= a.x ? (k.y = a.y > h.bottom ? this.computeMidOrthoPosition(a.x, a.y, c.x, h.bottom, !0) : a.y > h.top && (180 === d && a.x < h.left || 0 === d && a.x > h.right) ? this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, !0) : h.top, l.x = c.x, l.y = k.y) : 270 === d && a.y > h.bottom && a.x >
                h.left && a.x < h.right && (k.x = a.x < c.x ? Math.min(c.x, h.left) : Math.max(c.x, h.right), k.y = a.y, l.x = k.x);
            else {
                k = new I(c.x, a.y);
                l = new I(c.x, (a.y + c.y) / 2);
                if (90 === d || 0 === d && c.x < g.left || 180 === d && c.x > g.right) 90 === d && (h.aa(a) || g.aa(c)) ? k.x = this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, !1) : c.x < a.x && (90 === d || 0 === d) ? k.x = this.computeMidOrthoPosition(g.left, a.y, Math.max(c.x, h.right), c.y, !1) : c.x > a.x && (90 === d || 180 === d) && (k.x = this.computeMidOrthoPosition(g.right, a.y, Math.min(c.x, h.left), c.y, !1)), l.x = k.x, l.y = c.y;
                if (k.x > g.left &&
                    k.x < g.right)
                    if (c.y <= g.bottom && c.y >= a.y || a.y >= h.top && a.y <= c.y) {
                        if (0 === d || 180 === d) k = new I(a.x, Math.min((a.y + c.y) / 2, a.y)), l = new I(c.x, k.y)
                    } else k.x = 180 === d || (90 === d || 270 === d) && c.x < a.x ? Math.min(c.x, 270 === d ? g.left : Math.min(g.left, h.left)) : Math.max(c.x, 270 === d ? g.right : Math.max(g.right, h.right)), l.x = k.x, l.y = c.y
            }
            var m = k,
                n = l,
                p = c;
            if (this.isAvoiding) {
                var r = this.diagram;
                if (null === r || !rk(r) || g.aa(p) && !f.Wd(e) || h.aa(a) && !e.Wd(f) || e === f || this.layer.isTemporary) b = !1;
                else {
                    var q = sk(r, !0, this.containingGroup, null);
                    if (q.lk(Math.min(a.x, m.x), Math.min(a.y, m.y), Math.abs(a.x - m.x), Math.abs(a.y - m.y)) && q.lk(Math.min(m.x, n.x), Math.min(m.y, n.y), Math.abs(m.x - n.x), Math.abs(m.y - n.y)) && q.lk(Math.min(n.x, p.x), Math.min(n.y, p.y), Math.abs(n.x - p.x), Math.abs(n.y - p.y))) b = !1;
                    else {
                        e = a;
                        f = p;
                        var u = c = null;
                        if (r.isVirtualized) {
                            r = q.bounds.copy();
                            r.Vc(-q.dm, -q.cm);
                            var v = I.alloc();
                            tp(q, a.x, a.y) || (J.Uc(r.x, r.y, r.x + r.width, r.y + r.height, a.x, a.y, m.x, m.y, v) ? (c = a = v.copy(), b = v.Ta(m)) : J.Uc(r.x, r.y, r.x + r.width, r.y + r.height, m.x, m.y, n.x, n.y, v) ? (c = a =
                                v.copy(), b = v.Ta(n)) : J.Uc(r.x, r.y, r.x + r.width, r.y + r.height, n.x, n.y, p.x, p.y, v) && (c = a = v.copy(), b = v.Ta(p)));
                            tp(q, p.x, p.y) || (J.Uc(r.x, r.y, r.x + r.width, r.y + r.height, p.x, p.y, n.x, n.y, v) ? (u = p = v.copy(), d = n.Ta(v)) : J.Uc(r.x, r.y, r.x + r.width, r.y + r.height, n.x, n.y, m.x, m.y, v) ? (u = p = v.copy(), d = m.Ta(v)) : J.Uc(r.x, r.y, r.x + r.width, r.y + r.height, m.x, m.y, a.x, a.y, v) && (u = p = v.copy(), d = a.Ta(v)));
                            I.free(v)
                        }
                        g = g.copy().Hc(h);
                        h = q.vA;
                        g.Vc(q.dm * h, q.cm * h);
                        up(q, a, b, p, d, g);
                        h = vp(q, p.x, p.y);
                        !q.abort && h >= wp && (vk(q), h = q.$z, g.Vc(q.dm * h, q.cm *
                            h), up(q, a, b, p, d, g), h = vp(q, p.x, p.y));
                        !q.abort && h >= wp && q.CA && (vk(q), up(q, a, b, p, d, q.bounds), h = vp(q, p.x, p.y));
                        if (!q.abort && h < wp && vp(q, p.x, p.y) !== xp) {
                            yp(this, q, p.x, p.y, d, !0);
                            g = this.i(2);
                            if (4 > this.pointsCount) 0 === b || 180 === b ? (g.x = a.x, g.y = p.y) : (g.x = p.x, g.y = a.y), this.K(2, g.x, g.y), this.m(3, g.x, g.y);
                            else if (p = this.i(3), 0 === b || 180 === b) J.A(g.x, p.x) ? (g = 0 === b ? Math.max(g.x, a.x) : Math.min(g.x, a.x), this.K(2, g, a.y), this.K(3, g, p.y)) : J.A(g.y, p.y) ? (Math.abs(a.y - g.y) <= q.cm / 2 && (this.K(2, g.x, a.y), this.K(3, p.x, a.y)), this.m(2,
                                g.x, a.y)) : this.K(2, a.x, g.y);
                            else if (90 === b || 270 === b) J.A(g.y, p.y) ? (g = 90 === b ? Math.max(g.y, a.y) : Math.min(g.y, a.y), this.K(2, a.x, g), this.K(3, p.x, g)) : J.A(g.x, p.x) ? (Math.abs(a.x - g.x) <= q.dm / 2 && (this.K(2, a.x, g.y), this.K(3, a.x, p.y)), this.m(2, a.x, g.y)) : this.K(2, g.x, a.y);
                            null !== c && (a = this.i(1), p = this.i(2), a.x !== p.x && a.y !== p.y ? 0 === b || 180 === b ? this.m(2, a.x, p.y) : this.m(2, p.x, a.y) : 0 === b || 180 === b ? this.m(2, e.x, c.y) : this.m(2, c.x, e.y));
                            null !== u && (0 === d || 180 === d ? this.qf(f.x, u.y) : this.qf(u.x, f.y));
                            b = !0
                        } else b = !1
                    }
                }
            } else b = !1;
            b || (this.xe(k), this.xe(l))
        }
    };
    S.prototype.computeMidOrthoPosition = function (a, b, c, d, e) {
        var f = 0;
        this.hasCurviness() && (f = this.computeCurviness());
        return e ? (b + d) / 2 + f : (a + c) / 2 + f
    };

    function Oj(a) {
        if (null === a.diagram || !a.isAvoiding || !rk(a.diagram)) return !1;
        var b = a.points.j,
            c = b.length;
        if (4 > c) return !1;
        a = sk(a.diagram, !0, a.containingGroup, null);
        for (var d = 1; d < c - 2; d++) {
            var e = b[d],
                f = b[d + 1];
            if (!a.lk(Math.min(e.x, f.x), Math.min(e.y, f.y), Math.abs(e.x - f.x), Math.abs(e.y - f.y))) return !0
        }
        return !1
    }

    function yp(a, b, c, d, e, f) {
        var g = b.dm,
            h = b.cm,
            k = vp(b, c, d),
            l = c,
            m = d;
        for (0 === e ? l += g : 90 === e ? m += h : 180 === e ? l -= g : m -= h; k > zp && vp(b, l, m) === k - 1;) c = l, d = m, 0 === e ? l += g : 90 === e ? m += h : 180 === e ? l -= g : m -= h, --k;
        if (f) {
            if (k > zp)
                if (180 === e || 0 === e) c = Math.floor(c / g) * g + g / 2;
                else if (90 === e || 270 === e) d = Math.floor(d / h) * h + h / 2
        } else c = Math.floor(c / g) * g + g / 2, d = Math.floor(d / h) * h + h / 2;
        k > zp && (f = e, l = c, m = d, 0 === e ? (f = 90, m += h) : 90 === e ? (f = 180, l -= g) : 180 === e ? (f = 270, m -= h) : 270 === e && (f = 0, l += g), vp(b, l, m) === k - 1 ? yp(a, b, l, m, f, !1) : (l = c, m = d, 0 === e ? (f = 270, m -= h) : 90 ===
            e ? (f = 0, l += g) : 180 === e ? (f = 90, m += h) : 270 === e && (f = 180, l -= g), vp(b, l, m) === k - 1 && yp(a, b, l, m, f, !1)));
        a.qf(c, d)
    }
    S.prototype.gz = function (a) {
        var b = a.x;
        a = a.y;
        for (var c = this.i(0), d = this.i(1), e = Ab(b, a, c.x, c.y, d.x, d.y), f = 0, g = 1; g < this.pointsCount - 1; g++) {
            c = this.i(g + 1);
            var h = Ab(b, a, d.x, d.y, c.x, c.y);
            d = c;
            h < e && (f = g, e = h)
        }
        return f
    };
    S.prototype.cc = function () {
        this.Yn = !0
    };
    S.prototype.nk = function (a) {
        if (!a) {
            if (!1 === this.kd) return;
            a = this.zb();
            if (!this.Yn && (null === a || null !== a.geometry)) return
        }
        this.ka = this.makeGeometry();
        a = this.path;
        if (null !== a) {
            a.ka = this.ka;
            for (var b = this.W.j, c = b.length, d = 0; d < c; d++) {
                var e = b[d];
                e !== a && e.isPanelMain && e instanceof Lf && (e.ka = this.ka)
            }
        }
    };
    S.prototype.makeGeometry = function () {
        var a = this.ka,
            b = this.pointsCount;
        if (2 > b) return a.type = wd, this.Yn = !1, a;
        var c = !1,
            d = this.diagram;
        null !== d && ip(this) && d.Sg.contains(this) && (0 !== this.El.width || 0 !== this.El.height) && (c = !0);
        var e = this.i(0).copy(),
            f = e.copy();
        d = this.wb.j;
        var g = this.computeCurve();
        if (g === qg && 3 <= b && !J.$(this.smoothness, 0))
            if (3 === b) {
                var h = this.i(1);
                d = Math.min(e.x, h.x);
                var k = Math.min(e.y, h.y);
                h = this.i(2);
                d = Math.min(d, h.x);
                k = Math.min(k, h.y)
            } else {
                if (this.isOrthogonal)
                    for (k = 0; k < b; k++) h = d[k], f.x =
                        Math.min(h.x, f.x), f.y = Math.min(h.y, f.y);
                else
                    for (d = 3; d < b; d += 3) d + 3 >= b && (d = b - 1), k = this.i(d), f.x = Math.min(k.x, f.x), f.y = Math.min(k.y, f.y);
                d = f.x;
                k = f.y
            }
        else {
            for (k = 0; k < b; k++) h = d[k], f.x = Math.min(h.x, f.x), f.y = Math.min(h.y, f.y);
            d = f.x;
            k = f.y
        }
        d -= this.Vu.x;
        k -= this.Vu.y;
        e.x -= d;
        e.y -= k;
        if (2 !== b || ip(this)) {
            a.type = ud;
            h = Jd(a);
            0 !== this.computeShortLength(!0) && (e = Ap(this, e, !0, f));
            Kd(h, e.x, e.y, !1);
            if (g === qg && 3 <= b && !J.$(this.smoothness, 0))
                if (3 === b) c = this.i(1), b = c.x - d, c = c.y - k, e = this.i(2).copy(), e.x -= d, e.y -= k, 0 !== this.computeShortLength(!1) &&
                    (e = Ap(this, e, !1, f)), Ld(h, b, c, b, c, e.x, e.y);
                else if (this.isOrthogonal) {
                f = new I(d, k);
                e = this.i(1).copy();
                g = new I(d, k);
                b = new I(d, k);
                c = this.i(0);
                for (var l, m = this.smoothness / 3, n = 1; n < this.pointsCount - 1; n++) {
                    l = this.i(n);
                    var p = c,
                        r = l,
                        q = this.i(Bp(this, l, n, !1));
                    if (!J.$(p.x, r.x) || !J.$(r.x, q.x))
                        if (!J.$(p.y, r.y) || !J.$(r.y, q.y)) {
                            var u = m;
                            isNaN(u) && (u = this.smoothness / 3);
                            var v = p.x;
                            p = p.y;
                            var w = r.x;
                            r = r.y;
                            var y = q.x;
                            q = q.y;
                            var z = u * Cp(v, p, w, r);
                            u *= Cp(w, r, y, q);
                            J.$(p, r) && J.$(w, y) && (w > v ? q > r ? (g.x = w - z, g.y = r - z, b.x = w + u, b.y = r + u) : (g.x =
                                w - z, g.y = r + z, b.x = w + u, b.y = r - u) : q > r ? (g.x = w + z, g.y = r - z, b.x = w - u, b.y = r + u) : (g.x = w + z, g.y = r + z, b.x = w - u, b.y = r - u));
                            J.$(v, w) && J.$(r, q) && (r > p ? (y > w ? (g.x = w - z, g.y = r - z, b.x = w + u) : (g.x = w + z, g.y = r - z, b.x = w - u), b.y = r + u) : (y > w ? (g.x = w - z, g.y = r + z, b.x = w + u) : (g.x = w + z, g.y = r + z, b.x = w - u), b.y = r - u));
                            if (J.$(v, w) && J.$(w, y) || J.$(p, r) && J.$(r, q)) v = .5 * (v + y), p = .5 * (p + q), g.x = v, g.y = p, b.x = v, b.y = p;
                            1 === n ? (e.x = .5 * (c.x + l.x), e.y = .5 * (c.y + l.y)) : 2 === n && J.$(c.x, this.i(0).x) && J.$(c.y, this.i(0).y) && (e.x = .5 * (c.x + l.x), e.y = .5 * (c.y + l.y));
                            Ld(h, e.x - d, e.y - k, g.x - d, g.y -
                                k, l.x - d, l.y - k);
                            f.set(g);
                            e.set(b);
                            c = l
                        }
                }
                f = c.x;
                c = c.y;
                e = this.i(this.pointsCount - 1);
                0 !== this.computeShortLength(!1) && (e = Ap(this, e.copy(), !1, Fb));
                f = .5 * (f + e.x);
                c = .5 * (c + e.y);
                Ld(h, b.x - d, b.y - k, f - d, c - k, e.x - d, e.y - k)
            } else
                for (c = 3; c < b; c += 3) f = this.i(c - 2), c + 3 >= b && (c = b - 1), e = this.i(c - 1), g = this.i(c), c === b - 1 && 0 !== this.computeShortLength(!1) && (g = Ap(this, g.copy(), !1, Fb)), Ld(h, f.x - d, f.y - k, e.x - d, e.y - k, g.x - d, g.y - k);
            else {
                f = I.alloc();
                f.assign(this.i(0));
                g = 1;
                for (e = 0; g < b;) {
                    g = Bp(this, f, g, 1 < g);
                    m = this.i(g);
                    if (g >= b - 1) {
                        if (!f.w(m)) 0 !==
                            this.computeShortLength(!1) && (m = Ap(this, m.copy(), !1, Fb)), Dp(this, h, -d, -k, f, m, c);
                        else if (0 === e)
                            for (g = 1; g < b;) m = this.i(g++), Dp(this, h, -d, -k, f, m, c), f.assign(m);
                        break
                    }
                    e = Bp(this, m, g + 1, g < b - 3);
                    g = -d;
                    l = -k;
                    n = this.i(e);
                    v = c;
                    J.A(f.y, m.y) && J.A(m.x, n.x) ? (p = this.computeCorner(), p = Math.min(p, Math.abs(m.x - f.x) / 2), p = u = Math.min(p, Math.abs(n.y - m.y) / 2), J.A(p, 0) ? (Dp(this, h, g, l, f, m, v), f.assign(m)) : (w = m.x, r = m.y, y = w, q = r, m.x > f.x ? w = m.x - p : w = m.x + p, n.y > m.y ? q = m.y + u : q = m.y - u, Dp(this, h, g, l, f, new I(w, r), v), Qd(h, m.x + g, m.y + l, y + g, q + l),
                        f.h(y, q))) : J.A(f.x, m.x) && J.A(m.y, n.y) ? (p = this.computeCorner(), p = Math.min(p, Math.abs(m.y - f.y) / 2), p = u = Math.min(p, Math.abs(n.x - m.x) / 2), J.A(u, 0) ? (Dp(this, h, g, l, f, m, v), f.assign(m)) : (w = m.x, r = m.y, y = w, q = r, m.y > f.y ? r = m.y - p : r = m.y + p, n.x > m.x ? y = m.x + u : y = m.x - u, Dp(this, h, g, l, f, new I(w, r), v), Qd(h, m.x + g, m.y + l, y + g, q + l), f.h(y, q))) : (Dp(this, h, g, l, f, m, v), f.assign(m));
                    g = e
                }
                I.free(f)
            }
            Td = h
        } else h = this.i(1).copy(), h.x -= d, h.y -= k, 0 !== this.computeShortLength(!0) && (e = Ap(this, e, !0, f)), 0 !== this.computeShortLength(!1) && (h = Ap(this,
            h, !1, f)), a.type = wd, a.startX = e.x, a.startY = e.y, a.endX = h.x, a.endY = h.y;
        this.Yn = !1;
        return a
    };

    function Cp(a, b, c, d) {
        a = c - a;
        if (isNaN(a) || Infinity === a || -Infinity === a) return NaN;
        0 > a && (a = -a);
        b = d - b;
        if (isNaN(b) || Infinity === b || -Infinity === b) return NaN;
        0 > b && (b = -b);
        return J.$(a, 0) ? b : J.$(b, 0) ? a : Math.sqrt(a * a + b * b)
    }

    function Ap(a, b, c, d) {
        var e = a.pointsCount;
        if (2 > e) return b;
        if (c) {
            var f = a.i(1);
            c = f.x - d.x;
            f = f.y - d.y;
            d = Cp(b.x, b.y, c, f);
            if (0 === d) return b;
            e = 2 === e ? .5 * d : d;
            a = a.computeShortLength(!0);
            a > e && (a = e);
            e = a * (f - b.y) / d;
            b.x += a * (c - b.x) / d;
            b.y += e
        } else {
            f = a.i(e - 2);
            c = f.x - d.x;
            f = f.y - d.y;
            d = Cp(b.x, b.y, c, f);
            if (0 === d) return b;
            e = 2 === e ? .5 * d : d;
            a = a.computeShortLength(!1);
            a > e && (a = e);
            e = a * (b.y - f) / d;
            b.x -= a * (b.x - c) / d;
            b.y -= e
        }
        return b
    }

    function Bp(a, b, c, d) {
        for (var e = a.pointsCount, f = b; J.$(b.x, f.x) && J.$(b.y, f.y);) {
            if (c >= e) return e - 1;
            f = a.i(c++)
        }
        if (!J.$(b.x, f.x) && !J.$(b.y, f.y)) return c - 1;
        for (var g = f; J.$(b.x, f.x) && J.$(f.x, g.x) && (!d || (b.y >= f.y ? f.y >= g.y : f.y <= g.y)) || J.$(b.y, f.y) && J.$(f.y, g.y) && (!d || (b.x >= f.x ? f.x >= g.x : f.x <= g.x));) {
            if (c >= e) return e - 1;
            g = a.i(c++)
        }
        return c - 2
    }

    function Dp(a, b, c, d, e, f, g) {
        if (!g && ip(a)) {
            g = [];
            var h = 0;
            a.isVisible() && (h = Ep(a, e, f, g));
            if (0 < h)
                if (J.A(e.y, f.y))
                    if (e.x < f.x)
                        for (var k = 0; k < h;) {
                            var l = Math.max(e.x, Math.min(g[k++] - 5, f.x - 10));
                            b.lineTo(l + c, f.y + d);
                            var m = l + c;
                            for (var n = Math.min(l + 10, f.x); k < h;)
                                if (l = g[k], l < n + 10) k++, n = Math.min(l + 5, f.x);
                                else break;
                            l = f.y - 10 + d;
                            n += c;
                            var p = f.y + d;
                            a.curve === ag ? Kd(b, n, p, !1) : Ld(b, m, l, n, l, n, p)
                        } else
                            for (--h; 0 <= h;) {
                                k = Math.min(e.x, Math.max(g[h--] + 5, f.x + 10));
                                b.lineTo(k + c, f.y + d);
                                m = k + c;
                                for (l = Math.max(k - 10, f.x); 0 <= h;)
                                    if (k = g[h], k >
                                        l - 10) h--, l = Math.max(k - 5, f.x);
                                    else break;
                                k = f.y - 10 + d;
                                l += c;
                                n = f.y + d;
                                a.curve === ag ? Kd(b, l, n, !1) : Ld(b, m, k, l, k, l, n)
                            } else if (J.A(e.x, f.x))
                                if (e.y < f.y)
                                    for (k = 0; k < h;) {
                                        l = Math.max(e.y, Math.min(g[k++] - 5, f.y - 10));
                                        b.lineTo(f.x + c, l + d);
                                        m = l + d;
                                        for (l = Math.min(l + 10, f.y); k < h;)
                                            if (n = g[k], n < l + 10) k++, l = Math.min(n + 5, f.y);
                                            else break;
                                        n = f.x - 10 + c;
                                        p = f.x + c;
                                        l += d;
                                        a.curve === ag ? Kd(b, p, l, !1) : Ld(b, n, m, n, l, p, l)
                                    } else
                                        for (--h; 0 <= h;) {
                                            k = Math.min(e.y, Math.max(g[h--] + 5, f.y + 10));
                                            b.lineTo(f.x + c, k + d);
                                            m = k + d;
                                            for (k = Math.max(k - 10, f.y); 0 <= h;)
                                                if (l = g[h],
                                                    l > k - 10) h--, k = Math.max(l - 5, f.y);
                                                else break;
                                            l = f.x - 10 + c;
                                            n = f.x + c;
                                            k += d;
                                            a.curve === ag ? Kd(b, n, k, !1) : Ld(b, l, m, l, k, n, k)
                                        }
        }
        b.lineTo(f.x + c, f.y + d)
    }

    function Ep(a, b, c, d) {
        var e = a.diagram;
        if (null === e || b.w(c)) return 0;
        for (e = e.layers; e.next();) {
            var f = e.value;
            if (null !== f && f.visible) {
                f = f.Ca.j;
                for (var g = f.length, h = 0; h < g; h++) {
                    var k = f[h];
                    if (k instanceof S) {
                        if (k === a) return 0 < d.length && d.sort(function (a, b) {
                            return a - b
                        }), d.length;
                        if (k.isVisible() && ip(k)) {
                            var l = k.routeBounds;
                            l.v() && a.routeBounds.Gc(l) && !a.usesSamePort(k) && (l = k.path, null !== l && l.zf() && Fp(b, c, d, k))
                        }
                    }
                }
            }
        }
        0 < d.length && d.sort(function (a, b) {
            return a - b
        });
        return d.length
    }

    function Fp(a, b, c, d) {
        for (var e = J.A(a.y, b.y), f = d.pointsCount, g = d.i(0), h = I.alloc(), k = 1; k < f; k++) {
            var l = d.i(k);
            if (k < f - 1) {
                var m = d.i(k + 1);
                if (g.y === l.y && l.y === m.y) {
                    if (l.x > g.x && m.x >= l.x || l.x < g.x && m.x <= l.x) continue
                } else if (g.x === l.x && l.x === m.x && (l.y > g.y && m.y >= l.y || l.y < g.y && m.y <= l.y)) continue
            }
            a: {
                m = a.x;
                var n = a.y,
                    p = b.x,
                    r = b.y,
                    q = g.x;g = g.y;
                var u = l.x,
                    v = l.y;
                if (!J.A(m, p)) {
                    if (J.A(n, r) && J.A(q, u) && Math.min(m, p) < q && Math.max(m, p) > q && Math.min(g, v) < n && Math.max(g, v) > n && !J.A(g, v)) {
                        h.x = q;
                        h.y = n;
                        m = !0;
                        break a
                    }
                } else if (!J.A(n, r) &&
                    J.A(g, v) && Math.min(n, r) < g && Math.max(n, r) > g && Math.min(q, u) < m && Math.max(q, u) > m && !J.A(q, u)) {
                    h.x = m;
                    h.y = g;
                    m = !0;
                    break a
                }
                h.x = 0;h.y = 0;m = !1
            }
            m && (e ? c.push(h.x) : c.push(h.y));
            g = l
        }
        I.free(h)
    }

    function ip(a) {
        a = a.curve;
        return a === $f || a === ag
    }

    function mp(a, b) {
        if (b || ip(a)) b = a.diagram, null === b || b.animationManager.isTicking || b.Sg.contains(a) || 0 === a.El.width && 0 === a.El.height || b.Sg.add(a, a.El.copy())
    }
    S.prototype.tq = function (a) {
        var b = this.layer;
        if (null !== b && b.visible && !b.isTemporary) {
            var c = b.diagram;
            if (null !== c && !c.animationManager.isAnimating) {
                var d = !1;
                for (c = c.layers; c.next();) {
                    var e = c.value;
                    if (e.visible)
                        if (e === b) {
                            d = !0;
                            var f = !1;
                            e = e.Ca.j;
                            for (var g = e.length, h = 0; h < g; h++) {
                                var k = e[h];
                                k instanceof S && (k === this ? f = !0 : f && Gp(this, k, a))
                            }
                        } else if (d)
                        for (f = e.Ca.j, e = f.length, g = 0; g < e; g++) h = f[g], h instanceof S && Gp(this, h, a)
                }
            }
        }
    };

    function Gp(a, b, c) {
        if (null !== b && null !== b.ka && ip(b)) {
            var d = b.routeBounds;
            d.v() && (a.routeBounds.Gc(d) || c.Gc(d)) && (a.usesSamePort(b) || b.cc())
        }
    }
    S.prototype.usesSamePort = function (a) {
        var b = this.pointsCount,
            c = a.pointsCount;
        if (0 < b && 0 < c) {
            var d = this.i(0),
                e = a.i(0);
            if (d.Ma(e)) return !0;
            b = this.i(b - 1);
            a = a.i(c - 1);
            if (b.Ma(a) || d.Ma(a) || b.Ma(e)) return !0
        } else if (this.fromNode === a.fromNode || this.toNode === a.toNode || this.fromNode === a.toNode || this.toNode === a.fromNode) return !0;
        return !1
    };
    S.prototype.isVisible = function () {
        if (!U.prototype.isVisible.call(this)) return !1;
        var a = this.containingGroup,
            b = !0,
            c = this.diagram;
        null !== c && (b = c.isTreePathToChildren);
        c = this.fromNode;
        if (null !== c) {
            if (this.isTreeLink && b && !c.isTreeExpanded) return !1;
            if (c === a) return !0;
            for (var d = c; null !== d;) {
                if (d.labeledLink === this) return !0;
                d = d.containingGroup
            }
            c = c.findVisibleNode();
            if (null === c || c === a) return !1
        }
        c = this.toNode;
        if (null !== c) {
            if (this.isTreeLink && !b && !c.isTreeExpanded) return !1;
            if (c === a) return !0;
            for (b = c; null !== b;) {
                if (b.labeledLink ===
                    this) return !0;
                b = b.containingGroup
            }
            b = c.findVisibleNode();
            if (null === b || b === a) return !1
        }
        return !0
    };
    S.prototype.Ob = function (a) {
        U.prototype.Ob.call(this, a);
        null !== this.Kf && this.Kf.nm();
        if (null !== this.ad)
            for (var b = this.ad.iterator; b.next();) b.value.Ob(a)
    };
    S.prototype.computeAdjusting = function () {
        return null !== this.diagram && this.diagram.animationManager.isAnimating ? dp : this.Dk
    };

    function jp(a) {
        var b = a.Qe;
        if (null !== b) {
            var c = a.lf;
            if (null !== c) {
                for (var d = a.Re, e = a.mf, f = a = null, g = b.Wa.j, h = g.length, k = 0; k < h; k++) {
                    var l = g[k];
                    if (l.Qe === b && l.Re === d && l.lf === c && l.mf === e || l.Qe === c && l.Re === e && l.lf === b && l.mf === d) null === f ? f = l : (null === a && (a = [], a.push(f)), a.push(l))
                }
                if (null !== a) {
                    f = Oo(b, c, d, e);
                    null === f && (f = new Hp(b, d, c, e), No(b, f), No(c, f));
                    f.links = a;
                    for (b = 0; b < a.length; b++) a[b].Kf = f;
                    f.nm()
                }
            }
        }
    }

    function kp(a) {
        var b = a.Kf;
        null !== b && (a.Kf = null, a = b.links.indexOf(a), 0 <= a && (Da(b.links, a), b.nm()))
    }
    S.prototype.Kh = function () {
        return !0
    };
    ma.Object.defineProperties(S.prototype, {
        fromNode: {
            get: function () {
                return this.Qe
            },
            set: function (a) {
                var b = this.Qe;
                if (b !== a) {
                    var c = this.fromPort;
                    null !== b && (this.lf !== b && So(b, this, c), kp(this), this.C(2));
                    this.Qe = a;
                    null !== a && this.Ob(a.isVisible());
                    this.Tf = null;
                    this.Oa();
                    var d = this.diagram;
                    null !== d && d.Z && d.partManager.setFromNodeForLink(this, a, b);
                    var e = this.fromPort,
                        f = this.fromPortChanged;
                    if (null !== f) {
                        var g = !0;
                        null !== d && (g = d.Z, d.Z = !0);
                        f(this, c, e);
                        null !== d && (d.Z = g)
                    }
                    null !== a &&
                        (this.lf !== a && Ro(a, this, e), jp(this), this.C(1));
                    this.g("fromNode", b, a);
                    Lo(this)
                }
            }
        },
        fromPortId: {
            get: function () {
                return this.Re
            },
            set: function (a) {
                var b = this.Re;
                if (b !== a) {
                    var c = this.fromPort;
                    null !== c && Po(this.fromNode, c);
                    kp(this);
                    this.Re = a;
                    var d = this.fromPort;
                    null !== d && Po(this.fromNode, d);
                    var e = this.diagram;
                    if (null !== e) {
                        var f = this.data,
                            g = e.model;
                        null !== f && g.pm() && g.jy(f, a)
                    }
                    c !== d && (this.Tf = null, this.Oa(), f = this.fromPortChanged, null !== f && (g = !0, null !== e && (g = e.Z, e.Z = !0), f(this,
                        c, d), null !== e && (e.Z = g)));
                    jp(this);
                    this.g("fromPortId", b, a)
                }
            }
        },
        fromPort: {
            get: function () {
                var a = this.Qe;
                return null === a ? null : a.lt(this.Re)
            }
        },
        fromPortChanged: {
            get: function () {
                return this.Mn
            },
            set: function (a) {
                var b = this.Mn;
                b !== a && (this.Mn = a, this.g("fromPortChanged", b, a))
            }
        },
        toNode: {
            get: function () {
                return this.lf
            },
            set: function (a) {
                var b = this.lf;
                if (b !== a) {
                    var c = this.toPort;
                    null !== b && (this.Qe !== b && So(b, this, c), kp(this), this.C(2));
                    this.lf = a;
                    null !== a && this.Ob(a.isVisible());
                    this.Tf = null;
                    this.Oa();
                    var d = this.diagram;
                    null !== d && d.Z && d.partManager.setToNodeForLink(this, a, b);
                    var e = this.toPort,
                        f = this.toPortChanged;
                    if (null !== f) {
                        var g = !0;
                        null !== d && (g = d.Z, d.Z = !0);
                        f(this, c, e);
                        null !== d && (d.Z = g)
                    }
                    null !== a && (this.Qe !== a && Ro(a, this, e), jp(this), this.C(1));
                    this.g("toNode", b, a);
                    Lo(this)
                }
            }
        },
        toPortId: {
            get: function () {
                return this.mf
            },
            set: function (a) {
                var b = this.mf;
                if (b !== a) {
                    var c = this.toPort;
                    null !== c && Po(this.toNode,
                        c);
                    kp(this);
                    this.mf = a;
                    var d = this.toPort;
                    null !== d && Po(this.toNode, d);
                    var e = this.diagram;
                    if (null !== e) {
                        var f = this.data,
                            g = e.model;
                        null !== f && g.pm() && g.ny(f, a)
                    }
                    c !== d && (this.Tf = null, this.Oa(), f = this.toPortChanged, null !== f && (g = !0, null !== e && (g = e.Z, e.Z = !0), f(this, c, d), null !== e && (e.Z = g)));
                    jp(this);
                    this.g("toPortId", b, a)
                }
            }
        },
        toPort: {
            get: function () {
                var a = this.lf;
                return null === a ? null : a.lt(this.mf)
            }
        },
        toPortChanged: {
            get: function () {
                return this.Vp
            },
            set: function (a) {
                var b =
                    this.Vp;
                b !== a && (this.Vp = a, this.g("toPortChanged", b, a))
            }
        },
        fromSpot: {
            get: function () {
                return null !== this.O ? this.O.Yg : Zc
            },
            set: function (a) {
                this.Ec();
                var b = this.O.Yg;
                b.w(a) || (a = a.G(), this.O.Yg = a, this.g("fromSpot", b, a), this.Oa())
            }
        },
        fromEndSegmentLength: {
            get: function () {
                return null !== this.O ? this.O.Wg : NaN
            },
            set: function (a) {
                this.Ec();
                var b = this.O.Wg;
                b !== a && (0 > a && va(a, ">= 0", S, "fromEndSegmentLength"), this.O.Wg = a, this.g("fromEndSegmentLength", b, a), this.Oa())
            }
        },
        fromShortLength: {
            get: function () {
                return null !== this.O ? this.O.Xg : NaN
            },
            set: function (a) {
                this.Ec();
                var b = this.O.Xg;
                b !== a && (this.O.Xg = a, this.g("fromShortLength", b, a), this.Oa(), this.cc())
            }
        },
        toSpot: {
            get: function () {
                return null !== this.O ? this.O.yh : Zc
            },
            set: function (a) {
                this.Ec();
                var b = this.O.yh;
                b.w(a) || (a = a.G(), this.O.yh = a, this.g("toSpot", b, a), this.Oa())
            }
        },
        toEndSegmentLength: {
            get: function () {
                return null !== this.O ? this.O.wh :
                    NaN
            },
            set: function (a) {
                this.Ec();
                var b = this.O.wh;
                b !== a && (0 > a && va(a, ">= 0", S, "toEndSegmentLength"), this.O.wh = a, this.g("toEndSegmentLength", b, a), this.Oa())
            }
        },
        toShortLength: {
            get: function () {
                return null !== this.O ? this.O.xh : NaN
            },
            set: function (a) {
                this.Ec();
                var b = this.O.xh;
                b !== a && (this.O.xh = a, this.g("toShortLength", b, a), this.Oa(), this.cc())
            }
        },
        isLabeledLink: {
            get: function () {
                return null === this.ad ? !1 : 0 < this.ad.count
            }
        },
        labelNodes: {
            get: function () {
                return null === this.ad ? fb : this.ad.iterator
            }
        },
        relinkableFrom: {
            get: function () {
                return 0 !== (this.Qa & 1)
            },
            set: function (a) {
                var b = 0 !== (this.Qa & 1);
                b !== a && (this.Qa ^= 1, this.g("relinkableFrom", b, a), this.Lb())
            }
        },
        relinkableTo: {
            get: function () {
                return 0 !== (this.Qa & 2)
            },
            set: function (a) {
                var b = 0 !== (this.Qa & 2);
                b !== a && (this.Qa ^= 2, this.g("relinkableTo", b, a), this.Lb())
            }
        },
        resegmentable: {
            get: function () {
                return 0 !== (this.Qa &
                    4)
            },
            set: function (a) {
                var b = 0 !== (this.Qa & 4);
                b !== a && (this.Qa ^= 4, this.g("resegmentable", b, a), this.Lb())
            }
        },
        isTreeLink: {
            get: function () {
                return 0 !== (this.Qa & 8)
            },
            set: function (a) {
                var b = 0 !== (this.Qa & 8);
                b !== a && (this.Qa ^= 8, this.g("isTreeLink", b, a), null !== this.fromNode && Dk(this.fromNode), null !== this.toNode && Dk(this.toNode))
            }
        },
        path: {
            get: function () {
                var a = this.zb();
                return a instanceof Lf ? a : null
            }
        },
        routeBounds: {
            get: function () {
                this.hj();
                var a = this.El,
                    b = Infinity,
                    c = Infinity,
                    d = this.pointsCount;
                if (0 === d) a.h(NaN, NaN, 0, 0);
                else {
                    if (1 === d) d = this.i(0), b = Math.min(d.x, b), c = Math.min(d.y, c), a.h(d.x, d.y, 0, 0);
                    else if (2 === d) {
                        d = this.i(0);
                        var e = this.i(1);
                        b = Math.min(d.x, e.x);
                        c = Math.min(d.y, e.y);
                        a.h(d.x, d.y, 0, 0);
                        a.He(e)
                    } else if (this.computeCurve() === qg && 3 <= d && !this.isOrthogonal)
                        if (e = this.i(0), b = e.x, c = e.y, a.h(b, c, 0, 0), 3 === d) {
                            d = this.i(1);
                            b = Math.min(d.x, b);
                            c = Math.min(d.y, c);
                            var f = this.i(2);
                            b = Math.min(f.x, b);
                            c = Math.min(f.y, c);
                            J.bm(e.x, e.y, d.x, d.y, d.x, d.y,
                                f.x, f.y, .5, a)
                        } else
                            for (f = 3; f < d; f += 3) {
                                var g = this.i(f - 2);
                                f + 3 >= d && (f = d - 1);
                                var h = this.i(f - 1),
                                    k = this.i(f);
                                J.bm(e.x, e.y, g.x, g.y, h.x, h.y, k.x, k.y, .5, a);
                                b = Math.min(k.x, b);
                                c = Math.min(k.y, c);
                                e = k
                            } else
                                for (e = this.i(0), f = this.i(1), b = Math.min(e.x, f.x), c = Math.min(e.y, f.y), a.h(e.x, e.y, 0, 0), a.He(f), e = 2; e < d; e++) f = this.i(e), b = Math.min(f.x, b), c = Math.min(f.y, c), a.He(f);
                    this.Vu.h(b - a.x, c - a.y)
                }
                return a
            }
        },
        midPoint: {
            get: function () {
                this.hj();
                return this.computeMidPoint(new I)
            }
        },
        midAngle: {
            get: function () {
                this.hj();
                return this.computeMidAngle()
            }
        },
        flattenedLengths: {
            get: function () {
                if (null === this.Gr) {
                    this.kd || lp(this);
                    for (var a = this.Gr = [], b = this.pointsCount, c = 0; c < b - 1; c++) {
                        var d = this.i(c);
                        var e = this.i(c + 1);
                        J.$(d.x, e.x) ? (d = e.y - d.y, 0 > d && (d = -d)) : J.$(d.y, e.y) ? (d = e.x - d.x, 0 > d && (d = -d)) : d = Math.sqrt(d.Ae(e));
                        a.push(d)
                    }
                }
                return this.Gr
            }
        },
        flattenedTotalLength: {
            get: function () {
                var a = this.qu;
                if (isNaN(a)) {
                    for (var b = this.flattenedLengths,
                            c = b.length, d = a = 0; d < c; d++) a += b[d];
                    this.qu = a
                }
                return a
            }
        },
        points: {
            get: function () {
                return this.wb
            },
            set: function (a) {
                var b = this.wb;
                if (b !== a) {
                    var c = null;
                    if (Array.isArray(a)) {
                        var d = 0 === a.length % 2;
                        if (d)
                            for (var e = 0; e < a.length; e++)
                                if ("number" !== typeof a[e] || isNaN(a[e])) {
                                    d = !1;
                                    break
                                } if (d)
                            for (c = new E, d = 0; d < a.length / 2; d++) e = (new I(a[2 * d], a[2 * d + 1])).freeze(), c.add(e);
                        else {
                            d = !0;
                            for (e = 0; e < a.length; e++) {
                                var f = a[e];
                                if (!za(f) || "number" !== typeof f.x || isNaN(f.x) || "number" !== typeof f.y || isNaN(f.y)) {
                                    d = !1;
                                    break
                                }
                            }
                            if (d)
                                for (c = new E, d = 0; d < a.length; d++) e = a[d], c.add((new I(e.x, e.y)).freeze())
                        }
                    } else if (a instanceof E)
                        for (c = a.copy(), a = c.iterator; a.next();) a.value.freeze();
                    else B("Link.points value is not an instance of List or Array: " + a);
                    c.freeze();
                    this.wb = c;
                    this.cc();
                    this.o();
                    lp(this);
                    a = this.diagram;
                    null !== a && (a.kk || a.undoManager.isUndoingRedoing || a.yt.add(this), a.animationManager.qc && (this.oh = c));
                    this.g("points", b, c)
                }
            }
        },
        pointsCount: {
            get: function () {
                return this.wb.count
            }
        },
        kd: {
            get: function () {
                return 0 !== (this.Qa & 16)
            },
            set: function (a) {
                0 !== (this.Qa & 16) !== a && (this.Qa ^= 16)
            }
        },
        suspendsRouting: {
            get: function () {
                return 0 !== (this.Qa & 32)
            },
            set: function (a) {
                0 !== (this.Qa & 32) !== a && (this.Qa ^= 32)
            }
        },
        jv: {
            get: function () {
                return 0 !== (this.Qa & 64)
            },
            set: function (a) {
                0 !== (this.Qa & 64) !== a && (this.Qa ^= 64)
            }
        },
        defaultFromPoint: {
            get: function () {
                return this.u
            },
            set: function (a) {
                this.u = a.copy()
            }
        },
        defaultToPoint: {
            get: function () {
                return this.I
            },
            set: function (a) {
                this.I = a.copy()
            }
        },
        isOrthogonal: {
            get: function () {
                return 2 === (this.Lj.value & 2)
            }
        },
        isAvoiding: {
            get: function () {
                return 4 === (this.Lj.value & 4)
            }
        },
        geometry: {
            get: function () {
                this.Yn && (this.hj(), this.ka = this.makeGeometry());
                return this.ka
            }
        },
        firstPickIndex: {
            get: function () {
                return 2 >= this.pointsCount ? 0 : this.isOrthogonal ||
                    !np(this.computeSpot(!0)) ? 1 : 0
            }
        },
        lastPickIndex: {
            get: function () {
                var a = this.pointsCount;
                return 0 === a ? 0 : 2 >= a ? a - 1 : this.isOrthogonal || !np(this.computeSpot(!1)) ? a - 2 : a - 1
            }
        },
        adjusting: {
            get: function () {
                return this.Dk
            },
            set: function (a) {
                var b = this.Dk;
                b !== a && (this.Dk = a, this.g("adjusting", b, a))
            }
        },
        corner: {
            get: function () {
                return this.pn
            },
            set: function (a) {
                var b = this.pn;
                b !== a && (this.pn = a, this.cc(), this.g("corner", b, a))
            }
        },
        curve: {
            get: function () {
                return this.rn
            },
            set: function (a) {
                var b = this.rn;
                b !== a && (this.rn = a, this.Oa(), this.cc(), mp(this, b === ag || b === $f || a === ag || a === $f), this.g("curve", b, a))
            }
        },
        curviness: {
            get: function () {
                return this.sn
            },
            set: function (a) {
                var b = this.sn;
                b !== a && (this.sn = a, this.Oa(), this.cc(), this.g("curviness", b, a))
            }
        },
        routing: {
            get: function () {
                return this.Lj
            },
            set: function (a) {
                var b = this.Lj;
                b !== a && (this.Lj = a, this.Tf = null, this.Oa(), mp(this, 2 === (b.value &
                    2) || 2 === (a.value & 2)), this.g("routing", b, a))
            }
        },
        smoothness: {
            get: function () {
                return this.Ip
            },
            set: function (a) {
                var b = this.Ip;
                b !== a && (this.Ip = a, this.cc(), this.g("smoothness", b, a))
            }
        },
        key: {
            get: function () {
                var a = this.diagram;
                if (null !== a && a.model.pm()) return a.model.Vb(this.data)
            }
        }
    });
    S.prototype.invalidateOtherJumpOvers = S.prototype.tq;
    S.prototype.findClosestSegment = S.prototype.gz;
    S.prototype.updateRoute = S.prototype.hj;
    S.prototype.invalidateRoute = S.prototype.Oa;
    S.prototype.rollbackRoute = S.prototype.ey;
    S.prototype.commitRoute = S.prototype.rf;
    S.prototype.startRoute = S.prototype.Nh;
    S.prototype.clearPoints = S.prototype.Zj;
    S.prototype.removePoint = S.prototype.Xv;
    S.prototype.addPointAt = S.prototype.qf;
    S.prototype.addPoint = S.prototype.xe;
    S.prototype.insertPointAt = S.prototype.m;
    S.prototype.insertPoint = S.prototype.Rz;
    S.prototype.setPointAt = S.prototype.K;
    S.prototype.setPoint = S.prototype.hd;
    S.prototype.getPoint = S.prototype.i;
    S.prototype.getOtherPort = S.prototype.Fz;
    S.prototype.getOtherNode = S.prototype.pt;
    var cp = new D(S, "Normal", 1),
        Ip = new D(S, "Orthogonal", 2),
        Jp = new D(S, "AvoidsNodes", 6),
        sp = new D(S, "AvoidsNodesStraight", 7),
        bg = new D(S, "None", 0),
        qg = new D(S, "Bezier", 9),
        ag = new D(S, "JumpGap", 10),
        $f = new D(S, "JumpOver", 11),
        dp = new D(S, "End", 17),
        ep = new D(S, "Scale", 18),
        fp = new D(S, "Stretch", 19),
        In = new D(S, "OrientAlong", 21),
        Nm = new D(S, "OrientPlus90", 22),
        Pm = new D(S, "OrientMinus90", 23),
        gp = new D(S, "OrientOpposite", 24),
        hp = new D(S, "OrientUpright", 25),
        Om = new D(S, "OrientPlus90Upright", 26),
        Qm = new D(S, "OrientMinus90Upright",
            27),
        Rm = new D(S, "OrientUpright45", 28);
    S.className = "Link";
    S.Normal = cp;
    S.Orthogonal = Ip;
    S.AvoidsNodes = Jp;
    S.AvoidsNodesStraight = sp;
    S.None = bg;
    S.Bezier = qg;
    S.JumpGap = ag;
    S.JumpOver = $f;
    S.End = dp;
    S.Scale = ep;
    S.Stretch = fp;
    S.OrientAlong = In;
    S.OrientPlus90 = Nm;
    S.OrientMinus90 = Pm;
    S.OrientOpposite = gp;
    S.OrientUpright = hp;
    S.OrientPlus90Upright = Om;
    S.OrientMinus90Upright = Qm;
    S.OrientUpright45 = Rm;

    function Hp(a, b, c, d) {
        Ya(this);
        this.ke = this.Nr = !1;
        this.Bt = a;
        this.Zx = b;
        this.Mv = c;
        this.$x = d;
        this.links = []
    }
    Hp.prototype.nm = function () {
        if (!this.Nr) {
            var a = this.links;
            0 < a.length && (a = a[0].diagram, null !== a && (a.su.add(this), this.ke = a.undoManager.isUndoingRedoing))
        }
        this.Nr = !0
    };
    Hp.prototype.uw = function () {
        if (this.Nr) {
            this.Nr = !1;
            var a = this.links;
            if (0 < a.length) {
                var b = a[0],
                    c = b.diagram;
                c = null === c || c.kk && !this.ke;
                this.ke = !1;
                b.arrangeBundledLinks(a, c);
                1 === a.length && (b.Kf = null, a.length = 0)
            }
            0 === a.length && (a = this.Bt, null !== this && null !== a.Me && a.Me.remove(this), a = this.Mv, null !== this && null !== a.Me && a.Me.remove(this))
        }
    };
    Hp.className = "LinkBundle";

    function tk() {
        Ya(this);
        this.oy = this.group = null;
        this.st = !0;
        this.abort = !1;
        this.Nd = this.Md = 1;
        this.xo = this.wo = -1;
        this.lc = this.kc = 8;
        this.Bb = [
            []
        ];
        this.Sj = this.Rj = 0;
        this.CA = !1;
        this.vA = 22;
        this.$z = 111
    }
    tk.prototype.initialize = function (a) {
        if (!(0 >= a.width || 0 >= a.height)) {
            var b = a.y,
                c = a.x + a.width,
                d = a.y + a.height;
            this.Md = Math.floor((a.x - this.kc) / this.kc) * this.kc;
            this.Nd = Math.floor((b - this.lc) / this.lc) * this.lc;
            this.wo = Math.ceil((c + 2 * this.kc) / this.kc) * this.kc;
            this.xo = Math.ceil((d + 2 * this.lc) / this.lc) * this.lc;
            a = 1 + (Math.ceil((this.wo - this.Md) / this.kc) | 0);
            b = 1 + (Math.ceil((this.xo - this.Nd) / this.lc) | 0);
            if (null === this.Bb || this.Rj < a - 1 || this.Sj < b - 1) {
                c = [];
                for (d = 0; d <= a; d++) c[d] = [];
                this.Bb = c;
                this.Rj = a - 1;
                this.Sj = b - 1
            }
            a =
                Kp;
            if (null !== this.Bb)
                for (b = 0; b <= this.Rj; b++)
                    for (c = 0; c <= this.Sj; c++) this.Bb[b][c] = a
        }
    };

    function tp(a, b, c) {
        return a.Md <= b && b <= a.wo && a.Nd <= c && c <= a.xo
    }

    function vp(a, b, c) {
        if (!tp(a, b, c)) return Kp;
        b -= a.Md;
        b /= a.kc;
        c -= a.Nd;
        c /= a.lc;
        return a.Bb[b | 0][c | 0]
    }

    function wk(a, b, c) {
        tp(a, b, c) && (b -= a.Md, b /= a.kc, c -= a.Nd, c /= a.lc, a.Bb[b | 0][c | 0] = xp)
    }

    function vk(a) {
        if (null !== a.Bb)
            for (var b = 0; b <= a.Rj; b++)
                for (var c = 0; c <= a.Sj; c++) a.Bb[b][c] >= zp && (a.Bb[b][c] = Kp)
    }
    tk.prototype.lk = function (a, b, c, d) {
        if (a > this.wo || a + c < this.Md || b > this.xo || b + d < this.Nd) return !0;
        a = (a - this.Md) / this.kc | 0;
        b = (b - this.Nd) / this.lc | 0;
        c = Math.max(0, c) / this.kc + 1 | 0;
        var e = Math.max(0, d) / this.lc + 1 | 0;
        0 > a && (c += a, a = 0);
        0 > b && (e += b, b = 0);
        if (0 > c || 0 > e) return !0;
        d = Math.min(a + c - 1, this.Rj) | 0;
        for (c = Math.min(b + e - 1, this.Sj) | 0; a <= d; a++)
            for (e = b; e <= c; e++)
                if (this.Bb[a][e] === xp) return !1;
        return !0
    };

    function Lp(a, b, c, d, e, f, g, h, k) {
        if (!(b < f || b > g || c < h || c > k)) {
            var l = b | 0;
            var m = c | 0;
            var n = a.Bb[l][m];
            if (n >= zp && n < wp)
                for (e ? m += d : l += d, n += 1; f <= l && l <= g && h <= m && m <= k && !(n >= a.Bb[l][m]);) a.Bb[l][m] = n, n += 1, e ? m += d : l += d;
            l = e ? m : l;
            if (e)
                if (0 < d)
                    for (c += d; c < l; c += d) Lp(a, b, c, 1, !e, f, g, h, k), Lp(a, b, c, -1, !e, f, g, h, k);
                else
                    for (c += d; c > l; c += d) Lp(a, b, c, 1, !e, f, g, h, k), Lp(a, b, c, -1, !e, f, g, h, k);
            else if (0 < d)
                for (b += d; b < l; b += d) Lp(a, b, c, 1, !e, f, g, h, k), Lp(a, b, c, -1, !e, f, g, h, k);
            else
                for (b += d; b > l; b += d) Lp(a, b, c, 1, !e, f, g, h, k), Lp(a, b, c, -1, !e, f, g, h,
                    k)
        }
    }

    function Mp(a, b, c, d, e, f, g, h, k) {
        b |= 0;
        c |= 0;
        var l = xp,
            m = zp;
        for (a.Bb[b][c] = m; l === xp && b > f && b < g && c > h && c < k;) m += 1, a.Bb[b][c] = m, e ? c += d : b += d, l = a.Bb[b][c]
    }

    function Np(a, b, c, d, e, f, g, h, k) {
        b |= 0;
        c |= 0;
        var l = xp,
            m = wp;
        for (a.Bb[b][c] = m; l === xp && b > f && b < g && c > h && c < k;) a.Bb[b][c] = m, e ? c += d : b += d, l = a.Bb[b][c]
    }

    function up(a, b, c, d, e, f) {
        if (null !== a.Bb) {
            a.abort = !1;
            var g = b.x,
                h = b.y;
            if (tp(a, g, h) && (g -= a.Md, g /= a.kc, h -= a.Nd, h /= a.lc, b = d.x, d = d.y, tp(a, b, d)))
                if (b -= a.Md, b /= a.kc, d -= a.Nd, d /= a.lc, 1 >= Math.abs(g - b) && 1 >= Math.abs(h - d)) a.abort = !0;
                else {
                    var k = f.x,
                        l = f.y,
                        m = f.x + f.width,
                        n = f.y + f.height;
                    k -= a.Md;
                    k /= a.kc;
                    l -= a.Nd;
                    l /= a.lc;
                    m -= a.Md;
                    m /= a.kc;
                    n -= a.Nd;
                    n /= a.lc;
                    f = Math.max(0, Math.min(a.Rj, k | 0));
                    m = Math.min(a.Rj, Math.max(0, m | 0));
                    l = Math.max(0, Math.min(a.Sj, l | 0));
                    n = Math.min(a.Sj, Math.max(0, n | 0));
                    g |= 0;
                    h |= 0;
                    b |= 0;
                    d |= 0;
                    k = 0 === c || 90 === c ?
                        1 : -1;
                    c = 90 === c || 270 === c;
                    a.Bb[g][h] === xp ? (Mp(a, g, h, k, c, f, m, l, n), Mp(a, g, h, 1, !c, f, m, l, n), Mp(a, g, h, -1, !c, f, m, l, n)) : Mp(a, g, h, k, c, g, h, g, h);
                    a.Bb[b][d] === xp ? (Np(a, b, d, 0 === e || 90 === e ? 1 : -1, 90 === e || 270 === e, f, m, l, n), Np(a, b, d, 1, !(90 === e || 270 === e), f, m, l, n), Np(a, b, d, -1, !(90 === e || 270 === e), f, m, l, n)) : Np(a, b, d, k, c, b, d, b, d);
                    a.abort || (Lp(a, g, h, 1, !1, f, m, l, n), Lp(a, g, h, -1, !1, f, m, l, n), Lp(a, g, h, 1, !0, f, m, l, n), Lp(a, g, h, -1, !0, f, m, l, n))
                }
        }
    }
    ma.Object.defineProperties(tk.prototype, {
        bounds: {
            get: function () {
                return new N(this.Md, this.Nd, this.wo - this.Md, this.xo - this.Nd)
            }
        },
        dm: {
            get: function () {
                return this.kc
            },
            set: function (a) {
                0 < a && a !== this.kc && (this.kc = a, this.initialize(this.bounds))
            }
        },
        cm: {
            get: function () {
                return this.lc
            },
            set: function (a) {
                0 < a && a !== this.lc && (this.lc = a, this.initialize(this.bounds))
            }
        }
    });
    var xp = 0,
        zp = 1,
        wp = 999999,
        Kp = wp + 1;
    tk.className = "PositionArray";

    function qp() {
        Ya(this);
        this.port = this.node = null;
        this.Xd = [];
        this.yq = !1
    }
    qp.prototype.toString = function () {
        for (var a = this.Xd, b = this.node.toString() + " " + a.length.toString() + ":", c = 0; c < a.length; c++) {
            var d = a[c];
            null !== d && (b += "\n  " + d.toString())
        }
        return b
    };

    function Op(a, b, c, d) {
        b = b.offsetY;
        switch (b) {
            case 8:
                return 90;
            case 2:
                return 180;
            case 1:
                return 270;
            case 4:
                return 0
        }
        switch (b) {
            case 9:
                return 180 < c ? 270 : 90;
            case 6:
                return 90 < c && 270 >= c ? 180 : 0
        }
        a = 180 * Math.atan2(a.height, a.width) / Math.PI;
        switch (b) {
            case 3:
                return c > a && c <= 180 + a ? 180 : 270;
            case 5:
                return c > 180 - a && c <= 360 - a ? 270 : 0;
            case 12:
                return c > a && c <= 180 + a ? 90 : 0;
            case 10:
                return c > 180 - a && c <= 360 - a ? 180 : 90;
            case 7:
                return 90 < c && c <= 180 + a ? 180 : c > 180 + a && c <= 360 - a ? 270 : 0;
            case 13:
                return 180 < c && c <= 360 - a ? 270 : c > a && 180 >= c ? 90 : 0;
            case 14:
                return c >
                    a && c <= 180 - a ? 90 : c > 180 - a && 270 >= c ? 180 : 0;
            case 11:
                return c > 180 - a && c <= 180 + a ? 180 : c > 180 + a ? 270 : 90
        }
        d && 15 !== b && (c -= 15, 0 > c && (c += 360));
        return c > a && c < 180 - a ? 90 : c >= 180 - a && c <= 180 + a ? 180 : c > 180 + a && c < 360 - a ? 270 : 0
    }
    qp.prototype.nm = function () {
        this.Xd.length = 0
    };

    function rp(a, b) {
        var c = a.Xd;
        if (0 === c.length) {
            a: if (!a.yq) {
                c = a.yq;
                a.yq = !0;
                var d = null,
                    e = a.node,
                    f = e instanceof T ? e : null;
                if (null === f || f.isSubGraphExpanded) var g = e.isTreeExpanded ? e.findLinksConnected(a.port.portId) : e.Jx();
                else {
                    if (!f.actualBounds.v()) {
                        a.yq = c;
                        break a
                    }
                    d = f;
                    g = d.qv()
                }
                f = a.Xd.length = 0;
                var h = a.port.ga(vc, I.alloc()),
                    k = a.port.ga(Gc, I.alloc());
                e = N.allocAt(h.x, h.y, 0, 0);
                e.He(k);
                I.free(h);
                I.free(k);
                h = I.allocAt(e.x + e.width / 2, e.y + e.height / 2);
                k = a.port.Xi();
                for (g = g.iterator; g.next();) {
                    var l = g.value;
                    if (l.isVisible() &&
                        l.fromPort !== l.toPort) {
                        var m = l.fromPort === a.port || null !== l.fromNode && l.fromNode.Wd(d),
                            n = l.computeSpot(m, a.port);
                        if (n.yf() && (m = m ? l.toPort : l.fromPort, null !== m)) {
                            var p = m.part;
                            if (null !== p) {
                                var r = p.findVisibleNode();
                                null !== r && r !== p && (p = r, m = p.port);
                                m = l.computeOtherPoint(p, m);
                                p = h.Ta(m);
                                p -= k;
                                0 > p && (p += 360);
                                n = Op(e, n, p, l.isOrthogonal);
                                0 === n ? (n = 4, 180 < p && (p -= 360)) : n = 90 === n ? 8 : 180 === n ? 2 : 1;
                                r = a.Xd[f];
                                void 0 === r ? (r = new Pp(l, p, n), a.Xd[f] = r) : (r.link = l, r.angle = p, r.yc = n);
                                r.Qv.set(m);
                                f++
                            }
                        }
                    }
                }
                I.free(h);
                a.Xd.sort(qp.prototype.l);
                k = a.Xd.length;
                d = -1;
                for (f = h = 0; f < k; f++) g = a.Xd[f], void 0 !== g && (g.yc !== d && (d = g.yc, h = 0), g.pq = h, h++);
                d = -1;
                h = 0;
                for (f = k - 1; 0 <= f; f--) k = a.Xd[f], void 0 !== k && (k.yc !== d && (d = k.yc, h = k.pq + 1), k.em = h);
                f = a.Xd;
                n = a.port;
                d = a.node.portSpreading;
                h = I.alloc();
                k = I.alloc();
                g = I.alloc();
                l = I.alloc();
                n.ga(vc, h);
                n.ga(yc, k);
                n.ga(Gc, g);
                n.ga(Cc, l);
                r = p = m = n = 0;
                if (d === $o)
                    for (var q = 0; q < f.length; q++) {
                        var u = f[q];
                        if (null !== u) {
                            var v = u.link.computeThickness();
                            switch (u.yc) {
                                case 8:
                                    p += v;
                                    break;
                                case 2:
                                    r += v;
                                    break;
                                case 1:
                                    n += v;
                                    break;
                                default:
                                case 4:
                                    m +=
                                        v
                            }
                        }
                    }
                var w = q = 0,
                    y = 1,
                    z = u = 0;
                for (v = 0; v < f.length; v++) {
                    var A = f[v];
                    if (null !== A) {
                        if (q !== A.yc) {
                            q = A.yc;
                            switch (q) {
                                case 8:
                                    var C = g;
                                    w = l;
                                    break;
                                case 2:
                                    C = l;
                                    w = h;
                                    break;
                                case 1:
                                    C = h;
                                    w = k;
                                    break;
                                default:
                                case 4:
                                    C = k, w = g
                            }
                            u = w.x - C.x;
                            z = w.y - C.y;
                            switch (q) {
                                case 8:
                                    p > Math.abs(u) ? (y = Math.abs(u) / p, p = Math.abs(u)) : y = 1;
                                    break;
                                case 2:
                                    r > Math.abs(z) ? (y = Math.abs(z) / r, r = Math.abs(z)) : y = 1;
                                    break;
                                case 1:
                                    n > Math.abs(u) ? (y = Math.abs(u) / n, n = Math.abs(u)) : y = 1;
                                    break;
                                default:
                                case 4:
                                    m > Math.abs(z) ? (y = Math.abs(z) / m, m = Math.abs(z)) : y = 1
                            }
                            w = 0
                        }
                        var G = A.wq;
                        if (d === $o) {
                            A =
                                A.link.computeThickness();
                            A *= y;
                            G.set(C);
                            switch (q) {
                                case 8:
                                    G.x = C.x + u / 2 + p / 2 - w - A / 2;
                                    break;
                                case 2:
                                    G.y = C.y + z / 2 + r / 2 - w - A / 2;
                                    break;
                                case 1:
                                    G.x = C.x + u / 2 - n / 2 + w + A / 2;
                                    break;
                                default:
                                case 4:
                                    G.y = C.y + z / 2 - m / 2 + w + A / 2
                            }
                            w += A
                        } else {
                            var L = .5;
                            d === Mo && (L = (A.pq + 1) / (A.em + 1));
                            G.x = C.x + u * L;
                            G.y = C.y + z * L
                        }
                    }
                }
                I.free(h);
                I.free(k);
                I.free(g);
                I.free(l);
                C = a.Xd;
                for (f = 0; f < C.length; f++) d = C[f], null !== d && (d.ov = a.computeEndSegmentLength(d));
                a.yq = c;
                N.free(e)
            }c = a.Xd
        }
        for (a = 0; a < c.length; a++)
            if (e = c[a], null !== e && e.link === b) return e;
        return null
    }
    qp.prototype.l = function (a, b) {
        return a === b ? 0 : null === a ? -1 : null === b ? 1 : a.yc < b.yc ? -1 : a.yc > b.yc ? 1 : a.angle < b.angle ? -1 : a.angle > b.angle ? 1 : 0
    };
    qp.prototype.computeEndSegmentLength = function (a) {
        var b = a.link,
            c = b.computeEndSegmentLength(this.node, this.port, uc, b.fromPort === this.port),
            d = a.pq;
        if (0 > d) return c;
        var e = a.em;
        if (1 >= e || !b.isOrthogonal) return c;
        b = a.Qv;
        var f = a.wq;
        if (2 === a.yc || 8 === a.yc) d = e - 1 - d;
        return ((a = 2 === a.yc || 4 === a.yc) ? b.y < f.y : b.x < f.x) ? c + 8 * d : (a ? b.y === f.y : b.x === f.x) ? c : c + 8 * (e - 1 - d)
    };
    qp.className = "Knot";

    function Pp(a, b, c) {
        this.link = a;
        this.angle = b;
        this.yc = c;
        this.Qv = new I;
        this.em = this.pq = 0;
        this.wq = new I;
        this.ov = 0
    }
    Pp.prototype.toString = function () {
        return this.link.toString() + " " + this.angle.toString() + " " + this.yc.toString() + ":" + this.pq.toString() + "/" + this.em.toString() + " " + this.wq.toString() + " " + this.ov.toString() + " " + this.Qv.toString()
    };
    Pp.className = "LinkInfo";

    function dl() {
        this.yh = this.Yg = Zc;
        this.xh = this.Xg = this.wh = this.Wg = NaN;
        this.Tp = this.Kn = null;
        this.Up = this.Ln = Infinity
    }
    dl.prototype.copy = function () {
        var a = new dl;
        a.Yg = this.Yg.G();
        a.yh = this.yh.G();
        a.Wg = this.Wg;
        a.wh = this.wh;
        a.Xg = this.Xg;
        a.xh = this.xh;
        a.Kn = this.Kn;
        a.Tp = this.Tp;
        a.Ln = this.Ln;
        a.Up = this.Up;
        return a
    };
    dl.className = "LinkSettings";

    function Ci() {
        Ya(this);
        this.I = this.B = null;
        this.oi = this.ao = !0;
        this.ho = !1;
        this.Wm = (new I(0, 0)).freeze();
        this.co = !0;
        this.bo = null;
        this.Qw = "";
        this.u = null;
        this.fo = !1;
        this.l = null
    }
    Ci.prototype.cloneProtected = function (a) {
        a.ao = this.ao;
        a.oi = this.oi;
        a.ho = this.ho;
        a.Wm.assign(this.Wm);
        a.co = this.co;
        a.bo = this.bo;
        a.Qw = this.Qw;
        a.fo = !0
    };
    Ci.prototype.copy = function () {
        var a = new this.constructor;
        this.cloneProtected(a);
        return a
    };
    Ci.prototype.cb = function () {};
    Ci.prototype.toString = function () {
        var a = Ia(this.constructor);
        a += "(";
        null !== this.group && (a += " in " + this.group);
        null !== this.diagram && (a += " for " + this.diagram);
        return a + ")"
    };
    Ci.prototype.C = function () {
        if (this.isValidLayout) {
            var a = this.diagram;
            if (null !== a && !a.undoManager.isUndoingRedoing) {
                var b = a.animationManager;
                !b.isTicking && (b.defaultAnimation.isAnimating && b.Xc(), this.isOngoing && a.kk || this.isInitial && !a.kk) && (this.isValidLayout = !1, a.Pb())
            }
        }
    };
    Ci.prototype.createNetwork = function () {
        return new Qp(this)
    };
    Ci.prototype.makeNetwork = function (a) {
        var b = this.createNetwork();
        a instanceof R ? (b.xg(a.nodes, !0), b.xg(a.links, !0)) : a instanceof T ? b.xg(a.memberParts) : b.xg(a.iterator);
        return b
    };
    Ci.prototype.updateParts = function () {
        var a = this.diagram;
        if (null === a && null !== this.network)
            for (var b = this.network.vertexes.iterator; b.next();) {
                var c = b.value.node;
                if (null !== c && (a = c.diagram, null !== a)) break
            }
        this.isValidLayout = !0;
        try {
            null !== a && a.ua("Layout"), this.commitLayout()
        } finally {
            null !== a && a.Ua("Layout")
        }
    };
    Ci.prototype.commitLayout = function () {
        if (null !== this.network) {
            for (var a = this.network.vertexes.iterator; a.next();) a.value.commit();
            if (this.isRouting)
                for (a = this.network.edges.iterator; a.next();) a.value.commit()
        }
    };
    Ci.prototype.doLayout = function (a) {
        var b = new F;
        a instanceof R ? (Rp(this, b, a.nodes, !0, this.uk, !0, !1, !0), Rp(this, b, a.parts, !0, this.uk, !0, !1, !0)) : a instanceof T ? Rp(this, b, a.memberParts, !1, this.uk, !0, !1, !0) : b.addAll(a.iterator);
        var c = b.count;
        if (0 < c) {
            a = this.diagram;
            null !== a && a.ua("Layout");
            c = Math.ceil(Math.sqrt(c));
            this.arrangementOrigin = this.initialOrigin(this.arrangementOrigin);
            var d = this.arrangementOrigin.x,
                e = d,
                f = this.arrangementOrigin.y,
                g = 0,
                h = 0;
            for (b = b.iterator; b.next();) {
                var k = b.value;
                Sp(k);
                var l = k.measuredBounds,
                    m = l.width;
                l = l.height;
                k.moveTo(e, f);
                k instanceof T && (k.uk = !1);
                e += Math.max(m, 50) + 20;
                h = Math.max(h, Math.max(l, 50));
                g >= c - 1 ? (g = 0, e = d, f += h + 20, h = 0) : g++
            }
            null !== a && a.Ua("Layout")
        }
        this.isValidLayout = !0
    };
    Ci.prototype.uk = function (a) {
        return !a.location.v() || a instanceof T && a.uk ? !0 : !1
    };

    function Rp(a, b, c, d, e, f, g, h) {
        for (c = c.iterator; c.next();) {
            var k = c.value;
            d && !k.isTopLevel || null !== e && !e(k) || !k.canLayout() || (f && k instanceof W ? k.isLinkLabel || (k instanceof T ? null === k.layout ? Rp(a, b, k.memberParts, !1, e, f, g, h) : (Sp(k), b.add(k)) : (Sp(k), b.add(k))) : g && k instanceof S ? b.add(k) : !h || !k.Wb() || k instanceof W || (Sp(k), b.add(k)))
        }
    }

    function Sp(a) {
        var b = a.actualBounds;
        (0 === b.width || 0 === b.height || isNaN(b.width) || isNaN(b.height)) && a.yb()
    }
    Ci.prototype.Zi = function (a, b) {
        var c = this.boundsComputation;
        if (null !== c) return b || (b = new N), c(a, this, b);
        if (!b) return a.actualBounds;
        b.set(a.actualBounds);
        return b
    };
    Ci.prototype.yx = function (a) {
        var b = new F;
        a instanceof R ? (Rp(this, b, a.nodes, !0, null, !0, !0, !0), Rp(this, b, a.links, !0, null, !0, !0, !0), Rp(this, b, a.parts, !0, null, !0, !0, !0)) : a instanceof T ? Rp(this, b, a.memberParts, !1, null, !0, !0, !0) : Rp(this, b, a.iterator, !1, null, !0, !0, !0);
        return b
    };
    Ci.prototype.initialOrigin = function (a) {
        var b = this.group;
        if (null !== b) {
            var c = b.position.copy();
            (isNaN(c.x) || isNaN(c.y)) && c.set(a);
            b = b.placeholder;
            null !== b && (c = b.ga(vc), (isNaN(c.x) || isNaN(c.y)) && c.set(a), a = b.padding, c.x += a.left, c.y += a.top);
            return c
        }
        return a
    };
    ma.Object.defineProperties(Ci.prototype, {
        diagram: {
            get: function () {
                return this.B
            },
            set: function (a) {
                this.B = a
            }
        },
        group: {
            get: function () {
                return this.I
            },
            set: function (a) {
                this.I !== a && (this.I = a, null !== a && (this.B = a.diagram))
            }
        },
        isOngoing: {
            get: function () {
                return this.ao
            },
            set: function (a) {
                this.ao !== a && (this.ao = a)
            }
        },
        isInitial: {
            get: function () {
                return this.oi
            },
            set: function (a) {
                this.oi = a;
                a || (this.fo = !0)
            }
        },
        isViewportSized: {
            get: function () {
                return this.ho
            },
            set: function (a) {
                this.ho !== a && (this.ho = a) && this.C()
            }
        },
        isRouting: {
            get: function () {
                return this.co
            },
            set: function (a) {
                this.co !== a && (this.co = a)
            }
        },
        isRealtime: {
            get: function () {
                return this.bo
            },
            set: function (a) {
                this.bo !== a && (this.bo = a)
            }
        },
        isValidLayout: {
            get: function () {
                return this.fo
            },
            set: function (a) {
                this.fo !== a && (this.fo = a, a || (a = this.diagram, null !==
                    a && (a.If = !0)))
            }
        },
        network: {
            get: function () {
                return this.l
            },
            set: function (a) {
                this.l !== a && (this.l = a, null !== a && (a.layout = this))
            }
        },
        boundsComputation: {
            get: function () {
                return this.u
            },
            set: function (a) {
                this.u !== a && (this.u = a, this.C())
            }
        },
        arrangementOrigin: {
            get: function () {
                return this.Wm
            },
            set: function (a) {
                this.Wm.w(a) || (this.Wm.assign(a), this.C())
            }
        }
    });
    Ci.prototype.collectParts = Ci.prototype.yx;
    Ci.prototype.getLayoutBounds = Ci.prototype.Zi;
    Ci.prototype.invalidateLayout = Ci.prototype.C;
    Ci.className = "Layout";

    function Qp(a) {
        Ya(this);
        this.ic = a;
        this.nf = new F;
        this.de = new F;
        this.Ct = new H;
        this.xt = new H
    }
    Qp.prototype.clear = function () {
        if (this.nf)
            for (var a = this.nf.iterator; a.next();) a.value.clear();
        if (this.de)
            for (a = this.de.iterator; a.next();) a.value.clear();
        this.nf = new F;
        this.de = new F;
        this.Ct = new H;
        this.xt = new H
    };
    Qp.prototype.toString = function (a) {
        void 0 === a && (a = 0);
        var b = "LayoutNetwork" + (null !== this.layout ? "(" + this.layout.toString() + ")" : "");
        if (0 >= a) return b;
        b += " vertexes: " + this.nf.count + " edges: " + this.de.count;
        if (1 < a) {
            for (var c = this.nf.iterator; c.next();) b += "\n    " + c.value.toString(a - 1);
            for (c = this.de.iterator; c.next();) b += "\n    " + c.value.toString(a - 1)
        }
        return b
    };
    Qp.prototype.createVertex = function () {
        return new Tp(this)
    };
    Qp.prototype.createEdge = function () {
        return new Up(this)
    };
    Qp.prototype.xg = function (a, b, c) {
        if (null !== a) {
            void 0 === b && (b = !1);
            void 0 === c && (c = null);
            null === c && (c = function (a) {
                if (a instanceof W) return !a.isLinkLabel;
                if (a instanceof S) {
                    var b = a.fromNode;
                    if (null === b || b.isLinkLabel) return !1;
                    a = a.toNode;
                    return null === a || a.isLinkLabel ? !1 : !0
                }
                return !1
            });
            for (a = a.iterator; a.next();) {
                var d = a.value;
                if (d instanceof W && (!b || d.isTopLevel) && d.canLayout() && c(d))
                    if (d instanceof T && null === d.layout) this.xg(d.memberParts, !1);
                    else if (null === this.Wi(d)) {
                    var e = this.createVertex();
                    e.node =
                        d;
                    this.Eh(e)
                }
            }
            for (a.reset(); a.next();)
                if (d = a.value, d instanceof S && (!b || d.isTopLevel) && d.canLayout() && c(d) && null === this.kq(d)) {
                    var f = d.fromNode;
                    e = d.toNode;
                    null !== f && null !== e && f !== e && (f = this.findGroupVertex(f), e = this.findGroupVertex(e), null !== f && null !== e && this.mk(f, e, d))
                }
        }
    };
    Qp.prototype.findGroupVertex = function (a) {
        if (null === a) return null;
        var b = a.findVisibleNode();
        if (null === b) return null;
        a = this.Wi(b);
        if (null !== a) return a;
        for (b = b.containingGroup; null !== b;) {
            a = this.Wi(b);
            if (null !== a) return a;
            b = b.containingGroup
        }
        return null
    };
    t = Qp.prototype;
    t.Eh = function (a) {
        if (null !== a) {
            this.nf.add(a);
            var b = a.node;
            null !== b && this.Ct.add(b, a);
            a.network = this
        }
    };
    t.am = function (a) {
        if (null === a) return null;
        var b = this.Wi(a);
        null === b && (b = this.createVertex(), b.node = a, this.Eh(b));
        return b
    };
    t.nv = function (a) {
        if (null !== a && Vp(this, a)) {
            for (var b = a.Gg, c = b.count - 1; 0 <= c; c--) {
                var d = b.L(c);
                this.ek(d)
            }
            b = a.yg;
            for (a = b.count - 1; 0 <= a; a--) c = b.L(a), this.ek(c)
        }
    };

    function Vp(a, b) {
        if (null === b) return !1;
        var c = a.nf.remove(b);
        c && (b = b.node, null !== b && a.Ct.remove(b));
        return c
    }
    t.az = function (a) {
        null !== a && (a = this.Wi(a), null !== a && this.nv(a))
    };
    t.Wi = function (a) {
        return null === a ? null : this.Ct.H(a)
    };
    t.bq = function (a) {
        if (null !== a) {
            Wp(this, a);
            var b = a.toVertex;
            null !== b && b.ev(a);
            b = a.fromVertex;
            null !== b && b.cv(a)
        }
    };

    function Wp(a, b) {
        if (null !== b) {
            a.de.add(b);
            var c = b.link;
            null !== c && null === a.kq(c) && a.xt.add(c, b);
            b.network = a
        }
    }
    t.Hy = function (a) {
        if (null === a) return null;
        var b = a.fromNode,
            c = a.toNode,
            d = this.kq(a);
        null === d ? (d = this.createEdge(), d.link = a, null !== b && (d.fromVertex = this.am(b)), null !== c && (d.toVertex = this.am(c)), this.bq(d)) : (null !== b ? d.fromVertex = this.am(b) : d.fromVertex = null, null !== c ? d.toVertex = this.am(c) : d.toVertex = null);
        return d
    };
    t.ek = function (a) {
        if (null !== a) {
            var b = a.toVertex;
            null !== b && b.mv(a);
            b = a.fromVertex;
            null !== b && b.lv(a);
            Xp(this, a)
        }
    };

    function Xp(a, b) {
        null !== b && a.de.remove(b) && (b = b.link, null !== b && a.xt.remove(b))
    }
    t.$y = function (a) {
        null !== a && (a = this.kq(a), null !== a && this.ek(a))
    };
    t.kq = function (a) {
        return null === a ? null : this.xt.H(a)
    };
    t.mk = function (a, b, c) {
        if (null === a || null === b) return null;
        if (a.network === this && b.network === this) {
            var d = this.createEdge();
            d.link = c;
            d.fromVertex = a;
            d.toVertex = b;
            this.bq(d);
            return d
        }
        return null
    };
    t.Em = function (a) {
        if (null !== a) {
            var b = a.fromVertex,
                c = a.toVertex;
            null !== b && null !== c && (b.lv(a), c.mv(a), a.Em(), b.ev(a), c.cv(a))
        }
    };
    t.iq = function () {
        for (var a = Fa(), b = this.de.iterator; b.next();) {
            var c = b.value;
            c.fromVertex === c.toVertex && a.push(c)
        }
        b = a.length;
        for (c = 0; c < b; c++) this.ek(a[c]);
        Ha(a)
    };
    Qp.prototype.deleteArtificialVertexes = function () {
        for (var a = Fa(), b = this.nf.iterator; b.next();) {
            var c = b.value;
            null === c.node && a.push(c)
        }
        c = a.length;
        for (b = 0; b < c; b++) this.nv(a[b]);
        b = Fa();
        for (c = this.de.iterator; c.next();) {
            var d = c.value;
            null === d.link && b.push(d)
        }
        c = b.length;
        for (d = 0; d < c; d++) this.ek(b[d]);
        Ha(a);
        Ha(b)
    };

    function Yp(a) {
        for (var b = Fa(), c = a.de.iterator; c.next();) {
            var d = c.value;
            null !== d.fromVertex && null !== d.toVertex || b.push(d)
        }
        c = b.length;
        for (d = 0; d < c; d++) a.ek(b[d]);
        Ha(b)
    }
    Qp.prototype.py = function (a) {
        void 0 === a && (a = !0);
        a && (this.deleteArtificialVertexes(), Yp(this), this.iq());
        a = new E;
        for (var b = !0; b;) {
            b = !1;
            for (var c = this.nf.iterator; c.next();) {
                var d = c.value;
                if (0 < d.Gg.count || 0 < d.yg.count) {
                    b = this.layout.createNetwork();
                    a.add(b);
                    Zp(this, b, d);
                    b = !0;
                    break
                }
            }
        }
        a.sort(function (a, b) {
            return null === a || null === b || a === b ? 0 : b.vertexes.count - a.vertexes.count
        });
        return a
    };

    function Zp(a, b, c) {
        if (null !== c && c.network !== b) {
            Vp(a, c);
            b.Eh(c);
            for (var d = c.sourceEdges; d.next();) {
                var e = d.value;
                e.network !== b && (Xp(a, e), Wp(b, e), Zp(a, b, e.fromVertex))
            }
            for (d = c.destinationEdges; d.next();) c = d.value, c.network !== b && (Xp(a, c), Wp(b, c), Zp(a, b, c.toVertex))
        }
    }
    Qp.prototype.fz = function () {
        for (var a = new F, b = this.nf.iterator; b.next();) a.add(b.value.node);
        for (b = this.de.iterator; b.next();) a.add(b.value.link);
        return a
    };
    ma.Object.defineProperties(Qp.prototype, {
        layout: {
            get: function () {
                return this.ic
            },
            set: function (a) {
                null !== a && (this.ic = a)
            }
        },
        vertexes: {
            get: function () {
                return this.nf
            }
        },
        edges: {
            get: function () {
                return this.de
            }
        }
    });
    Qp.prototype.findAllParts = Qp.prototype.fz;
    Qp.prototype.splitIntoSubNetworks = Qp.prototype.py;
    Qp.prototype.deleteSelfEdges = Qp.prototype.iq;
    Qp.prototype.reverseEdge = Qp.prototype.Em;
    Qp.prototype.linkVertexes = Qp.prototype.mk;
    Qp.prototype.findEdge = Qp.prototype.kq;
    Qp.prototype.deleteLink = Qp.prototype.$y;
    Qp.prototype.deleteEdge = Qp.prototype.ek;
    Qp.prototype.addLink = Qp.prototype.Hy;
    Qp.prototype.addEdge = Qp.prototype.bq;
    Qp.prototype.findVertex = Qp.prototype.Wi;
    Qp.prototype.deleteNode = Qp.prototype.az;
    Qp.prototype.deleteVertex = Qp.prototype.nv;
    Qp.prototype.addNode = Qp.prototype.am;
    Qp.prototype.addVertex = Qp.prototype.Eh;
    Qp.prototype.addParts = Qp.prototype.xg;
    Qp.className = "LayoutNetwork";

    function Tp(a) {
        Ya(this);
        this.Yc = a;
        this.l = (new N(0, 0, 10, 10)).freeze();
        this.u = (new I(5, 5)).freeze();
        this.zi = this.hb = null;
        this.Gg = new E;
        this.yg = new E
    }
    Tp.prototype.clear = function () {
        this.zi = this.hb = null;
        this.Gg = new E;
        this.yg = new E
    };
    Tp.prototype.toString = function (a) {
        void 0 === a && (a = 0);
        var b = "LayoutVertex#" + lb(this);
        if (0 < a && (b += null !== this.node ? "(" + this.node.toString() + ")" : "", 1 < a)) {
            a = "";
            for (var c = !0, d = this.Gg.iterator; d.next();) {
                var e = d.value;
                c ? c = !1 : a += ",";
                a += e.toString(0)
            }
            e = "";
            c = !0;
            for (d = this.yg.iterator; d.next();) {
                var f = d.value;
                c ? c = !1 : e += ",";
                e += f.toString(0)
            }
            b += " sources: " + a + " destinations: " + e
        }
        return b
    };
    Tp.prototype.commit = function () {
        var a = this.hb;
        if (null !== a) {
            var b = this.bounds,
                c = a.bounds;
            za(c) ? (c.x = b.x, c.y = b.y, c.width = b.width, c.height = b.height) : a.bounds = b.copy()
        } else if (a = this.node, null !== a) {
            b = this.bounds;
            if (!(a instanceof T)) {
                c = N.alloc();
                var d = this.network.layout.Zi(a, c),
                    e = a.locationObject.ga(Ac);
                if (d.v() && e.v()) {
                    a.moveTo(b.x + this.focusX - (e.x - d.x), b.y + this.focusY - (e.y - d.y));
                    N.free(c);
                    return
                }
                N.free(c)
            }
            a.moveTo(b.x, b.y)
        }
    };
    Tp.prototype.ev = function (a) {
        null !== a && (this.Gg.contains(a) || this.Gg.add(a))
    };
    Tp.prototype.mv = function (a) {
        null !== a && this.Gg.remove(a)
    };
    Tp.prototype.cv = function (a) {
        null !== a && (this.yg.contains(a) || this.yg.add(a))
    };
    Tp.prototype.lv = function (a) {
        null !== a && this.yg.remove(a)
    };

    function $p(a, b) {
        a = a.zi;
        b = b.zi;
        return a ? b ? (a = a.text, b = b.text, a < b ? -1 : a > b ? 1 : 0) : 1 : null !== b ? -1 : 0
    }
    ma.Object.defineProperties(Tp.prototype, {
        sourceEdgesArrayAccess: {
            get: function () {
                return this.Gg._dataArray
            }
        },
        destinationEdgesArrayAccess: {
            get: function () {
                return this.yg._dataArray
            }
        },
        data: {
            get: function () {
                return this.hb
            },
            set: function (a) {
                this.hb = a;
                if (null !== a) {
                    var b = a.bounds;
                    a = b.x;
                    var c = b.y,
                        d = b.width;
                    b = b.height;
                    this.u.h(d / 2, b / 2);
                    this.l.h(a, c, d, b)
                }
            }
        },
        node: {
            get: function () {
                return this.zi
            },
            set: function (a) {
                if (this.zi !== a) {
                    this.zi = a;
                    a.yb();
                    var b = this.network.layout,
                        c = N.alloc(),
                        d = b.Zi(a, c);
                    b = d.x;
                    var e = d.y,
                        f = d.width;
                    d = d.height;
                    isNaN(b) && (b = 0);
                    isNaN(e) && (e = 0);
                    this.l.h(b, e, f, d);
                    N.free(c);
                    if (!(a instanceof T) && (a = a.locationObject.ga(Ac), a.v())) {
                        this.u.h(a.x - b, a.y - e);
                        return
                    }
                    this.u.h(f / 2, d / 2)
                }
            }
        },
        bounds: {
            get: function () {
                return this.l
            },
            set: function (a) {
                this.l.w(a) || this.l.assign(a)
            }
        },
        focus: {
            get: function () {
                return this.u
            },
            set: function (a) {
                this.u.w(a) ||
                    this.u.assign(a)
            }
        },
        centerX: {
            get: function () {
                return this.l.x + this.u.x
            },
            set: function (a) {
                var b = this.l;
                b.x + this.u.x !== a && (b.ea(), b.x = a - this.u.x, b.freeze())
            }
        },
        centerY: {
            get: function () {
                return this.l.y + this.u.y
            },
            set: function (a) {
                var b = this.l;
                b.y + this.u.y !== a && (b.ea(), b.y = a - this.u.y, b.freeze())
            }
        },
        focusX: {
            get: function () {
                return this.u.x
            },
            set: function (a) {
                var b = this.u;
                b.x !== a && (b.ea(), b.x = a, b.freeze())
            }
        },
        focusY: {
            get: function () {
                return this.u.y
            },
            set: function (a) {
                var b = this.u;
                b.y !== a && (b.ea(), b.y = a, b.freeze())
            }
        },
        x: {
            get: function () {
                return this.l.x
            },
            set: function (a) {
                var b = this.l;
                b.x !== a && (b.ea(), b.x = a, b.freeze())
            }
        },
        y: {
            get: function () {
                return this.l.y
            },
            set: function (a) {
                var b = this.l;
                b.y !== a && (b.ea(), b.y = a, b.freeze())
            }
        },
        width: {
            get: function () {
                return this.l.width
            },
            set: function (a) {
                var b = this.l;
                b.width !== a && (b.ea(), b.width =
                    a, b.freeze())
            }
        },
        height: {
            get: function () {
                return this.l.height
            },
            set: function (a) {
                var b = this.l;
                b.height !== a && (b.ea(), b.height = a, b.freeze())
            }
        },
        network: {
            get: function () {
                return this.Yc
            },
            set: function (a) {
                this.Yc = a
            }
        },
        sourceVertexes: {
            get: function () {
                for (var a = new F, b = this.sourceEdges; b.next();) a.add(b.value.fromVertex);
                return a.iterator
            }
        },
        destinationVertexes: {
            get: function () {
                for (var a = new F, b =
                        this.destinationEdges; b.next();) a.add(b.value.toVertex);
                return a.iterator
            }
        },
        vertexes: {
            get: function () {
                for (var a = new F, b = this.sourceEdges; b.next();) a.add(b.value.fromVertex);
                for (b = this.destinationEdges; b.next();) a.add(b.value.toVertex);
                return a.iterator
            }
        },
        sourceEdges: {
            get: function () {
                return this.Gg.iterator
            }
        },
        destinationEdges: {
            get: function () {
                return this.yg.iterator
            }
        },
        edges: {
            get: function () {
                for (var a =
                        new E, b = this.sourceEdges; b.next();) a.add(b.value);
                for (b = this.destinationEdges; b.next();) a.add(b.value);
                return a.iterator
            }
        },
        edgesCount: {
            get: function () {
                return this.Gg.count + this.yg.count
            }
        }
    });
    Tp.prototype.deleteDestinationEdge = Tp.prototype.lv;
    Tp.prototype.addDestinationEdge = Tp.prototype.cv;
    Tp.prototype.deleteSourceEdge = Tp.prototype.mv;
    Tp.prototype.addSourceEdge = Tp.prototype.ev;
    Tp.className = "LayoutVertex";
    Tp.standardComparer = $p;
    Tp.smartComparer = function (a, b) {
        if (null !== a) {
            if (null !== b) {
                a = a.zi;
                var c = b.zi;
                if (null !== a) {
                    if (null !== c) {
                        b = a.text.toLocaleLowerCase().split(/([+\-]?[\.]?\d+(?:\.\d*)?(?:e[+\-]?\d+)?)/);
                        a = c.text.toLocaleLowerCase().split(/([+\-]?[\.]?\d+(?:\.\d*)?(?:e[+\-]?\d+)?)/);
                        for (c = 0; c < b.length; c++)
                            if ("" !== a[c] && void 0 !== a[c]) {
                                var d = parseFloat(b[c]),
                                    e = parseFloat(a[c]);
                                if (isNaN(d))
                                    if (isNaN(e)) {
                                        if (0 !== b[c].localeCompare(a[c])) return b[c].localeCompare(a[c])
                                    } else return 1;
                                else {
                                    if (isNaN(e)) return -1;
                                    if (0 !== d - e) return d -
                                        e
                                }
                            } else if ("" !== b[c]) return 1;
                        return "" !== a[c] && void 0 !== a[c] ? -1 : 0
                    }
                    return 1
                }
                return null !== c ? -1 : 0
            }
            return 1
        }
        return null !== b ? -1 : 0
    };

    function Up(a) {
        Ya(this);
        this.jd = a;
        this.tg = this.Vf = this.ul = this.hb = null
    }
    Up.prototype.clear = function () {
        this.tg = this.Vf = this.ul = this.hb = null
    };
    Up.prototype.toString = function (a) {
        void 0 === a && (a = 0);
        var b = "LayoutEdge#" + lb(this);
        0 < a && (b += null !== this.ul ? "(" + this.ul.toString() + ")" : "", 1 < a && (b += " " + (this.Vf ? this.Vf.toString() : "null") + " --\x3e " + (this.tg ? this.tg.toString() : "null")));
        return b
    };
    Up.prototype.Em = function () {
        var a = this.Vf;
        this.Vf = this.tg;
        this.tg = a
    };
    Up.prototype.commit = function () {};
    Up.prototype.Qx = function (a) {
        return this.tg === a ? this.Vf : this.Vf === a ? this.tg : null
    };
    ma.Object.defineProperties(Up.prototype, {
        network: {
            get: function () {
                return this.jd
            },
            set: function (a) {
                this.jd = a
            }
        },
        data: {
            get: function () {
                return this.hb
            },
            set: function (a) {
                this.hb !== a && (this.hb = a)
            }
        },
        link: {
            get: function () {
                return this.ul
            },
            set: function (a) {
                this.ul !== a && (this.ul = a)
            }
        },
        fromVertex: {
            get: function () {
                return this.Vf
            },
            set: function (a) {
                this.Vf !== a && (this.Vf = a)
            }
        },
        toVertex: {
            get: function () {
                return this.tg
            },
            set: function (a) {
                this.tg !== a && (this.tg = a)
            }
        }
    });
    Up.prototype.getOtherVertex = Up.prototype.Qx;
    Up.className = "LayoutEdge";

    function Lk() {
        Ci.call(this);
        this.isViewportSized = !0;
        this.Zp = this.$p = NaN;
        this.Ng = (new M(NaN, NaN)).freeze();
        this.ef = (new M(10, 10)).freeze();
        this.vb = aq;
        this.Ab = bq;
        this.Qc = cq;
        this.Kc = dq
    }
    la(Lk, Ci);
    Lk.prototype.cloneProtected = function (a) {
        Ci.prototype.cloneProtected.call(this, a);
        a.$p = this.$p;
        a.Zp = this.Zp;
        a.Ng.assign(this.Ng);
        a.ef.assign(this.ef);
        a.vb = this.vb;
        a.Ab = this.Ab;
        a.Qc = this.Qc;
        a.Kc = this.Kc
    };
    Lk.prototype.cb = function (a) {
        a.classType === Lk ? a === cq || a === eq || a === fq || a === gq ? this.sorting = a : a === bq || a === hq ? this.arrangement = a : a === aq || a === iq ? this.alignment = a : B("Unknown enum value: " + a) : Ci.prototype.cb.call(this, a)
    };
    Lk.prototype.doLayout = function (a) {
        this.arrangementOrigin = this.initialOrigin(this.arrangementOrigin);
        var b = this.yx(a);
        a = this.diagram;
        for (var c = b.copy().iterator; c.next();) {
            var d = c.value;
            if (!d.Kh() || null === d.fromNode && null === d.toNode) {
                if (d.yb(), d instanceof T)
                    for (d = d.memberParts; d.next();) b.remove(d.value)
            } else b.remove(d)
        }
        var e = b.na();
        if (0 !== e.length) {
            switch (this.sorting) {
                case gq:
                    e.reverse();
                    break;
                case cq:
                    e.sort(this.comparer);
                    break;
                case eq:
                    e.sort(this.comparer), e.reverse()
            }
            var f = this.wrappingColumn;
            isNaN(f) && (f = 0);
            var g = this.wrappingWidth;
            isNaN(g) && null !== a ? (b = a.padding, g = Math.max(a.viewportBounds.width - b.left - b.right, 0)) : g = Math.max(this.wrappingWidth, 0);
            0 >= f && 0 >= g && (f = 1);
            b = this.spacing.width;
            isFinite(b) || (b = 0);
            c = this.spacing.height;
            isFinite(c) || (c = 0);
            null !== a && a.ua("Layout");
            d = [];
            switch (this.alignment) {
                case iq:
                    var h = b,
                        k = c,
                        l = N.alloc(),
                        m = Math.max(this.cellSize.width, 1);
                    if (!isFinite(m))
                        for (var n = m = 0; n < e.length; n++) {
                            var p = this.Zi(e[n], l);
                            m = Math.max(m, p.width)
                        }
                    m = Math.max(m + h, 1);
                    n = Math.max(this.cellSize.height,
                        1);
                    if (!isFinite(n))
                        for (p = n = 0; p < e.length; p++) {
                            var r = this.Zi(e[p], l);
                            n = Math.max(n, r.height)
                        }
                    n = Math.max(n + k, 1);
                    p = this.arrangement;
                    for (var q = r = this.arrangementOrigin.x, u = this.arrangementOrigin.y, v = 0, w = 0, y = 0; y < e.length; y++) {
                        var z = e[y],
                            A = this.Zi(z, l),
                            C = Math.ceil((A.width + h) / m) * m,
                            G = Math.ceil((A.height + k) / n) * n;
                        switch (p) {
                            case hq:
                                var L = Math.abs(q - A.width);
                                break;
                            default:
                                L = q + A.width
                        }
                        if (0 < f && v > f - 1 || 0 < g && 0 < v && L - r > g) d.push(new N(0, u, g + h, w)), v = 0, q = r, u += w, w = 0;
                        w = Math.max(w, G);
                        switch (p) {
                            case hq:
                                A = -A.width;
                                break;
                            default:
                                A =
                                    0
                        }
                        z.moveTo(q + A, u);
                        switch (p) {
                            case hq:
                                q -= C;
                                break;
                            default:
                                q += C
                        }
                        v++
                    }
                    d.push(new N(0, u, g + h, w));
                    N.free(l);
                    break;
                case aq:
                    k = g;
                    m = f;
                    n = b;
                    p = c;
                    g = N.alloc();
                    r = Math.max(this.cellSize.width, 1);
                    f = u = l = 0;
                    h = I.alloc();
                    for (q = 0; q < e.length; q++) w = e[q], v = this.Zi(w, g), w = w.vf(w.locationObject, w.locationSpot, h), l = Math.max(l, w.x), u = Math.max(u, v.width - w.x), f = Math.max(f, w.y);
                    q = this.arrangement;
                    switch (q) {
                        case hq:
                            l += n;
                            break;
                        default:
                            u += n
                    }
                    r = isFinite(r) ? Math.max(r + n, 1) : Math.max(l + u, 1);
                    var K = w = this.arrangementOrigin.x;
                    y = this.arrangementOrigin.y;
                    u = 0;
                    k >= l && (k -= l);
                    l = z = 0;
                    C = Math.max(this.cellSize.height, 1);
                    A = f = 0;
                    G = !0;
                    v = I.alloc();
                    for (L = 0; L < e.length; L++) {
                        var V = e[L],
                            Q = this.Zi(V, g),
                            ca = V.vf(V.locationObject, V.locationSpot, h);
                        if (0 < u) switch (q) {
                            case hq:
                                K = (K - w - (Q.width - ca.x)) / r;
                                K = J.$(Math.round(K), K) ? Math.round(K) : Math.floor(K);
                                K = K * r + w;
                                break;
                            default:
                                K = (K - w + ca.x) / r, K = J.$(Math.round(K), K) ? Math.round(K) : Math.ceil(K), K = K * r + w
                        } else switch (q) {
                            case hq:
                                z = K + ca.x + Q.width;
                                break;
                            default:
                                z = K - ca.x
                        }
                        switch (q) {
                            case hq:
                                var pa = -(K + ca.x) + z;
                                break;
                            default:
                                pa = K + Q.width - ca.x -
                                    z
                        }
                        if (0 < m && u > m - 1 || 0 < k && 0 < u && pa > k) {
                            d.push(new N(0, G ? y - f : y, k + n, A + f + p));
                            for (K = 0; K < u && L !== u; K++) {
                                pa = e[L - u + K];
                                var O = pa.vf(pa.locationObject, pa.locationSpot, v);
                                pa.moveTo(pa.position.x, pa.position.y + f - O.y)
                            }
                            A += p;
                            y = G ? y + A : y + (A + f);
                            u = A = f = 0;
                            K = w;
                            G = !1
                        }
                        K === w && (l = q === hq ? Math.max(l, Q.width - ca.x) : Math.min(l, -ca.x));
                        f = Math.max(f, ca.y);
                        A = Math.max(A, Q.height - ca.y);
                        isFinite(C) && (A = Math.max(A, Math.max(Q.height, C) - ca.y));
                        G ? V.moveTo(K - ca.x, y - ca.y) : V.moveTo(K - ca.x, y);
                        switch (q) {
                            case hq:
                                K -= ca.x + n;
                                break;
                            default:
                                K += Q.width - ca.x +
                                    n
                        }
                        u++
                    }
                    d.push(new N(0, y, k + n, (G ? A : A + f) + p));
                    if (e.length !== u)
                        for (k = 0; k < u; k++) m = e[e.length - u + k], n = m.vf(m.locationObject, m.locationSpot, h), m.moveTo(m.position.x, m.position.y + f - n.y);
                    I.free(h);
                    I.free(v);
                    if (q === hq)
                        for (e = 0; e < d.length; e++) f = d[e], f.width += l, f.x -= l;
                    else
                        for (e = 0; e < d.length; e++) f = d[e], f.x > l && (f.width += f.x - l, f.x = l);
                    N.free(g)
            }
            for (h = f = g = e = 0; h < d.length; h++) k = d[h], e = Math.min(e, k.x), g = Math.min(g, k.y), f = Math.max(f, k.x + k.width);
            this.arrangement === hq ? this.commitLayers(d, new I(e + b / 2 - (f + e), g - c / 2)) : this.commitLayers(d,
                new I(e - b / 2, g - c / 2));
            null !== a && a.Ua("Layout");
            this.isValidLayout = !0
        }
    };
    Lk.prototype.commitLayers = function () {};

    function dq(a, b) {
        a = a.text;
        b = b.text;
        return a < b ? -1 : a > b ? 1 : 0
    }
    ma.Object.defineProperties(Lk.prototype, {
        wrappingWidth: {
            get: function () {
                return this.$p
            },
            set: function (a) {
                this.$p !== a && (0 < a || isNaN(a)) && (this.$p = a, this.isViewportSized = isNaN(a), this.C())
            }
        },
        wrappingColumn: {
            get: function () {
                return this.Zp
            },
            set: function (a) {
                this.Zp !== a && (0 < a || isNaN(a)) && (this.Zp = a, this.C())
            }
        },
        cellSize: {
            get: function () {
                return this.Ng
            },
            set: function (a) {
                this.Ng.w(a) || (this.Ng.assign(a), this.C())
            }
        },
        spacing: {
            get: function () {
                return this.ef
            },
            set: function (a) {
                this.ef.w(a) || (this.ef.assign(a), this.C())
            }
        },
        alignment: {
            get: function () {
                return this.vb
            },
            set: function (a) {
                this.vb === a || a !== aq && a !== iq || (this.vb = a, this.C())
            }
        },
        arrangement: {
            get: function () {
                return this.Ab
            },
            set: function (a) {
                this.Ab === a || a !== bq && a !== hq || (this.Ab = a, this.C())
            }
        },
        sorting: {
            get: function () {
                return this.Qc
            },
            set: function (a) {
                this.Qc === a || a !== fq && a !== gq &&
                    a !== cq && a !== eq || (this.Qc = a, this.C())
            }
        },
        comparer: {
            get: function () {
                return this.Kc
            },
            set: function (a) {
                this.Kc !== a && (this.Kc = a, this.C())
            }
        }
    });
    var iq = new D(Lk, "Position", 0),
        aq = new D(Lk, "Location", 1),
        bq = new D(Lk, "LeftToRight", 2),
        hq = new D(Lk, "RightToLeft", 3),
        fq = new D(Lk, "Forward", 4),
        gq = new D(Lk, "Reverse", 5),
        cq = new D(Lk, "Ascending", 6),
        eq = new D(Lk, "Descending", 7);
    Lk.className = "GridLayout";
    Lk.standardComparer = dq;
    Lk.smartComparer = function (a, b) {
        if (null !== a) {
            if (null !== b) {
                a = a.text.toLocaleLowerCase().split(/([+\-]?[\.]?\d+(?:\.\d*)?(?:e[+\-]?\d+)?)/);
                b = b.text.toLocaleLowerCase().split(/([+\-]?[\.]?\d+(?:\.\d*)?(?:e[+\-]?\d+)?)/);
                for (var c = 0; c < a.length; c++)
                    if ("" !== b[c] && void 0 !== b[c]) {
                        var d = parseFloat(a[c]),
                            e = parseFloat(b[c]);
                        if (isNaN(d))
                            if (isNaN(e)) {
                                if (0 !== a[c].localeCompare(b[c])) return a[c].localeCompare(b[c])
                            } else return 1;
                        else {
                            if (isNaN(e)) return -1;
                            if (0 !== d - e) return d - e
                        }
                    } else if ("" !== a[c]) return 1;
                return "" !==
                    b[c] && void 0 !== b[c] ? -1 : 0
            }
            return 1
        }
        return null !== b ? -1 : 0
    };
    Lk.Position = iq;
    Lk.Location = aq;
    Lk.LeftToRight = bq;
    Lk.RightToLeft = hq;
    Lk.Forward = fq;
    Lk.Reverse = gq;
    Lk.Ascending = cq;
    Lk.Descending = eq;

    function ri() {
        this.So = new F;
        this.so = new F;
        this.Ca = new F;
        this.Oe = new H;
        this.Ne = new H;
        this.yj = new H;
        this.B = null;
        this.Tq = !1
    }
    t = ri.prototype;
    t.clear = function () {
        this.So.clear();
        this.so.clear();
        this.Ca.clear();
        this.Oe.clear();
        this.Ne.clear();
        this.yj.clear()
    };
    t.Yd = function (a) {
        this.B = a
    };
    t.aj = function (a) {
        if (a instanceof W) {
            if (this.So.add(a), a instanceof T) {
                var b = a.containingGroup;
                null === b ? this.B.zh.add(a) : b.zl.add(a);
                b = a.layout;
                null !== b && (b.diagram = this.B)
            }
        } else a instanceof S ? this.so.add(a) : a instanceof Je || this.Ca.add(a);
        b = a.data;
        null === b || a instanceof Je || (a instanceof S ? this.Ne.add(b, a) : this.Oe.add(b, a))
    };
    t.Fc = function (a) {
        a.Yj();
        if (a instanceof W) {
            if (this.So.remove(a), a instanceof T) {
                var b = a.containingGroup;
                null === b ? this.B.zh.remove(a) : b.zl.remove(a);
                b = a.layout;
                null !== b && (b.diagram = null)
            }
        } else a instanceof S ? this.so.remove(a) : a instanceof Je || this.Ca.remove(a);
        b = a.data;
        null === b || a instanceof Je || (a instanceof S ? this.Ne.remove(b) : this.Oe.remove(b))
    };
    t.xd = function () {
        for (var a = this.B.nodeTemplateMap.iterator; a.next();) {
            var b = a.value,
                c = a.key;
            (!b.Wb() || b instanceof T) && B('Invalid node template in Diagram.nodeTemplateMap: template for "' + c + '" must be a Node or a simple Part, not a Group or Link: ' + b)
        }
        for (a = this.B.groupTemplateMap.iterator; a.next();) b = a.value, c = a.key, b instanceof T || B('Invalid group template in Diagram.groupTemplateMap: template for "' + c + '" must be a Group, not a normal Node or Link: ' + b);
        for (a = this.B.linkTemplateMap.iterator; a.next();) b =
            a.value, c = a.key, b instanceof S || B('Invalid link template in Diagram.linkTemplateMap: template for "' + c + '" must be a Link, not a normal Node or simple Part: ' + b);
        a = Fa();
        for (b = this.B.selection.iterator; b.next();)(c = b.value.data) && a.push(c);
        b = Fa();
        for (c = this.B.highlighteds.iterator; c.next();) {
            var d = c.value.data;
            d && b.push(d)
        }
        c = Fa();
        for (d = this.nodes.iterator; d.next();) {
            var e = d.value;
            null !== e.data && (c.push(e.data), c.push(e.location))
        }
        for (d = this.links.iterator; d.next();) e = d.value, null !== e.data && (c.push(e.data),
            c.push(e.location));
        for (d = this.parts.iterator; d.next();) e = d.value, null !== e.data && (c.push(e.data), c.push(e.location));
        this.removeAllModeledParts();
        this.addAllModeledParts();
        for (d = 0; d < a.length; d++) e = this.wc(a[d]), null !== e && (e.isSelected = !0);
        for (d = 0; d < b.length; d++) e = this.wc(b[d]), null !== e && (e.isHighlighted = !0);
        for (d = 0; d < c.length; d += 2) e = this.wc(c[d]), null !== e && (e.location = c[d + 1]);
        Ha(a);
        Ha(b);
        Ha(c)
    };
    ri.prototype.addAllModeledParts = function () {
        this.addModeledParts(this.diagram.model.nodeDataArray)
    };
    ri.prototype.addModeledParts = function (a, b) {
        var c = this,
            d = this.diagram.model;
        a.forEach(function (a) {
            d.sb(a) && jq(c, a, !1)
        });
        a.forEach(function (a) {
            d.sb(a) && c.resolveReferencesForData(a)
        });
        !1 !== b && nk(this.diagram, !1)
    };

    function jq(a, b, c) {
        if (void 0 !== b && null !== b && !a.diagram.undoManager.isUndoingRedoing && !a.Oe.contains(b)) {
            void 0 === c && (c = !0);
            a: {
                if (void 0 !== b && null !== b && !a.B.undoManager.isUndoingRedoing && !a.Oe.contains(b)) {
                    var d = a.nt(b);
                    var e = Ko(a, b, d);
                    if (null !== e && (yg(e), e = e.copy(), null !== e)) {
                        var f = a.diagram.skipsModelSourceBindings;
                        a.diagram.skipsModelSourceBindings = !0;
                        e.Lf = d;
                        e.hb = b;
                        a.Tq && (e.eh = "Tool");
                        a.diagram.add(e);
                        e.hb = null;
                        e.data = b;
                        a.diagram.skipsModelSourceBindings = f;
                        d = e;
                        break a
                    }
                }
                d = null
            }
            null !== d && c && a.resolveReferencesForData(b)
        }
    }
    ri.prototype.insertLink = function () {
        return null
    };
    ri.prototype.resolveReferencesForData = function () {};
    ri.prototype.nt = function (a) {
        return this.B.model.nt(a)
    };

    function Ko(a, b, c) {
        a = a.B;
        var d = a.model;
        d.jk() && d.Hv(b) ? (b = a.groupTemplateMap.H(c), null === b && (b = a.groupTemplateMap.H(""), null === b && (kq || (kq = !0, wa('No Group template found for category "' + c + '"'), wa("  Using default group template")), b = a.eu))) : (b = a.nodeTemplateMap.H(c), null === b && (b = a.nodeTemplateMap.H(""), null === b && (lq || (lq = !0, wa('No Node template found for category "' + c + '"'), wa("  Using default node template")), b = a.gu)));
        return b
    }
    ri.prototype.getLinkCategoryForData = function () {
        return ""
    };
    ri.prototype.setLinkCategoryForData = function () {};
    ri.prototype.setFromNodeForLink = function () {};
    ri.prototype.setToNodeForLink = function () {};
    ri.prototype.findLinkTemplateForCategory = function (a) {
        var b = this.B.linkTemplateMap.H(a);
        null === b && (b = this.B.linkTemplateMap.H(""), null === b && (mq || (mq = !0, wa('No Link template found for category "' + a + '"'), wa("  Using default link template")), b = this.B.fu));
        return b
    };
    ri.prototype.removeAllModeledParts = function () {
        this.It(this.diagram.model.nodeDataArray)
    };
    ri.prototype.It = function (a) {
        var b = this;
        a.forEach(function (a) {
            b.Gq(a)
        })
    };
    ri.prototype.Gq = function (a) {
        a = this.wc(a);
        null !== a && (Jj(this.diagram, a, !1), this.unresolveReferencesForPart(a))
    };
    ri.prototype.unresolveReferencesForPart = function () {};
    ri.prototype.removeDataForLink = function () {};
    ri.prototype.findPartForKey = function (a) {
        if (null === a || void 0 === a) return null;
        a = this.B.model.Ib(a);
        return null !== a ? this.Oe.H(a) : null
    };
    ri.prototype.Jb = function (a) {
        if (null === a || void 0 === a) return null;
        a = this.B.model.Ib(a);
        if (null === a) return null;
        a = this.Oe.H(a);
        return a instanceof W ? a : null
    };
    ri.prototype.findLinkForKey = function () {
        return null
    };
    t = ri.prototype;
    t.wc = function (a) {
        if (null === a) return null;
        var b = this.Oe.H(a);
        return null !== b ? b : b = this.Ne.H(a)
    };
    t.Si = function (a) {
        if (null === a) return null;
        a = this.Oe.H(a);
        return a instanceof W ? a : null
    };
    t.vc = function (a) {
        return null === a ? null : this.Ne.H(a)
    };
    t.kt = function (a) {
        for (var b = 0; b < arguments.length; ++b);
        b = new F;
        for (var c = this.So.iterator; c.next();) {
            var d = c.value,
                e = d.data;
            if (null !== e)
                for (var f = 0; f < arguments.length; f++) {
                    var g = arguments[f];
                    if (za(g) && nq(this, e, g)) {
                        b.add(d);
                        break
                    }
                }
        }
        return b.iterator
    };
    t.jt = function (a) {
        for (var b = 0; b < arguments.length; ++b);
        b = new F;
        for (var c = this.so.iterator; c.next();) {
            var d = c.value,
                e = d.data;
            if (null !== e)
                for (var f = 0; f < arguments.length; f++) {
                    var g = arguments[f];
                    if (za(g) && nq(this, e, g)) {
                        b.add(d);
                        break
                    }
                }
        }
        return b.iterator
    };

    function nq(a, b, c) {
        for (var d in c) {
            var e = b[d],
                f = c[d];
            if (Aa(f)) {
                if (!Aa(e) || e.length < f.length) return !1;
                for (var g = 0; g < e.length; g++) {
                    var h = f[g];
                    if (void 0 !== h && !oq(a, e[g], h)) return !1
                }
            } else if (!oq(a, e, f)) return !1
        }
        return !0
    }

    function oq(a, b, c) {
        if ("function" === typeof c) {
            if (!c(b)) return !1
        } else if (c instanceof RegExp) {
            if (!b || !c.test(b.toString())) return !1
        } else if (za(b) && za(c)) {
            if (!nq(a, b, c)) return !1
        } else if (b !== c) return !1;
        return !0
    }
    ri.prototype.doModelChanged = function (a) {
        if (this.B) {
            var b = this.B;
            if (a.model === b.model) {
                var c = a.change;
                b.doModelChanged(a);
                if (b.Z) {
                    b.Z = !1;
                    try {
                        var d = a.modelChange;
                        if ("" !== d)
                            if (c === re) {
                                if ("nodeCategory" === d) {
                                    var e = this.wc(a.object),
                                        f = a.newValue;
                                    null !== e && "string" === typeof f && (e.category = f)
                                } else "nodeDataArray" === d && (this.It(a.oldValue), this.addModeledParts(a.newValue));
                                b.isModified = !0
                            } else if (c === te) {
                            var g = a.newValue;
                            "nodeDataArray" === d && za(g) && jq(this, g);
                            b.isModified = !0
                        } else if (c === ue) {
                            var h = a.oldValue;
                            "nodeDataArray" === d && za(h) && this.Gq(h);
                            b.isModified = !0
                        } else c === se && ("SourceChanged" === d ? null !== a.object ? this.updateDataBindings(a.object, a.propertyName) : (this.Pq(), this.updateAllTargetBindings()) : "ModelDisplaced" === d && this.xd());
                        else if (c === re) {
                            var k = a.propertyName,
                                l = a.object;
                            if (l === b.model) {
                                if ("nodeKeyProperty" === k || "nodeCategoryProperty" === k) b.undoManager.isUndoingRedoing || this.xd()
                            } else this.updateDataBindings(l, k);
                            b.isModified = !0
                        } else if (c === te || c === ue) {
                            var m = a.change === te,
                                n = m ? a.newParam : a.oldParam,
                                p = m ? a.newValue : a.oldValue,
                                r = this.yj.H(a.object);
                            if (Array.isArray(r))
                                for (a = 0; a < r.length; a++) {
                                    var q = r[a];
                                    if (m) jn(q, p, n);
                                    else if (!(0 > n)) {
                                        var u = n + bn(q);
                                        q.Fc(u, !0);
                                        yn(q, u, n)
                                    }
                                }
                            b.isModified = !0
                        }
                    } finally {
                        b.Z = !0
                    }
                }
            }
        }
    };
    ri.prototype.updateAllTargetBindings = function (a) {
        void 0 === a && (a = "");
        for (var b = this.parts.iterator; b.next();) b.value.Ba(a);
        for (b = this.nodes.iterator; b.next();) b.value.Ba(a);
        for (b = this.links.iterator; b.next();) b.value.Ba(a)
    };
    ri.prototype.Pq = function () {
        for (var a = this.B.model, b = new F, c = a.nodeDataArray, d = 0; d < c.length; d++) b.add(c[d]);
        var e = [];
        this.nodes.each(function (a) {
            null === a.data || b.contains(a.data) || e.push(a.data)
        });
        this.parts.each(function (a) {
            null === a.data || b.contains(a.data) || e.push(a.data)
        });
        e.forEach(function (b) {
            pq(a, b, !1)
        });
        for (d = 0; d < c.length; d++) {
            var f = c[d];
            null === this.wc(f) && qq(a, f, !1)
        }
        this.refreshDataBoundLinks();
        for (c = this.parts.iterator; c.next();) c.value.updateRelationshipsFromData();
        for (c = this.nodes.iterator; c.next();) c.value.updateRelationshipsFromData();
        for (c = this.links.iterator; c.next();) c.value.updateRelationshipsFromData()
    };
    ri.prototype.refreshDataBoundLinks = function () {};
    ri.prototype.updateRelationshipsFromData = function () {};
    ri.prototype.updateDataBindings = function (a, b) {
        if ("string" === typeof b) {
            var c = this.wc(a);
            if (null !== c) c.Ba(b);
            else {
                c = null;
                for (var d = this.yj.iterator; d.next();) {
                    for (var e = d.value, f = 0; f < e.length; f++) {
                        var g = e[f].Kx(a);
                        null !== g && (null === c && (c = Fa()), c.push(g))
                    }
                    if (null !== c) break
                }
                if (null !== c) {
                    for (d = 0; d < c.length; d++) c[d].Ba(b);
                    Ha(c)
                }
            }
            a === this.diagram.model.modelData && this.updateAllTargetBindings(b)
        }
    };

    function Fj(a, b) {
        var c = b.si;
        if (Aa(c)) {
            var d = a.yj.H(c);
            if (null === d) d = [], d.push(b), a.yj.add(c, d);
            else {
                for (a = 0; a < d.length; a++)
                    if (d[a] === b) return;
                d.push(b)
            }
        }
    }

    function Ij(a, b, c) {
        Dj(b, function (a) {
            a = a.W.j;
            for (var b = a.length, d = 0; d < b; d++) lk(c, a[d])
        });
        var d = b.si;
        if (Aa(d)) {
            var e = a.yj.H(d);
            if (null !== e)
                for (var f = 0; f < e.length; f++)
                    if (e[f] === b) {
                        e.splice(f, 1);
                        0 === e.length && a.yj.remove(d);
                        break
                    }
        }
    }
    ri.prototype.ck = function (a, b, c) {
        var d = new H;
        if (Aa(a))
            for (var e = 0; e < a.length; e++) rq(this, a[e], b, d, c);
        else
            for (a = a.iterator; a.next();) rq(this, a.value, b, d, c);
        if (null !== b) {
            c = b.model;
            a = b.toolManager.findTool("Dragging");
            a = null !== a ? a.dragOptions.dragsLink : b.Qk.dragsLink;
            e = new F;
            for (var f = new H, g = d.iterator; g.next();) {
                var h = g.value;
                if (h instanceof S) a || null !== h.fromNode && null !== h.toNode || e.add(h);
                else if (h instanceof W && null !== h.data && c.qm()) {
                    var k = h;
                    h = g.key;
                    var l = h.Bg();
                    null !== l && (l = d.H(l), null !== l ? (c.Ge(k.data,
                        c.ja(l.data)), k = b.vc(k.data), h = h.Vi(), null !== h && null !== k && f.add(h, k)) : c.Ge(k.data, void 0))
                }
            }
            0 < e.count && b.Jt(e, !1);
            if (0 < f.count)
                for (c = f.iterator; c.next();) d.add(c.key, c.value)
        }
        if (null !== b && null !== this.B && (b = b.model, c = b.afterCopyFunction, null !== c)) {
            var m = new H;
            d.each(function (a) {
                null !== a.key.data && m.add(a.key.data, a.value.data)
            });
            c(m, b, this.B.model)
        }
        for (b = d.iterator; b.next();) b.value.Ba();
        return d
    };

    function rq(a, b, c, d, e) {
        if (null === b || e && !b.canCopy()) return null;
        if (d.contains(b)) return d.H(b);
        var f = a.copyPartData(b, c);
        if (!(f instanceof U)) return null;
        f.isSelected = !1;
        f.isHighlighted = !1;
        d.add(b, f);
        if (b instanceof W) {
            for (var g = b.linksConnected; g.next();) {
                var h = g.value;
                if (h.fromNode === b) {
                    var k = d.H(h);
                    null !== k && (k.fromNode = f)
                }
                h.toNode === b && (h = d.H(h), null !== h && (h.toNode = f))
            }
            if (b instanceof T && f instanceof T)
                for (b = b.memberParts; b.next();) g = rq(a, b.value, c, d, e), g instanceof S || null === g || (g.containingGroup =
                    f)
        } else if (b instanceof S && f instanceof S)
            for (g = b.fromNode, null !== g && (g = d.H(g), null !== g && (f.fromNode = g)), g = b.toNode, null !== g && (g = d.H(g), null !== g && (f.toNode = g)), b = b.labelNodes; b.next();) g = rq(a, b.value, c, d, e), null !== g && g instanceof W && (g.labeledLink = f);
        return f
    }
    ri.prototype.copyPartData = function (a, b) {
        var c = null,
            d = a.data;
        if (null !== d && null !== b) {
            var e = b.model;
            a instanceof S || (d = e.copyNodeData(d), za(d) && (e.pf(d), c = b.wc(d)))
        } else yg(a), c = a.copy(), null !== c && (e = this.B, null !== b ? b.add(c) : null !== d && null !== e && null !== e.commandHandler && e.commandHandler.copiesClipboardData && (b = e.model, e = null, c instanceof S || (e = b.copyNodeData(d)), za(e) && (c.data = e)));
        return c
    };
    ma.Object.defineProperties(ri.prototype, {
        nodes: {
            get: function () {
                return this.So
            }
        },
        links: {
            get: function () {
                return this.so
            }
        },
        parts: {
            get: function () {
                return this.Ca
            }
        },
        diagram: {
            get: function () {
                return this.B
            }
        },
        addsToTemporaryLayer: {
            get: function () {
                return this.Tq
            },
            set: function (a) {
                this.Tq = a
            }
        }
    });
    ri.prototype.updateAllRelationshipsFromData = ri.prototype.Pq;
    ri.prototype.findLinksByExample = ri.prototype.jt;
    ri.prototype.findNodesByExample = ri.prototype.kt;
    ri.prototype.findLinkForData = ri.prototype.vc;
    ri.prototype.findNodeForData = ri.prototype.Si;
    ri.prototype.findPartForData = ri.prototype.wc;
    ri.prototype.findNodeForKey = ri.prototype.Jb;
    ri.prototype.removeModeledPart = ri.prototype.Gq;
    ri.prototype.removeModeledParts = ri.prototype.It;
    ri.prototype.rebuildParts = ri.prototype.xd;
    var lq = !1,
        kq = !1,
        mq = !1;
    ri.className = "PartManager";

    function sq(a) {
        ri.apply(this, arguments)
    }
    la(sq, ri);
    sq.prototype.addAllModeledParts = function () {
        var a = this.diagram.model;
        this.addModeledParts(a.nodeDataArray);
        tq(this, a.linkDataArray)
    };
    sq.prototype.addModeledParts = function (a) {
        ri.prototype.addModeledParts.call(this, a, !1);
        for (a = this.links.iterator; a.next();) Lo(a.value);
        nk(this.diagram, !1)
    };

    function tq(a, b) {
        b.forEach(function (b) {
            uq(a, b)
        });
        nk(a.diagram, !1)
    }

    function uq(a, b) {
        if (void 0 !== b && null !== b && !a.diagram.undoManager.isUndoingRedoing && !a.Ne.contains(b)) {
            var c = a.getLinkCategoryForData(b),
                d = a.findLinkTemplateForCategory(c);
            if (null !== d) {
                yg(d);
                var e = d.copy();
                if (null !== e) {
                    d = a.diagram.skipsModelSourceBindings;
                    a.diagram.skipsModelSourceBindings = !0;
                    e.Lf = c;
                    e.hb = b;
                    c = a.diagram.model;
                    var f = vq(c, b, !0);
                    "" !== f && (e.fromPortId = f);
                    f = wq(c, b, !0);
                    void 0 !== f && (f = a.Jb(f), f instanceof W && (e.fromNode = f));
                    f = vq(c, b, !1);
                    "" !== f && (e.toPortId = f);
                    f = wq(c, b, !1);
                    void 0 !== f && (f = a.Jb(f),
                        f instanceof W && (e.toNode = f));
                    c = c.Cg(b);
                    Array.isArray(c) && c.forEach(function (b) {
                        b = a.Jb(b);
                        null !== b && (b.labeledLink = e)
                    });
                    a.Tq && (e.eh = "Tool");
                    a.diagram.add(e);
                    e.hb = null;
                    e.data = b;
                    a.diagram.skipsModelSourceBindings = d
                }
            }
        }
    }
    sq.prototype.removeAllModeledParts = function () {
        var a = this.diagram.model;
        xq(this, a.linkDataArray);
        this.It(a.nodeDataArray)
    };

    function xq(a, b) {
        b.forEach(function (b) {
            a.Gq(b)
        })
    }
    sq.prototype.getLinkCategoryForData = function (a) {
        return this.diagram.model.wv(a)
    };
    sq.prototype.setLinkCategoryForData = function (a, b) {
        return this.diagram.model.Lt(a, b)
    };
    sq.prototype.setFromNodeForLink = function (a, b) {
        var c = this.diagram.model;
        c.iy(a.data, c.ja(null !== b ? b.data : null))
    };
    sq.prototype.setToNodeForLink = function (a, b) {
        var c = this.diagram.model;
        c.my(a.data, c.ja(null !== b ? b.data : null))
    };
    sq.prototype.removeDataForLink = function (a) {
        this.diagram.model.zm(a.data)
    };
    sq.prototype.findPartForKey = function (a) {
        var b = ri.prototype.findPartForKey.call(this, a);
        return null === b && (a = this.diagram.model.zg(a), null !== a) ? this.Ne.H(a) : b
    };
    sq.prototype.findLinkForKey = function (a) {
        if (null === a || void 0 === a) return null;
        a = this.diagram.model.zg(a);
        return null !== a ? this.Ne.H(a) : null
    };
    sq.prototype.doModelChanged = function (a) {
        var b = this;
        ri.prototype.doModelChanged.call(this, a);
        if (this.diagram) {
            var c = this.diagram;
            if (a.model === c.model) {
                var d = a.change;
                if (c.Z) {
                    c.Z = !1;
                    try {
                        var e = a.modelChange;
                        if ("" !== e)
                            if (d === re) {
                                if ("linkFromKey" === e) {
                                    var f = this.vc(a.object);
                                    if (null !== f) {
                                        var g = this.Jb(a.newValue);
                                        f.fromNode = g
                                    }
                                } else if ("linkToKey" === e) {
                                    var h = this.vc(a.object);
                                    if (null !== h) {
                                        var k = this.Jb(a.newValue);
                                        h.toNode = k
                                    }
                                } else if ("linkFromPortId" === e) {
                                    var l = this.vc(a.object);
                                    if (null !== l) {
                                        var m = a.newValue;
                                        "string" === typeof m && (l.fromPortId = m)
                                    }
                                } else if ("linkToPortId" === e) {
                                    var n = this.vc(a.object);
                                    if (null !== n) {
                                        var p = a.newValue;
                                        "string" === typeof p && (n.toPortId = p)
                                    }
                                } else if ("nodeGroupKey" === e) {
                                    var r = this.wc(a.object);
                                    if (null !== r) {
                                        var q = a.newValue;
                                        if (void 0 !== q) {
                                            var u = this.Jb(q);
                                            u instanceof T ? r.containingGroup = u : r.containingGroup = null
                                        } else r.containingGroup = null
                                    }
                                } else if ("linkLabelKeys" === e) {
                                    var v = this.vc(a.object);
                                    if (null !== v) {
                                        var w = a.oldValue,
                                            y = a.newValue;
                                        Array.isArray(w) && w.forEach(function (a) {
                                            a = b.Jb(a);
                                            null !== a && (a.labeledLink = null)
                                        });
                                        Array.isArray(y) && y.forEach(function (a) {
                                            a = b.Jb(a);
                                            null !== a && (a.labeledLink = v)
                                        })
                                    }
                                } else if ("linkCategory" === e) {
                                    var z = this.vc(a.object),
                                        A = a.newValue;
                                    null !== z && "string" === typeof A && (z.category = A)
                                } else "linkDataArray" === e && (xq(this, a.oldValue), tq(this, a.newValue));
                                c.isModified = !0
                            } else if (d === te) {
                            var C = a.newValue;
                            if ("linkDataArray" === e && "object" === typeof C && null !== C) uq(this, C);
                            else if ("linkLabelKeys" === e && yq(C)) {
                                var G = this.vc(a.object),
                                    L = this.Jb(C);
                                null !== G && null !== L && (L.labeledLink =
                                    G)
                            }
                            c.isModified = !0
                        } else {
                            if (d === ue) {
                                var K = a.oldValue;
                                if ("linkDataArray" === e && "object" === typeof K && null !== K) this.Gq(K);
                                else if ("linkLabelKeys" === e && yq(K)) {
                                    var V = this.Jb(K);
                                    null !== V && (V.labeledLink = null)
                                }
                                c.isModified = !0
                            }
                        } else if (d === re) {
                            var Q = a.propertyName;
                            a.object !== c.model || "linkFromKeyProperty" !== Q && "linkToKeyProperty" !== Q && "linkFromPortIdProperty" !== Q && "linkToPortIdProperty" !== Q && "linkLabelKeysProperty" !== Q && "nodeIsGroupProperty" !== Q && "nodeGroupKeyProperty" !== Q && "linkCategoryProperty" !== Q || c.undoManager.isUndoingRedoing ||
                                this.xd();
                            c.isModified = !0
                        }
                    } finally {
                        c.Z = !0
                    }
                }
            }
        }
    };
    sq.prototype.refreshDataBoundLinks = function () {
        var a = this,
            b = this.diagram.model,
            c = new F,
            d = b.linkDataArray;
        d.forEach(function (a) {
            c.add(a)
        });
        var e = [];
        this.links.each(function (a) {
            null === a.data || c.contains(a.data) || e.push(a.data)
        });
        e.forEach(function (a) {
            zq(b, a, !1)
        });
        d.forEach(function (c) {
            null === a.vc(c) && Aq(b, c, !1)
        })
    };
    sq.prototype.updateRelationshipsFromData = function (a) {
        var b = a.data;
        if (null !== b) {
            var c = a.diagram;
            if (null !== c) {
                var d = c.model;
                if (a instanceof S) {
                    var e = wq(d, b, !0);
                    e = c.Jb(e);
                    a.fromNode = e;
                    e = wq(d, b, !1);
                    e = c.Jb(e);
                    a.toNode = e;
                    b = d.Cg(b);
                    if (0 < b.length || 0 < a.labelNodes.count) {
                        if (1 === b.length && 1 === a.labelNodes.count) {
                            e = b[0];
                            var f = a.labelNodes.first();
                            if (d.ja(f.data) === e) return
                        }
                        e = (new F).addAll(b);
                        var g = new F;
                        a.labelNodes.each(function (a) {
                            null !== a.data && (a = d.ja(a.data), void 0 !== a && g.add(a))
                        });
                        b = g.copy();
                        b.Fq(e);
                        e =
                            e.copy();
                        e.Fq(g);
                        if (0 < b.count || 0 < e.count) b.each(function (b) {
                            b = c.Jb(b);
                            null !== b && b.labeledLink === a && (b.labeledLink = null)
                        }), e.each(function (b) {
                            b = c.Jb(b);
                            null !== b && b.labeledLink !== a && (b.labeledLink = a)
                        })
                    }
                } else !(a instanceof Je) && (b = d.Yi(b), b = c.findPartForKey(b), null === b || b instanceof T) && (a.containingGroup = b)
            }
        }
    };
    sq.prototype.resolveReferencesForData = function (a) {
        var b = this.diagram.model,
            c = b.ja(a);
        if (void 0 !== c) {
            var d = Bq(b, c),
                e = this.wc(a);
            if (null !== d && null !== e) {
                d = d.iterator;
                for (var f = {}; d.next();) {
                    var g = d.value;
                    b.sb(g) ? e instanceof T && b.Yi(g) === c && (g = this.wc(g), null !== g && (g.containingGroup = e)) : (f.link = this.vc(g), null !== f.link && e instanceof W && (wq(b, g, !0) === c && (f.link.fromNode = e), wq(b, g, !1) === c && (f.link.toNode = e), g = b.Cg(g), Array.isArray(g) && g.some(function (a) {
                        return function (b) {
                            return b === c ? (e.labeledLink = a.link,
                                !0) : !1
                        }
                    }(f))));
                    f = {
                        link: f.link
                    }
                }
                Cq(b, c)
            }
            a = b.Yi(a);
            void 0 !== a && (a = this.Jb(a), a instanceof T && (e.containingGroup = a))
        }
    };
    sq.prototype.unresolveReferencesForPart = function (a) {
        var b = this.diagram.model;
        if (a instanceof W) {
            var c = b.ja(a.data);
            if (void 0 !== c) {
                for (var d = a.linksConnected; d.next();) Dq(b, c, d.value.data);
                a.isLinkLabel && (d = a.labeledLink, null !== d && Dq(b, c, d.data));
                if (a instanceof T)
                    for (a = a.memberParts; a.next();) d = a.value.data, b.sb(d) && Dq(b, c, d)
            }
        }
    };
    sq.prototype.copyPartData = function (a, b) {
        var c = ri.prototype.copyPartData.call(this, a, b);
        if (a instanceof S)
            if (a = a.data, null !== a && null !== b) {
                var d = b.model;
                a = d.hq(a);
                "object" === typeof a && null !== a && (d.Ni(a), c = b.vc(a))
            } else null !== c && (b = this.diagram, null !== a && null !== b && null !== b.commandHandler && b.commandHandler.copiesClipboardData && (b = b.model.hq(a), "object" === typeof b && null !== b && (c.data = b)));
        return c
    };
    sq.prototype.insertLink = function (a, b, c, d) {
        var e = this.diagram,
            f = e.model,
            g = e.toolManager.findTool("Linking"),
            h = "";
        null !== a && (null === b && (b = a), h = b.portId, null === h && (h = ""));
        b = "";
        null !== c && (null === d && (d = c), b = d.portId, null === b && (b = ""));
        d = g.archetypeLinkData;
        if (d instanceof S) {
            if (yg(d), f = d.copy(), null !== f) return f.fromNode = a, f.fromPortId = h, f.toNode = c, f.toPortId = b, e.add(f), a = g.archetypeLabelNodeData, a instanceof W && (yg(a), a = a.copy(), null !== a && (a.labeledLink = f, e.add(a))), f
        } else if (null !== d && (d = f.hq(d), "object" ===
                typeof d && null !== d)) return null !== a && Eq(f, d, f.ja(a.data), !0), Fq(f, d, h, !0), null !== c && Eq(f, d, f.ja(c.data), !1), Fq(f, d, b, !1), f.Ni(d), a = g.archetypeLabelNodeData, null === a || a instanceof W || (a = f.copyNodeData(a), "object" === typeof a && null !== a && (f.pf(a), a = f.ja(a), void 0 !== a && f.dv(d, a))), e.vc(d);
        return null
    };
    sq.prototype.findLinkForKey = sq.prototype.findLinkForKey;
    sq.prototype.findPartForKey = sq.prototype.findPartForKey;
    sq.prototype.removeAllModeledParts = sq.prototype.removeAllModeledParts;
    sq.prototype.addModeledParts = sq.prototype.addModeledParts;
    sq.prototype.addAllModeledParts = sq.prototype.addAllModeledParts;
    sq.className = "GraphLinksPartManager";

    function Gq() {
        ri.apply(this, arguments);
        this.lh = null
    }
    la(Gq, ri);

    function Hq(a, b, c) {
        if (null !== b && null !== c) {
            var d = a.diagram.toolManager.findTool("Linking"),
                e = b,
                f = c;
            if (a.diagram.isTreePathToChildren)
                for (b = f.linksConnected; b.next();) {
                    if (b.value.toNode === f) return
                } else
                    for (e = c, f = b, b = e.linksConnected; b.next();)
                        if (b.value.fromNode === e) return;
            if (null === d || !Pf(d, e, f, null, !0))
                if (d = a.getLinkCategoryForData(c.data), b = a.findLinkTemplateForCategory(d), null !== b && (yg(b), b = b.copy(), null !== b)) {
                    var g = a.diagram.skipsModelSourceBindings;
                    a.diagram.skipsModelSourceBindings = !0;
                    b.Lf = d;
                    b.hb = c.data;
                    b.fromNode = e;
                    b.toNode = f;
                    a.diagram.add(b);
                    b.hb = null;
                    b.data = c.data;
                    a.diagram.skipsModelSourceBindings = g
                }
        }
    }
    Gq.prototype.getLinkCategoryForData = function (a) {
        return this.diagram.model.xv(a)
    };
    Gq.prototype.setLinkCategoryForData = function (a, b) {
        this.diagram.model.ew(a, b)
    };
    Gq.prototype.setFromNodeForLink = function (a, b, c) {
        var d = this.diagram.model;
        void 0 === c && (c = null);
        b = null !== b ? b.data : null;
        if (this.diagram.isTreePathToChildren) d.Ge(a.data, d.ja(b));
        else {
            var e = this.lh;
            this.lh = a;
            null !== c && d.Ge(c.data, void 0);
            d.Ge(b, d.ja(null !== a.toNode ? a.toNode.data : null));
            this.lh = e
        }
    };
    Gq.prototype.setToNodeForLink = function (a, b, c) {
        var d = this.diagram.model;
        void 0 === c && (c = null);
        b = null !== b ? b.data : null;
        if (this.diagram.isTreePathToChildren) {
            var e = this.lh;
            this.lh = a;
            null !== c && d.Ge(c.data, void 0);
            d.Ge(b, d.ja(null !== a.fromNode ? a.fromNode.data : null));
            this.lh = e
        } else d.Ge(a.data, d.ja(b))
    };
    Gq.prototype.removeDataForLink = function (a) {
        this.diagram.model.Ge(a.data, void 0)
    };
    Gq.prototype.findLinkForKey = function (a) {
        if (null === a || void 0 === a) return null;
        a = this.diagram.model.Ib(a);
        return null !== a ? this.Ne.H(a) : null
    };
    Gq.prototype.doModelChanged = function (a) {
        ri.prototype.doModelChanged.call(this, a);
        if (this.diagram) {
            var b = this.diagram;
            if (a.model === b.model) {
                var c = a.change;
                if (b.Z) {
                    b.Z = !1;
                    try {
                        var d = a.modelChange;
                        if ("" !== d) {
                            if (c === re) {
                                if ("nodeParentKey" === d) {
                                    var e = a.object,
                                        f = this.Jb(a.newValue),
                                        g = this.Si(e);
                                    if (null !== this.lh) null !== f && (this.lh.data = e, this.lh.category = this.getLinkCategoryForData(e));
                                    else if (null !== g) {
                                        var h = g.Vi();
                                        null !== h ? null === f ? b.remove(h) : b.isTreePathToChildren ? h.fromNode = f : h.toNode = f : Hq(this, f, g)
                                    }
                                } else if ("parentLinkCategory" ===
                                    d) {
                                    var k = this.Si(a.object),
                                        l = a.newValue;
                                    if (null !== k && "string" === typeof l) {
                                        var m = k.Vi();
                                        null !== m && (m.category = l)
                                    }
                                }
                                b.isModified = !0
                            }
                        } else if (c === re) {
                            var n = a.propertyName;
                            a.object === b.model && "nodeParentKeyProperty" === n && (b.undoManager.isUndoingRedoing || this.xd());
                            b.isModified = !0
                        }
                    } finally {
                        b.Z = !0
                    }
                }
            }
        }
    };
    Gq.prototype.updateRelationshipsFromData = function (a) {
        var b = a.data;
        if (null !== b) {
            var c = a.diagram;
            if (null !== c) {
                var d = c.model;
                a instanceof W && (b = d.$i(b), b = c.Jb(b), d = a.Bg(), b !== d && (d = a.Vi(), null !== b ? null !== d ? c.isTreePathToChildren ? d.fromNode = b : d.toNode = b : Hq(this, b, a) : null !== d && Jj(c, d, !1)))
            }
        }
    };
    Gq.prototype.updateDataBindings = function (a, b) {
        ri.prototype.updateDataBindings.call(this, a, b);
        "string" === typeof b && null !== this.wc(a) && (a = this.vc(a), null !== a && a.Ba(b))
    };
    Gq.prototype.resolveReferencesForData = function (a) {
        var b = this.diagram.model,
            c = b.ja(a);
        if (void 0 !== c) {
            var d = Bq(b, c),
                e = this.wc(a);
            if (null !== d && null !== e) {
                for (d = d.iterator; d.next();) {
                    var f = d.value;
                    b.sb(f) && e instanceof W && b.$i(f) === c && Hq(this, e, this.Si(f))
                }
                Cq(b, c)
            }
            a = b.$i(a);
            void 0 !== a && e instanceof W && (a = this.Jb(a), Hq(this, a, e))
        }
    };
    Gq.prototype.unresolveReferencesForPart = function (a) {
        var b = this.diagram.model;
        if (a instanceof W) {
            var c = b.ja(a.data),
                d = this.vc(a.data);
            if (null !== d) {
                d.isSelected = !1;
                d.isHighlighted = !1;
                var e = d.layer;
                if (null !== e) {
                    var f = e.Fc(-1, d, !1);
                    0 <= f && this.diagram.Ya(ue, "parts", e, d, null, f, null);
                    f = d.layerChanged;
                    null !== f && f(d, e, null)
                }
            }
            d = this.diagram.isTreePathToChildren;
            for (a = a.linksConnected; a.next();) e = a.value, e = (d ? e.toNode : e.fromNode).data, b.sb(e) && Dq(b, c, e)
        }
    };
    Gq.prototype.insertLink = function (a, b, c) {
        b = this.diagram.model;
        var d = a,
            e = c;
        this.diagram.isTreePathToChildren || (d = c, e = a);
        return null !== d && null !== e ? (b.Ge(e.data, b.ja(d.data)), e.Vi()) : null
    };
    Gq.prototype.findLinkForKey = Gq.prototype.findLinkForKey;
    Gq.className = "TreePartManager";

    function Z(a) {
        this.Ut = ',\n  "insertedNodeKeys": ';
        this.Jw = ',\n  "modifiedNodeData": ';
        this.Wt = ',\n  "removedNodeKeys": ';
        this.Ph = null;
        Ya(this);
        this.tn = this.Ra = "";
        this.Zf = !1;
        this.l = {};
        this.Cc = [];
        this.ab = new H;
        this.Ai = "key";
        this.Ok = this.wl = null;
        this.kn = this.ln = !1;
        this.nn = !0;
        this.Sm = null;
        this.Gj = "category";
        this.Rf = new H;
        this.Bu = new E;
        this.sg = !1;
        this.u = null;
        this.undoManager = new we;
        void 0 !== a && (this.nodeDataArray = a)
    }
    Z.prototype.cloneProtected = function (a) {
        a.Ra = this.Ra;
        a.tn = this.tn;
        a.Zf = this.Zf;
        a.Ai = this.Ai;
        a.wl = this.wl;
        a.Ok = this.Ok;
        a.ln = this.ln;
        a.kn = this.kn;
        a.nn = this.nn;
        a.Sm = this.Sm;
        a.Gj = this.Gj
    };
    Z.prototype.copy = function () {
        var a = new this.constructor;
        this.cloneProtected(a);
        return a
    };
    Z.prototype.clear = function () {
        this.Cc = [];
        this.ab.clear();
        this.Rf.clear();
        this.undoManager.clear()
    };
    Z.prototype.toString = function (a) {
        void 0 === a && (a = 0);
        if (1 < a) return this.Mq();
        var b = ("" !== this.name ? this.name : "") + " Model";
        if (0 < a) {
            b += "\n node data:";
            a = this.nodeDataArray;
            for (var c = a.length, d = 0; d < c; d++) {
                var e = a[d];
                b += " " + this.ja(e) + ":" + Ja(e)
            }
        }
        return b
    };
    Z.prototype.zA = function (a) {
        a.change !== se && B("Model.toIncrementalData argument is not a Transaction ChangedEvent:" + a.toString());
        var b = a.object;
        if (!(a.isTransactionFinished && b instanceof ve)) return null;
        Iq(this, b);
        a = this.xw(b, "FinishedUndo" === a.propertyName);
        this.Ph = null;
        return a
    };
    Z.prototype.xw = function (a, b) {
        var c = this,
            d = !1,
            e = new F,
            f = new F,
            g = new F,
            h = this.Ph;
        a.changes.each(function (a) {
            a.model === c && ("nodeDataArray" === a.modelChange ? a.change === te ? e.add(a.newValue) : a.change === ue && g.add(a.oldValue) : c.sb(a.object) ? f.add(a.object) : a.change !== re || c.modelData !== a.object && "modelData" !== a.propertyName ? null !== a.object && (h && h.contains(a.object) ? h.get(a.object).each(function (a) {
                c.sb(a) && f.add(a)
            }) : Jq(c, a.object).each(function (a) {
                f.add(a)
            })) : d = !0)
        });
        var k = new F;
        e.each(function (a) {
            k.add(c.ja(a));
            b || f.add(a)
        });
        var l = new F;
        g.each(function (a) {
            l.add(c.ja(a));
            b && f.add(a)
        });
        a = c.cloneDeep(f.na());
        var m = null;
        d && (null === m && (m = {}), m.modelData = this.cloneDeep(this.modelData));
        0 < k.count && (null === m && (m = {}), b ? m.removedNodeKeys = k.na() : m.insertedNodeKeys = k.na());
        0 < a.length && (null === m && (m = {}), m.modifiedNodeData = a);
        0 < l.count && (null === m && (m = {}), b ? m.insertedNodeKeys = l.na() : m.removedNodeKeys = l.na());
        return m
    };
    Z.prototype.cloneDeep = function (a) {
        return Kq(this, a, !0)
    };

    function Kq(a, b, c, d, e, f) {
        function g(a, c) {
            h ? (void 0 === a.__gohashid && f.push(a), d.set(a, c)) : (a = pb++, d.set(a, c), e.set(a, b))
        }
        if (!za(b)) return b;
        f || (f = []);
        var h = Object.isExtensible(b);
        d || (d = new H);
        if (h) {
            var k = d.get(b);
            if (k) return k
        } else
            for (e || (e = new H), k = e.iterator; k.next();) {
                var l = k.key;
                if (k.value === b && (l = d.get(l))) return l
            }
        if (Array.isArray(b)) {
            k = [];
            g(b, k);
            for (var m = 0; m < b.length; m++) k.push(Kq(a, b[m], !1, d, e, f))
        } else if (b instanceof I || b instanceof M || b instanceof N || b instanceof oc || b instanceof P) k = b.copy(),
            g(b, k);
        else {
            if (b instanceof tl || b instanceof td || b instanceof D) return b;
            if (b instanceof E) k = (new E).addAll(Kq(a, b.na(), !1, d, e, f)), g(b, k);
            else if (b instanceof F) k = (new F).addAll(Kq(a, b.na(), !1, d, e, f)), g(b, k);
            else if (b instanceof H) k = (new H).addAll(Kq(a, b.na(), !1, d, e, f)), g(b, k);
            else if (b instanceof Date) k = new Date(b.getTime()), g(b, k);
            else if (b instanceof RegExp) k = new RegExp(b), g(b, k), k.lastIndex = b.lastIndex;
            else if ("function" === typeof b.copy) k = b.copy(), g(b, k);
            else
                for (m in k = {}, g(b, k), b) "__gohashid" !==
                    m && (k[m] = Kq(a, b[m], !1, d, e, f))
        }
        c && f.forEach(function (a) {
            delete a.__gohashid
        });
        return k
    }
    t = Z.prototype;
    t.zk = function () {
        var a = "";
        "" !== this.name && (a += ',\n  "name": ' + this.quote(this.name));
        "" !== this.dataFormat && (a += ',\n  "dataFormat": ' + this.quote(this.dataFormat));
        this.isReadOnly && (a += ',\n  "isReadOnly": ' + this.isReadOnly);
        "key" !== this.nodeKeyProperty && "string" === typeof this.nodeKeyProperty && (a += ',\n  "nodeKeyProperty": ' + this.quote(this.nodeKeyProperty));
        this.copiesArrays && (a += ',\n  "copiesArrays": true');
        this.copiesArrayObjects && (a += ',\n  "copiesArrayObjects": true');
        this.copiesKey || (a += ',\n  "copiesKey": false');
        "category" !== this.nodeCategoryProperty && "string" === typeof this.nodeCategoryProperty && (a += ',\n  "nodeCategoryProperty": ' + this.quote(this.nodeCategoryProperty));
        return a
    };
    t.Eq = function (a) {
        a.name && (this.name = a.name);
        a.dataFormat && (this.dataFormat = a.dataFormat);
        a.isReadOnly && (this.isReadOnly = !0);
        a.nodeKeyProperty && (this.nodeKeyProperty = a.nodeKeyProperty);
        a.copiesArrays && (this.copiesArrays = !0);
        a.copiesArrayObjects && (this.copiesArrayObjects = !0);
        !1 === a.copiesKey && (this.copiesKey = !1);
        a.nodeCategoryProperty && (this.nodeCategoryProperty = a.nodeCategoryProperty)
    };

    function Lq(a) {
        return ',\n  "modelData": ' + Mq(a, a.modelData)
    }

    function Nq(a, b) {
        b = b.modelData;
        za(b) && (a.Bm(b), a.modelData = b)
    }
    t.yw = function () {
        var a = this.modelData,
            b = !1,
            c;
        for (c in a)
            if (!Oq(c, a[c])) {
                b = !0;
                break
            } a = "";
        b && (a = Lq(this));
        return a + ',\n  "nodeDataArray": ' + Pq(this, this.nodeDataArray, !0)
    };
    t.Tv = function (a) {
        Nq(this, a);
        a = a.nodeDataArray;
        Aa(a) && (this.Bm(a), this.nodeDataArray = a)
    };

    function Qq(a, b, c, d) {
        if (b === c) return !0;
        if (typeof b !== typeof c || "function" === typeof b || "function" === typeof c) return !1;
        if (Array.isArray(b) && Array.isArray(c)) {
            if (d.H(b) === c) return !0;
            d.add(b, c);
            if (b.length !== c.length) return !1;
            for (var e = 0; e < b.length; e++)
                if (!Qq(a, b[e], c[e], d)) return !1;
            return !0
        }
        if (za(b) && za(c)) {
            if (d.H(b) === c) return !0;
            d.add(b, c);
            for (var f in b) {
                var g = b[f];
                if (!Oq(f, g)) {
                    var h = c[f];
                    if (void 0 === h || !Qq(a, g, h, d)) return !1
                }
            }
            for (e in c)
                if (f = c[e], !Oq(e, f) && (g = b[e], void 0 === g || !Qq(a, g, f, d))) return !1;
            return !0
        }
        return !1
    }

    function Rq(a, b, c) {
        a[c] !== b[c] && B("Model.computeJsonDifference: Model." + c + ' is not the same in both models: "' + a[c] + '" and "' + b[c] + '"')
    }
    t.Rq = function (a) {
        Rq(this, a, "nodeKeyProperty");
        for (var b = new F, c = new F, d = (new F).addAll(this.ab.iteratorKeys), e = new H, f = a.nodeDataArray, g = f.length, h = 0; h < g; h++) {
            var k = f[h],
                l = a.ja(k);
            if (void 0 !== l) {
                d.remove(l);
                var m = this.Ib(l);
                null === m ? (b.add(l), c.add(k)) : Qq(this, m, k, e) || c.add(k)
            } else this.zt(k), l = this.ja(k), b.add(l), c.add(k)
        }
        f = "";
        Qq(this, this.modelData, a.modelData, e) || (f += Lq(this));
        0 < b.count && (f += this.Ut + Pq(this, b.na(), !0));
        0 < c.count && (f += this.Jw + Pq(this, c.na(), !0));
        0 < d.count && (f += this.Wt + Pq(this, d.na(),
            !0));
        return f
    };
    t.Ty = function (a, b) {
        void 0 === b && (b = Sq(this, this));
        return '{ "class": ' + this.quote(b) + ', "incremental": 1' + this.zk() + this.Rq(a) + "}"
    };

    function Iq(a, b) {
        function c(a, b) {
            b = b.part.data;
            if (a !== b) {
                var c = d.get(a);
                null === c ? (c = new F, c.add(b), d.add(a, c)) : c.add(b)
            }
        }
        var d = a.Ph;
        null === d && (d = new H, b.changes.each(function (a) {
            if (null !== a.diagram) {
                var b = a.change;
                if (b === re)(a = a.object.panel) && (b = a.data) && c(b, a);
                else if (b === te || b === ue) a = a.object, (b = a.itemArray) && c(b, a)
            }
        }), a.Ph = d)
    }

    function Jq(a, b) {
        for (var c = new F, d = 0; d < a.nodeDataArray.length; d++) {
            var e = a.nodeDataArray[d];
            Tq(a, b, e, e, c)
        }
        return c
    }

    function Tq(a, b, c, d, e) {
        if (Array.isArray(c))
            for (var f = 0; f < c.length; f++) {
                var g = c[f];
                if (g === b) return e.add(d), !0;
                if (Tq(a, b, g, d, e)) return !0
            } else if (za(c) && Object.getPrototypeOf(c) === Object.prototype)
                for (f in c) {
                    g = c[f];
                    if (g === b) return e.add(d), !0;
                    if (Tq(a, b, g, d, e)) return !0
                }
        return !1
    }
    t.ww = function (a, b) {
        var c = this,
            d = !1,
            e = new F,
            f = new F,
            g = new F,
            h = this.Ph;
        a.changes.each(function (a) {
            a.model === c && ("nodeDataArray" === a.modelChange ? a.change === te ? e.add(a.newValue) : a.change === ue && g.add(a.oldValue) : c.sb(a.object) ? f.add(a.object) : a.change !== re || c.modelData !== a.object && "modelData" !== a.propertyName ? null !== a.object && (h && h.contains(a.object) ? h.get(a.object).each(function (a) {
                c.sb(a) && f.add(a)
            }) : Jq(c, a.object).each(function (a) {
                f.add(a)
            })) : d = !0)
        });
        var k = new F;
        e.each(function (a) {
            k.add(c.ja(a));
            b ||
                f.add(a)
        });
        var l = new F;
        g.each(function (a) {
            l.add(c.ja(a));
            b && f.add(a)
        });
        a = "";
        d && (a += Lq(this));
        0 < k.count && (a += (b ? this.Wt : this.Ut) + Pq(this, k.na(), !0));
        0 < f.count && (a += this.Jw + Pq(this, f.na(), !0));
        0 < l.count && (a += (b ? this.Ut : this.Wt) + Pq(this, l.na(), !0));
        return a
    };
    t.Dq = function (a) {
        (void 0 !== a.name && a.name !== this.name || void 0 !== a.dataFormat && a.dataFormat !== this.dataFormat || void 0 !== a.isReadOnly && a.isReadOnly !== this.isReadOnly || void 0 !== a.nodeKeyProperty && a.nodeKeyProperty !== this.nodeKeyProperty || void 0 !== a.copiesArrays && a.copiesArrays !== this.copiesArrays || void 0 !== a.copiesArrayObjects && a.copiesArrayObjects !== this.copiesArrayObjects || void 0 !== a.copiesKey && a.copiesKey !== this.copiesKey || void 0 !== a.nodeCategoryProperty && a.nodeCategoryProperty !== this.nodeCategoryProperty) &&
        B("applyIncrementalJson cannot change Model properties");
        Nq(this, a);
        var b = a.insertedNodeKeys,
            c = a.modifiedNodeData,
            d = new H;
        if (Array.isArray(c))
            for (var e = 0; e < c.length; e++) {
                var f = c[e],
                    g = this.ja(f);
                void 0 !== g && null !== g && d.set(g, f)
            }
        if (Array.isArray(b))
            for (e = b.length, f = 0; f < e; f++) {
                g = b[f];
                var h = this.Ib(g);
                null === h && (h = (h = d.get(g)) ? h : this.copyNodeData({}), this.Hm(h, g), this.pf(h))
            }
        if (Array.isArray(c))
            for (b = c.length, d = 0; d < b; d++)
                if (e = c[d], f = this.ja(e), f = this.Ib(f), null !== f)
                    for (var k in e) "__gohashid" === k || k ===
                        this.nodeKeyProperty || this.ik() && k === this.nodeIsGroupProperty || this.setDataProperty(f, k, e[k]);
        a = a.removedNodeKeys;
        if (Array.isArray(a))
            for (c = a.length, k = 0; k < c; k++) b = this.Ib(a[k]), null !== b && this.Am(b)
    };
    t.qy = function (a, b) {
        a.change !== se && B("Model.toIncrementalJson argument is not a Transaction ChangedEvent:" + a.toString());
        var c = a.object;
        if (!(a.isTransactionFinished && c instanceof ve)) return '{ "incremental": 0 }';
        void 0 === b && (b = Sq(this, this));
        Iq(this, c);
        a = this.ww(c, "FinishedUndo" === a.propertyName);
        this.Ph = null;
        return "2" === b ? '{ "incremental": 2' + a + "}" : '{ "class": ' + this.quote(b) + ', "incremental": 1' + this.zk() + a + "}"
    };
    t.AA = function (a, b) {
        return this.qy(a, b)
    };
    t.Mq = function (a) {
        void 0 === a && (a = Sq(this, this));
        return '{ "class": ' + this.quote(a) + this.zk() + this.yw() + "}"
    };
    t.toJSON = function (a) {
        return this.Mq(a)
    };
    t.wx = function (a) {
        var b = null;
        if ("string" === typeof a) try {
            b = x.JSON.parse(a)
        } catch (d) {} else "object" === typeof a ? b = a : B("Unable to modify a Model from: " + a);
        var c = b.incremental;
        "number" !== typeof c && B("Unable to apply non-incremental changes to Model: " + a);
        0 !== c && (this.ua("applyIncrementalJson"), this.Dq(b), this.Ua("applyIncrementalJson"))
    };
    t.Ny = function (a) {
        return this.wx(a)
    };
    Z.constructGraphLinksModel = function () {
        return new Z
    };
    t = Z.prototype;
    t.Bm = function (a) {
        if (Aa(a))
            for (var b = a.length, c = 0; c < b; c++) {
                var d = a[c];
                if (za(d)) {
                    var e = c;
                    d = this.Bm(d);
                    Array.isArray(a) ? a[e] = d : B("Cannot replace an object in an HTMLCollection or NodeList at " + e)
                }
            } else if (za(a)) {
                for (c in a)
                    if (e = a[c], za(e) && (e = this.Bm(e), a[c] = e, "points" === c && Array.isArray(e))) {
                        d = 0 === e.length % 2;
                        for (var f = 0; f < e.length; f++)
                            if ("number" !== typeof e[f]) {
                                d = !1;
                                break
                            } if (d) {
                            d = new E;
                            for (f = 0; f < e.length / 2; f++) d.add(new I(e[2 * f], e[2 * f + 1]));
                            d.freeze();
                            a[c] = d
                        }
                    } if ("object" === typeof a) {
                    c = a;
                    e = a["class"] ||
                        "";
                    0 === e.indexOf("go.") && (e = e.substr(3));
                    if ("NaN" === e) c = NaN;
                    else if ("Date" === e) c = new Date(a.value);
                    else if ("Point" === e) c = new I(Uq(a.x), Uq(a.y));
                    else if ("Size" === e) c = new M(Uq(a.width), Uq(a.height));
                    else if ("Rect" === e) c = new N(Uq(a.x), Uq(a.y), Uq(a.width), Uq(a.height));
                    else if ("Margin" === e) c = new oc(Uq(a.top), Uq(a.right), Uq(a.bottom), Uq(a.left));
                    else if ("Spot" === e) "string" === typeof a["enum"] ? c = kd(a["enum"]) : c = new P(Uq(a.x), Uq(a.y), Uq(a.offsetX), Uq(a.offsetY));
                    else if ("Brush" === e) {
                        if (c = new tl, c.type = Za(tl,
                                a.type), "string" === typeof a.color && (c.color = a.color), a.start instanceof P && (c.start = a.start), a.end instanceof P && (c.end = a.end), "number" === typeof a.startRadius && (c.startRadius = Uq(a.startRadius)), "number" === typeof a.endRadius && (c.endRadius = Uq(a.endRadius)), a = a.colorStops, za(a))
                            for (b in a) c.addColorStop(parseFloat(b), a[b])
                    } else "Geometry" === e ? (b = null, "string" === typeof a.path ? b = Id(a.path) : b = new td, b.type = Za(td, a.type), "number" === typeof a.startX && (b.startX = Uq(a.startX)), "number" === typeof a.startY && (b.startY =
                        Uq(a.startY)), "number" === typeof a.endX && (b.endX = Uq(a.endX)), "number" === typeof a.endY && (b.endY = Uq(a.endY)), a.spot1 instanceof P && (b.spot1 = a.spot1), a.spot2 instanceof P && (b.spot2 = a.spot2), c = b) : "EnumValue" === e && (b = a.classType, 0 === b.indexOf("go.") && (b = b.substr(3)), b = Vq(b), "function" === typeof b && (c = Za(b, a.name)));
                    a = c
                }
            } return a
    };
    t.quote = function (a) {
        for (var b = "", c = a.length, d = 0; d < c; d++) {
            var e = a[d];
            if ('"' === e || "\\" === e) b += "\\" + e;
            else if ("\b" === e) b += "\\b";
            else if ("\f" === e) b += "\\f";
            else if ("\n" === e) b += "\\n";
            else if ("\r" === e) b += "\\r";
            else if ("\t" === e) b += "\\t";
            else {
                var f = a.charCodeAt(d);
                b = 16 > f ? b + ("\\u000" + a.charCodeAt(d).toString(16)) : 32 > f ? b + ("\\u00" + a.charCodeAt(d).toString(16)) : 8232 === f ? b + "\\u2028" : 8233 === f ? b + "\\u2029" : b + e
            }
        }
        return '"' + b + '"'
    };
    t.Lm = function (a) {
        return void 0 === a ? "undefined" : null === a ? "null" : !0 === a ? "true" : !1 === a ? "false" : "string" === typeof a ? this.quote(a) : "number" === typeof a ? Infinity === a ? "9e9999" : -Infinity === a ? "-9e9999" : isNaN(a) ? '{"class":"NaN"}' : a.toString() : a instanceof Date ? '{"class":"Date", "value":"' + a.toJSON() + '"}' : a instanceof Number ? this.Lm(a.valueOf()) : Aa(a) ? Pq(this, a) : za(a) ? Mq(this, a) : "function" === typeof a ? "null" : a.toString()
    };

    function Pq(a, b, c) {
        void 0 === c && (c = !1);
        var d = b.length;
        if (0 >= d) return "[]";
        var e = new cb;
        e.add("[ ");
        c && 1 < d && e.add("\n");
        for (var f = 0; f < d; f++) {
            var g = b[f];
            void 0 !== g && (0 < f && (e.add(","), c && e.add("\n")), e.add(a.Lm(g)))
        }
        c && 1 < d && e.add("\n");
        e.add(" ]");
        return e.toString()
    }

    function Oq(a, b) {
        return void 0 === b || "__gohashid" === a || "_" === a[0] || "function" === typeof b ? !0 : !1
    }

    function Wq(a) {
        return isNaN(a) ? "NaN" : Infinity === a ? "9e9999" : -Infinity === a ? "-9e9999" : a
    }

    function Mq(a, b) {
        var c = b;
        if (c instanceof I) b = {
            "class": "go.Point",
            x: Wq(c.x),
            y: Wq(c.y)
        };
        else if (c instanceof M) b = {
            "class": "go.Size",
            width: Wq(c.width),
            height: Wq(c.height)
        };
        else if (c instanceof N) b = {
            "class": "go.Rect",
            x: Wq(c.x),
            y: Wq(c.y),
            width: Wq(c.width),
            height: Wq(c.height)
        };
        else if (c instanceof oc) b = {
            "class": "go.Margin",
            top: Wq(c.top),
            right: Wq(c.right),
            bottom: Wq(c.bottom),
            left: Wq(c.left)
        };
        else if (c instanceof P) c.eb() ? b = {
                "class": "go.Spot",
                x: Wq(c.x),
                y: Wq(c.y),
                offsetX: Wq(c.offsetX),
                offsetY: Wq(c.offsetY)
            } :
            b = {
                "class": "go.Spot",
                "enum": c.toString()
            };
        else if (c instanceof tl) {
            b = {
                "class": "go.Brush",
                type: c.type.name
            };
            if (c.type === wl) b.color = c.color;
            else if (c.type === zl || c.type === ul) b.start = c.start, b.end = c.end, c.type === ul && (0 !== c.startRadius && (b.startRadius = Wq(c.startRadius)), isNaN(c.endRadius) || (b.endRadius = Wq(c.endRadius)));
            if (null !== c.colorStops) {
                var d = {};
                for (c = c.colorStops.iterator; c.next();) d[c.key] = c.value;
                b.colorStops = d
            }
        } else c instanceof td ? (b = {
            "class": "go.Geometry",
            type: c.type.name
        }, 0 !== c.startX && (b.startX =
            Wq(c.startX)), 0 !== c.startY && (b.startY = Wq(c.startY)), 0 !== c.endX && (b.endX = Wq(c.endX)), 0 !== c.endY && (b.endY = Wq(c.endY)), c.spot1.w(vc) || (b.spot1 = c.spot1), c.spot2.w(Gc) || (b.spot2 = c.spot2), c.type === ud && (b.path = zd(c))) : c instanceof D && (b = {
            "class": "go.EnumValue",
            classType: Sq(a, c.classType),
            name: c.name
        });
        d = "{";
        c = !0;
        for (var e in b) {
            var f = zn(b, e);
            if (!Oq(e, f))
                if (c ? c = !1 : d += ", ", d += '"' + e + '":', "points" === e && f instanceof E) {
                    var g = "[";
                    for (f = f.iterator; f.next();) {
                        var h = f.value;
                        1 < g.length && (g += ",");
                        g += a.Lm(h.x);
                        g += ",";
                        g += a.Lm(h.y)
                    }
                    g += "]";
                    d += g
                } else d += a.Lm(f)
        }
        return d + "}"
    }

    function Uq(a) {
        return "number" === typeof a ? a : "NaN" === a ? NaN : "9e9999" === a ? Infinity : "-9e9999" === a ? -Infinity : parseFloat(a)
    }
    t.Dh = function (a) {
        this.Bu.add(a)
    };
    t.wk = function (a) {
        this.Bu.remove(a)
    };
    t.bt = function (a) {
        this.skipsUndoManager || this.undoManager.Cv(a);
        for (var b = this.Bu, c = b.length, d = 0; d < c; d++) b.L(d)(a)
    };
    t.Ya = function (a, b, c, d, e, f, g) {
        Xq(this, "", a, b, c, d, e, f, g)
    };
    t.g = function (a, b, c, d, e) {
        Xq(this, "", re, a, this, b, c, d, e)
    };
    t.Ft = function (a, b, c, d, e, f) {
        Xq(this, "", re, b, a, c, d, e, f)
    };

    function Xq(a, b, c, d, e, f, g, h, k) {
        void 0 === h && (h = null);
        void 0 === k && (k = null);
        var l = new qe;
        l.model = a;
        l.change = c;
        l.modelChange = b;
        l.propertyName = d;
        l.object = e;
        l.oldValue = f;
        l.oldParam = h;
        l.newValue = g;
        l.newParam = k;
        a.bt(l)
    }
    Z.prototype.changeState = function (a, b) {
        if (null !== a && a.model === this)
            if (a.change === re) Qj(a.object, a.propertyName, a.H(b));
            else if (a.change === te) {
            var c = a.newParam;
            if ("nodeDataArray" === a.modelChange) {
                if (a = a.newValue, za(a) && "number" === typeof c) {
                    var d = this.ja(a);
                    b ? (this.Cc[c] === a && Da(this.Cc, c), void 0 !== d && this.ab.remove(d)) : (this.Cc[c] !== a && Ca(this.Cc, c, a), void 0 !== d && this.ab.add(d, a))
                }
            } else "" === a.modelChange ? ((d = a.object) && !Aa(d) && a.propertyName && (d = zn(a.object, a.propertyName)), Aa(d) && "number" === typeof c &&
                (a = a.newValue, b ? Da(d, c) : Ca(d, c, a))) : B("unknown ChangedEvent.Insert modelChange: " + a.toString())
        } else a.change === ue ? (c = a.oldParam, "nodeDataArray" === a.modelChange ? (a = a.oldValue, za(a) && "number" === typeof c && (d = this.ja(a), b ? (this.Cc[c] !== a && Ca(this.Cc, c, a), void 0 !== d && this.ab.add(d, a)) : (this.Cc[c] === a && Da(this.Cc, c), void 0 !== d && this.ab.remove(d)))) : "" === a.modelChange ? ((d = a.object) && !Aa(d) && a.propertyName && (d = zn(a.object, a.propertyName)), Aa(d) && "number" === typeof c && (a = a.oldValue, b ? Ca(d, c, a) : Da(d, c))) : B("unknown ChangedEvent.Remove modelChange: " +
            a.toString())) : a.change !== se && B("unknown ChangedEvent: " + a.toString())
    };
    Z.prototype.ua = function (a) {
        return this.undoManager.ua(a)
    };
    Z.prototype.Ua = function (a) {
        return this.undoManager.Ua(a)
    };
    Z.prototype.Bf = function () {
        return this.undoManager.Bf()
    };
    Z.prototype.commit = function (a, b) {
        void 0 === b && (b = "");
        var c = this.skipsUndoManager;
        null === b && (this.skipsUndoManager = !0, b = "");
        this.undoManager.ua(b);
        var d = !1;
        try {
            a(this), d = !0
        } finally {
            d ? this.undoManager.Ua(b) : this.undoManager.Bf(), this.skipsUndoManager = c
        }
    };
    t = Z.prototype;
    t.Ba = function (a, b) {
        void 0 === b && (b = "");
        Xq(this, "SourceChanged", se, b, a, null, null)
    };
    t.ja = function (a) {
        if (null !== a) {
            var b = this.Ai;
            if ("" !== b && (b = zn(a, b), void 0 !== b)) {
                if (yq(b)) return b;
                B("Key value for node data " + a + " is not a number or a string: " + b)
            }
        }
    };
    t.Hm = function (a, b) {
        if (null !== a) {
            var c = this.Ai;
            if ("" !== c)
                if (this.sb(a)) {
                    var d = zn(a, c);
                    d !== b && null === this.Ib(b) && (Qj(a, c, b), void 0 !== d && this.ab.remove(d), this.ab.add(b, a), Xq(this, "nodeKey", re, c, a, d, b), "string" === typeof c && this.Ba(a, c), this.Hq(d, b))
                } else Qj(a, c, b)
        }
    };

    function yq(a) {
        return "number" === typeof a || "string" === typeof a
    }
    t.sb = function (a) {
        var b = this.ja(a);
        return void 0 === b ? !1 : this.ab.H(b) === a
    };
    t.Ib = function (a) {
        null === a && B("Model.findNodeDataForKey:key must not be null");
        return void 0 !== a && yq(a) ? this.ab.H(a) : null
    };
    t.zt = function (a) {
        if (null !== a) {
            var b = this.Ai;
            if ("" !== b) {
                var c = this.ja(a);
                if (void 0 === c || this.ab.contains(c)) {
                    var d = this.wl;
                    if (null !== d && (c = d(this, a), void 0 !== c && null !== c && !this.ab.contains(c))) {
                        Qj(a, b, c);
                        return
                    }
                    if ("string" === typeof c) {
                        for (d = 2; this.ab.contains(c + d);) d++;
                        Qj(a, b, c + d)
                    } else if (void 0 === c || "number" === typeof c) {
                        for (c = -this.ab.count - 1; this.ab.contains(c);) c--;
                        Qj(a, b, c)
                    }
                }
            }
        }
    };
    t.pf = function (a) {
        null !== a && (nb(a), this.sb(a) || qq(this, a, !0))
    };

    function qq(a, b, c) {
        var d = a.ja(b);
        if (void 0 === d || a.ab.H(d) !== b) a.zt(b), d = a.ja(b), void 0 === d ? B("Model.makeNodeDataKeyUnique failed on " + b + ".  Data not added to Model.") : (a.ab.add(d, b), d = null, c && (d = a.Cc.length, Ca(a.Cc, d, b)), Xq(a, "nodeDataArray", te, "nodeDataArray", a, null, b, null, d), a.Dm(b), a.Cm(b))
    }
    t.Jy = function (a) {
        if (Aa(a))
            for (var b = a.length, c = 0; c < b; c++) this.pf(a[c]);
        else
            for (a = a.iterator; a.next();) this.pf(a.value)
    };
    t.Am = function (a) {
        null !== a && pq(this, a, !0)
    };

    function pq(a, b, c) {
        var d = a.ja(b);
        void 0 !== d && a.ab.remove(d);
        d = null;
        if (c) {
            a: if (c = a.Cc, Array.isArray(c)) d = c.indexOf(b);
                else {
                    d = c.length;
                    for (var e = 0; e < d; e++)
                        if (c[e] === b) {
                            d = e;
                            break a
                        } d = -1
                }if (0 > d) return;Da(a.Cc, d)
        }
        Xq(a, "nodeDataArray", ue, "nodeDataArray", a, b, null, d, null);
        a.Oq(b)
    }
    t.pA = function (a) {
        if (Aa(a))
            for (var b = a.length, c = 0; c < b; c++) this.Am(a[c]);
        else
            for (a = a.iterator; a.next();) this.Am(a.value)
    };
    t.gA = function (a) {
        if (Aa(a)) {
            for (var b = new F(this.ab.iteratorKeys), c = new F, d = a.length, e = 0; e < d; e++) {
                var f = a[e],
                    g = this.ja(f);
                if (void 0 !== g) {
                    c.add(g);
                    var h = this.Ib(g);
                    null !== h ? this.Xj(h, f) : (h = {}, this.Hm(h, g), this.Xj(h, f), this.pf(h))
                } else this.pf(f), c.add(this.ja(f))
            }
            for (a = b.iterator; a.next();) b = a.value, c.contains(b) || (b = this.Ib(b)) && this.Am(b);
            this.gq()
        }
    };
    t.Hq = function (a, b) {
        void 0 !== b && (a = Bq(this, a), a instanceof F && this.Rf.add(b, a))
    };
    t.sw = function () {};
    t.Dm = function () {};
    t.Cm = function () {};
    t.Oq = function () {};

    function Dq(a, b, c) {
        if (void 0 !== b) {
            var d = a.Rf.H(b);
            null === d && (d = new F, a.Rf.add(b, d));
            d.add(c)
        }
    }

    function Cq(a, b, c) {
        if (void 0 !== b) {
            var d = a.Rf.H(b);
            d instanceof F && (void 0 === c || null === c ? a.Rf.remove(b) : (d.remove(c), 0 === d.count && a.Rf.remove(b)))
        }
    }

    function Bq(a, b) {
        if (void 0 === b) return null;
        a = a.Rf.H(b);
        return a instanceof F ? a : null
    }
    t.gq = function (a) {
        void 0 === a ? this.Rf.clear() : this.Rf.remove(a)
    };
    Z.prototype.copyNodeData = function (a) {
        if (null === a) return null;
        var b = this.Ok;
        a = null !== b ? b(a, this) : Yq(this, a, !0);
        za(a) && Ya(a);
        return a
    };

    function Yq(a, b, c) {
        if (a.copiesArrays && Array.isArray(b)) {
            var d = [];
            for (c = 0; c < b.length; c++) {
                var e = Yq(a, b[c], a.copiesArrayObjects);
                d.push(e)
            }
            Ya(d);
            return d
        }
        if (c && za(b)) {
            c = (c = b.constructor) ? new c : {};
            e = a.copiesKey || "string" !== typeof a.nodeKeyProperty ? null : a.nodeKeyProperty;
            for (d in b)
                if ("__gohashid" === d) c.__gohashid = void 0;
                else if (d === e) c[e] = void 0;
            else {
                var f = zn(b, d),
                    g = Sq(a, f);
                "GraphObject" === g || "Diagram" === g || "Layer" === g || "RowColumnDefinition" === g || "AnimationManager" === g || "Tool" === g || "CommandHandler" ===
                    g || "Layout" === g || "InputEvent" === g || "DiagramEvent" === g || f instanceof Z || f instanceof we || f instanceof ve || f instanceof qe ? Qj(c, d, f) : (f = Yq(a, f, !1), Qj(c, d, f))
            }
            Ya(c);
            return c
        }
        return b instanceof I ? b.copy() : b instanceof M ? b.copy() : b instanceof N ? b.copy() : b instanceof P ? b.copy() : b instanceof oc ? b.copy() : b
    }
    Z.prototype.setDataProperty = function (a, b, c) {
        if (this.sb(a))
            if (b === this.nodeKeyProperty) this.Hm(a, c);
            else {
                if (b === this.nodeCategoryProperty) {
                    this.Jq(a, c);
                    return
                }
            }
        else !Zq && a instanceof Y && (Zq = !0, wa('Model.setDataProperty is modifying a GraphObject, "' + a.toString() + '"'), wa("  Is that really your intent?"));
        var d = zn(a, b);
        d !== c && (Qj(a, b, c), this.Ft(a, b, d, c))
    };
    t = Z.prototype;
    t.set = function (a, b, c) {
        this.setDataProperty(a, b, c)
    };
    t.Xj = function (a, b) {
        if (b) {
            var c = this.sb(a),
                d;
            for (d in b) "__gohashid" === d || c && d === this.nodeKeyProperty || this.setDataProperty(a, d, b[d])
        }
    };
    t.Fy = function (a, b) {
        this.qt(a, -1, b)
    };
    t.qt = function (a, b, c) {
        0 > b && (b = a.length);
        Ca(a, b, c);
        Xq(this, "", te, "", a, null, c, null, b)
    };
    t.Vv = function (a, b) {
        void 0 === b && (b = -1);
        a === this.Cc && B("Model.removeArrayItem should not be called on the Model.nodeDataArray"); - 1 === b && (b = a.length - 1);
        var c = a[b];
        Da(a, b);
        Xq(this, "", ue, "", a, c, null, b, null)
    };
    t.nt = function (a) {
        if (null === a) return "";
        var b = this.Gj;
        if ("" === b) return "";
        b = zn(a, b);
        if (void 0 === b) return "";
        if ("string" === typeof b) return b;
        B("getCategoryForNodeData found a non-string category for " + a + ": " + b);
        return ""
    };
    t.Jq = function (a, b) {
        if (null !== a) {
            var c = this.Gj;
            if ("" !== c)
                if (this.sb(a)) {
                    var d = zn(a, c);
                    void 0 === d && (d = "");
                    d !== b && (Qj(a, c, b), Xq(this, "nodeCategory", re, c, a, d, b))
                } else Qj(a, c, b)
        }
    };
    t.qm = function () {
        return !1
    };
    t.ik = function () {
        return !1
    };
    t.pm = function () {
        return !1
    };
    t.vt = function () {
        return !1
    };
    t.jk = function () {
        return !1
    };

    function Ai() {
        return new Z
    }

    function Sq(a, b) {
        if ("function" === typeof b) {
            if (b.className) return b.className;
            if (b.name) return b.name
        } else if ("object" === typeof b && null !== b && b.constructor) return Sq(a, b.constructor);
        return typeof b
    }

    function Vq(a) {
        return $q[a] ? $q[a] : void 0 !== x.go && x.go[a] ? x.go[a] : null
    }

    function zn(a, b) {
        if (!a || !b) return null;
        try {
            if ("function" === typeof b) var c = b(a);
            else "function" === typeof a.getAttribute ? (c = a.getAttribute(b), null === c && (c = void 0)) : c = a[b]
        } catch (d) {}
        return c
    }

    function Qj(a, b, c) {
        if (a && b) try {
            "function" === typeof b ? b(a, c) : "function" === typeof a.setAttribute ? a.setAttribute(b, c) : a[b] = c
        } catch (d) {}
    }
    ma.Object.defineProperties(Z.prototype, {
        name: {
            get: function () {
                return this.Ra
            },
            set: function (a) {
                var b = this.Ra;
                b !== a && (this.Ra = a, this.g("name", b, a))
            }
        },
        dataFormat: {
            get: function () {
                return this.tn
            },
            set: function (a) {
                var b = this.tn;
                b !== a && (this.tn = a, this.g("dataFormat", b, a))
            }
        },
        isReadOnly: {
            get: function () {
                return this.Zf
            },
            set: function (a) {
                var b = this.Zf;
                b !== a && (this.Zf = a, this.g("isReadOnly", b, a))
            }
        },
        modelData: {
            get: function () {
                return this.l
            },
            set: function (a) {
                var b = this.l;
                b !== a && (this.l = a, this.g("modelData", b, a), this.Ba(a))
            }
        },
        undoManager: {
            get: function () {
                return this.u
            },
            set: function (a) {
                var b = this.u;
                b !== a && (null !== b && b.by(this), this.u = a, null !== a && a.ux(this))
            }
        },
        skipsUndoManager: {
            get: function () {
                return this.sg
            },
            set: function (a) {
                this.sg = a
            }
        },
        nodeKeyProperty: {
            get: function () {
                return this.Ai
            },
            set: function (a) {
                var b = this.Ai;
                b !== a && ("" === a && B("Model.nodeKeyProperty may not be the empty string"), 0 < this.ab.count && B("Cannot set Model.nodeKeyProperty when there is existing node data"), this.Ai = a, this.g("nodeKeyProperty", b, a))
            }
        },
        makeUniqueKeyFunction: {
            get: function () {
                return this.wl
            },
            set: function (a) {
                var b = this.wl;
                b !== a && (this.wl = a, this.g("makeUniqueKeyFunction", b, a))
            }
        },
        nodeDataArray: {
            get: function () {
                return this.Cc
            },
            set: function (a) {
                var b = this.Cc;
                if (b !== a) {
                    this.ab.clear();
                    this.sw();
                    for (var c = a.length, d = 0; d < c; d++) {
                        var e = a[d];
                        if (!za(e)) {
                            B("Model.nodeDataArray must only contain Objects, not: " + e);
                            return
                        }
                        nb(e)
                    }
                    this.Cc = a;
                    d = new E;
                    for (e = 0; e < c; e++) {
                        var f = a[e],
                            g = this.ja(f);
                        void 0 === g ? d.add(f) : null !== this.ab.H(g) ? d.add(f) : this.ab.add(g, f)
                    }
                    for (d = d.iterator; d.next();) e = d.value, this.zt(e), f = this.ja(e), void 0 !== f && this.ab.add(f, e);
                    Xq(this, "nodeDataArray", re, "nodeDataArray", this, b, a);
                    for (b = 0; b < c; b++) d = a[b], this.Dm(d), this.Cm(d);
                    this.gq();
                    Array.isArray(a) || (this.isReadOnly = !0)
                }
            }
        },
        copyNodeDataFunction: {
            get: function () {
                return this.Ok
            },
            set: function (a) {
                var b = this.Ok;
                b !== a && (this.Ok = a, this.g("copyNodeDataFunction", b, a))
            }
        },
        copiesArrays: {
            get: function () {
                return this.ln
            },
            set: function (a) {
                var b = this.ln;
                b !== a && (this.ln = a, this.g("copiesArrays", b, a))
            }
        },
        copiesArrayObjects: {
            get: function () {
                return this.kn
            },
            set: function (a) {
                var b = this.kn;
                b !== a && (this.kn = a, this.g("copiesArrayObjects", b, a))
            }
        },
        copiesKey: {
            get: function () {
                return this.nn
            },
            set: function (a) {
                var b = this.nn;
                b !== a && (this.nn = a, this.g("copiesKey", b, a))
            }
        },
        afterCopyFunction: {
            get: function () {
                return this.Sm
            },
            set: function (a) {
                var b = this.Sm;
                b !== a && (this.Sm = a, this.g("afterCopyFunction", b, a))
            }
        },
        nodeCategoryProperty: {
            get: function () {
                return this.Gj
            },
            set: function (a) {
                var b = this.Gj;
                b !== a && (this.Gj = a, this.g("nodeCategoryProperty", b, a))
            }
        }
    });
    ma.Object.defineProperties(Z, {
        type: {
            get: function () {
                return "Model"
            }
        }
    });
    Z.prototype.setCategoryForNodeData = Z.prototype.Jq;
    Z.prototype.getCategoryForNodeData = Z.prototype.nt;
    Z.prototype.removeArrayItem = Z.prototype.Vv;
    Z.prototype.insertArrayItem = Z.prototype.qt;
    Z.prototype.addArrayItem = Z.prototype.Fy;
    Z.prototype.assignAllDataProperties = Z.prototype.Xj;
    Z.prototype.set = Z.prototype.set;
    Z.prototype.clearUnresolvedReferences = Z.prototype.gq;
    Z.prototype.mergeNodeDataArray = Z.prototype.gA;
    Z.prototype.removeNodeDataCollection = Z.prototype.pA;
    Z.prototype.removeNodeData = Z.prototype.Am;
    Z.prototype.addNodeDataCollection = Z.prototype.Jy;
    Z.prototype.addNodeData = Z.prototype.pf;
    Z.prototype.makeNodeDataKeyUnique = Z.prototype.zt;
    Z.prototype.findNodeDataForKey = Z.prototype.Ib;
    Z.prototype.containsNodeData = Z.prototype.sb;
    Z.prototype.setKeyForNodeData = Z.prototype.Hm;
    Z.prototype.getKeyForNodeData = Z.prototype.ja;
    Z.prototype.updateTargetBindings = Z.prototype.Ba;
    Z.prototype.commit = Z.prototype.commit;
    Z.prototype.rollbackTransaction = Z.prototype.Bf;
    Z.prototype.commitTransaction = Z.prototype.Ua;
    Z.prototype.startTransaction = Z.prototype.ua;
    Z.prototype.raiseDataChanged = Z.prototype.Ft;
    Z.prototype.raiseChanged = Z.prototype.g;
    Z.prototype.raiseChangedEvent = Z.prototype.Ya;
    Z.prototype.removeChangedListener = Z.prototype.wk;
    Z.prototype.addChangedListener = Z.prototype.Dh;
    Z.prototype.writeJsonValue = Z.prototype.Lm;
    Z.prototype.replaceJsonObjects = Z.prototype.Bm;
    Z.prototype.applyIncrementalJSON = Z.prototype.Ny;
    Z.prototype.applyIncrementalJson = Z.prototype.wx;
    Z.prototype.toJSON = Z.prototype.toJSON;
    Z.prototype.toJson = Z.prototype.Mq;
    Z.prototype.toIncrementalJSON = Z.prototype.AA;
    Z.prototype.toIncrementalJson = Z.prototype.qy;
    Z.prototype.computeJsonDifference = Z.prototype.Ty;
    Z.prototype.toIncrementalData = Z.prototype.zA;
    Z.prototype.clear = Z.prototype.clear;
    var Zq = !1,
        $q = {};
    Z.className = "Model";
    Z.fromJSON = Z.fromJson = function (a, b) {
        void 0 === b && (b = null);
        var c = null;
        if ("string" === typeof a) try {
            c = x.JSON.parse(a)
        } catch (f) {} else "object" === typeof a ? c = a : B("Unable to construct a Model from: " + a);
        if (null === b) {
            a = null;
            var d = c["class"];
            if ("string" === typeof d) try {
                var e = null;
                0 === d.indexOf("go.") ? (d = d.substr(3), e = Vq(d)) : (e = Vq(d), null === e && (e = x[d]));
                "function" === typeof e && (a = new e)
            } catch (f) {}
            null === a || a instanceof Z ? b = a : B("Unable to construct a Model of declared class: " + c["class"])
        }
        null === b && (b = Z.constructGraphLinksModel());
        b.Eq(c);
        b.Tv(c);
        return b
    };
    Z.safePropertyValue = zn;
    Z.safePropertySet = Qj;
    $q.Brush = tl;
    $q.ChangedEvent = qe;
    $q.Geometry = td;
    $q.Margin = oc;
    $q.Panel = X;
    $q.Point = I;
    $q.Rect = N;
    $q.Size = M;
    $q.Spot = P;
    $q.Transaction = ve;
    $q.UndoManager = we;

    function Ji(a, b, c) {
        Ya(this);
        this.s = !1;
        void 0 === a && (a = "");
        void 0 === b && (b = a);
        void 0 === c && (c = null);
        this.l = -1;
        this.bd = null;
        this.Wl = a;
        this.Vl = this.Qp = 0;
        this.Ms = null;
        this.eo = !1;
        this.Ol = b;
        this.jn = c;
        this.Eo = ar;
        this.cn = null;
        this.ou = new F
    }
    Ji.prototype.copy = function () {
        var a = new Ji;
        a.Wl = this.Wl;
        a.Qp = this.Qp;
        a.Vl = this.Vl;
        a.Ms = this.Ms;
        a.eo = this.eo;
        a.Ol = this.Ol;
        a.jn = this.jn;
        a.Eo = this.Eo;
        a.cn = this.cn;
        return a
    };
    t = Ji.prototype;
    t.cb = function (a) {
        a.classType === Ji && (this.mode = a)
    };
    t.toString = function () {
        return "Binding(" + this.targetProperty + ":" + this.sourceProperty + (-1 !== this.gj ? " " + this.gj : "") + " " + this.mode.name + ")"
    };
    t.freeze = function () {
        this.s = !0;
        return this
    };
    t.ea = function () {
        this.s = !1;
        return this
    };
    t.Vx = function (a) {
        void 0 === a && (a = null);
        this.mode = gn;
        this.backConverter = a;
        return this
    };
    t.Aq = function (a) {
        void 0 === a && (a = "");
        this.sourceName = a;
        this.isToModel = !1;
        return this
    };
    t.iA = function () {
        this.sourceName = null;
        this.isToModel = !0;
        return this
    };

    function gl(a, b, c) {
        a = a.sourceName;
        return null === a || "" === a ? b : "/" === a ? c.part : "." === a ? c : ".." === a ? c.panel : b.Xa(a)
    }
    t.tw = function (a, b, c) {
        var d = this.Ol;
        if (void 0 === c || "" === d || d === c) {
            c = this.Wl;
            var e = this.jn;
            if (null === e && "" === c) wa("Binding error: target property is the empty string: " + this.toString());
            else {
                var f = b;
                "" !== d && (f = zn(b, d));
                if (void 0 !== f)
                    if (null === e) "" !== c && Qj(a, c, f);
                    else try {
                        if ("" !== c) {
                            var g = e(f, a);
                            Qj(a, c, g)
                        } else e(f, a)
                    } catch (h) {}
            }
        }
    };
    t.Qq = function (a, b, c, d) {
        if (this.Eo === gn) {
            var e = this.Wl;
            if (void 0 === c || e === c) {
                c = this.Ol;
                var f = this.cn,
                    g = a;
                "" !== e && (g = zn(a, e));
                if (void 0 !== g && !this.ou.contains(a)) try {
                    this.ou.add(a);
                    var h = null !== d ? d.diagram : null,
                        k = null !== h ? h.model : null;
                    if (null === f)
                        if ("" !== c) null !== k ? k.setDataProperty(b, c, g) : Qj(b, c, g);
                        else {
                            if (null !== k && null !== d && 0 <= d.itemIndex && null !== d.panel && Array.isArray(d.panel.itemArray)) {
                                var l = d.itemIndex,
                                    m = d.panel.itemArray;
                                k.Vv(m, l);
                                k.qt(m, l, g)
                            }
                        }
                    else try {
                        if ("" !== c) {
                            var n = f(g, b, k);
                            null !== k ? k.setDataProperty(b,
                                c, n) : Qj(b, c, n)
                        } else {
                            var p = f(g, b, k);
                            if (void 0 !== p && null !== k && null !== d && 0 <= d.itemIndex && null !== d.panel && Array.isArray(d.panel.itemArray)) {
                                var r = d.itemIndex,
                                    q = d.panel.itemArray;
                                k.Vv(q, r);
                                k.qt(q, r, p)
                            }
                        }
                    } catch (u) {}
                } finally {
                    this.ou.remove(a)
                }
            }
        }
    };
    ma.Object.defineProperties(Ji.prototype, {
        gj: {
            get: function () {
                return this.l
            },
            set: function (a) {
                this.s && ua(this);
                this.l = a
            }
        },
        targetProperty: {
            get: function () {
                return this.Wl
            },
            set: function (a) {
                this.s && ua(this);
                this.Wl = a
            }
        },
        sourceName: {
            get: function () {
                return this.Ms
            },
            set: function (a) {
                this.s && ua(this);
                this.Ms = a;
                null !== a && (this.eo = !1)
            }
        },
        isToModel: {
            get: function () {
                return this.eo
            },
            set: function (a) {
                this.s &&
                    ua(this);
                this.eo = a
            }
        },
        sourceProperty: {
            get: function () {
                return this.Ol
            },
            set: function (a) {
                this.s && ua(this);
                this.Ol = a
            }
        },
        converter: {
            get: function () {
                return this.jn
            },
            set: function (a) {
                this.s && ua(this);
                this.jn = a
            }
        },
        backConverter: {
            get: function () {
                return this.cn
            },
            set: function (a) {
                this.s && ua(this);
                this.cn = a
            }
        },
        mode: {
            get: function () {
                return this.Eo
            },
            set: function (a) {
                this.s && ua(this);
                this.Eo = a
            }
        }
    });
    Ji.prototype.updateSource = Ji.prototype.Qq;
    Ji.prototype.updateTarget = Ji.prototype.tw;
    Ji.prototype.ofModel = Ji.prototype.iA;
    Ji.prototype.ofObject = Ji.prototype.Aq;
    Ji.prototype.makeTwoWay = Ji.prototype.Vx;
    var ar = new D(Ji, "OneWay", 1),
        gn = new D(Ji, "TwoWay", 2);
    Ji.className = "Binding";
    Ji.parseEnum = function (a, b) {
        return function (c) {
            c = Za(a, c);
            return null === c ? b : c
        }
    };
    Ji.toString = Ja;
    Ji.OneWay = ar;
    Ji.TwoWay = gn;

    function br(a, b) {
        Z.call(this);
        this.Tt = ',\n  "insertedLinkKeys": ';
        this.Iw = ',\n  "modifiedLinkData": ';
        this.Vt = ',\n  "removedLinkKeys": ';
        this.Oc = [];
        this.$f = new F;
        this.ob = new H;
        this.wi = "";
        this.ij = this.Nk = this.xl = null;
        this.Ve = "from";
        this.We = "to";
        this.Dj = this.Cj = "";
        this.Bj = "category";
        this.Ld = "";
        this.Bl = "isGroup";
        this.re = "group";
        this.mn = !1;
        void 0 !== a && (this.nodeDataArray = a);
        void 0 !== b && (this.linkDataArray = b)
    }
    la(br, Z);
    br.constructGraphLinksModel = Z.constructGraphLinksModel;
    br.prototype.cloneProtected = function (a) {
        Z.prototype.cloneProtected.call(this, a);
        a.wi = this.wi;
        a.xl = this.xl;
        a.Nk = this.Nk;
        a.Ve = this.Ve;
        a.We = this.We;
        a.Cj = this.Cj;
        a.Dj = this.Dj;
        a.Bj = this.Bj;
        a.Ld = this.Ld;
        a.Bl = this.Bl;
        a.re = this.re;
        a.mn = this.mn
    };
    t = br.prototype;
    t.clear = function () {
        Z.prototype.clear.call(this);
        this.Oc = [];
        this.ob.clear();
        this.$f.clear()
    };
    t.toString = function (a) {
        void 0 === a && (a = 0);
        if (2 <= a) return this.Mq();
        var b = ("" !== this.name ? this.name : "") + " GraphLinksModel";
        if (0 < a) {
            b += "\n node data:";
            a = this.nodeDataArray;
            var c = a.length,
                d;
            for (d = 0; d < c; d++) {
                var e = a[d];
                b += " " + this.ja(e) + ":" + Ja(e)
            }
            b += "\n link data:";
            a = this.linkDataArray;
            c = a.length;
            for (d = 0; d < c; d++) e = a[d], b += " " + wq(this, e, !0) + "--\x3e" + wq(this, e, !1)
        }
        return b
    };
    t.xw = function (a, b) {
        var c = Z.prototype.xw.call(this, a, b),
            d = this,
            e = new F,
            f = new F,
            g = new F,
            h = this.Ph;
        a.changes.each(function (a) {
            a.model === d && ("linkDataArray" === a.modelChange ? a.change === te ? e.add(a.newValue) : a.change === ue && g.add(a.oldValue) : d.cd(a.object) ? f.add(a.object) : null !== a.object && (null !== a.object && h && h.contains(a.object) ? h.get(a.object).each(function (a) {
                d.cd(a) && f.add(a)
            }) : cr(d, a.object).each(function (a) {
                f.add(a)
            })))
        });
        var k = new F;
        e.each(function (a) {
            k.add(d.Vb(a));
            b || f.add(a)
        });
        var l = new F;
        g.each(function (a) {
            l.add(d.Vb(a));
            b && f.add(a)
        });
        a = d.cloneDeep(f.na());
        0 < k.count && (null === c && (c = {}), b ? c.removedLinkKeys = k.na() : c.insertedLinkKeys = k.na());
        0 < a.length && (null === c && (c = {}), c.modifiedLinkData = a);
        0 < l.count && (null === c && (c = {}), b ? c.insertedLinkKeys = l.na() : c.removedLinkKeys = l.na());
        return c
    };
    t.zk = function () {
        var a = Z.prototype.zk.call(this),
            b = "";
        "category" !== this.linkCategoryProperty && "string" === typeof this.linkCategoryProperty && (b += ',\n  "linkCategoryProperty": ' + this.quote(this.linkCategoryProperty));
        "" !== this.linkKeyProperty && "string" === typeof this.linkKeyProperty && (b += ',\n  "linkKeyProperty": ' + this.quote(this.linkKeyProperty));
        "from" !== this.linkFromKeyProperty && "string" === typeof this.linkFromKeyProperty && (b += ',\n  "linkFromKeyProperty": ' + this.quote(this.linkFromKeyProperty));
        "to" !==
        this.linkToKeyProperty && "string" === typeof this.linkToKeyProperty && (b += ',\n  "linkToKeyProperty": ' + this.quote(this.linkToKeyProperty));
        "" !== this.linkFromPortIdProperty && "string" === typeof this.linkFromPortIdProperty && (b += ',\n  "linkFromPortIdProperty": ' + this.quote(this.linkFromPortIdProperty));
        "" !== this.linkToPortIdProperty && "string" === typeof this.linkToPortIdProperty && (b += ',\n  "linkToPortIdProperty": ' + this.quote(this.linkToPortIdProperty));
        "" !== this.linkLabelKeysProperty && "string" === typeof this.linkLabelKeysProperty &&
            (b += ',\n  "linkLabelKeysProperty": ' + this.quote(this.linkLabelKeysProperty));
        "isGroup" !== this.nodeIsGroupProperty && "string" === typeof this.nodeIsGroupProperty && (b += ',\n  "nodeIsGroupProperty": ' + this.quote(this.nodeIsGroupProperty));
        "group" !== this.nodeGroupKeyProperty && "string" === typeof this.nodeGroupKeyProperty && (b += ',\n  "nodeGroupKeyProperty": ' + this.quote(this.nodeGroupKeyProperty));
        return a + b
    };
    t.Eq = function (a) {
        Z.prototype.Eq.call(this, a);
        a.linkKeyProperty && (this.linkKeyProperty = a.linkKeyProperty);
        a.linkFromKeyProperty && (this.linkFromKeyProperty = a.linkFromKeyProperty);
        a.linkToKeyProperty && (this.linkToKeyProperty = a.linkToKeyProperty);
        a.linkFromPortIdProperty && (this.linkFromPortIdProperty = a.linkFromPortIdProperty);
        a.linkToPortIdProperty && (this.linkToPortIdProperty = a.linkToPortIdProperty);
        a.linkCategoryProperty && (this.linkCategoryProperty = a.linkCategoryProperty);
        a.linkLabelKeysProperty && (this.linkLabelKeysProperty =
            a.linkLabelKeysProperty);
        a.nodeIsGroupProperty && (this.nodeIsGroupProperty = a.nodeIsGroupProperty);
        a.nodeGroupKeyProperty && (this.nodeGroupKeyProperty = a.nodeGroupKeyProperty)
    };
    t.yw = function () {
        var a = Z.prototype.yw.call(this),
            b = ',\n  "linkDataArray": ' + Pq(this, this.linkDataArray, !0);
        return a + b
    };
    t.Tv = function (a) {
        Z.prototype.Tv.call(this, a);
        a = a.linkDataArray;
        Array.isArray(a) && (this.Bm(a), this.linkDataArray = a)
    };
    t.Rq = function (a) {
        if (!(a instanceof br)) return B("Model.computeJsonDifference: newmodel must be a GraphLinksModel"), "";
        var b = Z.prototype.Rq.call(this, a);
        Rq(this, a, "linkKeyProperty");
        Rq(this, a, "linkFromKeyProperty");
        Rq(this, a, "linkToKeyProperty");
        Rq(this, a, "linkLabelKeysProperty");
        Rq(this, a, "nodeIsGroupProperty");
        Rq(this, a, "nodeGroupKeyProperty");
        for (var c = new F, d = new F, e = (new F).addAll(this.ob.iteratorKeys), f = new H, g = a.linkDataArray, h = g.length, k = 0; k < h; k++) {
            var l = g[k],
                m = a.Vb(l);
            if (void 0 !== m) {
                e.remove(m);
                var n = this.zg(m);
                null === n ? (c.add(m), d.add(l)) : Qq(this, n, l, f) || d.add(l)
            } else this.xq(l), m = this.Vb(l), c.add(m), d.add(l)
        }
        a = b;
        0 < c.count && (a += this.Tt + Pq(this, c.na(), !0));
        0 < d.count && (a += this.Iw + Pq(this, d.na(), !0));
        0 < e.count && (a += this.Vt + Pq(this, e.na(), !0));
        return a
    };

    function cr(a, b) {
        for (var c = new F, d = 0; d < a.linkDataArray.length; d++) {
            var e = a.linkDataArray[d];
            Tq(a, b, e, e, c)
        }
        return c
    }
    t.ww = function (a, b) {
        var c = Z.prototype.ww.call(this, a, b),
            d = this,
            e = new F,
            f = new F,
            g = new F,
            h = this.Ph;
        a.changes.each(function (a) {
            a.model === d && ("linkDataArray" === a.modelChange ? a.change === te ? e.add(a.newValue) : a.change === ue && g.add(a.oldValue) : d.cd(a.object) ? f.add(a.object) : null !== a.object && (null !== a.object && h && h.contains(a.object) ? h.get(a.object).each(function (a) {
                d.cd(a) && f.add(a)
            }) : cr(d, a.object).each(function (a) {
                f.add(a)
            })))
        });
        var k = new F;
        e.each(function (a) {
            k.add(d.Vb(a));
            b || f.add(a)
        });
        var l = new F;
        g.each(function (a) {
            l.add(d.Vb(a));
            b && f.add(a)
        });
        a = c;
        0 < k.count && (a += (b ? this.Vt : this.Tt) + Pq(this, k.na(), !0));
        0 < f.count && (a += this.Iw + Pq(this, f.na(), !0));
        0 < l.count && (a += (b ? this.Tt : this.Vt) + Pq(this, l.na(), !0));
        return a
    };
    t.Dq = function (a) {
        (void 0 !== a.linkCategoryProperty && a.linkCategoryProperty !== this.linkCategoryProperty || void 0 !== a.linkKeyProperty && a.linkKeyProperty !== this.linkKeyProperty || void 0 !== a.linkFromKeyProperty && a.linkFromKeyProperty !== this.linkFromKeyProperty || void 0 !== a.linkToKeyProperty && a.linkToKeyProperty !== this.linkToKeyProperty || void 0 !== a.linkFromPortIdProperty && a.linkFromPortIdProperty !== this.linkFromPortIdProperty || void 0 !== a.linkToPortIdProperty && a.linkToPortIdProperty !== this.linkToPortIdProperty ||
            void 0 !== a.linkLabelKeysProperty && a.linkLabelKeysProperty !== this.linkLabelKeysProperty || void 0 !== a.nodeIsGroupProperty && a.nodeIsGroupProperty !== this.nodeIsGroupProperty || void 0 !== a.nodeGroupKeyProperty && a.nodeGroupKeyProperty !== this.nodeGroupKeyProperty) && B("applyIncrementalJson cannot change Model properties");
        Z.prototype.Dq.call(this, a);
        var b = a.insertedLinkKeys;
        if (Array.isArray(b))
            for (var c = b.length, d = 0; d < c; d++) {
                var e = b[d],
                    f = this.zg(e);
                null === f && (f = this.hq({}), this.Nt(f, e), this.Ni(f))
            }
        b = a.modifiedLinkData;
        if (Array.isArray(b))
            for (c = b.length, d = 0; d < c; d++)
                if (e = b[d], f = this.Vb(e), f = this.zg(f), null !== f)
                    for (var g in e) "__gohashid" !== g && g !== this.linkKeyProperty && this.setDataProperty(f, g, e[g]);
        a = a.removedLinkKeys;
        if (Array.isArray(a))
            for (g = a.length, b = 0; b < g; b++) c = this.zg(a[b]), null !== c && this.zm(c)
    };
    br.prototype.changeState = function (a, b) {
        if (a.change === te) {
            var c = a.newParam;
            if ("linkDataArray" === a.modelChange) {
                a = a.newValue;
                if (za(a) && "number" === typeof c) {
                    var d = this.Vb(a);
                    b ? (this.$f.remove(a), this.Oc[c] === a && this.Oc.splice(c, 1), void 0 !== d && this.ob.remove(d)) : (this.$f.add(a), this.Oc[c] !== a && this.Oc.splice(c, 0, a), void 0 !== d && this.ob.add(d, a))
                }
                return
            }
            if ("linkLabelKeys" === a.modelChange) {
                d = this.Cg(a.object);
                Array.isArray(d) && "number" === typeof c && (b ? (c = d.indexOf(a.newValue), 0 <= c && d.splice(c, 1)) : 0 > d.indexOf(a.newValue) &&
                    d.splice(c, 0, a.newValue));
                return
            }
        } else if (a.change === ue) {
            c = a.oldParam;
            if ("linkDataArray" === a.modelChange) {
                a = a.oldValue;
                za(a) && "number" === typeof c && (d = this.Vb(a), b ? (this.$f.add(a), this.Oc[c] !== a && this.Oc.splice(c, 0, a), void 0 !== d && this.ob.add(d, a)) : (this.$f.remove(a), this.Oc[c] === a && this.Oc.splice(c, 1), void 0 !== d && this.ob.remove(d)));
                return
            }
            if ("linkLabelKeys" === a.modelChange) {
                d = this.Cg(a.object);
                Array.isArray(d) && "number" === typeof c && (b ? 0 > d.indexOf(a.newValue) && d.splice(c, 0, a.newValue) : (c = d.indexOf(a.newValue),
                    0 <= c && d.splice(c, 1)));
                return
            }
        }
        Z.prototype.changeState.call(this, a, b)
    };
    t = br.prototype;
    t.rm = function (a) {
        if (void 0 !== a) {
            var b = this.ij;
            if (null !== b) {
                var c = this.Ib(a);
                null === c && (c = this.copyNodeData(b), Qj(c, this.nodeKeyProperty, a), this.pf(c))
            }
            return a
        }
    };
    t.Cz = function (a) {
        return wq(this, a, !0)
    };
    t.iy = function (a, b) {
        Eq(this, a, b, !0)
    };
    t.Iz = function (a) {
        return wq(this, a, !1)
    };
    t.my = function (a, b) {
        Eq(this, a, b, !1)
    };

    function wq(a, b, c) {
        if (null !== b && (a = c ? a.Ve : a.We, "" !== a && (a = zn(b, a), void 0 !== a))) {
            if (yq(a)) return a;
            B((c ? "FromKey" : "ToKey") + " value for link data " + b + " is not a number or a string: " + a)
        }
    }

    function Eq(a, b, c, d) {
        null === c && (c = void 0);
        if (null !== b) {
            var e = d ? a.Ve : a.We;
            if ("" !== e)
                if (c = a.rm(c), a.cd(b)) {
                    var f = zn(b, e);
                    f !== c && (Cq(a, f, b), Qj(b, e, c), null === a.Ib(c) && Dq(a, c, b), Xq(a, d ? "linkFromKey" : "linkToKey", re, e, b, f, c), "string" === typeof e && a.Ba(b, e))
                } else Qj(b, e, c)
        }
    }
    t.Dz = function (a) {
        return vq(this, a, !0)
    };
    t.jy = function (a, b) {
        Fq(this, a, b, !0)
    };
    t.Jz = function (a) {
        return vq(this, a, !1)
    };
    t.ny = function (a, b) {
        Fq(this, a, b, !1)
    };

    function vq(a, b, c) {
        if (null === b) return "";
        a = c ? a.Cj : a.Dj;
        if ("" === a) return "";
        b = zn(b, a);
        return void 0 === b ? "" : b
    }

    function Fq(a, b, c, d) {
        if (null !== b) {
            var e = d ? a.Cj : a.Dj;
            if ("" !== e)
                if (a.cd(b)) {
                    var f = zn(b, e);
                    void 0 === f && (f = "");
                    f !== c && (Qj(b, e, c), Xq(a, d ? "linkFromPortId" : "linkToPortId", re, e, b, f, c), "string" === typeof e && a.Ba(b, e))
                } else Qj(b, e, c)
        }
    }
    t.Cg = function (a) {
        if (null === a) return dr;
        var b = this.Ld;
        if ("" === b) return dr;
        a = zn(a, b);
        return void 0 === a ? dr : a
    };
    t.dw = function (a, b) {
        if (null !== a) {
            var c = this.Ld;
            if ("" !== c)
                if (this.cd(a)) {
                    var d = zn(a, c);
                    void 0 === d && (d = dr);
                    if (d !== b) {
                        if (Array.isArray(d))
                            for (var e = d.length, f = 0; f < e; f++) Cq(this, d[f], a);
                        Qj(a, c, b);
                        e = b.length;
                        for (f = 0; f < e; f++) {
                            var g = b[f];
                            null === this.Ib(g) && Dq(this, g, a)
                        }
                        Xq(this, "linkLabelKeys", re, c, a, d, b);
                        "string" === typeof c && this.Ba(a, c)
                    }
                } else Qj(a, c, b)
        }
    };
    t.dv = function (a, b) {
        if (null !== b && void 0 !== b && null !== a) {
            var c = this.Ld;
            if ("" !== c) {
                var d = zn(a, c);
                if (void 0 === d) c = [], c.push(b), this.dw(a, c);
                else if (Array.isArray(d)) {
                    var e = d.indexOf(b);
                    0 <= e || (e = d.length, d.push(b), this.cd(a) && (null === this.Ib(b) && Dq(this, b, a), Xq(this, "linkLabelKeys", te, c, a, null, b, null, e)))
                } else B(c + " property is not an Array; cannot addLabelKeyForLinkData: " + a)
            }
        }
    };
    t.ay = function (a, b) {
        if (null !== b && void 0 !== b && null !== a) {
            var c = this.Ld;
            if ("" !== c) {
                var d = zn(a, c);
                if (Array.isArray(d)) {
                    var e = d.indexOf(b);
                    0 > e || (d.splice(e, 1), this.cd(a) && (Cq(this, b, a), Xq(this, "linkLabelKeys", ue, c, a, b, null, e, null)))
                } else void 0 !== d && B(c + " property is not an Array; cannot removeLabelKeyforLinkData: " + a)
            }
        }
    };
    t.Vb = function (a) {
        if (null !== a) {
            var b = this.wi;
            if ("" !== b && (b = zn(a, b), void 0 !== b)) {
                if (yq(b)) return b;
                B("Key value for link data " + a + " is not a number or a string: " + b)
            }
        }
    };
    t.Nt = function (a, b) {
        if (null !== a) {
            var c = this.wi;
            if ("" !== c)
                if (this.cd(a)) {
                    var d = zn(a, c);
                    d !== b && null === this.zg(b) && (Qj(a, c, b), void 0 !== d && this.ob.remove(d), this.ob.add(b, a), Xq(this, "linkKey", re, c, a, d, b), "string" === typeof c && this.Ba(a, c))
                } else Qj(a, c, b)
        }
    };
    t.zg = function (a) {
        null === a && B("GraphLinksModel.findLinkDataForKey:key must not be null");
        return void 0 !== a && yq(a) ? this.ob.H(a) : null
    };
    t.xq = function (a) {
        if (null !== a) {
            var b = this.wi;
            if ("" !== b) {
                var c = this.Vb(a);
                if (void 0 === c || this.ob.contains(c)) {
                    var d = this.xl;
                    if (null !== d && (c = d(this, a), void 0 !== c && null !== c && !this.ob.contains(c))) {
                        Qj(a, b, c);
                        return
                    }
                    if ("string" === typeof c) {
                        for (d = 2; this.ob.contains(c + d);) d++;
                        Qj(a, b, c + d)
                    } else if (void 0 === c || "number" === typeof c) {
                        for (c = -this.ob.count - 1; this.ob.contains(c);) c--;
                        Qj(a, b, c)
                    }
                }
            }
        }
    };
    t.cd = function (a) {
        return null === a ? !1 : this.$f.contains(a)
    };
    t.Ni = function (a) {
        null !== a && (nb(a), this.cd(a) || Aq(this, a, !0))
    };

    function Aq(a, b, c) {
        if ("" !== a.linkKeyProperty) {
            var d = a.Vb(b);
            if (void 0 !== d && a.ob.H(d) === b) return;
            a.xq(b);
            d = a.Vb(b);
            if (void 0 === d) {
                B("GraphLinksModel.makeLinkDataKeyUnique failed on " + b + ". Data not added to model.");
                return
            }
            a.ob.add(d, b)
        }
        a.$f.add(b);
        d = null;
        c && (d = a.Oc.length, a.Oc.splice(d, 0, b));
        Xq(a, "linkDataArray", te, "linkDataArray", a, null, b, null, d);
        er(a, b)
    }
    t.Iy = function (a) {
        if (Array.isArray(a))
            for (var b = a.length, c = 0; c < b; c++) this.Ni(a[c]);
        else
            for (a = a.iterator; a.next();) this.Ni(a.value)
    };
    t.zm = function (a) {
        null !== a && zq(this, a, !0)
    };

    function zq(a, b, c) {
        a.$f.remove(b);
        var d = a.Vb(b);
        void 0 !== d && a.ob.remove(d);
        d = null;
        if (c) {
            d = a.Oc.indexOf(b);
            if (0 > d) return;
            a.Oc.splice(d, 1)
        }
        Xq(a, "linkDataArray", ue, "linkDataArray", a, b, null, d, null);
        c = wq(a, b, !0);
        Cq(a, c, b);
        c = wq(a, b, !1);
        Cq(a, c, b);
        d = a.Cg(b);
        if (Array.isArray(d))
            for (var e = d.length, f = 0; f < e; f++) c = d[f], Cq(a, c, b)
    }
    t.nA = function (a) {
        if (Array.isArray(a))
            for (var b = a.length, c = 0; c < b; c++) this.zm(a[c]);
        else
            for (a = a.iterator; a.next();) this.zm(a.value)
    };
    t.fA = function (a) {
        if (Aa(a)) {
            for (var b = new F(this.ob.iteratorKeys), c = new F, d = a.length, e = 0; e < d; e++) {
                var f = a[e],
                    g = this.Vb(f);
                if (void 0 !== g) {
                    c.add(g);
                    var h = this.zg(g);
                    null !== h ? this.Xj(h, f) : (h = {}, this.Nt(h, g), this.Xj(h, f), this.Ni(h))
                } else this.Ni(f), c.add(this.Vb(f))
            }
            for (a = b.iterator; a.next();) b = a.value, c.contains(b) || (b = this.zg(b)) && this.zm(b);
            this.gq()
        }
    };

    function er(a, b) {
        var c = wq(a, b, !0);
        c = a.rm(c);
        null === a.Ib(c) && Dq(a, c, b);
        c = wq(a, b, !1);
        c = a.rm(c);
        null === a.Ib(c) && Dq(a, c, b);
        var d = a.Cg(b);
        if (Array.isArray(d))
            for (var e = d.length, f = 0; f < e; f++) c = d[f], null === a.Ib(c) && Dq(a, c, b)
    }
    t.hq = function (a) {
        if (null === a) return null;
        var b = this.Nk;
        a = null !== b ? b(a, this) : Yq(this, a, !0);
        za(a) && (Ya(a), "" !== this.Ve && Qj(a, this.Ve, void 0), "" !== this.We && Qj(a, this.We, void 0), "" !== this.Ld && Qj(a, this.Ld, []));
        return a
    };
    t.Hv = function (a) {
        if (null === a) return !1;
        var b = this.Bl;
        return "" === b ? !1 : zn(a, b) ? !0 : !1
    };
    t.Yi = function (a) {
        if (null !== a) {
            var b = this.re;
            if ("" !== b && (b = zn(a, b), void 0 !== b)) {
                if (yq(b)) return b;
                B("GroupKey value for node data " + a + " is not a number or a string: " + b)
            }
        }
    };
    t.Mt = function (a, b) {
        null === b && (b = void 0);
        if (null !== a) {
            var c = this.re;
            if ("" !== c)
                if (this.sb(a)) {
                    var d = zn(a, c);
                    d !== b && (Cq(this, d, a), Qj(a, c, b), null === this.Ib(b) && Dq(this, b, a), Xq(this, "nodeGroupKey", re, c, a, d, b), "string" === typeof c && this.Ba(a, c))
                } else Qj(a, c, b)
        }
    };
    br.prototype.copyNodeData = function (a) {
        if (null === a) return null;
        a = Z.prototype.copyNodeData.call(this, a);
        this.ak || "" === this.re || void 0 === zn(a, this.re) || Qj(a, this.re, void 0);
        return a
    };
    br.prototype.setDataProperty = function (a, b, c) {
        if (this.sb(a))
            if (b === this.nodeKeyProperty) this.Hm(a, c);
            else {
                if (b === this.nodeCategoryProperty) {
                    this.Jq(a, c);
                    return
                }
                if (b === this.nodeGroupKeyProperty) {
                    this.Mt(a, c);
                    return
                }
            }
        else if (this.cd(a)) {
            if (b === this.linkFromKeyProperty) {
                Eq(this, a, c, !0);
                return
            }
            if (b === this.linkToKeyProperty) {
                Eq(this, a, c, !1);
                return
            }
            if (b === this.linkFromPortIdProperty) {
                Fq(this, a, c, !0);
                return
            }
            if (b === this.linkToPortIdProperty) {
                Fq(this, a, c, !1);
                return
            }
            if (b === this.linkKeyProperty) {
                this.Nt(a, c);
                return
            }
            if (b === this.linkCategoryProperty) {
                this.Lt(a, c);
                return
            }
            if (b === this.linkLabelKeysProperty) {
                this.dw(a, c);
                return
            }
        }
        var d = zn(a, b);
        d !== c && (Qj(a, b, c), this.Ft(a, b, d, c))
    };
    t = br.prototype;
    t.Xj = function (a, b) {
        if (b) {
            var c = this.sb(a),
                d = this.cd(a),
                e;
            for (e in b) "__gohashid" === e || c && e === this.nodeKeyProperty || c && e === this.nodeIsGroupProperty && zn(a, e) === b[e] || d && e === this.linkKeyProperty || this.setDataProperty(a, e, b[e])
        }
    };
    t.Hq = function (a, b) {
        Z.prototype.Hq.call(this, a, b);
        for (var c = this.ab.iterator; c.next();) this.Zv(c.value, a, b);
        for (c = this.$f.iterator; c.next();) {
            var d = c.value,
                e = a,
                f = b;
            if (wq(this, d, !0) === e) {
                var g = this.Ve;
                Qj(d, g, f);
                Xq(this, "linkFromKey", re, g, d, e, f);
                "string" === typeof g && this.Ba(d, g)
            }
            wq(this, d, !1) === e && (g = this.We, Qj(d, g, f), Xq(this, "linkToKey", re, g, d, e, f), "string" === typeof g && this.Ba(d, g));
            g = this.Cg(d);
            if (Array.isArray(g))
                for (var h = g.length, k = this.Ld, l = 0; l < h; l++) g[l] === e && (g[l] = f, Xq(this, "linkLabelKeys", te,
                    k, d, e, f, l, l))
        }
    };
    t.Zv = function (a, b, c) {
        if (this.Yi(a) === b) {
            var d = this.re;
            Qj(a, d, c);
            Xq(this, "nodeGroupKey", re, d, a, b, c);
            "string" === typeof d && this.Ba(a, d)
        }
    };
    t.sw = function () {
        Z.prototype.sw.call(this);
        for (var a = this.linkDataArray, b = a.length, c = 0; c < b; c++) er(this, a[c])
    };
    t.Dm = function (a) {
        Z.prototype.Dm.call(this, a);
        a = this.ja(a);
        var b = Bq(this, a);
        if (null !== b) {
            var c = Fa();
            for (b = b.iterator; b.next();) {
                var d = b.value;
                if (this.sb(d)) {
                    if (this.Yi(d) === a) {
                        var e = this.re;
                        Xq(this, "nodeGroupKey", re, e, d, a, a);
                        "string" === typeof e && this.Ba(d, e);
                        c.push(d)
                    }
                } else if (wq(this, d, !0) === a && (e = this.Ve, Xq(this, "linkFromKey", re, e, d, a, a), "string" === typeof e && this.Ba(d, e), c.push(d)), wq(this, d, !1) === a && (e = this.We, Xq(this, "linkToKey", re, e, d, a, a), "string" === typeof e && this.Ba(d, e), c.push(d)), e = this.Cg(d),
                    Array.isArray(e))
                    for (var f = e.length, g = this.Ld, h = 0; h < f; h++) e[h] === a && (Xq(this, "linkLabelKeys", te, g, d, a, a, h, h), c.push(d))
            }
            for (b = 0; b < c.length; b++) Cq(this, a, c[b]);
            Ha(c)
        }
    };
    t.Cm = function (a) {
        Z.prototype.Cm.call(this, a);
        var b = this.Yi(a);
        null === this.Ib(b) && Dq(this, b, a)
    };
    t.Oq = function (a) {
        Z.prototype.Oq.call(this, a);
        var b = this.Yi(a);
        Cq(this, b, a)
    };
    t.wv = function (a) {
        if (null === a) return "";
        var b = this.Bj;
        if ("" === b) return "";
        b = zn(a, b);
        if (void 0 === b) return "";
        if ("string" === typeof b) return b;
        B("getCategoryForLinkData found a non-string category for " + a + ": " + b);
        return ""
    };
    br.prototype.getLinkCategoryForData = function (a) {
        return this.wv(a)
    };
    br.prototype.Lt = function (a, b) {
        if (null !== a) {
            var c = this.Bj;
            if ("" !== c)
                if (this.cd(a)) {
                    var d = zn(a, c);
                    void 0 === d && (d = "");
                    d !== b && (Qj(a, c, b), Xq(this, "linkCategory", re, c, a, d, b), "string" === typeof c && this.Ba(a, c))
                } else Qj(a, c, b)
        }
    };
    br.prototype.setLinkCategoryForData = function (a, b) {
        this.Lt(a, b)
    };
    br.prototype.ik = function () {
        return !0
    };
    br.prototype.pm = function () {
        return !0
    };
    br.prototype.vt = function () {
        return !0
    };
    br.prototype.jk = function () {
        return !0
    };
    ma.Object.defineProperties(br.prototype, {
        archetypeNodeData: {
            get: function () {
                return this.ij
            },
            set: function (a) {
                var b = this.ij;
                b !== a && (this.ij = a, this.g("archetypeNodeData", b, a))
            }
        },
        linkFromKeyProperty: {
            get: function () {
                return this.Ve
            },
            set: function (a) {
                var b = this.Ve;
                b !== a && (this.Ve = a, this.g("linkFromKeyProperty", b, a))
            }
        },
        linkToKeyProperty: {
            get: function () {
                return this.We
            },
            set: function (a) {
                var b = this.We;
                b !== a && (this.We = a, this.g("linkToKeyProperty",
                    b, a))
            }
        },
        linkFromPortIdProperty: {
            get: function () {
                return this.Cj
            },
            set: function (a) {
                var b = this.Cj;
                b !== a && (this.Cj = a, this.g("linkFromPortIdProperty", b, a))
            }
        },
        linkToPortIdProperty: {
            get: function () {
                return this.Dj
            },
            set: function (a) {
                var b = this.Dj;
                b !== a && (this.Dj = a, this.g("linkToPortIdProperty", b, a))
            }
        },
        linkLabelKeysProperty: {
            get: function () {
                return this.Ld
            },
            set: function (a) {
                var b = this.Ld;
                b !== a && (this.Ld = a, this.g("linkLabelKeysProperty",
                    b, a))
            }
        },
        linkDataArray: {
            get: function () {
                return this.Oc
            },
            set: function (a) {
                var b = this.Oc;
                if (b !== a) {
                    this.ob.clear();
                    for (var c = a.length, d = 0; d < c; d++) {
                        var e = a[d];
                        if (!za(e)) {
                            B("GraphLinksModel.linkDataArray must only contain Objects, not: " + e);
                            return
                        }
                        nb(e)
                    }
                    this.Oc = a;
                    if ("" !== this.linkKeyProperty) {
                        d = new E;
                        for (e = 0; e < c; e++) {
                            var f = a[e],
                                g = this.Vb(f);
                            void 0 === g ? d.add(f) : null !== this.ob.H(g) ? d.add(f) : this.ob.add(g, f)
                        }
                        for (d = d.iterator; d.next();) e = d.value, this.xq(e), f = this.Vb(e), void 0 !==
                            f && this.ob.add(f, e)
                    }
                    d = new F;
                    for (e = 0; e < c; e++) d.add(a[e]);
                    this.$f = d;
                    Xq(this, "linkDataArray", re, "linkDataArray", this, b, a);
                    for (b = 0; b < c; b++) er(this, a[b])
                }
            }
        },
        linkKeyProperty: {
            get: function () {
                return this.wi
            },
            set: function (a) {
                var b = this.wi;
                if (b !== a) {
                    this.wi = a;
                    this.ob.clear();
                    for (var c = this.linkDataArray.length, d = 0; d < c; d++) {
                        var e = this.linkDataArray[d],
                            f = this.Vb(e);
                        void 0 === f && (this.xq(e), f = this.Vb(e));
                        void 0 !== f && this.ob.add(f, e)
                    }
                    this.g("linkKeyProperty", b, a)
                }
            }
        },
        makeUniqueLinkKeyFunction: {
            get: function () {
                return this.xl
            },
            set: function (a) {
                var b = this.xl;
                b !== a && (this.xl = a, this.g("makeUniqueLinkKeyFunction", b, a))
            }
        },
        copyLinkDataFunction: {
            get: function () {
                return this.Nk
            },
            set: function (a) {
                var b = this.Nk;
                b !== a && (this.Nk = a, this.g("copyLinkDataFunction", b, a))
            }
        },
        nodeIsGroupProperty: {
            get: function () {
                return this.Bl
            },
            set: function (a) {
                var b = this.Bl;
                b !== a && (this.Bl = a, this.g("nodeIsGroupProperty", b, a))
            }
        },
        nodeGroupKeyProperty: {
            get: function () {
                return this.re
            },
            set: function (a) {
                var b = this.re;
                b !== a && (this.re = a, this.g("nodeGroupKeyProperty", b, a))
            }
        },
        ak: {
            get: function () {
                return this.mn
            },
            set: function (a) {
                this.mn !== a && (this.mn = a)
            }
        },
        linkCategoryProperty: {
            get: function () {
                return this.Bj
            },
            set: function (a) {
                var b = this.Bj;
                b !== a && (this.Bj = a, this.g("linkCategoryProperty", b, a))
            }
        }
    });
    ma.Object.defineProperties(br, {
        type: {
            get: function () {
                return "GraphLinksModel"
            }
        }
    });
    br.prototype.setCategoryForLinkData = br.prototype.Lt;
    br.prototype.getCategoryForLinkData = br.prototype.wv;
    br.prototype.assignAllDataProperties = br.prototype.Xj;
    br.prototype.setGroupKeyForNodeData = br.prototype.Mt;
    br.prototype.getGroupKeyForNodeData = br.prototype.Yi;
    br.prototype.isGroupForNodeData = br.prototype.Hv;
    br.prototype.copyLinkData = br.prototype.hq;
    br.prototype.mergeLinkDataArray = br.prototype.fA;
    br.prototype.removeLinkDataCollection = br.prototype.nA;
    br.prototype.removeLinkData = br.prototype.zm;
    br.prototype.addLinkDataCollection = br.prototype.Iy;
    br.prototype.addLinkData = br.prototype.Ni;
    br.prototype.containsLinkData = br.prototype.cd;
    br.prototype.makeLinkDataKeyUnique = br.prototype.xq;
    br.prototype.findLinkDataForKey = br.prototype.zg;
    br.prototype.setKeyForLinkData = br.prototype.Nt;
    br.prototype.getKeyForLinkData = br.prototype.Vb;
    br.prototype.removeLabelKeyForLinkData = br.prototype.ay;
    br.prototype.addLabelKeyForLinkData = br.prototype.dv;
    br.prototype.setLabelKeysForLinkData = br.prototype.dw;
    br.prototype.getLabelKeysForLinkData = br.prototype.Cg;
    br.prototype.setToPortIdForLinkData = br.prototype.ny;
    br.prototype.getToPortIdForLinkData = br.prototype.Jz;
    br.prototype.setFromPortIdForLinkData = br.prototype.jy;
    br.prototype.getFromPortIdForLinkData = br.prototype.Dz;
    br.prototype.setToKeyForLinkData = br.prototype.my;
    br.prototype.getToKeyForLinkData = br.prototype.Iz;
    br.prototype.setFromKeyForLinkData = br.prototype.iy;
    br.prototype.getFromKeyForLinkData = br.prototype.Cz;
    br.prototype.clear = br.prototype.clear;
    var dr = Object.freeze([]);
    br.className = "GraphLinksModel";
    $q.GraphLinksModel = br;
    Z.constructGraphLinksModel = Z.constructGraphLinksModel = function () {
        return new br
    };
    Z.initDiagramModel = Ai = function () {
        return new br
    };

    function fr(a) {
        Z.call(this);
        this.se = "parent";
        this.on = !1;
        this.Ij = "parentLinkCategory";
        void 0 !== a && (this.nodeDataArray = a)
    }
    la(fr, Z);
    fr.constructGraphLinksModel = Z.constructGraphLinksModel;
    fr.prototype.cloneProtected = function (a) {
        Z.prototype.cloneProtected.call(this, a);
        a.se = this.se;
        a.on = this.on;
        a.Ij = this.Ij
    };
    t = fr.prototype;
    t.toString = function (a) {
        void 0 === a && (a = 0);
        if (2 <= a) return this.Mq();
        var b = ("" !== this.name ? this.name : "") + " TreeModel";
        if (0 < a) {
            b += "\n node data:";
            a = this.nodeDataArray;
            for (var c = a.length, d = 0; d < c; d++) {
                var e = a[d];
                b += " " + this.ja(e) + ":" + Ja(e)
            }
        }
        return b
    };
    t.zk = function () {
        var a = Z.prototype.zk.call(this),
            b = "";
        "parent" !== this.nodeParentKeyProperty && "string" === typeof this.nodeParentKeyProperty && (b += ',\n  "nodeParentKeyProperty": ' + this.quote(this.nodeParentKeyProperty));
        return a + b
    };
    t.Eq = function (a) {
        Z.prototype.Eq.call(this, a);
        a.nodeParentKeyProperty && (this.nodeParentKeyProperty = a.nodeParentKeyProperty)
    };
    t.Rq = function (a) {
        Rq(this, a, "nodeParentKeyProperty");
        return Z.prototype.Rq.call(this, a)
    };
    t.Dq = function (a) {
        void 0 !== a.nodeParentKeyProperty && a.nodeParentKeyProperty !== this.nodeParentKeyProperty && B("applyIncrementalJson cannot change Model properties");
        Z.prototype.Dq.call(this, a)
    };
    t.rm = function (a) {
        return a
    };
    t.$i = function (a) {
        if (null !== a) {
            var b = this.se;
            if ("" !== b && (b = zn(a, b), void 0 !== b)) {
                if (yq(b)) return b;
                B("ParentKey value for node data " + a + " is not a number or a string: " + b)
            }
        }
    };
    t.Ge = function (a, b) {
        null === b && (b = void 0);
        if (null !== a) {
            var c = this.se;
            if ("" !== c)
                if (b = this.rm(b), this.sb(a)) {
                    var d = zn(a, c);
                    d !== b && (Cq(this, d, a), Qj(a, c, b), null === this.Ib(b) && Dq(this, b, a), Xq(this, "nodeParentKey", re, c, a, d, b), "string" === typeof c && this.Ba(a, c))
                } else Qj(a, c, b)
        }
    };
    t.xv = function (a) {
        if (null === a) return "";
        var b = this.Ij;
        if ("" === b) return "";
        b = zn(a, b);
        if (void 0 === b) return "";
        if ("string" === typeof b) return b;
        B("getParentLinkCategoryForNodeData found a non-string category for " + a + ": " + b);
        return ""
    };
    fr.prototype.getLinkCategoryForData = function (a) {
        return this.xv(a)
    };
    fr.prototype.ew = function (a, b) {
        if (null !== a) {
            var c = this.Ij;
            if ("" !== c)
                if (this.sb(a)) {
                    var d = zn(a, c);
                    void 0 === d && (d = "");
                    d !== b && (Qj(a, c, b), Xq(this, "parentLinkCategory", re, c, a, d, b), "string" === typeof c && this.Ba(a, c))
                } else Qj(a, c, b)
        }
    };
    fr.prototype.setLinkCategoryForData = function (a, b) {
        this.ew(a, b)
    };
    fr.prototype.copyNodeData = function (a) {
        if (null === a) return null;
        a = Z.prototype.copyNodeData.call(this, a);
        this.bk || "" === this.se || void 0 === zn(a, this.se) || Qj(a, this.se, void 0);
        return a
    };
    fr.prototype.setDataProperty = function (a, b, c) {
        if (this.sb(a))
            if (b === this.nodeKeyProperty) this.Hm(a, c);
            else {
                if (b === this.nodeCategoryProperty) {
                    this.Jq(a, c);
                    return
                }
                if (b === this.nodeParentKeyProperty) {
                    this.Ge(a, c);
                    return
                }
            } var d = zn(a, b);
        d !== c && (Qj(a, b, c), this.Ft(a, b, d, c))
    };
    t = fr.prototype;
    t.Hq = function (a, b) {
        Z.prototype.Hq.call(this, a, b);
        for (var c = this.ab.iterator; c.next();) this.Zv(c.value, a, b)
    };
    t.Zv = function (a, b, c) {
        if (this.$i(a) === b) {
            var d = this.se;
            Qj(a, d, c);
            Xq(this, "nodeParentKey", re, d, a, b, c);
            "string" === typeof d && this.Ba(a, d)
        }
    };
    t.Dm = function (a) {
        Z.prototype.Dm.call(this, a);
        a = this.ja(a);
        var b = Bq(this, a);
        if (null !== b) {
            var c = Fa();
            for (b = b.iterator; b.next();) {
                var d = b.value;
                if (this.sb(d) && this.$i(d) === a) {
                    var e = this.se;
                    Xq(this, "nodeParentKey", re, e, d, a, a);
                    "string" === typeof e && this.Ba(d, e);
                    c.push(d)
                }
            }
            for (b = 0; b < c.length; b++) Cq(this, a, c[b]);
            Ha(c)
        }
    };
    t.Cm = function (a) {
        Z.prototype.Cm.call(this, a);
        var b = this.$i(a);
        b = this.rm(b);
        null === this.Ib(b) && Dq(this, b, a)
    };
    t.Oq = function (a) {
        Z.prototype.Oq.call(this, a);
        var b = this.$i(a);
        Cq(this, b, a)
    };
    t.qm = function () {
        return !0
    };
    t.vt = function () {
        return !0
    };
    ma.Object.defineProperties(fr.prototype, {
        nodeParentKeyProperty: {
            get: function () {
                return this.se
            },
            set: function (a) {
                var b = this.se;
                b !== a && (this.se = a, this.g("nodeParentKeyProperty", b, a))
            }
        },
        bk: {
            get: function () {
                return this.on
            },
            set: function (a) {
                this.on !== a && (this.on = a)
            }
        },
        parentLinkCategoryProperty: {
            get: function () {
                return this.Ij
            },
            set: function (a) {
                var b = this.Ij;
                b !== a && (this.Ij = a, this.g("parentLinkCategoryProperty", b, a))
            }
        },
        linkCategoryProperty: {
            get: function () {
                return this.parentLinkCategoryProperty
            },
            set: function (a) {
                this.parentLinkCategoryProperty = a
            }
        }
    });
    ma.Object.defineProperties(fr, {
        type: {
            get: function () {
                return "TreeModel"
            }
        }
    });
    fr.prototype.setParentLinkCategoryForNodeData = fr.prototype.ew;
    fr.prototype.getParentLinkCategoryForNodeData = fr.prototype.xv;
    fr.prototype.setParentKeyForNodeData = fr.prototype.Ge;
    fr.prototype.getParentKeyForNodeData = fr.prototype.$i;
    fr.className = "TreeModel";
    $q.TreeModel = fr;

    function gr() {
        Ci.call(this);
        this.Tw = this.Cn = this.$b = 0;
        this.Ar = 360;
        this.Sw = hr;
        this.qj = 0;
        this.Kw = new I;
        this.lr = this.Sd = 0;
        this.Ys = new ir;
        this.bu = this.Hj = 0;
        this.zy = 600;
        this.gp = NaN;
        this.Ym = 1;
        this.Lp = 0;
        this.Tl = 360;
        this.Ab = hr;
        this.J = kr;
        this.Qc = lr;
        this.Kc = $p;
        this.ef = 6;
        this.Qo = mr
    }
    la(gr, Ci);
    gr.prototype.cloneProtected = function (a) {
        Ci.prototype.cloneProtected.call(this, a);
        a.gp = this.gp;
        a.Ym = this.Ym;
        a.Lp = this.Lp;
        a.Tl = this.Tl;
        a.Ab = this.Ab;
        a.J = this.J;
        a.Qc = this.Qc;
        a.Kc = this.Kc;
        a.ef = this.ef;
        a.Qo = this.Qo
    };
    gr.prototype.cb = function (a) {
        if (a.classType === gr)
            if (a === nr || a === or || a === pr || a === qr || a === lr) this.sorting = a;
            else if (a === rr || a === sr || a === kr || a === tr) this.direction = a;
        else if (a === ur || a === vr || a === hr || a === wr) this.arrangement = a;
        else {
            if (a === xr || a === mr) this.nodeDiameterFormula = a
        } else Ci.prototype.cb.call(this, a)
    };
    gr.prototype.createNetwork = function () {
        return new yr(this)
    };
    gr.prototype.doLayout = function (a) {
        null === this.network && (this.network = this.makeNetwork(a));
        this.arrangementOrigin = this.initialOrigin(this.arrangementOrigin);
        a = this.network.vertexes;
        if (1 >= a.count) 1 === a.count && (a = a.first(), a.centerX = 0, a.centerY = 0);
        else {
            var b = new E;
            b.addAll(a.iterator);
            a = new E;
            var c = new E;
            var d = this.sort(b);
            var e, f, g = this.lr;
            var h = this.arrangement;
            var k = this.nodeDiameterFormula;
            var l = this.radius;
            if (!isFinite(l) || 0 >= l) l = NaN;
            var m = this.aspectRatio;
            if (!isFinite(m) || 0 >= m) m = 1;
            var n = this.startAngle;
            isFinite(n) || (n = 0);
            var p = this.sweepAngle;
            if (!isFinite(p) || 360 < p || 1 > p) p = 360;
            b = this.spacing;
            isFinite(b) || (b = NaN);
            h === wr && k === xr ? h = hr : h === wr && k !== xr && (h = this.arrangement);
            if ((this.direction === rr || this.direction === sr) && this.sorting !== lr) {
                for (k = 0; !(k >= d.length); k += 2) {
                    a.add(d.L(k));
                    if (k + 1 >= d.length) break;
                    c.add(d.L(k + 1))
                }
                this.direction === rr ? (this.arrangement === wr && a.reverse(), d = new E, d.addAll(a), d.addAll(c)) : (this.arrangement === wr && c.reverse(), d = new E, d.addAll(c), d.addAll(a))
            }
            k = d.length;
            for (var r = f = e = 0; r <
                d.length; r++) {
                var q = n + p * f * (this.direction === kr ? 1 : -1) / k,
                    u = d.L(r).diameter;
                isNaN(u) && (u = zr(d.L(r), q));
                360 > p && (0 === r || r === d.length - 1) && (u /= 2);
                e += u;
                f++
            }
            if (isNaN(l) || h === wr) {
                isNaN(b) && (b = 6);
                if (h !== hr && h !== wr) {
                    f = -Infinity;
                    for (g = 0; g < k; g++) r = d.L(g), e = d.L(g === k - 1 ? 0 : g + 1), isNaN(r.diameter) && zr(r, 0), isNaN(e.diameter) && zr(e, 0), f = Math.max(f, (r.diameter + e.diameter) / 2);
                    g = f + b;
                    h === ur ? l = (f + b) / (2 * Math.PI / k) : l = Ar(this, g * (360 <= p ? k : k - 1), m, n * Math.PI / 180, p * Math.PI / 180)
                } else l = Ar(this, e + (360 <= p ? k : k - 1) * (h !== wr ? b : 1.6 * b), m, n *
                    Math.PI / 180, p * Math.PI / 180);
                f = l * m
            } else if (f = l * m, r = Br(this, l, f, n * Math.PI / 180, p * Math.PI / 180), isNaN(b)) {
                if (h === hr || h === wr) b = (r - e) / (360 <= p ? k : k - 1)
            } else if (h === hr || h === wr) r = (r - e) / (360 <= p ? k : k - 1), r < b ? (l = Ar(this, e + b * (360 <= p ? k : k - 1), m, n * Math.PI / 180, p * Math.PI / 180), f = l * m) : b = r;
            else {
                g = -Infinity;
                for (e = 0; e < k; e++) q = d.L(e), u = d.L(e === k - 1 ? 0 : e + 1), isNaN(q.diameter) && zr(q, 0), isNaN(u.diameter) && zr(u, 0), g = Math.max(g, (q.diameter + u.diameter) / 2);
                g += b;
                e = Ar(this, g * (360 <= p ? k : k - 1), m, n * Math.PI / 180, p * Math.PI / 180);
                e > l ? (l = e, f = l * m) : g =
                    r / (360 <= p ? k : k - 1)
            }
            this.Sw = h;
            this.$b = l;
            this.Cn = m;
            this.Tw = n;
            this.Ar = p;
            this.qj = b;
            this.Sd = f;
            this.lr = g;
            b = d;
            d = this.Sw;
            h = this.$b;
            l = this.Tw;
            m = this.Ar;
            n = this.qj;
            p = this.Sd;
            k = this.lr;
            if (this.direction !== rr && this.direction !== sr || d !== wr)
                if (this.direction === rr || this.direction === sr) {
                    g = 0;
                    switch (d) {
                        case vr:
                            g = 180 * Cr(this, h, p, l, k) / Math.PI;
                            break;
                        case hr:
                            k = b = 0;
                            g = a.first();
                            null !== g && (b = zr(g, Math.PI / 2));
                            g = c.first();
                            null !== g && (k = zr(g, Math.PI / 2));
                            g = 180 * Cr(this, h, p, l, n + (b + k) / 2) / Math.PI;
                            break;
                        case ur:
                            g = m / b.length
                    }
                    if (this.direction ===
                        rr) {
                        switch (d) {
                            case vr:
                                Dr(this, a, l, tr);
                                break;
                            case hr:
                                Er(this, a, l, tr);
                                break;
                            case ur:
                                Fr(this, a, m / 2, l, tr)
                        }
                        switch (d) {
                            case vr:
                                Dr(this, c, l + g, kr);
                                break;
                            case hr:
                                Er(this, c, l + g, kr);
                                break;
                            case ur:
                                Fr(this, c, m / 2, l + g, kr)
                        }
                    } else {
                        switch (d) {
                            case vr:
                                Dr(this, c, l, tr);
                                break;
                            case hr:
                                Er(this, c, l, tr);
                                break;
                            case ur:
                                Fr(this, c, m / 2, l, tr)
                        }
                        switch (d) {
                            case vr:
                                Dr(this, a, l + g, kr);
                                break;
                            case hr:
                                Er(this, a, l + g, kr);
                                break;
                            case ur:
                                Fr(this, a, m / 2, l + g, kr)
                        }
                    }
                } else switch (d) {
                    case vr:
                        Dr(this, b, l, this.direction);
                        break;
                    case hr:
                        Er(this, b, l, this.direction);
                        break;
                    case ur:
                        Fr(this, b, m, l, this.direction);
                        break;
                    case wr:
                        Gr(this, b, m, l, this.direction)
                } else Gr(this, b, m, l - m / 2, kr)
        }
        this.updateParts();
        this.network = null;
        this.isValidLayout = !0
    };

    function Fr(a, b, c, d, e) {
        var f = a.Ar,
            g = a.$b;
        a = a.Sd;
        d = d * Math.PI / 180;
        c = c * Math.PI / 180;
        for (var h = b.length, k = 0; k < h; k++) {
            var l = d + (e === kr ? k * c / (360 <= f ? h : h - 1) : -(k * c) / h),
                m = b.L(k),
                n = g * Math.tan(l) / a;
            n = Math.sqrt((g * g + a * a * n * n) / (1 + n * n));
            m.centerX = n * Math.cos(l);
            m.centerY = n * Math.sin(l);
            m.actualAngle = 180 * l / Math.PI
        }
    }

    function Er(a, b, c, d) {
        var e = a.$b,
            f = a.Sd,
            g = a.qj;
        c = c * Math.PI / 180;
        for (var h = b.length, k = 0; k < h; k++) {
            var l = b.L(k),
                m = b.L(k === h - 1 ? 0 : k + 1),
                n = f * Math.sin(c);
            l.centerX = e * Math.cos(c);
            l.centerY = n;
            l.actualAngle = 180 * c / Math.PI;
            isNaN(l.diameter) && zr(l, 0);
            isNaN(m.diameter) && zr(m, 0);
            l = Cr(a, e, f, d === kr ? c : -c, (l.diameter + m.diameter) / 2 + g);
            c += d === kr ? l : -l
        }
    }

    function Dr(a, b, c, d) {
        var e = a.$b,
            f = a.Sd,
            g = a.lr;
        c = c * Math.PI / 180;
        for (var h = b.length, k = 0; k < h; k++) {
            var l = b.L(k);
            l.centerX = e * Math.cos(c);
            l.centerY = f * Math.sin(c);
            l.actualAngle = 180 * c / Math.PI;
            l = Cr(a, e, f, d === kr ? c : -c, g);
            c += d === kr ? l : -l
        }
    }

    function Gr(a, b, c, d, e) {
        var f = a.Ar;
        a.Hj = 0;
        a.Ys = new ir;
        if (360 > c) {
            for (f = d + (e === kr ? f : -f); 0 > f;) f += 360;
            f %= 360;
            180 < f && (f -= 360);
            f *= Math.PI / 180;
            a.bu = f;
            Hr(a, b, c, d, e)
        } else Ir(a, b, c, d, e);
        a.Ys.commit(b)
    }

    function Ir(a, b, c, d, e) {
        var f = a.$b,
            g = a.qj,
            h = a.Cn,
            k = f * Math.cos(d * Math.PI / 180),
            l = a.Sd * Math.sin(d * Math.PI / 180),
            m = b.na();
        if (3 === m.length) m[0].centerX = f, m[0].centerY = 0, m[1].centerX = m[0].centerX - m[0].width / 2 - m[1].width / 2 - g, m[1].y = m[0].y, m[2].centerX = (m[0].centerX + m[1].centerX) / 2, m[2].y = m[0].y - m[2].height - g;
        else if (4 === m.length) m[0].centerX = f, m[0].centerY = 0, m[2].centerX = -m[0].centerX, m[2].centerY = m[0].centerY, m[1].centerX = 0, m[1].y = Math.min(m[0].y, m[2].y) - m[1].height - g, m[3].centerX = 0, m[3].y = Math.max(m[0].y +
            m[0].height + g, m[2].y + m[2].height + g);
        else {
            f = I.alloc();
            for (var n = 0; n < m.length; n++) {
                m[n].centerX = k;
                m[n].centerY = l;
                if (n >= m.length - 1) break;
                Jr(a, k, l, m, n, e, f) || Kr(a, k, l, m, n, e, f);
                k = f.x;
                l = f.y
            }
            I.free(f);
            a.Hj++;
            if (!(23 < a.Hj)) {
                k = m[0].centerX;
                l = m[0].centerY;
                f = m[m.length - 1].centerX;
                n = m[m.length - 1].centerY;
                var p = Math.abs(k - f) - ((m[0].width + m[m.length - 1].width) / 2 + g),
                    r = Math.abs(l - n) - ((m[0].height + m[m.length - 1].height) / 2 + g);
                g = 0;
                1 > Math.abs(r) ? Math.abs(k - f) < (m[0].width + m[m.length - 1].width) / 2 && (g = 0) : g = 0 < r ? r : 1 > Math.abs(p) ?
                    0 : p;
                k = Math.abs(f) > Math.abs(n) ? 0 < f !== l > n : 0 < n !== k < f;
                if (k = e === kr ? k : !k) g = -Math.abs(g), g = Math.min(g, -m[m.length - 1].width), g = Math.min(g, -m[m.length - 1].height);
                a.Ys.compare(g, m);
                1 < Math.abs(g) && (a.$b = 8 > a.Hj ? a.$b - g / (2 * Math.PI) : 5 > m.length && 10 < g ? a.$b / 2 : a.$b - (0 < g ? 1.7 : -2.3), a.Sd = a.$b * h, Ir(a, b, c, d, e))
            }
        }
    }

    function Hr(a, b, c, d, e) {
        for (var f = a.$b, g = a.Sd, h = a.Cn, k = f * Math.cos(d * Math.PI / 180), l = g * Math.sin(d * Math.PI / 180), m = I.alloc(), n = b.na(), p = 0; p < n.length; p++) {
            n[p].centerX = k;
            n[p].centerY = l;
            if (p >= n.length - 1) break;
            Jr(a, k, l, n, p, e, m) || Kr(a, k, l, n, p, e, m);
            k = m.x;
            l = m.y
        }
        I.free(m);
        a.Hj++;
        if (!(23 < a.Hj)) {
            k = Math.atan2(l, k);
            k = e === kr ? a.bu - k : k - a.bu;
            k = Math.abs(k) < Math.abs(k - 2 * Math.PI) ? k : k - 2 * Math.PI;
            f = k * (f + g) / 2;
            g = a.Ys;
            if (Math.abs(f) < Math.abs(g.km))
                for (g.km = f, g.Ak = [], g.Mm = [], k = 0; k < n.length; k++) g.Ak[k] = n[k].bounds.x, g.Mm[k] = n[k].bounds.y;
            1 < Math.abs(f) && (a.$b = 8 > a.Hj ? a.$b - f / (2 * Math.PI) : a.$b - (0 < f ? 1.7 : -2.3), a.Sd = a.$b * h, Hr(a, b, c, d, e))
        }
    }

    function Jr(a, b, c, d, e, f, g) {
        var h = a.$b,
            k = a.Sd,
            l = 0;
        a = (d[e].width + d[e + 1].width) / 2 + a.qj;
        var m = !1;
        if (0 <= c !== (f === kr)) {
            if (f = b + a, f > h) {
                f = b - a;
                if (f < -h) return g.x = f, g.y = l, !1;
                m = !0
            }
        } else if (f = b - a, f < -h) {
            f = b + a;
            if (f > h) return g.x = f, g.y = l, !1;
            m = !0
        }
        l = Math.sqrt(1 - Math.min(1, f * f / (h * h))) * k;
        0 > c !== m && (l = -l);
        if (Math.abs(c - l) > (d[e].height + d[e + 1].height) / 2) return g.x = f, g.y = l, !1;
        g.x = f;
        g.y = l;
        return !0
    }

    function Kr(a, b, c, d, e, f, g) {
        var h = a.$b,
            k = a.Sd,
            l = 0;
        a = (d[e].height + d[e + 1].height) / 2 + a.qj;
        d = !1;
        if (0 <= b !== (f === kr)) {
            if (f = c - a, f < -k) {
                f = c + a;
                if (f > k) {
                    g.x = l;
                    g.y = f;
                    return
                }
                d = !0
            }
        } else if (f = c + a, f > k) {
            f = c - a;
            if (f < -k) {
                g.x = l;
                g.y = f;
                return
            }
            d = !0
        }
        l = Math.sqrt(1 - Math.min(1, f * f / (k * k))) * h;
        0 > b !== d && (l = -l);
        g.x = l;
        g.y = f
    }
    gr.prototype.commitLayout = function () {
        this.commitNodes();
        this.isRouting && this.commitLinks()
    };
    gr.prototype.commitNodes = function () {
        var a = null !== this.group && null !== this.group.placeholder && this.group.isSubGraphExpanded,
            b = a ? this.group.location.copy() : null,
            c = this.actualCenter;
        a ? c = new I(0, 0) : (c.x = this.arrangementOrigin.x + this.$b, c.y = this.arrangementOrigin.y + this.Sd);
        for (var d = this.network.vertexes.iterator; d.next();) {
            var e = d.value;
            e.x += c.x;
            e.y += c.y;
            e.commit()
        }
        a && (this.group.yb(), a = this.group.position.copy(), c = this.group.location.copy(), b = b.Zd(c.Zd(a)), this.group.move(b), this.Kw = b.Zd(a))
    };
    gr.prototype.commitLinks = function () {
        for (var a = this.network.edges.iterator; a.next();) a.value.commit()
    };

    function Br(a, b, c, d, e) {
        var f = a.zy;
        if (.001 > Math.abs(a.Cn - 1)) return void 0 !== d && void 0 !== e ? e * b : 2 * Math.PI * b;
        a = b > c ? Math.sqrt(b * b - c * c) / b : Math.sqrt(c * c - b * b) / c;
        var g = 0;
        var h = void 0 !== d && void 0 !== e ? e / (f + 1) : Math.PI / (2 * (f + 1));
        for (var k = 0, l = 0; l <= f; l++) {
            void 0 !== d && void 0 !== e ? k = d + l * e / f : k = l * Math.PI / (2 * f);
            var m = Math.sin(k);
            g += Math.sqrt(1 - a * a * m * m) * h
        }
        return void 0 !== d && void 0 !== e ? (b > c ? b : c) * g : 4 * (b > c ? b : c) * g
    }

    function Ar(a, b, c, d, e) {
        return b / (void 0 !== d && void 0 !== e ? Br(a, 1, c, d, e) : Br(a, 1, c))
    }

    function Cr(a, b, c, d, e) {
        if (.001 > Math.abs(a.Cn - 1)) return e / b;
        var f = b > c ? Math.sqrt(b * b - c * c) / b : Math.sqrt(c * c - b * b) / c,
            g = 0;
        a = 2 * Math.PI / (700 * a.network.vertexes.count);
        b > c && (d += Math.PI / 2);
        for (var h = 0;; h++) {
            var k = Math.sin(d + h * a);
            g += (b > c ? b : c) * Math.sqrt(1 - f * f * k * k) * a;
            if (g >= e) return h * a
        }
    }
    gr.prototype.sort = function (a) {
        switch (this.sorting) {
            case pr:
                break;
            case qr:
                a.reverse();
                break;
            case nr:
                a.sort(this.comparer);
                break;
            case or:
                a.sort(this.comparer);
                a.reverse();
                break;
            case lr:
                for (var b = [], c = 0; c < a.length; c++) b.push(0);
                c = new E;
                for (var d = 0; d < a.length; d++) {
                    var e = -1,
                        f = -1;
                    if (0 === d)
                        for (var g = 0; g < a.length; g++) {
                            var h = a.L(g).edgesCount;
                            h > e && (e = h, f = g)
                        } else
                            for (g = 0; g < a.length; g++) h = b[g], h > e && (e = h, f = g);
                    c.add(a.L(f));
                    b[f] = -1;
                    f = a.L(f);
                    for (g = f.sourceEdges; g.next();) e = a.indexOf(g.value.fromVertex), 0 > e || 0 <=
                        b[e] && b[e]++;
                    for (f = f.destinationEdges; f.next();) e = a.indexOf(f.value.toVertex), 0 > e || 0 <= b[e] && b[e]++
                }
                a = [];
                for (b = 0; b < c.length; b++) {
                    e = c.L(b);
                    a[b] = [];
                    for (f = e.destinationEdges; f.next();) d = c.indexOf(f.value.toVertex), d !== b && 0 > a[b].indexOf(d) && a[b].push(d);
                    for (e = e.sourceEdges; e.next();) d = c.indexOf(e.value.fromVertex), d !== b && 0 > a[b].indexOf(d) && a[b].push(d)
                }
                f = [];
                for (b = 0; b < a.length; b++) f[b] = 0;
                b = [];
                g = [];
                h = [];
                e = [];
                d = new E;
                for (var k = 0, l = 0; l < a.length; l++) {
                    var m = a[l].length;
                    if (1 === m) e.push(l);
                    else if (0 === m) d.add(c.L(l));
                    else {
                        if (0 === k) b.push(l);
                        else {
                            for (var n = m = Infinity, p = -1, r = [], q = 0; q < b.length; q++) 0 > a[b[q]].indexOf(b[q === b.length - 1 ? 0 : q + 1]) && r.push(q === b.length - 1 ? 0 : q + 1);
                            if (0 === r.length)
                                for (q = 0; q < b.length; q++) r.push(q);
                            for (q = 0; q < r.length; q++) {
                                for (var u = r[q], v = a[l], w = 0, y = 0; y < g.length; y++) {
                                    var z = f[g[y]],
                                        A = f[h[y]];
                                    if (z < A) {
                                        var C = z;
                                        z = A
                                    } else C = A;
                                    if (C < u && u <= z)
                                        for (A = 0; A < v.length; A++) {
                                            var G = v[A];
                                            0 > b.indexOf(G) || C < f[G] && f[G] < z || C === f[G] || z === f[G] || w++
                                        } else
                                            for (A = 0; A < v.length; A++) G = v[A], 0 > b.indexOf(G) || C < f[G] && f[G] < z && C !== f[G] &&
                                                z !== f[G] && w++
                                }
                                v = w;
                                for (y = w = 0; y < a[l].length; y++) C = b.indexOf(a[l][y]), 0 <= C && (C = Math.abs(u - (C >= u ? C + 1 : C)), w += C < b.length + 1 - C ? C : b.length + 1 - C);
                                for (y = 0; y < g.length; y++) C = f[g[y]], z = f[h[y]], C >= u && C++, z >= u && z++, C > z && (A = z, z = C, C = A), z - C < (b.length + 2) / 2 === (C < u && u <= z) && w++;
                                if (v < m || v === m && w < n) m = v, n = w, p = u
                            }
                            b.splice(p, 0, l);
                            for (m = 0; m < b.length; m++) f[b[m]] = m;
                            for (m = 0; m < a[l].length; m++) n = a[l][m], 0 <= b.indexOf(n) && (g.push(l), h.push(n))
                        }
                        k++
                    }
                }
                for (g = b.length;;) {
                    f = !0;
                    for (h = 0; h < e.length; h++)
                        if (k = e[h], l = a[k][0], m = b.indexOf(l), 0 <= m) {
                            for (p =
                                n = 0; p < a[l].length; p++) r = b.indexOf(a[l][p]), 0 > r || r === m || (q = r > m ? r - m : m - r, n += r < m !== q > g - q ? 1 : -1);
                            b.splice(0 > n ? m : m + 1, 0, k);
                            e.splice(h, 1);
                            h--
                        } else f = !1;
                    if (f) break;
                    else b.push(e[0]), e.splice(0, 1)
                }
                for (a = 0; a < b.length; a++) d.add(c.L(b[a]));
                return d;
            default:
                B("Invalid sorting type.")
        }
        return a
    };
    ma.Object.defineProperties(gr.prototype, {
        radius: {
            get: function () {
                return this.gp
            },
            set: function (a) {
                this.gp !== a && (0 < a || isNaN(a)) && (this.gp = a, this.C())
            }
        },
        aspectRatio: {
            get: function () {
                return this.Ym
            },
            set: function (a) {
                this.Ym !== a && 0 < a && (this.Ym = a, this.C())
            }
        },
        startAngle: {
            get: function () {
                return this.Lp
            },
            set: function (a) {
                this.Lp !== a && (this.Lp = a, this.C())
            }
        },
        sweepAngle: {
            get: function () {
                return this.Tl
            },
            set: function (a) {
                this.Tl !== a && (0 < a && 360 >= a ? this.Tl = a : this.Tl = 360, this.C())
            }
        },
        arrangement: {
            get: function () {
                return this.Ab
            },
            set: function (a) {
                this.Ab === a || a !== wr && a !== hr && a !== vr && a !== ur || (this.Ab = a, this.C())
            }
        },
        direction: {
            get: function () {
                return this.J
            },
            set: function (a) {
                this.J === a || a !== kr && a !== tr && a !== rr && a !== sr || (this.J = a, this.C())
            }
        },
        sorting: {
            get: function () {
                return this.Qc
            },
            set: function (a) {
                this.Qc === a || a !== pr && a !== qr &&
                    a !== nr && !or && a !== lr || (this.Qc = a, this.C())
            }
        },
        comparer: {
            get: function () {
                return this.Kc
            },
            set: function (a) {
                this.Kc !== a && (this.Kc = a, this.C())
            }
        },
        spacing: {
            get: function () {
                return this.ef
            },
            set: function (a) {
                this.ef !== a && (this.ef = a, this.C())
            }
        },
        nodeDiameterFormula: {
            get: function () {
                return this.Qo
            },
            set: function (a) {
                this.Qo === a || a !== mr && a !== xr || (this.Qo = a, this.C())
            }
        },
        actualXRadius: {
            get: function () {
                return this.$b
            }
        },
        actualYRadius: {
            get: function () {
                return this.Sd
            }
        },
        actualSpacing: {
            get: function () {
                return this.qj
            }
        },
        actualCenter: {
            get: function () {
                return this.Kw
            }
        }
    });
    var hr = new D(gr, "ConstantSpacing", 0),
        vr = new D(gr, "ConstantDistance", 1),
        ur = new D(gr, "ConstantAngle", 2),
        wr = new D(gr, "Packed", 3),
        kr = new D(gr, "Clockwise", 4),
        tr = new D(gr, "Counterclockwise", 5),
        rr = new D(gr, "BidirectionalLeft", 6),
        sr = new D(gr, "BidirectionalRight", 7),
        pr = new D(gr, "Forwards", 8),
        qr = new D(gr, "Reverse", 9),
        nr = new D(gr, "Ascending", 10),
        or = new D(gr, "Descending", 11),
        lr = new D(gr, "Optimized", 12),
        mr = new D(gr, "Pythagorean", 13),
        xr = new D(gr, "Circular", 14);
    gr.className = "CircularLayout";
    gr.ConstantSpacing = hr;
    gr.ConstantDistance = vr;
    gr.ConstantAngle = ur;
    gr.Packed = wr;
    gr.Clockwise = kr;
    gr.Counterclockwise = tr;
    gr.BidirectionalLeft = rr;
    gr.BidirectionalRight = sr;
    gr.Forwards = pr;
    gr.Reverse = qr;
    gr.Ascending = nr;
    gr.Descending = or;
    gr.Optimized = lr;
    gr.Pythagorean = mr;
    gr.Circular = xr;

    function ir() {
        this.km = -Infinity;
        this.Mm = this.Ak = null
    }
    ir.prototype.compare = function (a, b) {
        if (0 < a && 0 > this.km || Math.abs(a) < Math.abs(this.km) && !(0 > a && 0 < this.km))
            for (this.km = a, this.Ak = [], this.Mm = [], a = 0; a < b.length; a++) this.Ak[a] = b[a].bounds.x, this.Mm[a] = b[a].bounds.y
    };
    ir.prototype.commit = function (a) {
        if (null !== this.Ak && null !== this.Mm)
            for (var b = 0; b < this.Ak.length; b++) {
                var c = a.L(b);
                c.x = this.Ak[b];
                c.y = this.Mm[b]
            }
    };
    ir.className = "VertexArrangement";

    function yr(a) {
        Qp.call(this, a)
    }
    la(yr, Qp);
    yr.prototype.createVertex = function () {
        return new Lr(this)
    };
    yr.prototype.createEdge = function () {
        return new Mr(this)
    };
    yr.className = "CircularNetwork";

    function Lr(a) {
        Tp.call(this, a);
        this.I = this.oj = NaN
    }
    la(Lr, Tp);

    function zr(a, b) {
        var c = a.network;
        if (null === c) return NaN;
        c = c.layout;
        if (null === c) return NaN;
        if (c.arrangement === wr)
            if (c.nodeDiameterFormula === xr) a.oj = Math.max(a.width, a.height);
            else {
                c = Math.abs(Math.sin(b));
                b = Math.abs(Math.cos(b));
                if (0 === c) return a.width;
                if (0 === b) return a.height;
                a.oj = Math.min(a.height / c, a.width / b)
            }
        else a.oj = c.nodeDiameterFormula === xr ? Math.max(a.width, a.height) : Math.sqrt(a.width * a.width + a.height * a.height);
        return a.oj
    }
    ma.Object.defineProperties(Lr.prototype, {
        diameter: {
            get: function () {
                return this.oj
            },
            set: function (a) {
                this.oj !== a && (this.oj = a)
            }
        },
        actualAngle: {
            get: function () {
                return this.I
            },
            set: function (a) {
                this.I !== a && (this.I = a)
            }
        }
    });
    Lr.className = "CircularVertex";

    function Mr(a) {
        Up.call(this, a)
    }
    la(Mr, Up);
    Mr.className = "CircularEdge";

    function Nr() {
        Ci.call(this);
        this.Bh = null;
        this.jo = 0;
        this.zd = (new M(100, 100)).freeze();
        this.Xm = !1;
        this.cf = !0;
        this.Zc = !1;
        this.yl = 100;
        this.Fn = 1;
        this.Wf = 1E3;
        this.Ho = 10;
        this.hp = Math;
        this.Uk = .05;
        this.Tk = 50;
        this.Rk = 150;
        this.Sk = 0;
        this.wn = 10;
        this.vn = 5
    }
    la(Nr, Ci);
    Nr.prototype.cloneProtected = function (a) {
        Ci.prototype.cloneProtected.call(this, a);
        a.zd.assign(this.zd);
        a.Xm = this.Xm;
        a.cf = this.cf;
        a.Zc = this.Zc;
        a.yl = this.yl;
        a.Fn = this.Fn;
        a.Wf = this.Wf;
        a.Ho = this.Ho;
        a.hp = this.hp;
        a.Uk = this.Uk;
        a.Tk = this.Tk;
        a.Rk = this.Rk;
        a.Sk = this.Sk;
        a.wn = this.wn;
        a.vn = this.vn
    };
    Nr.prototype.createNetwork = function () {
        return new Or(this)
    };
    Nr.prototype.doLayout = function (a) {
        null === this.network && (this.network = this.makeNetwork(a));
        a = this.maxIterations;
        if (0 < this.network.vertexes.count) {
            this.network.iq();
            for (var b = this.network.vertexes.iterator; b.next();) {
                var c = b.value;
                c.charge = this.electricalCharge(c);
                c.mass = this.gravitationalMass(c)
            }
            for (b = this.network.edges.iterator; b.next();) c = b.value, c.stiffness = this.springStiffness(c), c.length = this.springLength(c);
            this.fv();
            this.jo = 0;
            if (this.needsClusterLayout()) {
                b = this.network;
                for (c = b.py().iterator; c.next();) {
                    this.network =
                        c.value;
                    for (var d = this.network.vertexes.iterator; d.next();) {
                        var e = d.value;
                        e.wd = e.vertexes.count;
                        e.Mh = 1;
                        e.$j = null;
                        e.Fe = null
                    }
                    Pr(this, 0, a)
                }
                this.network = b;
                c.reset();
                d = this.arrangementSpacing;
                for (var f = c.count, g = !0, h = e = 0, k = Fa(), l = 0; l < f + b.vertexes.count + 2; l++) k[l] = null;
                f = 0;
                c.reset();
                for (var m = N.alloc(); c.next();)
                    if (l = c.value, this.computeBounds(l, m), g) g = !1, e = m.x + m.width / 2, h = m.y + m.height / 2, k[0] = new I(m.x + m.width + d.width, m.y), k[1] = new I(m.x, m.y + m.height + d.height), f = 2;
                    else {
                        var n = Qr(k, f, e, h, m.width, m.height,
                                d),
                            p = k[n],
                            r = new I(p.x + m.width + d.width, p.y),
                            q = new I(p.x, p.y + m.height + d.height);
                        n + 1 < f && k.splice(n + 1, 0, null);
                        k[n] = r;
                        k[n + 1] = q;
                        f++;
                        n = p.x - m.x;
                        p = p.y - m.y;
                        for (l = l.vertexes.iterator; l.next();) r = l.value, r.centerX += n, r.centerY += p
                    } N.free(m);
                for (l = b.vertexes.iterator; l.next();) g = l.value, r = g.bounds, 2 > f ? (e = r.x + r.width / 2, h = r.y + r.height / 2, k[0] = new I(r.x + r.width + d.width, r.y), k[1] = new I(r.x, r.y + r.height + d.height), f = 2) : (m = Qr(k, f, e, h, r.width, r.height, d), p = k[m], n = new I(p.x + r.width + d.width, p.y), r = new I(p.x, p.y + r.height +
                    d.height), m + 1 < f && k.splice(m + 1, 0, null), k[m] = n, k[m + 1] = r, f++, g.centerX = p.x + g.width / 2, g.centerY = p.y + g.height / 2);
                Ha(k);
                for (c.reset(); c.next();) {
                    d = c.value;
                    for (e = d.vertexes.iterator; e.next();) b.Eh(e.value);
                    for (d = d.edges.iterator; d.next();) b.bq(d.value)
                }
            }
            Rr(this, a);
            this.updateParts()
        }
        this.yl = a;
        this.network = null;
        this.isValidLayout = !0
    };
    Nr.prototype.needsClusterLayout = function () {
        if (3 > this.network.vertexes.count) return !1;
        for (var a = 0, b = 0, c = this.network.vertexes.first().bounds, d = this.network.vertexes.iterator; d.next();) {
            if (d.value.bounds.Gc(c) && (a++, 2 < a)) return !0;
            if (10 < b) break;
            b++
        }
        return !1
    };
    Nr.prototype.computeBounds = function (a, b) {
        var c = !0;
        for (a = a.vertexes.iterator; a.next();) {
            var d = a.value;
            c ? (c = !1, b.set(d.bounds)) : b.Hc(d.bounds)
        }
        return b
    };

    function Pr(a, b, c) {
        if (Sr(a, b)) {
            var d = a.Wf;
            a.Wf *= 1 + 1 / (b + 1);
            var e = Tr(a, b),
                f = Math.max(0, Math.max(Math.min(a.network.vertexes.count, c * (b + 1) / 11), 10));
            a.maxIterations += f;
            Pr(a, b + 1, c);
            Rr(a, f);
            Ur(a, e);
            b = e.vertexes.na();
            b.sort(function (a, b) {
                return null === a || null === b || a === b ? 0 : b.wd - a.wd
            });
            for (c = 0; c < b.length; c++) Vr(a, b[c]);
            a.Wf = d
        }
    }

    function Sr(a, b) {
        if (10 < b || 3 > a.network.vertexes.count) return !1;
        a.Bh = a.network.vertexes.na();
        a = a.Bh;
        a.sort(function (a, b) {
            return null === a || null === b || a === b ? 0 : b.wd - a.wd
        });
        for (b = a.length - 1; 0 <= b && 1 >= a[b].wd;) b--;
        return 1 < a.length - b
    }

    function Tr(a, b) {
        for (var c = a.network, d = new Or(a), e = 0; e < a.Bh.length; e++) {
            var f = a.Bh[e];
            if (1 < f.wd) {
                d.Eh(f);
                var g = new Wr;
                g.Rt = f.wd;
                g.St = f.width;
                g.Qt = f.height;
                g.zw = f.focus.x;
                g.Aw = f.focus.y;
                null === f.Fe && (f.Fe = new E);
                f.Fe.add(g);
                f.bw = f.Fe.count - 1
            } else break
        }
        for (f = c.edges.iterator; f.next();) {
            var h = f.value;
            e = h.fromVertex;
            g = h.toVertex;
            e.network === d && g.network === d ? d.bq(h) : e.network === d ? (h = e.$j, null === h && (h = new E, e.$j = h), h.add(g), e.wd--, e.Mh += g.Mh) : g.network === d && (h = g.$j, null === h && (h = new E, g.$j = h), h.add(e),
                g.wd--, g.Mh += e.Mh)
        }
        for (e = d.edges.iterator; e.next();) f = e.value, f.length *= Math.max(1, J.sqrt((f.fromVertex.Mh + f.toVertex.Mh) / (4 * b + 1)));
        for (b = d.vertexes.iterator; b.next();) {
            e = b.value;
            var k = e.$j;
            if (null !== k && 0 < k.count && (g = e.Fe.L(e.Fe.count - 1).Rt - e.wd, !(0 >= g))) {
                for (var l = h = 0, m = k.count - g; m < k.count; m++) {
                    var n = k.L(m),
                        p = null;
                    for (f = n.edges.iterator; f.next();) {
                        var r = f.value;
                        if (r.Qx(n) === e) {
                            p = r;
                            break
                        }
                    }
                    null !== p && (l += p.length, h += n.width * n.height)
                }
                f = e.centerX;
                k = e.centerY;
                m = e.width;
                n = e.height;
                p = e.focus;
                r = m * n;
                1 > r &&
                    (r = 1);
                h = J.sqrt((h + r + l * l * 4 / (g * g)) / r);
                g = (h - 1) * m / 2;
                h = (h - 1) * n / 2;
                e.bounds = new N(f - p.x - g, k - p.y - h, m + 2 * g, n + 2 * h);
                e.focus = new I(p.x + g, p.y + h)
            }
        }
        a.network = d;
        return c
    }

    function Ur(a, b) {
        for (var c = a.network.vertexes.iterator; c.next();) {
            var d = c.value;
            d.network = b;
            if (null !== d.Fe) {
                var e = d.Fe.L(d.bw);
                d.wd = e.Rt;
                var f = e.zw,
                    g = e.Aw;
                d.bounds = new N(d.centerX - f, d.centerY - g, e.St, e.Qt);
                d.focus = new I(f, g);
                d.bw--
            }
        }
        for (c = a.network.edges.iterator; c.next();) c.value.network = b;
        a.network = b
    }

    function Vr(a, b) {
        var c = b.$j;
        if (null !== c && 0 !== c.count) {
            var d = b.centerX,
                e = b.centerY,
                f = b.width,
                g = b.height;
            null !== b.Fe && 0 < b.Fe.count && (g = b.Fe.L(0), f = g.St, g = g.Qt);
            f = J.sqrt(f * f + g * g) / 2;
            for (var h = !1, k = g = 0, l = 0, m = b.vertexes.iterator; m.next();) {
                var n = m.value;
                1 >= n.wd ? k++ : (h = !0, l++, g += Math.atan2(b.centerY - n.centerY, b.centerX - n.centerX))
            }
            if (0 !== k)
                for (0 < l && (g /= l), l = b = 0, b = h ? 2 * Math.PI / (k + 1) : 2 * Math.PI / k, 0 === k % 2 && (l = b / 2), 1 < c.count && c.sort(function (a, b) {
                        return null === a || null === b || a === b ? 0 : b.width * b.height - a.width * a.height
                    }),
                    h = 0 === k % 2 ? 0 : 1, c = c.iterator; c.next();)
                    if (k = c.value, !(1 < k.wd || a.isFixed(k))) {
                        m = null;
                        for (n = k.edges.iterator; n.next();) {
                            m = n.value;
                            break
                        }
                        n = k.width;
                        var p = k.height;
                        n = J.sqrt(n * n + p * p) / 2;
                        m = f + m.length + n;
                        n = g + (b * (h / 2 >> 1) + l) * (0 === h % 2 ? 1 : -1);
                        k.centerX = d + m * Math.cos(n);
                        k.centerY = e + m * Math.sin(n);
                        h++
                    }
        }
    }

    function Qr(a, b, c, d, e, f, g) {
        var h = 9E19,
            k = -1,
            l = 0;
        a: for (; l < b; l++) {
            var m = a[l],
                n = m.x - c,
                p = m.y - d;
            n = n * n + p * p;
            if (n < h) {
                for (p = l - 1; 0 <= p; p--)
                    if (a[p].y > m.y && a[p].x - m.x < e + g.width) continue a;
                for (p = l + 1; p < b; p++)
                    if (a[p].x > m.x && a[p].y - m.y < f + g.height) continue a;
                k = l;
                h = n
            }
        }
        return k
    }
    Nr.prototype.fv = function () {
        if (this.comments)
            for (var a = this.network.vertexes.iterator; a.next();) this.addComments(a.value)
    };
    Nr.prototype.addComments = function (a) {
        var b = a.node;
        if (null !== b)
            for (b = b.rv(); b.next();) {
                var c = b.value;
                if ("Comment" === c.category && c.isVisible()) {
                    var d = this.network.Wi(c);
                    null === d && (d = this.network.am(c));
                    d.charge = this.defaultCommentElectricalCharge;
                    c = null;
                    for (var e = d.destinationEdges; e.next();) {
                        var f = e.value;
                        if (f.toVertex === a) {
                            c = f;
                            break
                        }
                    }
                    if (null === c)
                        for (e = d.sourceEdges; e.next();)
                            if (f = e.value, f.fromVertex === a) {
                                c = f;
                                break
                            } null === c && (c = this.network.mk(a, d, null));
                    c.length = this.defaultCommentSpringLength
                }
            }
    };

    function Xr(a, b) {
        var c = a.bounds,
            d = c.x;
        a = c.y;
        var e = c.width;
        c = c.height;
        var f = b.bounds,
            g = f.x;
        b = f.y;
        var h = f.width;
        f = f.height;
        return d + e < g ? a > b + f ? (c = d + e - g, a = a - b - f, J.sqrt(c * c + a * a)) : a + c < b ? (d = d + e - g, a = a + c - b, J.sqrt(d * d + a * a)) : g - (d + e) : d > g + h ? a > b + f ? (c = d - g - h, a = a - b - f, J.sqrt(c * c + a * a)) : a + c < b ? (d = d - g - h, a = a + c - b, J.sqrt(d * d + a * a)) : d - (g + h) : a > b + f ? a - (b + f) : a + c < b ? b - (a + c) : .1
    }

    function Rr(a, b) {
        a.Bh = null;
        for (b = a.jo + b; a.jo < b && (a.jo++, Yr(a)););
        a.Bh = null
    }

    function Yr(a) {
        null === a.Bh && (a.Bh = a.network.vertexes.na());
        var b = a.Bh;
        if (0 >= b.length) return !1;
        var c = b[0];
        c.forceX = 0;
        c.forceY = 0;
        for (var d = c.centerX, e = d, f = c = c.centerY, g = 1; g < b.length; g++) {
            var h = b[g];
            h.forceX = 0;
            h.forceY = 0;
            var k = h.centerX;
            h = h.centerY;
            d = Math.min(d, k);
            e = Math.max(e, k);
            c = Math.min(c, h);
            f = Math.max(f, h)
        }(e = e - d > f - c) ? b.sort(function (a, b) {
            return null === a || null === b || a === b ? 0 : a.centerX - b.centerX
        }): b.sort(function (a, b) {
            return null === a || null === b || a === b ? 0 : a.centerY - b.centerY
        });
        c = a.Wf;
        var l = d = h = 0;
        for (f =
            0; f < b.length; f++) {
            g = b[f];
            d = g.bounds;
            h = g.focus;
            k = d.x + h.x;
            var m = d.y + h.y;
            d = g.charge * a.electricalFieldX(k, m);
            l = g.charge * a.electricalFieldY(k, m);
            d += g.mass * a.gravitationalFieldX(k, m);
            l += g.mass * a.gravitationalFieldY(k, m);
            g.forceX += d;
            g.forceY += l;
            for (var n = f + 1; n < b.length; n++) {
                var p = b[n];
                if (p !== g) {
                    d = p.bounds;
                    h = p.focus;
                    l = d.x + h.x;
                    var r = d.y + h.y;
                    if (k - l > c || l - k > c) {
                        if (e) break
                    } else if (m - r > c || r - m > c) {
                        if (!e) break
                    } else {
                        var q = Xr(g, p);
                        1 > q ? (d = a.randomNumberGenerator, null === d && (a.randomNumberGenerator = d = new Zr), q = d.random(),
                            h = d.random(), k > l ? (d = Math.abs(p.bounds.right - g.bounds.x), d = (1 + d) * q) : k < l ? (d = Math.abs(p.bounds.x - g.bounds.right), d = -(1 + d) * q) : (d = Math.max(p.width, g.width), d = (1 + d) * q - d / 2), m > r ? (l = Math.abs(p.bounds.bottom - g.bounds.y), l = (1 + l) * h) : k < l ? (l = Math.abs(p.bounds.y - g.bounds.bottom), l = -(1 + l) * h) : (l = Math.max(p.height, g.height), l = (1 + l) * h - l / 2)) : (h = -(g.charge * p.charge) / (q * q), d = (l - k) / q * h, l = (r - m) / q * h);
                        g.forceX += d;
                        g.forceY += l;
                        p.forceX -= d;
                        p.forceY -= l
                    }
                }
            }
        }
        for (e = a.network.edges.iterator; e.next();) h = e.value, c = h.fromVertex, f = h.toVertex,
            g = c.bounds, k = c.focus, d = g.x + k.x, g = g.y + k.y, m = f.bounds, n = f.focus, k = m.x + n.x, m = m.y + n.y, n = Xr(c, f), 1 > n ? (n = a.randomNumberGenerator, null === n && (a.randomNumberGenerator = n = new Zr), h = n.random(), n = n.random(), d = (d > k ? 1 : -1) * (1 + (f.width > c.width ? f.width : c.width)) * h, l = (g > m ? 1 : -1) * (1 + (f.height > c.height ? f.height : c.height)) * n) : (h = h.stiffness * (n - h.length), d = (k - d) / n * h, l = (m - g) / n * h), c.forceX += d, c.forceY += l, f.forceX -= d, f.forceY -= l;
        d = 0;
        e = a.moveLimit;
        for (c = 0; c < b.length; c++) f = b[c], a.isFixed(f) ? a.moveFixedVertex(f) : (g = f.forceX, k =
            f.forceY, g < -e ? g = -e : g > e && (g = e), k < -e ? k = -e : k > e && (k = e), f.centerX += g, f.centerY += k, d = Math.max(d, g * g + k * k));
        return d > a.epsilonDistance * a.epsilonDistance
    }
    Nr.prototype.moveFixedVertex = function () {};
    Nr.prototype.commitLayout = function () {
        this.fw();
        this.commitNodes();
        this.isRouting && this.commitLinks()
    };
    Nr.prototype.fw = function () {
        if (this.setsPortSpots)
            for (var a = this.network.edges.iterator; a.next();) {
                var b = a.value.link;
                null !== b && (b.fromSpot = Zc, b.toSpot = Zc)
            }
    };
    Nr.prototype.commitNodes = function () {
        var a = 0,
            b = 0;
        if (this.arrangesToOrigin) {
            var c = N.alloc();
            this.computeBounds(this.network, c);
            b = this.arrangementOrigin;
            a = b.x - c.x;
            b = b.y - c.y;
            N.free(c)
        }
        c = N.alloc();
        for (var d = this.network.vertexes.iterator; d.next();) {
            var e = d.value;
            if (0 !== a || 0 !== b) c.assign(e.bounds), c.x += a, c.y += b, e.bounds = c;
            e.commit()
        }
        N.free(c)
    };
    Nr.prototype.commitLinks = function () {
        for (var a = this.network.edges.iterator; a.next();) a.value.commit()
    };
    Nr.prototype.springStiffness = function (a) {
        a = a.stiffness;
        return isNaN(a) ? this.Uk : a
    };
    Nr.prototype.springLength = function (a) {
        a = a.length;
        return isNaN(a) ? this.Tk : a
    };
    Nr.prototype.electricalCharge = function (a) {
        a = a.charge;
        return isNaN(a) ? this.Rk : a
    };
    Nr.prototype.electricalFieldX = function () {
        return 0
    };
    Nr.prototype.electricalFieldY = function () {
        return 0
    };
    Nr.prototype.gravitationalMass = function (a) {
        a = a.mass;
        return isNaN(a) ? this.Sk : a
    };
    Nr.prototype.gravitationalFieldX = function () {
        return 0
    };
    Nr.prototype.gravitationalFieldY = function () {
        return 0
    };
    Nr.prototype.isFixed = function (a) {
        return a.isFixed
    };
    ma.Object.defineProperties(Nr.prototype, {
        currentIteration: {
            get: function () {
                return this.jo
            }
        },
        arrangementSpacing: {
            get: function () {
                return this.zd
            },
            set: function (a) {
                this.zd.w(a) || (this.zd.assign(a), this.C())
            }
        },
        arrangesToOrigin: {
            get: function () {
                return this.Xm
            },
            set: function (a) {
                this.Xm !== a && (this.Xm = a, this.C())
            }
        },
        setsPortSpots: {
            get: function () {
                return this.cf
            },
            set: function (a) {
                this.cf !== a && (this.cf =
                    a, this.C())
            }
        },
        comments: {
            get: function () {
                return this.Zc
            },
            set: function (a) {
                this.Zc !== a && (this.Zc = a, this.C())
            }
        },
        maxIterations: {
            get: function () {
                return this.yl
            },
            set: function (a) {
                this.yl !== a && 0 <= a && (this.yl = a, this.C())
            }
        },
        epsilonDistance: {
            get: function () {
                return this.Fn
            },
            set: function (a) {
                this.Fn !== a && 0 < a && (this.Fn = a, this.C())
            }
        },
        infinityDistance: {
            get: function () {
                return this.Wf
            },
            set: function (a) {
                this.Wf !==
                    a && 1 < a && (this.Wf = a, this.C())
            }
        },
        moveLimit: {
            get: function () {
                return this.Ho
            },
            set: function (a) {
                this.Ho !== a && 1 < a && (this.Ho = a, this.C())
            }
        },
        randomNumberGenerator: {
            get: function () {
                return this.hp
            },
            set: function (a) {
                this.hp !== a && (null !== a && "function" !== typeof a.random && B('ForceDirectedLayout.randomNumberGenerator must have a "random()" function on it: ' + a), this.hp = a)
            }
        },
        defaultSpringStiffness: {
            get: function () {
                return this.Uk
            },
            set: function (a) {
                this.Uk !== a && (this.Uk = a, this.C())
            }
        },
        defaultSpringLength: {
            get: function () {
                return this.Tk
            },
            set: function (a) {
                this.Tk !== a && (this.Tk = a, this.C())
            }
        },
        defaultElectricalCharge: {
            get: function () {
                return this.Rk
            },
            set: function (a) {
                this.Rk !== a && (this.Rk = a, this.C())
            }
        },
        defaultGravitationalMass: {
            get: function () {
                return this.Sk
            },
            set: function (a) {
                this.Sk !== a && (this.Sk = a, this.C())
            }
        },
        defaultCommentSpringLength: {
            get: function () {
                return this.wn
            },
            set: function (a) {
                this.wn !== a && (this.wn = a, this.C())
            }
        },
        defaultCommentElectricalCharge: {
            get: function () {
                return this.vn
            },
            set: function (a) {
                this.vn !== a && (this.vn = a, this.C())
            }
        }
    });
    Nr.className = "ForceDirectedLayout";

    function Wr() {
        this.Aw = this.zw = this.Qt = this.St = this.Rt = 0
    }
    Wr.className = "ForceDirectedSubnet";

    function Or(a) {
        Qp.call(this, a)
    }
    la(Or, Qp);
    Or.prototype.createVertex = function () {
        return new $r(this)
    };
    Or.prototype.createEdge = function () {
        return new as(this)
    };
    Or.className = "ForceDirectedNetwork";

    function $r(a) {
        Tp.call(this, a);
        this.Ia = !1;
        this.Za = this.I = NaN;
        this.Mh = this.wd = this.Ha = this.Y = 0;
        this.Fe = this.$j = null;
        this.bw = 0
    }
    la($r, Tp);
    ma.Object.defineProperties($r.prototype, {
        isFixed: {
            get: function () {
                return this.Ia
            },
            set: function (a) {
                this.Ia !== a && (this.Ia = a)
            }
        },
        charge: {
            get: function () {
                return this.I
            },
            set: function (a) {
                this.I !== a && (this.I = a)
            }
        },
        mass: {
            get: function () {
                return this.Za
            },
            set: function (a) {
                this.Za !== a && (this.Za = a)
            }
        },
        forceX: {
            get: function () {
                return this.Y
            },
            set: function (a) {
                this.Y !== a && (this.Y = a)
            }
        },
        forceY: {
            get: function () {
                return this.Ha
            },
            set: function (a) {
                this.Ha !== a && (this.Ha = a)
            }
        }
    });
    $r.className = "ForceDirectedVertex";

    function as(a) {
        Up.call(this, a);
        this.l = this.u = NaN
    }
    la(as, Up);
    ma.Object.defineProperties(as.prototype, {
        stiffness: {
            get: function () {
                return this.u
            },
            set: function (a) {
                this.u !== a && (this.u = a)
            }
        },
        length: {
            get: function () {
                return this.l
            },
            set: function (a) {
                this.l !== a && (this.l = a)
            }
        }
    });
    as.className = "ForceDirectedEdge";

    function Zr() {
        var a = 0;
        void 0 === a && (a = 42);
        this.seed = a;
        this.sy = 48271;
        this.uy = 2147483647;
        this.Q = 44488.07041494893;
        this.wy = 3399;
        this.ty = 1 / 2147483647;
        this.random()
    }
    Zr.prototype.random = function () {
        var a = this.seed % this.Q * this.sy - this.seed / this.Q * this.wy;
        0 < a ? this.seed = a : this.seed = a + this.uy;
        return this.seed * this.ty
    };
    Zr.className = "RandomNumberGenerator";

    function bs() {
        Ci.call(this);
        this.Zb = this.me = 25;
        this.J = 0;
        this.Pk = cs;
        this.tl = ds;
        this.il = es;
        this.zj = 4;
        this.Ek = fs;
        this.mg = 7;
        this.cf = !0;
        this.ro = 4;
        this.Da = this.Zr = this.xa = -1;
        this.rd = this.Co = 0;
        this.Ga = this.pd = this.qd = this.Kd = this.gc = null;
        this.Mo = 0;
        this.Lo = this.Ej = null;
        this.Od = 0;
        this.No = null;
        this.Jf = new I;
        this.pe = [];
        this.pe.length = 100
    }
    la(bs, Ci);
    bs.prototype.cloneProtected = function (a) {
        Ci.prototype.cloneProtected.call(this, a);
        a.me = this.me;
        a.Zb = this.Zb;
        a.J = this.J;
        a.Pk = this.Pk;
        a.tl = this.tl;
        a.il = this.il;
        a.zj = this.zj;
        a.Ek = this.Ek;
        a.mg = this.mg;
        a.cf = this.cf;
        a.ro = this.ro
    };
    bs.prototype.cb = function (a) {
        a.classType === bs ? 0 === a.name.indexOf("Aggressive") ? this.aggressiveOption = a : 0 === a.name.indexOf("Cycle") ? this.cycleRemoveOption = a : 0 === a.name.indexOf("Init") ? this.initializeOption = a : 0 === a.name.indexOf("Layer") ? this.layeringOption = a : B("Unknown enum value: " + a) : Ci.prototype.cb.call(this, a)
    };
    bs.prototype.createNetwork = function () {
        return new gs(this)
    };
    bs.prototype.doLayout = function (a) {
        null === this.network && (this.network = this.makeNetwork(a));
        this.arrangementOrigin = this.initialOrigin(this.arrangementOrigin);
        this.Zr = -1;
        this.rd = this.Co = 0;
        this.No = this.Lo = this.Ej = null;
        for (a = 0; a < this.pe.length; a++) this.pe[a] = null;
        if (0 < this.network.vertexes.count) {
            this.network.iq();
            this.cycleRemoveOption !== hs && this.removeCycles();
            for (a = this.network.vertexes.iterator; a.next();) a.value.layer = -1;
            this.xa = -1;
            this.assignLayers();
            for (a.reset(); a.next();) this.xa = Math.max(this.xa,
                a.value.layer);
            this.cycleRemoveOption === hs && this.removeCycles();
            a = this.network;
            for (var b = [], c = a.edges.iterator; c.next();) {
                var d = c.value;
                d.valid = !1;
                b.push(d)
            }
            for (c = 0; c < b.length; c++) {
                d = b[c];
                var e = d.fromVertex,
                    f = d.toVertex;
                if (!d.valid && (null !== e.node && null !== f.node || e.layer !== f.layer)) {
                    var g = 0,
                        h = 0,
                        k = 0,
                        l = 0;
                    if (null !== d.link) {
                        h = d.link;
                        if (null === h) continue;
                        var m = e.node;
                        g = f.node;
                        if (null === m || null === g) continue;
                        var n = h.fromNode;
                        k = h.toNode;
                        var p = h.fromPort;
                        h = h.toPort;
                        if (d.rev) {
                            l = n;
                            var r = p;
                            n = k;
                            p = h;
                            k = l;
                            h = r
                        }
                        var q =
                            e.focus;
                        l = f.focus;
                        var u = d.rev ? f.bounds : e.bounds;
                        r = I.alloc();
                        m !== n ? u.v() && n.isVisible() ? n.actualBounds.v() ? (n.vf(p, Ac, r), r.x += n.actualBounds.x - u.x, r.y += n.actualBounds.y - u.y) : (n.vf(p, Ac, r), r.v() || r.assign(q)) : r.assign(q) : u.v() ? (n.vf(p, Ac, r), r.v() || r.assign(q)) : r.assign(q);
                        n = d.rev ? e.bounds : f.bounds;
                        m = I.alloc();
                        g !== k ? n.v() && k.isVisible() ? k.actualBounds.v() ? (k.vf(h, Ac, m), m.x += k.actualBounds.x - n.x, m.y += k.actualBounds.y - n.y) : (k.vf(h, Ac, m), m.v() || m.assign(l)) : m.assign(l) : n.v() ? (k.vf(h, Ac, m), m.v() || m.assign(l)) :
                            m.assign(l);
                        90 === this.J || 270 === this.J ? (g = Math.round((r.x - q.x) / this.Zb), k = r.x, h = Math.round((m.x - l.x) / this.Zb), l = m.x) : (g = Math.round((r.y - q.y) / this.Zb), k = r.y, h = Math.round((m.y - l.y) / this.Zb), l = m.y);
                        I.free(r);
                        I.free(m);
                        d.portFromColOffset = g;
                        d.portFromPos = k;
                        d.portToColOffset = h;
                        d.portToPos = l
                    } else d.portFromColOffset = 0, d.portFromPos = 0, d.portToColOffset = 0, d.portToPos = 0;
                    r = e.layer;
                    m = f.layer;
                    n = 0;
                    u = d.link;
                    if (null !== u) {
                        var v = u.fromPort,
                            w = u.toPort;
                        if (null !== v && null !== w) {
                            var y = u.fromNode;
                            p = u.toNode;
                            if (null !== y &&
                                null !== p) {
                                var z = is(this, !0),
                                    A = is(this, !1),
                                    C = this.setsPortSpots ? z : u.computeSpot(!0, v);
                                q = this.setsPortSpots ? A : u.computeSpot(!1, w);
                                var G = u.isOrthogonal;
                                C.yf() && C.wf(A) && q.yf() && q.wf(z) ? n = 0 : (z = u.getLinkPoint(y, v, C, !0, G, p, w, I.alloc()), A = u.getLinkDirection(y, v, z, C, !0, G, p, w), I.free(z), C.wt() || A !== js(this, d, !0) ? this.setsPortSpots && null !== y && 1 === y.ports.count && d.rev && (n += 1) : n += 1, C = u.getLinkPoint(p, w, q, !1, G, y, v, I.alloc()), u = u.getLinkDirection(p, w, C, q, !1, G, y, v), I.free(C), q.wt() || u !== js(this, d, !1) ? this.setsPortSpots &&
                                    null !== p && 1 === p.ports.count && d.rev && (n += 2) : n += 2)
                            }
                        }
                    }
                    p = n;
                    n = 1 === p || 3 === p ? !0 : !1;
                    if (p = 2 === p || 3 === p ? !0 : !1) q = a.createVertex(), q.node = null, q.Wj = 1, q.layer = r, q.near = e, a.Eh(q), e = a.mk(e, q, d.link), e.valid = !1, e.rev = d.rev, e.portFromColOffset = g, e.portToColOffset = 0, e.portFromPos = k, e.portToPos = 0, e = q;
                    u = 1;
                    n && u--;
                    if (r - m > u && 0 < r) {
                        d.valid = !1;
                        q = a.createVertex();
                        q.node = null;
                        q.Wj = 2;
                        q.layer = r - 1;
                        a.Eh(q);
                        e = a.mk(e, q, d.link);
                        e.valid = !0;
                        e.rev = d.rev;
                        e.portFromColOffset = p ? 0 : g;
                        e.portToColOffset = 0;
                        e.portFromPos = p ? 0 : k;
                        e.portToPos = 0;
                        e =
                            q;
                        for (r--; r - m > u && 0 < r;) q = a.createVertex(), q.node = null, q.Wj = 3, q.layer = r - 1, a.Eh(q), e = a.mk(e, q, d.link), e.valid = !0, e.rev = d.rev, e.portFromColOffset = 0, e.portToColOffset = 0, e.portFromPos = 0, e.portToPos = 0, e = q, r--;
                        e = a.mk(q, f, d.link);
                        e.valid = !n;
                        n && (q.near = f);
                        e.rev = d.rev;
                        e.portFromColOffset = 0;
                        e.portToColOffset = h;
                        e.portFromPos = 0;
                        e.portToPos = l
                    } else d.valid = !0
                }
            }
            a = this.gc = [];
            for (b = 0; b <= this.xa; b++) a[b] = 0;
            for (b = this.network.vertexes.iterator; b.next();) b.value.index = -1;
            this.initializeIndices();
            this.Zr = -1;
            for (c = this.rd =
                this.Co = 0; c <= this.xa; c++) a[c] > a[this.rd] && (this.Zr = a[c] - 1, this.rd = c), a[c] < a[this.Co] && (this.Co = c);
            this.No = [];
            for (c = 0; c < a.length; c++) this.No[c] = [];
            for (b.reset(); b.next();) a = b.value, this.No[a.layer][a.index] = a;
            this.Da = -1;
            for (a = 0; a <= this.xa; a++) {
                b = ks(this, a);
                c = 0;
                d = this.gc[a];
                for (f = 0; f < d; f++) e = b[f], c += this.nodeMinColumnSpace(e, !0), e.column = c, c += 1, c += this.nodeMinColumnSpace(e, !1);
                this.Da = Math.max(this.Da, c - 1);
                ls(this, a, b)
            }
            this.reduceCrossings();
            this.straightenAndPack();
            this.updateParts()
        }
        this.network =
            null;
        this.isValidLayout = !0
    };
    bs.prototype.linkMinLength = function () {
        return 1
    };

    function ms(a) {
        var b = a.fromVertex.node;
        a = a.toVertex.node;
        return null === b && null === a ? 8 : null === b || null === a ? 4 : 1
    }
    bs.prototype.nodeMinLayerSpace = function (a, b) {
        return null === a.node ? 0 : 90 === this.J || 270 === this.J ? b ? a.focus.y + 10 : a.bounds.height - a.focus.y + 10 : b ? a.focus.x + 10 : a.bounds.width - a.focus.x + 10
    };
    bs.prototype.nodeMinColumnSpace = function (a, b) {
        if (null === a.node) return 0;
        var c = b ? a.Ov : a.Nv;
        if (null !== c) return c;
        c = this.J;
        return 90 === c || 270 === c ? b ? a.Ov = a.focus.x / this.Zb + 1 | 0 : a.Nv = (a.bounds.width - a.focus.x) / this.Zb + 1 | 0 : b ? a.Ov = a.focus.y / this.Zb + 1 | 0 : a.Nv = (a.bounds.height - a.focus.y) / this.Zb + 1 | 0
    };

    function ns(a) {
        null === a.Ej && (a.Ej = []);
        for (var b = 0, c = a.network.vertexes.iterator; c.next();) {
            var d = c.value;
            a.Ej[b] = d.layer;
            b++;
            a.Ej[b] = d.column;
            b++;
            a.Ej[b] = d.index;
            b++
        }
        return a.Ej
    }

    function os(a, b) {
        var c = 0;
        for (a = a.network.vertexes.iterator; a.next();) {
            var d = a.value;
            d.layer = b[c];
            c++;
            d.column = b[c];
            c++;
            d.index = b[c];
            c++
        }
    }

    function ps(a, b, c) {
        var d = ks(a, b),
            e = a.gc[b];
        if (null === a.Lo || a.Lo.length < e * e) a.Lo = [];
        for (var f = a.Lo, g = 0; g < e; g++) {
            var h = 0,
                k = d[g],
                l = k.near;
            if (null !== l && l.layer === k.layer)
                if (k = l.index, k > g)
                    for (var m = g + 1; m < k; m++) {
                        var n = d[m];
                        n.near === l && n.Wj === l.Wj || h++
                    } else
                        for (m = g - 1; m > k; m--) n = d[m], n.near === l && n.Wj === l.Wj || h++;
            var p;
            if (0 <= c)
                for (k = d[g].sourceEdgesArrayAccess, l = 0; l < k.length; l++) {
                    var r = k[l];
                    if (r.valid && r.fromVertex.layer !== b)
                        for (n = r.fromVertex.index, m = r.portToPos, r = r.portFromPos, p = l + 1; p < k.length; p++) {
                            var q =
                                k[p];
                            if (q.valid && q.fromVertex.layer !== b) {
                                var u = q.fromVertex.index;
                                var v = q.portToPos;
                                q = q.portFromPos;
                                m < v && (n > u || n === u && r > q) && h++;
                                v < m && (u > n || u === n && q > r) && h++
                            }
                        }
                }
            if (0 >= c)
                for (k = d[g].destinationEdgesArrayAccess, l = 0; l < k.length; l++)
                    if (r = k[l], r.valid && r.toVertex.layer !== b)
                        for (n = r.toVertex.index, m = r.portToPos, r = r.portFromPos, p = l + 1; p < k.length; p++) q = k[p], q.valid && q.toVertex.layer !== b && (u = q.toVertex.index, v = q.portToPos, q = q.portFromPos, r < q && (n > u || n === u && m > v) && h++, q < r && (u > n || u === n && v > m) && h++);
            f[g * e + g] = h;
            for (k = g +
                1; k < e; k++) {
                var w = 0,
                    y = 0;
                if (0 <= c) {
                    h = d[g].sourceEdgesArrayAccess;
                    var z = d[k].sourceEdgesArrayAccess;
                    for (l = 0; l < h.length; l++)
                        if (r = h[l], r.valid && r.fromVertex.layer !== b)
                            for (n = r.fromVertex.index, r = r.portFromPos, p = 0; p < z.length; p++) q = z[p], q.valid && q.fromVertex.layer !== b && (u = q.fromVertex.index, q = q.portFromPos, (n < u || n === u && r < q) && y++, (u < n || u === n && q < r) && w++)
                }
                if (0 >= c)
                    for (h = d[g].destinationEdgesArrayAccess, z = d[k].destinationEdgesArrayAccess, l = 0; l < h.length; l++)
                        if (r = h[l], r.valid && r.toVertex.layer !== b)
                            for (n = r.toVertex.index,
                                m = r.portToPos, p = 0; p < z.length; p++) q = z[p], q.valid && q.toVertex.layer !== b && (u = q.toVertex.index, v = q.portToPos, (n < u || n === u && m < v) && y++, (u < n || u === n && v < m) && w++);
                f[g * e + k] = w;
                f[k * e + g] = y
            }
        }
        ls(a, b, d);
        return f
    }
    bs.prototype.countCrossings = function () {
        for (var a = 0, b = 0; b <= this.xa; b++)
            for (var c = ps(this, b, 1), d = this.gc[b], e = 0; e < d; e++)
                for (var f = e; f < d; f++) a += c[e * d + f];
        return a
    };

    function qs(a) {
        for (var b = 0, c = 0; c <= a.xa; c++) {
            for (var d = a, e = c, f = ks(d, e), g = d.gc[e], h = 0, k = 0; k < g; k++) {
                var l = f[k].destinationEdgesArrayAccess;
                if (null !== l)
                    for (var m = 0; m < l.length; m++) {
                        var n = l[m];
                        if (n.valid && n.toVertex.layer !== e) {
                            var p = n.fromVertex.column + n.portFromColOffset;
                            var r = n.toVertex.column + n.portToColOffset;
                            h += (Math.abs(p - r) + 1) * ms(n)
                        }
                    }
            }
            ls(d, e, f);
            b += h
        }
        return b
    }
    bs.prototype.normalize = function () {
        var a = Infinity;
        this.Da = -1;
        for (var b = this.network.vertexes.iterator; b.next();) {
            var c = b.value;
            a = Math.min(a, c.column - this.nodeMinColumnSpace(c, !0));
            this.Da = Math.max(this.Da, c.column + this.nodeMinColumnSpace(c, !1))
        }
        for (b.reset(); b.next();) b.value.column -= a;
        this.Da -= a
    };

    function rs(a, b, c) {
        for (var d = ks(a, b), e = a.gc[b], f = [], g = 0; g < e; g++) {
            var h = d[g],
                k = null;
            0 >= c && (k = h.sourceEdgesArrayAccess);
            var l = null;
            0 <= c && (l = h.destinationEdgesArrayAccess);
            var m = 0,
                n = 0,
                p = h.near;
            null !== p && p.layer === h.layer && (m += p.column - 1, n++);
            if (null !== k)
                for (p = 0; p < k.length; p++) {
                    h = k[p];
                    var r = h.fromVertex;
                    h.valid && !h.rev && r.layer !== b && (m += r.column, n++)
                }
            if (null !== l)
                for (k = 0; k < l.length; k++) h = l[k], p = h.toVertex, h.valid && !h.rev && p.layer !== b && (m += p.column, n++);
            f[g] = 0 === n ? -1 : m / n
        }
        ls(a, b, d);
        return f
    }

    function ss(a, b, c) {
        for (var d = ks(a, b), e = a.gc[b], f = [], g = 0; g < e; g++) {
            var h = d[g],
                k = null;
            0 >= c && (k = h.sourceEdgesArrayAccess);
            var l = null;
            0 <= c && (l = h.destinationEdgesArrayAccess);
            var m = 0,
                n = [],
                p = h.near;
            null !== p && p.layer === h.layer && (n[m] = p.column - 1, m++);
            h = void 0;
            if (null !== k)
                for (p = 0; p < k.length; p++) {
                    h = k[p];
                    var r = h.fromVertex;
                    h.valid && !h.rev && r.layer !== b && (n[m] = r.column + h.portFromColOffset, m++)
                }
            if (null !== l)
                for (k = 0; k < l.length; k++) h = l[k], p = h.toVertex, h.valid && !h.rev && p.layer !== b && (n[m] = p.column + h.portToColOffset,
                    m++);
            0 === m ? f[g] = -1 : (n.sort(function (a, b) {
                return a - b
            }), l = m >> 1, f[g] = 0 !== (m & 1) ? n[l] : n[l - 1] + n[l] >> 1)
        }
        ls(a, b, d);
        return f
    }

    function ts(a, b, c, d, e, f) {
        if (b.component === d) {
            b.component = c;
            if (e)
                for (var g = b.destinationEdges; g.next();) {
                    var h = g.value;
                    var k = h.toVertex;
                    var l = b.layer - k.layer;
                    h = a.linkMinLength(h);
                    l === h && ts(a, k, c, d, e, f)
                }
            if (f)
                for (g = b.sourceEdges; g.next();) h = g.value, k = h.fromVertex, l = k.layer - b.layer, h = a.linkMinLength(h), l === h && ts(a, k, c, d, e, f)
        }
    }

    function us(a, b, c, d, e, f) {
        if (b.component === d) {
            b.component = c;
            if (e)
                for (var g = b.destinationEdges; g.next();) us(a, g.value.toVertex, c, d, e, f);
            if (f)
                for (b = b.sourceEdges; b.next();) us(a, b.value.fromVertex, c, d, e, f)
        }
    }
    bs.prototype.removeCycles = function () {
        for (var a = this.network.edges.iterator; a.next();) a.value.rev = !1;
        switch (this.Pk) {
            default:
            case vs:
                a = this.network;
                var b = 0,
                    c = a.vertexes.count - 1,
                    d = [];
                d.length = c + 1;
                for (var e = a.vertexes.iterator; e.next();) e.value.valid = !0;
                for (; null !== ws(a);) {
                    for (e = xs(a); null !== e;) d[c] = e, c--, e.valid = !1, e = xs(a);
                    for (e = ys(a); null !== e;) d[b] = e, b++, e.valid = !1, e = ys(a);
                    e = null;
                    for (var f = 0, g = this.network.vertexes.iterator; g.next();) {
                        var h = g.value;
                        if (h.valid) {
                            for (var k = 0, l = h.destinationEdges; l.next();) l.value.toVertex.valid &&
                                k++;
                            l = 0;
                            for (var m = h.sourceEdges; m.next();) m.value.fromVertex.valid && l++;
                            if (null === e || f < k - l) e = h, f = k - l
                        }
                    }
                    null !== e && (d[b] = e, b++, e.valid = !1)
                }
                for (b = 0; b < a.vertexes.count; b++) d[b].index = b;
                for (d = a.edges.iterator; d.next();) b = d.value, b.fromVertex.index > b.toVertex.index && (a.Em(b), b.rev = !0);
                break;
            case cs:
                for (d = this.network.vertexes.iterator; d.next();) a = d.value, a.fm = -1, a.finish = -1;
                for (a = this.network.edges.iterator; a.next();) a.value.forest = !1;
                this.Mo = 0;
                for (d.reset(); d.next();) b = d.value, 0 === b.sourceEdges.count &&
                    zs(this, b);
                for (d.reset(); d.next();) b = d.value, -1 === b.fm && zs(this, b);
                for (a.reset(); a.next();) d = a.value, d.forest || (b = d.fromVertex, c = b.finish, e = d.toVertex, f = e.finish, e.fm < b.fm && c < f && (this.network.Em(d), d.rev = !0));
                break;
            case hs:
                a = this.network;
                b = a.vertexes.iterator;
                for (d = Infinity; b.next();) d = Math.min(d, b.value.layer);
                if (Infinity > d) {
                    if (0 > d)
                        for (b.reset(); b.next();) b.value.layer -= d;
                    d = [];
                    for (b.reset(); b.next();) c = b.value, e = d[c.layer], void 0 === e ? d[c.layer] = [c] : e.push(c);
                    for (c = b = 0; c < d.length; c++)
                        if (e = d[c], !e ||
                            0 === e.length) b++;
                        else if (0 < c)
                        for (f = 0; f < e.length; f++) e[f].layer -= b;
                    for (d = a.edges.iterator; d.next();) b = d.value, b.fromVertex.layer < b.toVertex.layer && (a.Em(b), b.rev = !0)
                }
        }
    };

    function ws(a) {
        for (a = a.vertexes.iterator; a.next();) {
            var b = a.value;
            if (b.valid) return b
        }
        return null
    }

    function xs(a) {
        for (a = a.vertexes.iterator; a.next();) {
            var b = a.value;
            if (b.valid) {
                for (var c = !0, d = b.destinationEdges; d.next();)
                    if (d.value.toVertex.valid) {
                        c = !1;
                        break
                    } if (c) return b
            }
        }
        return null
    }

    function ys(a) {
        for (a = a.vertexes.iterator; a.next();) {
            var b = a.value;
            if (b.valid) {
                for (var c = !0, d = b.sourceEdges; d.next();)
                    if (d.value.fromVertex.valid) {
                        c = !1;
                        break
                    } if (c) return b
            }
        }
        return null
    }

    function zs(a, b) {
        b.fm = a.Mo;
        a.Mo++;
        for (var c = b.destinationEdges; c.next();) {
            var d = c.value,
                e = d.toVertex; - 1 === e.fm && (d.forest = !0, zs(a, e))
        }
        b.finish = a.Mo;
        a.Mo++
    }
    bs.prototype.assignLayers = function () {
        switch (this.tl) {
            case As:
                Bs(this);
                break;
            case Cs:
                for (var a, b = this.network.vertexes.iterator; b.next();) a = Ds(this, b.value), this.xa = Math.max(a, this.xa);
                for (b.reset(); b.next();) a = b.value, a.layer = this.xa - a.layer;
                break;
            default:
            case ds:
                Bs(this);
                for (b = this.network.vertexes.iterator; b.next();) b.value.valid = !1;
                for (b.reset(); b.next();) a = b.value, 0 === a.sourceEdges.count && Es(this, a);
                a = Infinity;
                for (b.reset(); b.next();) a = Math.min(a, b.value.layer);
                this.xa = -1;
                for (b.reset(); b.next();) {
                    var c =
                        b.value;
                    c.layer -= a;
                    this.xa = Math.max(this.xa, c.layer)
                }
        }
    };

    function Bs(a) {
        for (var b = a.network.vertexes.iterator; b.next();) {
            var c = Fs(a, b.value);
            a.xa = Math.max(c, a.xa)
        }
    }

    function Fs(a, b) {
        var c = 0;
        if (-1 === b.layer) {
            for (var d = b.destinationEdges; d.next();) {
                var e = d.value,
                    f = e.toVertex;
                e = a.linkMinLength(e);
                c = Math.max(c, Fs(a, f) + e)
            }
            b.layer = c
        } else c = b.layer;
        return c
    }

    function Ds(a, b) {
        var c = 0;
        if (-1 === b.layer) {
            for (var d = b.sourceEdges; d.next();) {
                var e = d.value,
                    f = e.fromVertex;
                e = a.linkMinLength(e);
                c = Math.max(c, Ds(a, f) + e)
            }
            b.layer = c
        } else c = b.layer;
        return c
    }

    function Es(a, b) {
        if (!b.valid) {
            b.valid = !0;
            for (var c = b.destinationEdges; c.next();) Es(a, c.value.toVertex);
            for (c = a.network.vertexes.iterator; c.next();) c.value.component = -1;
            for (var d = b.sourceEdgesArrayAccess, e = d.length, f = 0; f < e; f++) {
                var g = d[f],
                    h = g.fromVertex,
                    k = g.toVertex;
                g = a.linkMinLength(g);
                h.layer - k.layer > g && ts(a, h, 0, -1, !0, !1)
            }
            for (ts(a, b, 1, -1, !0, !0); 0 !== b.component;) {
                f = 0;
                d = Infinity;
                h = 0;
                k = null;
                for (g = a.network.vertexes.iterator; g.next();) {
                    var l = g.value;
                    if (1 === l.component) {
                        var m = 0,
                            n = !1,
                            p = l.sourceEdgesArrayAccess;
                        e = p.length;
                        for (var r = 0; r < e; r++) {
                            var q = p[r],
                                u = q.fromVertex;
                            m += 1;
                            1 !== u.component && (f += 1, u = u.layer - l.layer, q = a.linkMinLength(q), d = Math.min(d, u - q))
                        }
                        p = l.destinationEdgesArrayAccess;
                        e = p.length;
                        for (r = 0; r < e; r++) q = p[r].toVertex, --m, 1 !== q.component ? --f : n = !0;
                        (null === k || m < h) && !n && (k = l, h = m)
                    }
                }
                if (0 < f) {
                    for (c.reset(); c.next();) e = c.value, 1 === e.component && (e.layer += d);
                    b.component = 0
                } else k.component = 0
            }
            for (c = a.network.vertexes.iterator; c.next();) c.value.component = -1;
            for (ts(a, b, 1, -1, !0, !1); 0 !== b.component;) {
                d = 0;
                e = Infinity;
                f = 0;
                h = null;
                for (k = a.network.vertexes.iterator; k.next();)
                    if (g = k.value, 1 === g.component) {
                        l = 0;
                        m = !1;
                        p = g.sourceEdgesArrayAccess;
                        n = p.length;
                        for (r = 0; r < n; r++) q = p[r].fromVertex, l += 1, 1 !== q.component ? d += 1 : m = !0;
                        p = g.destinationEdgesArrayAccess;
                        n = p.length;
                        for (r = 0; r < n; r++) q = p[r], u = q.toVertex, --l, 1 !== u.component && (--d, u = g.layer - u.layer, q = a.linkMinLength(q), e = Math.min(e, u - q));
                        (null === h || l > f) && !m && (h = g, f = l)
                    } if (0 > d) {
                    for (c.reset(); c.next();) d = c.value, 1 === d.component && (d.layer -= e);
                    b.component = 0
                } else h.component = 0
            }
        }
    }

    function js(a, b, c) {
        return 90 === a.J ? c && !b.rev || !c && b.rev ? 270 : 90 : 180 === a.J ? c && !b.rev || !c && b.rev ? 0 : 180 : 270 === a.J ? c && !b.rev || !c && b.rev ? 90 : 270 : c && !b.rev || !c && b.rev ? 180 : 0
    }
    bs.prototype.initializeIndices = function () {
        switch (this.il) {
            default:
            case Gs:
                for (var a = this.network.vertexes.iterator; a.next();) {
                    var b = a.value,
                        c = b.layer;
                    b.index = this.gc[c];
                    this.gc[c]++
                }
                break;
            case es:
                a = this.network.vertexes.iterator;
                for (b = this.xa; 0 <= b; b--)
                    for (a.reset(); a.next();) c = a.value, c.layer === b && -1 === c.index && Hs(this, c);
                break;
            case Is:
                for (a = this.network.vertexes.iterator, b = 0; b <= this.xa; b++)
                    for (a.reset(); a.next();) c = a.value, c.layer === b && -1 === c.index && Js(this, c)
        }
    };

    function Hs(a, b) {
        var c = b.layer;
        b.index = a.gc[c];
        a.gc[c]++;
        b = b.destinationEdgesArrayAccess;
        for (c = !0; c;) {
            c = !1;
            for (var d = 0; d < b.length - 1; d++) {
                var e = b[d],
                    f = b[d + 1];
                e.portFromColOffset > f.portFromColOffset && (c = !0, b[d] = f, b[d + 1] = e)
            }
        }
        for (c = 0; c < b.length; c++) d = b[c], d.valid && (d = d.toVertex, -1 === d.index && Hs(a, d))
    }

    function Js(a, b) {
        var c = b.layer;
        b.index = a.gc[c];
        a.gc[c]++;
        b = b.sourceEdgesArrayAccess;
        for (var d = !0; d;)
            for (d = !1, c = 0; c < b.length - 1; c++) {
                var e = b[c],
                    f = b[c + 1];
                e.portToColOffset > f.portToColOffset && (d = !0, b[c] = f, b[c + 1] = e)
            }
        for (c = 0; c < b.length; c++) d = b[c], d.valid && (d = d.fromVertex, -1 === d.index && Js(a, d))
    }
    bs.prototype.reduceCrossings = function () {
        var a = this.countCrossings(),
            b = ns(this),
            c, d;
        for (c = 0; c < this.zj; c++) {
            for (d = 0; d <= this.xa; d++) Ks(this, d, 1), Ls(this, d, 1);
            var e = this.countCrossings();
            e < a && (a = e, b = ns(this));
            for (d = this.xa; 0 <= d; d--) Ks(this, d, -1), Ls(this, d, -1);
            e = this.countCrossings();
            e < a && (a = e, b = ns(this))
        }
        os(this, b);
        for (c = 0; c < this.zj; c++) {
            for (d = 0; d <= this.xa; d++) Ks(this, d, 0), Ls(this, d, 0);
            e = this.countCrossings();
            e < a && (a = e, b = ns(this));
            for (d = this.xa; 0 <= d; d--) Ks(this, d, 0), Ls(this, d, 0);
            e = this.countCrossings();
            e < a && (a = e, b = ns(this))
        }
        os(this, b);
        var f, g, h;
        switch (this.Ek) {
            case Ms:
                break;
            case Ns:
                for (h = a + 1;
                    (d = this.countCrossings()) < h;)
                    for (h = d, c = this.xa; 0 <= c; c--)
                        for (g = 0; g <= c; g++) {
                            for (f = !0; f;)
                                for (f = !1, d = c; d >= g; d--) f = Ls(this, d, -1) || f;
                            e = this.countCrossings();
                            e >= a ? os(this, b) : (a = e, b = ns(this));
                            for (f = !0; f;)
                                for (f = !1, d = c; d >= g; d--) f = Ls(this, d, 1) || f;
                            e = this.countCrossings();
                            e >= a ? os(this, b) : (a = e, b = ns(this));
                            for (f = !0; f;)
                                for (f = !1, d = g; d <= c; d++) f = Ls(this, d, 1) || f;
                            e >= a ? os(this, b) : (a = e, b = ns(this));
                            for (f = !0; f;)
                                for (f = !1, d = g; d <= c; d++) f =
                                    Ls(this, d, -1) || f;
                            e >= a ? os(this, b) : (a = e, b = ns(this));
                            for (f = !0; f;)
                                for (f = !1, d = c; d >= g; d--) f = Ls(this, d, 0) || f;
                            e >= a ? os(this, b) : (a = e, b = ns(this));
                            for (f = !0; f;)
                                for (f = !1, d = g; d <= c; d++) f = Ls(this, d, 0) || f;
                            e >= a ? os(this, b) : (a = e, b = ns(this))
                        }
                break;
            default:
            case fs:
                for (c = this.xa, g = 0, h = a + 1;
                    (d = this.countCrossings()) < h;) {
                    h = d;
                    for (f = !0; f;)
                        for (f = !1, d = c; d >= g; d--) f = Ls(this, d, -1) || f;
                    e = this.countCrossings();
                    e >= a ? os(this, b) : (a = e, b = ns(this));
                    for (f = !0; f;)
                        for (f = !1, d = c; d >= g; d--) f = Ls(this, d, 1) || f;
                    e = this.countCrossings();
                    e >= a ? os(this, b) :
                        (a = e, b = ns(this));
                    for (f = !0; f;)
                        for (f = !1, d = g; d <= c; d++) f = Ls(this, d, 1) || f;
                    e >= a ? os(this, b) : (a = e, b = ns(this));
                    for (f = !0; f;)
                        for (f = !1, d = g; d <= c; d++) f = Ls(this, d, -1) || f;
                    e >= a ? os(this, b) : (a = e, b = ns(this));
                    for (f = !0; f;)
                        for (f = !1, d = c; d >= g; d--) f = Ls(this, d, 0) || f;
                    e >= a ? os(this, b) : (a = e, b = ns(this));
                    for (f = !0; f;)
                        for (f = !1, d = g; d <= c; d++) f = Ls(this, d, 0) || f;
                    e >= a ? os(this, b) : (a = e, b = ns(this))
                }
        }
        os(this, b)
    };

    function Ks(a, b, c) {
        var d = ks(a, b),
            e = a.gc[b],
            f = ss(a, b, c),
            g = rs(a, b, c);
        for (c = 0; c < e; c++) - 1 === g[c] && (g[c] = d[c].column), -1 === f[c] && (f[c] = d[c].column);
        for (var h = !0, k; h;)
            for (h = !1, c = 0; c < e - 1; c++)
                if (f[c + 1] < f[c] || f[c + 1] === f[c] && g[c + 1] < g[c]) h = !0, k = f[c], f[c] = f[c + 1], f[c + 1] = k, k = g[c], g[c] = g[c + 1], g[c + 1] = k, k = d[c], d[c] = d[c + 1], d[c + 1] = k;
        for (c = f = 0; c < e; c++) k = d[c], k.index = c, f += a.nodeMinColumnSpace(k, !0), k.column = f, f += 1, f += a.nodeMinColumnSpace(k, !1);
        ls(a, b, d)
    }

    function Ls(a, b, c) {
        var d = ks(a, b),
            e = a.gc[b];
        c = ps(a, b, c);
        var f;
        var g = [];
        for (f = 0; f < e; f++) g[f] = -1;
        var h = [];
        for (f = 0; f < e; f++) h[f] = -1;
        for (var k = !1, l = !0; l;)
            for (l = !1, f = 0; f < e - 1; f++) {
                var m = c[d[f].index * e + d[f + 1].index],
                    n = c[d[f + 1].index * e + d[f].index],
                    p = 0,
                    r = 0,
                    q = d[f].column,
                    u = d[f + 1].column,
                    v = a.nodeMinColumnSpace(d[f], !0),
                    w = a.nodeMinColumnSpace(d[f], !1),
                    y = a.nodeMinColumnSpace(d[f + 1], !0),
                    z = a.nodeMinColumnSpace(d[f + 1], !1);
                v = q - v + y;
                w = u - w + z;
                var A = d[f].sourceEdges.iterator;
                for (A.reset(); A.next();)
                    if (y = A.value, z = y.fromVertex,
                        y.valid && z.layer === b) {
                        for (y = 0; d[y] !== z;) y++;
                        y < f && (p += 2 * (f - y), r += 2 * (f + 1 - y));
                        y === f + 1 && (p += 1);
                        y > f + 1 && (p += 4 * (y - f), r += 4 * (y - (f + 1)))
                    } A = d[f].destinationEdges.iterator;
                for (A.reset(); A.next();)
                    if (y = A.value, z = y.toVertex, y.valid && z.layer === b) {
                        for (y = 0; d[y] !== z;) y++;
                        y === f + 1 && (r += 1)
                    } A = d[f + 1].sourceEdges.iterator;
                for (A.reset(); A.next();)
                    if (y = A.value, z = y.fromVertex, y.valid && z.layer === b) {
                        for (y = 0; d[y] !== z;) y++;
                        y < f && (p += 2 * (f + 1 - y), r += 2 * (f - y));
                        y === f && (r += 1);
                        y > f + 1 && (p += 4 * (y - (f + 1)), r += 4 * (y - f))
                    } A = d[f + 1].destinationEdges.iterator;
                for (A.reset(); A.next();)
                    if (y = A.value, z = y.toVertex, y.valid && z.layer === b) {
                        for (y = 0; d[y] !== z;) y++;
                        y === f && (p += 1)
                    } y = z = 0;
                A = g[d[f].index];
                var C = h[d[f].index],
                    G = g[d[f + 1].index],
                    L = h[d[f + 1].index]; - 1 !== A && (z += Math.abs(A - q), y += Math.abs(A - w)); - 1 !== C && (z += Math.abs(C - q), y += Math.abs(C - w)); - 1 !== G && (z += Math.abs(G - u), y += Math.abs(G - v)); - 1 !== L && (z += Math.abs(L - u), y += Math.abs(L - v));
                if (r < p - .5 || r === p && n < m - .5 || r === p && n === m && y < z - .5) l = k = !0, d[f].column = w, d[f + 1].column = v, m = d[f], d[f] = d[f + 1], d[f + 1] = m
            }
        for (f = 0; f < e; f++) d[f].index =
            f;
        ls(a, b, d);
        return k
    }
    bs.prototype.straightenAndPack = function () {
        var a = 0 !== (this.mg & 1);
        var b = 7 === this.mg;
        1E3 < this.network.edges.count && !b && (a = !1);
        if (a) {
            var c = [];
            for (b = 0; b <= this.xa; b++) c[b] = 0;
            for (var d, e = this.network.vertexes.iterator; e.next();) {
                var f = e.value;
                b = f.layer;
                d = f.column;
                f = this.nodeMinColumnSpace(f, !1);
                c[b] = Math.max(c[b], d + f)
            }
            for (e.reset(); e.next();) f = e.value, b = f.layer, d = f.column, f.column = (8 * (this.Da - c[b]) >> 1) + 8 * d;
            this.Da *= 8
        }
        if (0 !== (this.mg & 2))
            for (c = !0; c;) {
                c = !1;
                for (b = this.rd + 1; b <= this.xa; b++) c = Os(this, b, 1) || c;
                for (b =
                    this.rd - 1; 0 <= b; b--) c = Os(this, b, -1) || c;
                c = Os(this, this.rd, 0) || c
            }
        if (0 !== (this.mg & 4)) {
            for (b = this.rd + 1; b <= this.xa; b++) Ps(this, b, 1);
            for (b = this.rd - 1; 0 <= b; b--) Ps(this, b, -1);
            Ps(this, this.rd, 0)
        }
        a && (Qs(this, -1), Qs(this, 1));
        if (0 !== (this.mg & 2))
            for (c = !0; c;) {
                c = !1;
                c = Os(this, this.rd, 0) || c;
                for (b = this.rd + 1; b <= this.xa; b++) c = Os(this, b, 0) || c;
                for (b = this.rd - 1; 0 <= b; b--) c = Os(this, b, 0) || c
            }
    };

    function Os(a, b, c) {
        for (var d = !1; Rs(a, b, c);) d = !0;
        return d
    }

    function Rs(a, b, c) {
        var d, e = ks(a, b),
            f = a.gc[b],
            g = rs(a, b, -1);
        if (0 < c)
            for (d = 0; d < f; d++) g[d] = -1;
        var h = rs(a, b, 1);
        if (0 > c)
            for (d = 0; d < f; d++) h[d] = -1;
        for (var k = !1, l = !0; l;)
            for (l = !1, d = 0; d < f; d++) {
                var m = e[d].column,
                    n = a.nodeMinColumnSpace(e[d], !0),
                    p = a.nodeMinColumnSpace(e[d], !1),
                    r = 0;
                0 > d - 1 || m - e[d - 1].column - 1 > n + a.nodeMinColumnSpace(e[d - 1], !1) ? r = m - 1 : r = m;
                n = d + 1 >= f || e[d + 1].column - m - 1 > p + a.nodeMinColumnSpace(e[d + 1], !0) ? m + 1 : m;
                var q = p = 0,
                    u = 0;
                if (0 >= c)
                    for (var v = e[d].sourceEdges.iterator; v.next();) {
                        var w = v.value;
                        var y = w.fromVertex;
                        if (w.valid && y.layer !== b) {
                            var z = ms(w);
                            var A = w.portFromColOffset;
                            w = w.portToColOffset;
                            y = y.column;
                            p += (Math.abs(m + w - (y + A)) + 1) * z;
                            q += (Math.abs(r + w - (y + A)) + 1) * z;
                            u += (Math.abs(n + w - (y + A)) + 1) * z
                        }
                    }
                if (0 <= c)
                    for (v = e[d].destinationEdges.iterator; v.next();) w = v.value, y = w.toVertex, w.valid && y.layer !== b && (z = ms(w), A = w.portFromColOffset, w = w.portToColOffset, y = y.column, p += (Math.abs(m + A - (y + w)) + 1) * z, q += (Math.abs(r + A - (y + w)) + 1) * z, u += (Math.abs(n + A - (y + w)) + 1) * z);
                w = A = z = 0;
                v = g[e[d].index];
                y = h[e[d].index]; - 1 !== v && (z += Math.abs(v - m), A +=
                    Math.abs(v - r), w += Math.abs(v - n)); - 1 !== y && (z += Math.abs(y - m), A += Math.abs(y - r), w += Math.abs(y - n));
                if (q < p || q === p && A < z) l = k = !0, e[d].column = r;
                else if (u < p || u === p && w < z) l = k = !0, e[d].column = n
            }
        ls(a, b, e);
        a.normalize();
        return k
    }

    function Ps(a, b, c) {
        var d = ks(a, b),
            e = a.gc[b],
            f = ss(a, b, c),
            g = [];
        for (c = 0; c < e; c++) g[c] = f[c];
        for (f = !0; f;)
            for (f = !1, c = 0; c < e; c++) {
                var h = d[c].column,
                    k = a.nodeMinColumnSpace(d[c], !0),
                    l = a.nodeMinColumnSpace(d[c], !1),
                    m = 0;
                if (-1 === g[c])
                    if (0 === c && c === e - 1) m = h;
                    else if (0 === c) {
                    var n = d[c + 1].column;
                    n - h === l + a.nodeMinColumnSpace(d[c + 1], !0) ? m = h - 1 : m = h
                } else c === e - 1 ? (n = d[c - 1].column, m = h - n === k + a.nodeMinColumnSpace(d[c - 1], !1) ? h + 1 : h) : (n = d[c - 1].column, k = n + a.nodeMinColumnSpace(d[c - 1], !1) + k + 1, n = d[c + 1].column, l = n - a.nodeMinColumnSpace(d[c +
                    1], !0) - l - 1, m = (k + l) / 2 | 0);
                else 0 === c && c === e - 1 ? m = g[c] : 0 === c ? (n = d[c + 1].column, l = n - a.nodeMinColumnSpace(d[c + 1], !0) - l - 1, m = Math.min(g[c], l)) : c === e - 1 ? (n = d[c - 1].column, k = n + a.nodeMinColumnSpace(d[c - 1], !1) + k + 1, m = Math.max(g[c], k)) : (n = d[c - 1].column, k = n + a.nodeMinColumnSpace(d[c - 1], !1) + k + 1, n = d[c + 1].column, l = n - a.nodeMinColumnSpace(d[c + 1], !0) - l - 1, k < g[c] && g[c] < l ? m = g[c] : k >= g[c] ? m = k : l <= g[c] && (m = l));
                m !== h && (f = !0, d[c].column = m)
            }
        ls(a, b, d);
        a.normalize()
    }

    function Ss(a, b) {
        for (var c = !0, d = a.network.vertexes.iterator; d.next();) {
            var e = d.value,
                f = a.nodeMinColumnSpace(e, !0),
                g = a.nodeMinColumnSpace(e, !1);
            if (e.column - f <= b && e.column + g >= b) {
                c = !1;
                break
            }
        }
        a = !1;
        if (c)
            for (d.reset(); d.next();) c = d.value, c.column > b && (--c.column, a = !0);
        return a
    }

    function Ts(a, b) {
        var c = b + 1;
        var d, e = [],
            f = [];
        for (d = 0; d <= a.xa; d++) e[d] = !1, f[d] = !1;
        for (var g = a.network.vertexes.iterator; g.next();) {
            d = g.value;
            var h = d.column - a.nodeMinColumnSpace(d, !0),
                k = d.column + a.nodeMinColumnSpace(d, !1);
            h <= b && k >= b && (e[d.layer] = !0);
            h <= c && k >= c && (f[d.layer] = !0)
        }
        h = !0;
        c = !1;
        for (d = 0; d <= a.xa; d++) h = h && !(e[d] && f[d]);
        if (h)
            for (g.reset(); g.next();) a = g.value, a.column > b && (--a.column, c = !0);
        return c
    }

    function Qs(a, b) {
        for (var c = 0; c <= a.Da; c++)
            for (; Ss(a, c););
        a.normalize();
        for (c = 0; c < a.Da; c++)
            for (; Ts(a, c););
        a.normalize();
        var d;
        if (0 < b)
            for (c = 0; c <= a.Da; c++) {
                var e = ns(a);
                var f = qs(a);
                for (d = f + 1; f < d;) {
                    d = f;
                    Us(a, c, 1);
                    var g = qs(a);
                    g > f ? os(a, e) : g < f && (f = g, e = ns(a))
                }
            }
        if (0 > b)
            for (c = a.Da; 0 <= c; c--)
                for (e = ns(a), f = qs(a), d = f + 1; f < d;) d = f, Us(a, c, -1), g = qs(a), g > f ? os(a, e) : g < f && (f = g, e = ns(a));
        a.normalize()
    }

    function Us(a, b, c) {
        a.Od = 0;
        for (var d = a.network.vertexes.iterator; d.next();) d.value.component = -1;
        if (0 < c)
            for (d.reset(); d.next();) {
                var e = d.value;
                e.column - a.nodeMinColumnSpace(e, !0) <= b && (e.component = a.Od)
            }
        if (0 > c)
            for (d.reset(); d.next();) e = d.value, e.column + a.nodeMinColumnSpace(e, !1) >= b && (e.component = a.Od);
        a.Od++;
        for (d.reset(); d.next();) b = d.value, -1 === b.component && (us(a, b, a.Od, -1, !0, !0), a.Od++);
        var f;
        b = [];
        for (f = 0; f < a.Od * a.Od; f++) b[f] = !1;
        e = [];
        for (f = 0; f < (a.xa + 1) * (a.Da + 1); f++) e[f] = -1;
        for (d.reset(); d.next();) {
            f =
                d.value;
            for (var g = f.layer, h = Math.max(0, f.column - a.nodeMinColumnSpace(f, !0)), k = Math.min(a.Da, f.column + a.nodeMinColumnSpace(f, !1)); h <= k; h++) e[g * (a.Da + 1) + h] = f.component
        }
        for (f = 0; f <= a.xa; f++) {
            if (0 < c)
                for (g = 0; g < a.Da; g++) - 1 !== e[f * (a.Da + 1) + g] && -1 !== e[f * (a.Da + 1) + g + 1] && e[f * (a.Da + 1) + g] !== e[f * (a.Da + 1) + g + 1] && (b[e[f * (a.Da + 1) + g] * a.Od + e[f * (a.Da + 1) + g + 1]] = !0);
            if (0 > c)
                for (g = a.Da; 0 < g; g--) - 1 !== e[f * (a.Da + 1) + g] && -1 !== e[f * (a.Da + 1) + g - 1] && e[f * (a.Da + 1) + g] !== e[f * (a.Da + 1) + g - 1] && (b[e[f * (a.Da + 1) + g] * a.Od + e[f * (a.Da + 1) + g - 1]] = !0)
        }
        e = [];
        for (f = 0; f < a.Od; f++) e[f] = !0;
        g = [];
        for (g.push(0); 0 !== g.length;)
            if (k = g[g.length - 1], g.pop(), e[k])
                for (e[k] = !1, f = 0; f < a.Od; f++) b[k * a.Od + f] && g.splice(0, 0, f);
        if (0 < c)
            for (d.reset(); d.next();) a = d.value, e[a.component] && --a.column;
        if (0 > c)
            for (d.reset(); d.next();) c = d.value, e[c.component] && (c.column += 1)
    }
    bs.prototype.commitLayout = function () {
        if (this.setsPortSpots)
            for (var a = is(this, !0), b = is(this, !1), c = this.network.edges.iterator; c.next();) {
                var d = c.value.link;
                null !== d && (d.fromSpot = a, d.toSpot = b)
            }
        this.commitNodes();
        this.hv();
        this.isRouting && this.commitLinks()
    };

    function is(a, b) {
        return 270 === a.J ? b ? dd : gd : 90 === a.J ? b ? gd : dd : 180 === a.J ? b ? ed : fd : b ? fd : ed
    }
    bs.prototype.commitNodes = function () {
        this.Kd = [];
        this.qd = [];
        this.pd = [];
        this.Ga = [];
        for (var a = 0; a <= this.xa; a++) this.Kd[a] = 0, this.qd[a] = 0, this.pd[a] = 0, this.Ga[a] = 0;
        for (a = this.network.vertexes.iterator; a.next();) {
            var b = a.value,
                c = b.layer;
            this.Kd[c] = Math.max(this.Kd[c], this.nodeMinLayerSpace(b, !0));
            this.qd[c] = Math.max(this.qd[c], this.nodeMinLayerSpace(b, !1))
        }
        b = 0;
        c = this.me;
        for (var d = 0; d <= this.xa; d++) {
            var e = c;
            0 >= this.Kd[d] + this.qd[d] && (e = 0);
            0 < d && (b += e / 2);
            90 === this.J || 0 === this.J ? (b += this.qd[d], this.pd[d] = b,
                b += this.Kd[d]) : (b += this.Kd[d], this.pd[d] = b, b += this.qd[d]);
            d < this.xa && (b += e / 2);
            this.Ga[d] = b
        }
        c = b;
        b = this.arrangementOrigin;
        for (d = 0; d <= this.xa; d++) 270 === this.J ? this.pd[d] = b.y + this.pd[d] : 90 === this.J ? (this.pd[d] = b.y + c - this.pd[d], this.Ga[d] = c - this.Ga[d]) : 180 === this.J ? this.pd[d] = b.x + this.pd[d] : (this.pd[d] = b.x + c - this.pd[d], this.Ga[d] = c - this.Ga[d]);
        a.reset();
        for (c = d = Infinity; a.next();) {
            e = a.value;
            var f = e.layer,
                g = e.column | 0;
            if (270 === this.J || 90 === this.J) {
                var h = b.x + this.Zb * g;
                f = this.pd[f]
            } else h = this.pd[f], f = b.y +
                this.Zb * g;
            e.centerX = h;
            e.centerY = f;
            d = Math.min(e.x, d);
            c = Math.min(e.y, c)
        }
        d = b.x - d;
        b = b.y - c;
        this.Jf = new I(d, b);
        for (a.reset(); a.next();) c = a.value, c.x += d, c.y += b, c.commit()
    };
    bs.prototype.hv = function () {
        for (var a = 0, b = this.me, c = 0; c <= this.xa; c++) a += this.Kd[c], a += this.qd[c];
        a += this.xa * b;
        b = [];
        c = this.Zb * this.Da;
        for (var d = this.maxLayer; 0 <= d; d--) 270 === this.J ? 0 === d ? b.push(new N(0, 0, c, Math.abs(this.Ga[0]))) : b.push(new N(0, this.Ga[d - 1], c, Math.abs(this.Ga[d - 1] - this.Ga[d]))) : 90 === this.J ? 0 === d ? b.push(new N(0, this.Ga[0], c, Math.abs(this.Ga[0] - a))) : b.push(new N(0, this.Ga[d], c, Math.abs(this.Ga[d - 1] - this.Ga[d]))) : 180 === this.J ? 0 === d ? b.push(new N(0, 0, Math.abs(this.Ga[0]), c)) : b.push(new N(this.Ga[d -
            1], 0, Math.abs(this.Ga[d - 1] - this.Ga[d]), c)) : 0 === d ? b.push(new N(this.Ga[0], 0, Math.abs(this.Ga[0] - a), c)) : b.push(new N(this.Ga[d], 0, Math.abs(this.Ga[d - 1] - this.Ga[d]), c));
        this.commitLayers(b, this.Jf)
    };
    bs.prototype.commitLayers = function () {};
    bs.prototype.commitLinks = function () {
        for (var a = this.network.edges.iterator, b; a.next();) b = a.value.link, null !== b && (b.Nh(), b.Zj(), b.rf());
        for (a.reset(); a.next();) b = a.value.link, null !== b && b.hj();
        for (a.reset(); a.next();) {
            var c = a.value;
            b = c.link;
            if (null !== b) {
                b.Nh();
                var d = b,
                    e = d.fromNode,
                    f = d.toNode,
                    g = d.fromPort,
                    h = d.toPort;
                if (null !== e) {
                    var k = e.findVisibleNode();
                    null !== k && k !== e && (e = k, g = k.port)
                }
                null !== f && (k = f.findVisibleNode(), null !== k && k !== f && (f = k, h = k.port));
                var l = b.computeSpot(!0, g);
                k = b.computeSpot(!1, h);
                var m =
                    c.fromVertex,
                    n = c.toVertex;
                if (c.valid) {
                    if (b.curve === qg && 4 === b.pointsCount)
                        if (m.column === n.column) c = b.getLinkPoint(e, g, l, !0, !1, f, h), g = b.getLinkPoint(f, h, k, !1, !1, e, g), c.v() || c.set(e.actualBounds.center), g.v() || g.set(f.actualBounds.center), b.Zj(), b.qf(c.x, c.y), b.qf((2 * c.x + g.x) / 3, (2 * c.y + g.y) / 3), b.qf((c.x + 2 * g.x) / 3, (c.y + 2 * g.y) / 3), b.qf(g.x, g.y);
                        else {
                            var p = !1,
                                r = !1;
                            null !== g && l === uc && (p = !0);
                            null !== h && k === uc && (r = !0);
                            if (p || r) {
                                var q = b.i(0).x;
                                c = b.i(0).y;
                                m = b.i(3).x;
                                d = b.i(3).y;
                                p && (90 === this.J || 270 === this.J ? (p = q, n =
                                    (c + d) / 2) : (p = (q + m) / 2, n = c), b.K(1, p, n), l = b.getLinkPoint(e, g, l, !0, !1, f, h), l.v() || l.set(e.actualBounds.center), b.K(0, l.x, l.y));
                                r && (90 === this.J || 270 === this.J ? (l = m, c = (c + d) / 2) : (l = (q + m) / 2, c = d), b.K(2, l, c), e = b.getLinkPoint(f, h, k, !1, !1, e, g), e.v() || e.set(f.actualBounds.center), b.K(3, e.x, e.y))
                            }
                        } b.rf()
                } else if (m.layer === n.layer) b.rf();
                else {
                    p = r = !1;
                    q = b.firstPickIndex + 1;
                    if (b.isOrthogonal) {
                        p = !0;
                        var u = b.pointsCount;
                        4 < u && b.points.removeRange(2, u - 3)
                    } else if (b.curve === qg) r = !0, u = b.pointsCount, 4 < u && b.points.removeRange(2,
                        u - 3), 4 === u && (q = 2);
                    else {
                        u = b.pointsCount;
                        var v = l === uc,
                            w = k === uc;
                        2 < u && v && w ? b.points.removeRange(1, u - 2) : 3 < u && v && !w ? b.points.removeRange(1, u - 3) : 3 < u && !v && w ? b.points.removeRange(2, u - 2) : 4 < u && !v && !w && b.points.removeRange(2, u - 3)
                    }
                    if (c.rev) {
                        for (; null !== n && m !== n;) {
                            var y = u = null;
                            for (v = n.sourceEdges.iterator; v.next() && (w = v.value, w.link !== c.link || (u = w.fromVertex, y = w.toVertex, null !== u.node)););
                            if (u !== m) {
                                v = b.i(q - 1).x;
                                w = b.i(q - 1).y;
                                var z = u.centerX;
                                var A = u.centerY;
                                if (p) 180 === this.J || 0 === this.J ? q === b.firstPickIndex + 1 ? (b.m(q++,
                                    v, w), b.m(q++, v, A)) : (null !== y ? y.centerY : w) !== A && (y = this.Ga[u.layer - 1] + this.Jf.x, b.m(q++, y, w), b.m(q++, y, A)) : q === b.firstPickIndex + 1 ? (b.m(q++, v, w), b.m(q++, z, w)) : (null !== y ? y.centerX : v) !== z && (y = this.Ga[u.layer - 1] + this.Jf.y, b.m(q++, v, y), b.m(q++, z, y));
                                else if (q === b.firstPickIndex + 1) {
                                    y = Math.max(10, this.Kd[n.layer]);
                                    var C = Math.max(10, this.qd[n.layer]);
                                    if (r) 180 === this.J ? z <= n.bounds.x ? (n = n.bounds.x, b.m(q++, n - y, A), b.m(q++, n, A), b.m(q++, n + C, A)) : (b.m(q++, z - y, A), b.m(q++, z, A), b.m(q++, z + C, A)) : 90 === this.J ? A >= n.bounds.bottom ?
                                        (n = n.bounds.y + n.bounds.height, b.m(q++, z, n + C), b.m(q++, z, n), b.m(q++, z, n - y)) : (b.m(q++, z, A + C), b.m(q++, z, A), b.m(q++, z, A - y)) : 270 === this.J ? A <= n.bounds.y ? (n = n.bounds.y, b.m(q++, z, n - y), b.m(q++, z, n), b.m(q++, z, n + C)) : (b.m(q++, z, A - y), b.m(q++, z, A), b.m(q++, z, A + C)) : 0 === this.J && (z >= n.bounds.right ? (n = n.bounds.x + n.bounds.width, b.m(q++, n + C, A), b.m(q++, n, A), b.m(q++, n - y, A)) : (b.m(q++, z + C, A), b.m(q++, z, A), b.m(q++, z - y, A)));
                                    else {
                                        b.m(q++, v, w);
                                        var G = 0;
                                        if (180 === this.J || 0 === this.J) {
                                            if (180 === this.J ? z >= n.bounds.right : z <= n.bounds.x) G =
                                                (0 === this.J ? -y : C) / 2;
                                            b.m(q++, v + G, A)
                                        } else {
                                            if (270 === this.J ? A >= n.bounds.bottom : A <= n.bounds.y) G = (90 === this.J ? -y : C) / 2;
                                            b.m(q++, z, w + G)
                                        }
                                        b.m(q++, z, A)
                                    }
                                } else y = Math.max(10, this.Kd[u.layer]), C = Math.max(10, this.qd[u.layer]), 180 === this.J ? (r && b.m(q++, z - y, A), b.m(q++, z, A), r && b.m(q++, z + C, A)) : 90 === this.J ? (r && b.m(q++, z, A + C), b.m(q++, z, A), r && b.m(q++, z, A - y)) : 270 === this.J ? (r && b.m(q++, z, A - y), b.m(q++, z, A), r && b.m(q++, z, A + C)) : (r && b.m(q++, z + C, A), b.m(q++, z, A), r && b.m(q++, z - y, A))
                            }
                            n = u
                        }
                        if (null === h || l !== uc || p)
                            if (v = b.i(q - 1).x, w = b.i(q -
                                    1).y, z = b.i(q).x, A = b.i(q).y, p) n = this.qd[m.layer], 180 === this.J || 0 === this.J ? (p = w, p >= m.bounds.y && p <= m.bounds.bottom && (180 === this.J ? z >= m.bounds.x : z <= m.bounds.right) && (n = m.centerX + (180 === this.J ? -n : n), p < m.bounds.y + m.bounds.height / 2 ? p = m.bounds.y - this.Zb / 2 : p = m.bounds.bottom + this.Zb / 2, b.m(q++, n, w), b.m(q++, n, p)), b.m(q++, z, p)) : (p = v, p >= m.bounds.x && p <= m.bounds.right && (270 === this.J ? A >= m.bounds.y : A <= m.bounds.bottom) && (n = m.centerY + (270 === this.J ? -n : n), p < m.bounds.x + m.bounds.width / 2 ? p = m.bounds.x - this.Zb / 2 : p = m.bounds.right +
                                this.Zb / 2, b.m(q++, v, n), b.m(q++, p, n)), b.m(q++, p, A)), b.m(q++, z, A);
                            else if (r) y = Math.max(10, this.Kd[m.layer]), C = Math.max(10, this.qd[m.layer]), 180 === this.J && z >= m.bounds.x ? (n = m.bounds.x + m.bounds.width, b.K(q - 2, n, w), b.K(q - 1, n + C, w)) : 90 === this.J && A <= m.bounds.bottom ? (n = m.bounds.y, b.K(q - 2, v, n), b.K(q - 1, v, n - y)) : 270 === this.J && A >= m.bounds.y ? (n = m.bounds.y + m.bounds.height, b.K(q - 2, v, n), b.K(q - 1, v, n + C)) : 0 === this.J && z <= m.bounds.right && (n = m.bounds.x, b.K(q - 2, n, w), b.K(q - 1, n - y, w));
                        else {
                            y = Math.max(10, this.Kd[m.layer]);
                            C = Math.max(10,
                                this.qd[m.layer]);
                            p = 0;
                            if (180 === this.J || 0 === this.J) {
                                if (180 === this.J ? z <= m.bounds.x : z >= m.bounds.right) p = (0 === this.J ? C : -y) / 2;
                                b.m(q++, z + p, w)
                            } else {
                                if (270 === this.J ? A <= m.bounds.y : A >= m.bounds.bottom) p = (90 === this.J ? C : -y) / 2;
                                b.m(q++, v, A + p)
                            }
                            b.m(q++, z, A)
                        }
                    } else {
                        for (; null !== m && m !== n;) {
                            y = u = null;
                            for (m = m.destinationEdges.iterator; m.next() && (v = m.value, v.link !== c.link || (u = v.toVertex, y = v.fromVertex, null !== y.node && (y = null), null !== u.node)););
                            u !== n && (v = b.i(q - 1).x, w = b.i(q - 1).y, z = u.centerX, A = u.centerY, p ? 180 === this.J || 0 === this.J ?
                                (null !== y ? y.centerY : w) !== A && (y = this.Ga[u.layer] + this.Jf.x, q === b.firstPickIndex + 1 && (y = 0 === this.J ? Math.max(y, v) : Math.min(y, v)), b.m(q++, y, w), b.m(q++, y, A)) : (null !== y ? y.centerX : v) !== z && (y = this.Ga[u.layer] + this.Jf.y, q === b.firstPickIndex + 1 && (y = 90 === this.J ? Math.max(y, w) : Math.min(y, w)), b.m(q++, v, y), b.m(q++, z, y)) : (y = Math.max(10, this.Kd[u.layer]), C = Math.max(10, this.qd[u.layer]), 180 === this.J ? (b.m(q++, z + C, A), r && b.m(q++, z, A), b.m(q++, z - y, A)) : 90 === this.J ? (b.m(q++, z, A - y), r && b.m(q++, z, A), b.m(q++, z, A + C)) : 270 === this.J ?
                                    (b.m(q++, z, A + C), r && b.m(q++, z, A), b.m(q++, z, A - y)) : (b.m(q++, z - y, A), r && b.m(q++, z, A), b.m(q++, z + C, A))));
                            m = u
                        }
                        p && (v = b.i(q - 1).x, w = b.i(q - 1).y, z = b.i(q).x, A = b.i(q).y, 180 === this.J || 0 === this.J ? w !== A && (y = 0 === this.J ? Math.min(Math.max((z + v) / 2, this.Ga[n.layer] + this.Jf.x), z) : Math.max(Math.min((z + v) / 2, this.Ga[n.layer] + this.Jf.x), z), b.m(q++, y, w), b.m(q++, y, A)) : v !== z && (y = 90 === this.J ? Math.min(Math.max((A + w) / 2, this.Ga[n.layer] + this.Jf.y), A) : Math.max(Math.min((A + w) / 2, this.Ga[n.layer] + this.Jf.y), A), b.m(q++, v, y), b.m(q++, z, y)))
                    }
                    null !==
                        d && r && (null !== g && (l === uc && (l = b.i(0), d = b.i(2), l.w(d) || b.K(1, (l.x + d.x) / 2, (l.y + d.y) / 2)), l = b.getLinkPoint(e, g, uc, !0, !1, f, h), l.v() || l.set(e.actualBounds.center), b.K(0, l.x, l.y)), null !== h && (k === uc && (k = b.i(b.pointsCount - 1), l = b.i(b.pointsCount - 3), k.w(l) || b.K(b.pointsCount - 2, (k.x + l.x) / 2, (k.y + l.y) / 2)), e = b.getLinkPoint(f, h, uc, !1, !1, e, g), e.v() || e.set(f.actualBounds.center), b.K(b.pointsCount - 1, e.x, e.y)));
                    b.rf();
                    c.commit()
                }
            }
        }
        this.avoidOrthogonalOverlaps()
    };
    bs.prototype.avoidOrthogonalOverlaps = function () {
        for (var a = new E, b = this.network.edges.iterator; b.next();) {
            var c = b.value.link;
            null !== c && c.isOrthogonal && !a.contains(c) && a.add(c)
        }
        if (0 < a.count)
            if (90 === this.J || 270 === this.J) {
                b = 0;
                c = [];
                for (a = a.iterator; a.next();) {
                    var d = a.value;
                    if (null !== d && d.isOrthogonal)
                        for (var e = 2; e < d.pointsCount - 3; e++) {
                            var f = d.i(e);
                            var g = d.i(e + 1);
                            if (this.A(f.y, g.y) && !this.A(f.x, g.x)) {
                                var h = new Vs;
                                h.layer = Math.floor(f.y / 2);
                                var k = d.i(0),
                                    l = d.i(d.pointsCount - 1);
                                h.first = k.x * k.x + k.y;
                                h.Xb = l.x *
                                    l.x + l.y;
                                h.Tc = Math.min(f.x, g.x);
                                h.tc = Math.max(f.x, g.x);
                                h.index = e;
                                h.link = d;
                                if (e + 2 < d.pointsCount) {
                                    k = d.i(e - 1);
                                    l = d.i(e + 2);
                                    var m = 0;
                                    k.y < f.y ? m = l.y < f.y ? 3 : f.x < g.x ? 2 : 1 : k.y > f.y && (m = l.y > f.y ? 0 : g.x < f.x ? 2 : 1);
                                    h.l = m
                                }
                                c.push(h)
                            }
                        }
                }
                if (1 < c.length)
                    for (c.sort(this.hy), a = 0; a < c.length;) {
                        f = c[a].layer;
                        for (d = a + 1; d < c.length && c[d].layer === f;) d++;
                        if (1 < d - a)
                            for (f = a; f < d;) {
                                g = c[f].tc;
                                for (e = a + 1; e < d && c[e].Tc < g;) g = Math.max(g, c[e].tc), e++;
                                g = e - f;
                                if (1 < g) {
                                    this.ej(c, this.Kt, f, f + g);
                                    m = 1;
                                    h = c[f].Xb;
                                    for (k = f; k < e; k++) l = c[k], l.Xb !== h && (m++, h = l.Xb);
                                    this.ej(c,
                                        this.gy, f, f + g);
                                    var n = 1;
                                    h = c[f].first;
                                    for (k = f; k < e; k++) l = c[k], l.first !== h && (n++, h = l.first);
                                    k = !0;
                                    l = n;
                                    m < n ? (k = !1, l = m, h = c[f].Xb, this.ej(c, this.Kt, f, f + g)) : h = c[f].first;
                                    m = 0;
                                    for (n = f; n < e; n++) {
                                        var p = c[n];
                                        (k ? p.first : p.Xb) !== h && (m++, h = k ? p.first : p.Xb);
                                        var r = p.link;
                                        f = r.i(p.index);
                                        g = r.i(p.index + 1);
                                        var q = this.linkSpacing * (m - (l - 1) / 2);
                                        b++;
                                        r.Nh();
                                        r.K(p.index, f.x, f.y + q);
                                        r.K(p.index + 1, g.x, g.y + q);
                                        r.rf()
                                    }
                                }
                                f = e
                            }
                        a = d
                    }
            } else {
                b = 0;
                c = [];
                for (a = a.iterator; a.next();)
                    if (d = a.value, null !== d && d.isOrthogonal)
                        for (e = 2; e < d.pointsCount - 3; e++) f =
                            d.i(e), g = d.i(e + 1), this.A(f.x, g.x) && !this.A(f.y, g.y) && (h = new Vs, h.layer = Math.floor(f.x / 2), k = d.i(0), l = d.i(d.pointsCount - 1), h.first = k.x + k.y * k.y, h.Xb = l.x + l.y * l.y, h.Tc = Math.min(f.y, g.y), h.tc = Math.max(f.y, g.y), h.index = e, h.link = d, e + 2 < d.pointsCount && (k = d.i(e - 1), l = d.i(e + 2), m = 0, k.x < f.x ? m = l.x < f.x ? 3 : f.y < g.y ? 2 : 1 : k.x > f.x && (m = l.x > f.x ? 0 : g.y < f.y ? 2 : 1), h.l = m), c.push(h));
                if (1 < c.length)
                    for (c.sort(this.hy), a = 0; a < c.length;) {
                        f = c[a].layer;
                        for (d = a + 1; d < c.length && c[d].layer === f;) d++;
                        if (1 < d - a)
                            for (f = a; f < d;) {
                                g = c[f].tc;
                                for (e = a +
                                    1; e < d && c[e].Tc < g;) g = Math.max(g, c[e].tc), e++;
                                g = e - f;
                                if (1 < g) {
                                    this.ej(c, this.Kt, f, f + g);
                                    m = 1;
                                    h = c[f].Xb;
                                    for (k = f; k < e; k++) l = c[k], l.Xb !== h && (m++, h = l.Xb);
                                    this.ej(c, this.gy, f, f + g);
                                    n = 1;
                                    h = c[f].first;
                                    for (k = f; k < e; k++) l = c[k], l.first !== h && (n++, h = l.first);
                                    k = !0;
                                    l = n;
                                    m < n ? (k = !1, l = m, h = c[f].Xb, this.ej(c, this.Kt, f, f + g)) : h = c[f].first;
                                    m = 0;
                                    for (n = f; n < e; n++) p = c[n], (k ? p.first : p.Xb) !== h && (m++, h = k ? p.first : p.Xb), r = p.link, f = r.i(p.index), g = r.i(p.index + 1), q = this.linkSpacing * (m - (l - 1) / 2), b++, r.Nh(), r.K(p.index, f.x + q, f.y), r.K(p.index + 1,
                                        g.x + q, g.y), r.rf()
                                }
                                f = e
                            }
                        a = d
                    }
            }
    };
    t = bs.prototype;
    t.hy = function (a, b) {
        return a instanceof Vs && b instanceof Vs && a !== b ? a.layer < b.layer ? -1 : a.layer > b.layer ? 1 : a.Tc < b.Tc ? -1 : a.Tc > b.Tc ? 1 : a.tc < b.tc ? -1 : a.tc > b.tc ? 1 : 0 : 0
    };
    t.gy = function (a, b) {
        return a instanceof Vs && b instanceof Vs && a !== b ? a.first < b.first ? -1 : a.first > b.first || a.l < b.l ? 1 : a.l > b.l || a.Tc < b.Tc ? -1 : a.Tc > b.Tc ? 1 : a.tc < b.tc ? -1 : a.tc > b.tc ? 1 : 0 : 0
    };
    t.Kt = function (a, b) {
        return a instanceof Vs && b instanceof Vs && a !== b ? a.Xb < b.Xb ? -1 : a.Xb > b.Xb || a.l < b.l ? 1 : a.l > b.l || a.Tc < b.Tc ? -1 : a.Tc > b.Tc ? 1 : a.tc < b.tc ? -1 : a.tc > b.tc ? 1 : 0 : 0
    };
    t.A = function (a, b) {
        a -= b;
        return -1 < a && 1 > a
    };
    t.ej = function (a, b, c, d) {
        var e = a.length,
            f = d - c;
        if (!(1 >= f))
            if ((0 > c || c >= e - 1) && B("not in range 0 <= from < length: " + c), 2 === f) d = a[c], e = a[c + 1], 0 < b(d, e) && (a[c] = e, a[c + 1] = d);
            else if (0 === c)
            if (d >= e) a.sort(b);
            else
                for (c = a.slice(0, d), c.sort(b), b = 0; b < d; b++) a[b] = c[b];
        else if (d >= e)
            for (d = a.slice(c), d.sort(b), b = c; b < e; b++) a[b] = d[b - c];
        else
            for (e = a.slice(c, d), e.sort(b), b = c; b < d; b++) a[b] = e[b - c]
    };

    function ks(a, b) {
        var c = a.gc[b];
        if (c >= a.pe.length) {
            var d = [];
            for (var e = 0; e < a.pe.length; e++) d[e] = a.pe[e];
            a.pe = d
        }
        void 0 === a.pe[c] || null === a.pe[c] ? d = [] : (d = a.pe[c], a.pe[c] = null);
        a = a.No[b];
        for (b = 0; b < a.length; b++) c = a[b], d[c.index] = c;
        return d
    }

    function ls(a, b, c) {
        a.pe[a.gc[b]] = c
    }
    ma.Object.defineProperties(bs.prototype, {
        layerSpacing: {
            get: function () {
                return this.me
            },
            set: function (a) {
                this.me !== a && 0 <= a && (this.me = a, this.C())
            }
        },
        columnSpacing: {
            get: function () {
                return this.Zb
            },
            set: function (a) {
                this.Zb !== a && 0 < a && (this.Zb = a, this.C())
            }
        },
        direction: {
            get: function () {
                return this.J
            },
            set: function (a) {
                this.J !== a && (0 === a || 90 === a || 180 === a || 270 === a ? (this.J = a, this.C()) : B("LayeredDigraphLayout.direction must be 0, 90, 180, or 270"))
            }
        },
        cycleRemoveOption: {
            get: function () {
                return this.Pk
            },
            set: function (a) {
                this.Pk === a || a !== vs && a !== cs && a !== hs || (this.Pk = a, this.C())
            }
        },
        layeringOption: {
            get: function () {
                return this.tl
            },
            set: function (a) {
                this.tl === a || a !== ds && a !== As && a !== Cs || (this.tl = a, this.C())
            }
        },
        initializeOption: {
            get: function () {
                return this.il
            },
            set: function (a) {
                this.il === a || a !== es && a !== Is && a !== Gs || (this.il = a, this.C())
            }
        },
        iterations: {
            get: function () {
                return this.zj
            },
            set: function (a) {
                this.zj !== a && 0 <= a && (this.zj = a, this.C())
            }
        },
        aggressiveOption: {
            get: function () {
                return this.Ek
            },
            set: function (a) {
                this.Ek === a || a !== Ms && a !== fs && a !== Ns || (this.Ek = a, this.C())
            }
        },
        packOption: {
            get: function () {
                return this.mg
            },
            set: function (a) {
                this.mg !== a && 0 <= a && 8 > a && (this.mg = a, this.C())
            }
        },
        setsPortSpots: {
            get: function () {
                return this.cf
            },
            set: function (a) {
                this.cf !== a && (this.cf = a, this.C())
            }
        },
        linkSpacing: {
            get: function () {
                return this.ro
            },
            set: function (a) {
                this.ro !== a && 0 <= a && (this.ro = a, this.C())
            }
        },
        maxLayer: {
            get: function () {
                return this.xa
            }
        },
        maxIndex: {
            get: function () {
                return this.Zr
            }
        },
        maxColumn: {
            get: function () {
                return this.Da
            }
        },
        minIndexLayer: {
            get: function () {
                return this.Co
            }
        },
        maxIndexLayer: {
            get: function () {
                return this.rd
            }
        }
    });
    var cs = new D(bs, "CycleDepthFirst", 0),
        vs = new D(bs, "CycleGreedy", 1),
        hs = new D(bs, "CycleFromLayers", 2),
        ds = new D(bs, "LayerOptimalLinkLength", 0),
        As = new D(bs, "LayerLongestPathSink", 1),
        Cs = new D(bs, "LayerLongestPathSource", 2),
        es = new D(bs, "InitDepthFirstOut", 0),
        Is = new D(bs, "InitDepthFirstIn", 1),
        Gs = new D(bs, "InitNaive", 2),
        Ms = new D(bs, "AggressiveNone", 0),
        fs = new D(bs, "AggressiveLess", 1),
        Ns = new D(bs, "AggressiveMore", 2);
    bs.className = "LayeredDigraphLayout";
    bs.CycleDepthFirst = cs;
    bs.CycleGreedy = vs;
    bs.CycleFromLayers = hs;
    bs.LayerOptimalLinkLength = ds;
    bs.LayerLongestPathSink = As;
    bs.LayerLongestPathSource = Cs;
    bs.InitDepthFirstOut = es;
    bs.InitDepthFirstIn = Is;
    bs.InitNaive = Gs;
    bs.AggressiveNone = Ms;
    bs.AggressiveLess = fs;
    bs.AggressiveMore = Ns;
    bs.PackNone = 0;
    bs.PackExpand = 1;
    bs.PackStraighten = 2;
    bs.PackMedian = 4;
    bs.PackAll = 7;

    function Vs() {
        this.index = this.tc = this.Tc = this.Xb = this.first = this.layer = 0;
        this.link = null;
        this.l = 0
    }
    Vs.className = "SegInfo";

    function gs(a) {
        Qp.call(this, a)
    }
    la(gs, Qp);
    gs.prototype.createVertex = function () {
        return new Ws(this)
    };
    gs.prototype.createEdge = function () {
        return new Xs(this)
    };
    gs.className = "LayeredDigraphNetwork";

    function Ws(a) {
        Tp.call(this, a);
        this.Pa = this.Og = this.ui = -1;
        this.I = NaN;
        this.Y = null;
        this.valid = !1;
        this.finish = this.fm = NaN;
        this.Wj = 0;
        this.Nv = this.Ov = null
    }
    la(Ws, Tp);
    ma.Object.defineProperties(Ws.prototype, {
        layer: {
            get: function () {
                return this.ui
            },
            set: function (a) {
                this.ui !== a && (this.ui = a)
            }
        },
        column: {
            get: function () {
                return this.Og
            },
            set: function (a) {
                this.Og !== a && (this.Og = a)
            }
        },
        index: {
            get: function () {
                return this.Pa
            },
            set: function (a) {
                this.Pa !== a && (this.Pa = a)
            }
        },
        component: {
            get: function () {
                return this.I
            },
            set: function (a) {
                this.I !== a && (this.I = a)
            }
        },
        near: {
            get: function () {
                return this.Y
            },
            set: function (a) {
                this.Y !== a && (this.Y = a)
            }
        }
    });
    Ws.className = "LayeredDigraphVertex";

    function Xs(a) {
        Up.call(this, a);
        this.l = this.Ia = this.Za = !1;
        this.Ha = this.I = NaN;
        this.Y = this.u = 0
    }
    la(Xs, Up);
    ma.Object.defineProperties(Xs.prototype, {
        valid: {
            get: function () {
                return this.Za
            },
            set: function (a) {
                this.Za !== a && (this.Za = a)
            }
        },
        rev: {
            get: function () {
                return this.Ia
            },
            set: function (a) {
                this.Ia !== a && (this.Ia = a)
            }
        },
        forest: {
            get: function () {
                return this.l
            },
            set: function (a) {
                this.l !== a && (this.l = a)
            }
        },
        portFromPos: {
            get: function () {
                return this.I
            },
            set: function (a) {
                this.I !== a && (this.I = a)
            }
        },
        portToPos: {
            get: function () {
                return this.Ha
            },
            set: function (a) {
                this.Ha !== a && (this.Ha = a)
            }
        },
        portFromColOffset: {
            get: function () {
                return this.u
            },
            set: function (a) {
                this.u !== a && (this.u = a)
            }
        },
        portToColOffset: {
            get: function () {
                return this.Y
            },
            set: function (a) {
                this.Y !== a && (this.Y = a)
            }
        }
    });
    Xs.className = "LayeredDigraphEdge";

    function Ys() {
        Ci.call(this);
        this.Hb = new F;
        this.ap = Zs;
        this.$c = $s;
        this.Xp = at;
        this.Yr = bt;
        this.Lw = [];
        this.Zc = !0;
        this.Ab = ct;
        this.zd = (new M(10, 10)).freeze();
        var a = new dt(this);
        this.T = new et(a);
        this.U = new et(a);
        this.Uu = []
    }
    la(Ys, Ci);
    Ys.prototype.cloneProtected = function (a) {
        Ci.prototype.cloneProtected.call(this, a);
        a.ap = this.ap;
        a.Xp = this.Xp;
        a.Yr = this.Yr;
        a.Zc = this.Zc;
        a.Ab = this.Ab;
        a.zd.assign(this.zd);
        a.T.copyInheritedPropertiesFrom(this.T);
        a.U.copyInheritedPropertiesFrom(this.U)
    };
    Ys.prototype.cb = function (a) {
        a.classType === Ys ? 0 === a.name.indexOf("Alignment") ? this.alignment = a : 0 === a.name.indexOf("Arrangement") ? this.arrangement = a : 0 === a.name.indexOf("Compaction") ? this.compaction = a : 0 === a.name.indexOf("Path") ? this.path = a : 0 === a.name.indexOf("Sorting") ? this.sorting = a : 0 === a.name.indexOf("Style") ? this.treeStyle = a : B("Unknown enum value: " + a) : Ci.prototype.cb.call(this, a)
    };
    Ys.prototype.createNetwork = function () {
        return new dt(this)
    };
    Ys.prototype.makeNetwork = function (a) {
        function b(a) {
            if (a instanceof W) return !a.isLinkLabel && "Comment" !== a.category;
            if (a instanceof S) {
                var b = a.fromNode;
                if (null === b || b.isLinkLabel || "Comment" === b.category) return !1;
                a = a.toNode;
                return null === a || a.isLinkLabel || "Comment" === a.category ? !1 : !0
            }
            return !1
        }
        var c = this.createNetwork();
        a instanceof R ? (c.xg(a.nodes, !0, b), c.xg(a.links, !0, b)) : a instanceof T ? c.xg(a.memberParts, !1, b) : c.xg(a.iterator, !1, b);
        return c
    };
    Ys.prototype.doLayout = function (a) {
        null === this.network && (this.network = this.makeNetwork(a));
        this.arrangement !== ft && (this.arrangementOrigin = this.initialOrigin(this.arrangementOrigin));
        var b = this.diagram;
        null === b && a instanceof R && (b = a);
        this.path === Zs && null !== b ? this.$c = b.isTreePathToChildren ? $s : gt : this.$c = this.path === Zs ? $s : this.path;
        if (0 < this.network.vertexes.count) {
            this.network.iq();
            for (a = this.network.vertexes.iterator; a.next();) b = a.value, b.initialized = !1, b.level = 0, b.parent = null, b.children = [];
            if (0 < this.Hb.count) {
                a =
                    new F;
                for (b = this.Hb.iterator; b.next();) {
                    var c = b.value;
                    c instanceof W ? (c = this.network.Wi(c), null !== c && a.add(c)) : c instanceof et && a.add(c)
                }
                this.Hb = a
            }
            0 === this.Hb.count && this.findRoots();
            for (a = this.Hb.copy().iterator; a.next();) b = a.value, b.initialized || (b.initialized = !0, ht(this, b));
            b = this.network.vertexes;
            for (a = null; a = it(b), 0 < a.count;) b = jt(this, a), null !== b && this.Hb.add(b), b.initialized = !0, ht(this, b), b = a;
            for (a = this.Hb.iterator; a.next();) b = a.value, b instanceof et && kt(this, b);
            for (a = this.Hb.iterator; a.next();) b =
                a.value, b instanceof et && lt(this, b);
            for (a = this.Hb.iterator; a.next();) b = a.value, b instanceof et && mt(this, b);
            this.fv();
            if (this.layerStyle === nt) {
                a = [];
                for (b = this.network.vertexes.iterator; b.next();) {
                    c = b.value;
                    var d = c.parent;
                    null === d && (d = c);
                    d = 0 === d.angle || 180 === d.angle;
                    var e = a[c.level];
                    void 0 === e && (e = 0);
                    a[c.level] = Math.max(e, d ? c.width : c.height)
                }
                for (b = 0; b < a.length; b++) void 0 === a[b] && (a[b] = 0);
                this.Lw = a;
                for (b = this.network.vertexes.iterator; b.next();) c = b.value, d = c.parent, null === d && (d = c), 0 === d.angle || 180 ===
                    d.angle ? (180 === d.angle && (c.focusX += a[c.level] - c.width), c.width = a[c.level]) : (270 === d.angle && (c.focusY += a[c.level] - c.height), c.height = a[c.level])
            } else if (this.layerStyle === ot)
                for (a = this.network.vertexes.iterator; a.next();) {
                    b = a.value;
                    c = 0 === b.angle || 180 === b.angle;
                    d = -1;
                    for (e = 0; e < b.children.length; e++) {
                        var f = b.children[e];
                        d = Math.max(d, c ? f.width : f.height)
                    }
                    if (0 <= d)
                        for (e = 0; e < b.children.length; e++) f = b.children[e], c ? (180 === b.angle && (f.focusX += d - f.width), f.width = d) : (270 === b.angle && (f.focusY += d - f.height), f.height =
                            d)
                }
            for (a = this.Hb.iterator; a.next();) b = a.value, b instanceof et && this.layoutTree(b);
            this.arrangeTrees();
            this.updateParts()
        }
        this.network = null;
        this.Hb = new F;
        this.isValidLayout = !0
    };

    function it(a) {
        var b = new F;
        for (a = a.iterator; a.next();) {
            var c = a.value;
            c.initialized || b.add(c)
        }
        return b
    }
    Ys.prototype.findRoots = function () {
        for (var a = this.network.vertexes, b = a.iterator; b.next();) {
            var c = b.value;
            switch (this.$c) {
                case $s:
                    0 === c.sourceEdges.count && this.Hb.add(c);
                    break;
                case gt:
                    0 === c.destinationEdges.count && this.Hb.add(c);
                    break;
                default:
                    B("Unhandled path value " + this.$c.toString())
            }
        }
        0 === this.Hb.count && (a = jt(this, a), null !== a && this.Hb.add(a))
    };

    function jt(a, b) {
        var c = 999999,
            d = null;
        for (b = b.iterator; b.next();) {
            var e = b.value;
            switch (a.$c) {
                case $s:
                    e.sourceEdges.count < c && (c = e.sourceEdges.count, d = e);
                    break;
                case gt:
                    e.destinationEdges.count < c && (c = e.destinationEdges.count, d = e);
                    break;
                default:
                    B("Unhandled path value " + a.$c.toString())
            }
        }
        return d
    }

    function ht(a, b) {
        if (null !== b) {
            switch (a.$c) {
                case $s:
                    if (0 < b.destinationEdges.count) {
                        for (var c = new E, d = b.destinationVertexes; d.next();) {
                            var e = d.value;
                            pt(a, b, e) && c.add(e)
                        }
                        0 < c.count && (b.children = c.na())
                    }
                    break;
                case gt:
                    if (0 < b.sourceEdges.count) {
                        c = new E;
                        for (d = b.sourceVertexes; d.next();) e = d.value, pt(a, b, e) && c.add(e);
                        0 < c.count && (b.children = c.na())
                    }
                    break;
                default:
                    B("Unhandled path value" + a.$c.toString())
            }
            c = b.children;
            d = c.length;
            for (e = 0; e < d; e++) {
                var f = c[e];
                f.initialized = !0;
                f.level = b.level + 1;
                f.parent = b;
                a.Hb.remove(f)
            }
            for (b =
                0; b < d; b++) ht(a, c[b])
        }
    }

    function pt(a, b, c) {
        if (c.initialized) {
            if (null === b) var d = !1;
            else {
                for (d = b.parent; null !== d && d !== c;) d = d.parent;
                d = d === c
            }
            if (d || c.level > b.level) return !1;
            a.removeChild(c.parent, c)
        }
        return !0
    }
    Ys.prototype.removeChild = function (a, b) {
        if (null !== a && null !== b) {
            for (var c = a.children, d = 0, e = 0; e < c.length; e++) c[e] === b && d++;
            if (0 < d) {
                d = Array(c.length - d);
                for (var f = e = 0; f < c.length; f++) c[f] !== b && (d[e++] = c[f]);
                a.children = d
            }
        }
    };

    function kt(a, b) {
        if (null !== b) {
            a.initializeTreeVertexValues(b);
            b.alignment === qt && a.sortTreeVertexChildren(b);
            for (var c = 0, d = b.childrenCount, e = 0, f = b.children, g = f.length, h = 0; h < g; h++) {
                var k = f[h];
                kt(a, k);
                c += k.descendantCount + 1;
                d = Math.max(d, k.maxChildrenCount);
                e = Math.max(e, k.maxGenerationCount)
            }
            b.descendantCount = c;
            b.maxChildrenCount = d;
            b.maxGenerationCount = 0 < d ? e + 1 : 0
        }
    }

    function rt(a, b) {
        switch (a.Xp) {
            default:
            case at:
                return null !== b.parent ? b.parent : a.T;
            case st:
                return null === b.parent ? a.T : null === b.parent.parent ? a.U : b.parent;
            case tt:
                return null !== b.parent ? null !== b.parent.parent ? b.parent.parent : a.U : a.T;
            case ut:
                var c = !0;
                if (0 === b.childrenCount) c = !1;
                else
                    for (var d = b.children, e = d.length, f = 0; f < e; f++)
                        if (0 < d[f].childrenCount) {
                            c = !1;
                            break
                        } return c && null !== b.parent ? a.U : null !== b.parent ? b.parent : a.T
        }
    }
    Ys.prototype.initializeTreeVertexValues = function (a) {
        a.copyInheritedPropertiesFrom(rt(this, a));
        if (null !== a.parent && a.parent.alignment === qt) {
            for (var b = a.angle, c = a.parent.children, d = 0; d < c.length && a !== c[d];) d++;
            0 === d % 2 ? d !== c.length - 1 && (b = 90 === b ? 180 : 180 === b ? 270 : 270 === b ? 180 : 270) : b = 90 === b ? 0 : 180 === b ? 90 : 270 === b ? 0 : 90;
            a.angle = b
        }
        a.initialized = !0
    };

    function lt(a, b) {
        if (null !== b) {
            a.assignTreeVertexValues(b);
            b = b.children;
            for (var c = b.length, d = 0; d < c; d++) lt(a, b[d])
        }
    }
    Ys.prototype.assignTreeVertexValues = function () {};

    function mt(a, b) {
        if (null !== b) {
            b.alignment !== qt && a.sortTreeVertexChildren(b);
            b = b.children;
            for (var c = b.length, d = 0; d < c; d++) mt(a, b[d])
        }
    }
    Ys.prototype.sortTreeVertexChildren = function (a) {
        switch (a.sorting) {
            case vt:
                break;
            case wt:
                a.children.reverse();
                break;
            case xt:
                a.children.sort(a.comparer);
                break;
            case yt:
                a.children.sort(a.comparer);
                a.children.reverse();
                break;
            default:
                B("Unhandled sorting value " + a.sorting.toString())
        }
    };
    Ys.prototype.fv = function () {
        if (this.comments)
            for (var a = this.network.vertexes.iterator; a.next();) this.addComments(a.value)
    };
    Ys.prototype.addComments = function (a) {
        var b = a.angle,
            c = a.parent,
            d = 0;
        var e = !1;
        null !== c && (d = c.angle, e = c.alignment, e = zt(e));
        b = 90 === b || 270 === b;
        d = 90 === d || 270 === d;
        c = 0 === a.childrenCount;
        var f = 0,
            g = 0,
            h = 0,
            k = a.commentSpacing;
        if (null !== a.node)
            for (var l = a.node.rv(); l.next();) {
                var m = l.value;
                "Comment" === m.category && m.canLayout() && (null === a.comments && (a.comments = []), a.comments.push(m), m.yb(), m = m.measuredBounds, b && !c || !e && !d && c || e && d && c ? (f = Math.max(f, m.width), g += m.height + Math.abs(h)) : (f += m.width + Math.abs(h), g = Math.max(g,
                    m.height)), h = k)
            }
        null !== a.comments && (b && !c || !e && !d && c || e && d && c ? (f += Math.abs(a.commentMargin), g = Math.max(0, g - a.height)) : (g += Math.abs(a.commentMargin), f = Math.max(0, f - a.width)), e = N.allocAt(0, 0, a.bounds.width + f, a.bounds.height + g), a.bounds = e, N.free(e))
    };

    function zt(a) {
        return a === At || a === qt || a === Bt || a === Ct
    }

    function Dt(a) {
        return a === At || a === qt
    }

    function Et(a) {
        var b = a.parent;
        if (null !== b) {
            var c = b.alignment;
            if (zt(c)) {
                if (Dt(c)) {
                    b = b.children;
                    for (c = 0; c < b.length && a !== b[c];) c++;
                    return 0 === c % 2
                }
                if (c === Bt) return !0
            }
        }
        return !1
    }
    Ys.prototype.layoutComments = function (a) {
        if (null !== a.comments) {
            var b = a.node.measuredBounds,
                c = a.parent,
                d = a.angle,
                e = 0;
            var f = !1;
            null !== c && (e = c.angle, f = c.alignment, f = zt(f));
            d = 90 === d || 270 === d;
            c = 90 === e || 270 === e;
            for (var g = 0 === a.childrenCount, h = Et(a), k = 0, l = a.comments, m = l.length, n = I.alloc(), p = 0; p < m; p++) {
                var r = l[p],
                    q = r.measuredBounds;
                if (d && !g || !f && !c && g || f && c && g) {
                    if (135 < e && !f || c && h)
                        if (0 <= a.commentMargin)
                            for (n.h(a.bounds.x - a.commentMargin - q.width, a.bounds.y + k), r.move(n), r = r.vd(); r.next();) {
                                var u = r.value;
                                u.fromSpot =
                                    ed;
                                u.toSpot = fd
                            } else
                                for (n.h(a.bounds.x + 2 * a.focus.x - a.commentMargin, a.bounds.y + k), r.move(n), r = r.vd(); r.next();) u = r.value, u.fromSpot = fd, u.toSpot = ed;
                        else if (0 <= a.commentMargin)
                        for (n.h(a.bounds.x + 2 * a.focus.x + a.commentMargin, a.bounds.y + k), r.move(n), r = r.vd(); r.next();) u = r.value, u.fromSpot = fd, u.toSpot = ed;
                    else
                        for (n.h(a.bounds.x + a.commentMargin - q.width, a.bounds.y + k), r.move(n), r = r.vd(); r.next();) u = r.value, u.fromSpot = ed, u.toSpot = fd;
                    k = 0 <= a.commentSpacing ? k + (q.height + a.commentSpacing) : k + (a.commentSpacing - q.height)
                } else {
                    if (135 <
                        e && !f || !c && h)
                        if (0 <= a.commentMargin)
                            for (n.h(a.bounds.x + k, a.bounds.y - a.commentMargin - q.height), r.move(n), r = r.vd(); r.next();) u = r.value, u.fromSpot = dd, u.toSpot = gd;
                        else
                            for (n.h(a.bounds.x + k, a.bounds.y + 2 * a.focus.y - a.commentMargin), r.move(n), r = r.vd(); r.next();) u = r.value, u.fromSpot = gd, u.toSpot = dd;
                    else if (0 <= a.commentMargin)
                        for (n.h(a.bounds.x + k, a.bounds.y + 2 * a.focus.y + a.commentMargin), r.move(n), r = r.vd(); r.next();) u = r.value, u.fromSpot = gd, u.toSpot = dd;
                    else
                        for (n.h(a.bounds.x + k, a.bounds.y + a.commentMargin - q.height),
                            r.move(n), r = r.vd(); r.next();) u = r.value, u.fromSpot = dd, u.toSpot = gd;
                    k = 0 <= a.commentSpacing ? k + (q.width + a.commentSpacing) : k + (a.commentSpacing - q.width)
                }
            }
            I.free(n);
            b = k - a.commentSpacing - (d ? b.height : b.width);
            if (this.$c === $s)
                for (a = a.destinationEdges; a.next();) e = a.value.link, null === e || e.isAvoiding || (e.fromEndSegmentLength = 0 < b ? b : NaN);
            else
                for (a = a.sourceEdges; a.next();) e = a.value.link, null === e || e.isAvoiding || (e.toEndSegmentLength = 0 < b ? b : NaN)
        }
    };
    Ys.prototype.layoutTree = function (a) {
        if (null !== a) {
            for (var b = a.children, c = b.length, d = 0; d < c; d++) this.layoutTree(b[d]);
            switch (a.compaction) {
                case Ft:
                    Gt(this, a);
                    break;
                case Ht:
                    if (a.alignment === qt) Gt(this, a);
                    else if (0 === a.childrenCount) d = a.parent, c = !1, b = 0, null !== d && (b = d.angle, c = d.alignment, c = zt(c)), d = Et(a), a.S.h(0, 0), a.ta.h(a.width, a.height), null === a.parent || null === a.comments || (180 !== b && 270 !== b || c) && !d ? a.da.h(0, 0) : 180 === b && !c || (90 === b || 270 === b) && d ? a.da.h(a.width - 2 * a.focus.x, 0) : a.da.h(0, a.height - 2 * a.focus.y),
                        a.vq = null, a.Iq = null;
                    else {
                        var e = It(a);
                        b = 90 === e || 270 === e;
                        var f = 0,
                            g = a.children,
                            h = g.length;
                        for (c = 0; c < h; c++) d = g[c], f = Math.max(f, b ? d.ta.width : d.ta.height);
                        var k = a.alignment,
                            l = k === Jt,
                            m = zt(k),
                            n = Math.max(0, a.breadthLimit);
                        c = Kt(a);
                        var p = a.nodeSpacing,
                            r = Qt(a),
                            q = a.rowSpacing,
                            u = 0;
                        if (k === Rt || l || a.Fm || a.Gm && 1 === a.maxGenerationCount) u = Math.max(0, a.rowIndent);
                        d = a.width;
                        var v = a.height,
                            w = 0,
                            y = 0,
                            z = 0,
                            A = null,
                            C = null,
                            G = 0,
                            L = 0,
                            K = 0,
                            V = 0,
                            Q = 0,
                            ca = 0,
                            pa = 0,
                            O = 0;
                        m && !Dt(k) && 135 < e && g.reverse();
                        if (Dt(k))
                            if (1 < h)
                                for (var xa = 0; xa < h; xa++) 0 ===
                                    xa % 2 && xa !== h - 1 && (O = Math.max(O, b ? g[xa].ta.width : g[xa].ta.height));
                            else 1 === h && (O = b ? g[0].ta.width : g[0].ta.height);
                        if (m) {
                            switch (k) {
                                case At:
                                    y = 135 > e ? St(a, g, O, w, y) : Tt(a, g, O, w, y);
                                    O = y.x;
                                    w = y.width;
                                    y = y.height;
                                    break;
                                case Bt:
                                    for (A = 0; A < h; A++) C = g[A], n = C.ta, z = 0 === ca ? 0 : q, b ? (C.S.h(f - n.width, V + z), w = Math.max(w, n.width), y = Math.max(y, V + z + n.height), V += z + n.height) : (C.S.h(K + z, f - n.height), w = Math.max(w, K + z + n.width), y = Math.max(y, n.height), K += z + n.width), ca++;
                                    break;
                                case Ct:
                                    for (A = 0; A < h; A++) C = g[A], f = C.ta, n = 0 === ca ? 0 : q, b ? (C.S.h(p /
                                        2 + a.focus.x, V + n), w = Math.max(w, f.width), y = Math.max(y, V + n + f.height), V += n + f.height) : (C.S.h(K + n, p / 2 + a.focus.y), w = Math.max(w, K + n + f.width), y = Math.max(y, f.height), K += n + f.width), ca++
                            }
                            A = Ut(this, 2);
                            C = Ut(this, 2);
                            b ? (A[0].h(0, 0), A[1].h(0, y), C[0].h(w, 0)) : (A[0].h(0, 0), A[1].h(w, 0), C[0].h(0, y));
                            C[1].h(w, y)
                        } else
                            for (xa = 0; xa < h; xa++) {
                                var Ma = g[xa],
                                    hb = Ma.ta;
                                if (b) {
                                    0 < n && 0 < ca && K + p + hb.width > n && (K < f && Vt(a, k, f - K, 0, pa, xa - 1), Q++, ca = 0, pa = xa, z = y, K = 0, V = 135 < e ? -y - q : y + q);
                                    Wt(this, Ma, 0, V);
                                    var Ea = 0;
                                    if (0 === ca) {
                                        if (A = Ma.vq, C = Ma.Iq, G = hb.width,
                                            L = hb.height, null === A || null === C || e !== It(Ma)) A = Ut(this, 2), C = Ut(this, 2), A[0].h(0, 0), A[1].h(0, L), C[0].h(G, 0), C[1].h(G, L)
                                    } else {
                                        var xb = Fa();
                                        L = Xt(this, a, Ma, A, C, G, L, xb);
                                        Ea = L.x;
                                        A = xb[0];
                                        C = xb[1];
                                        G = L.width;
                                        L = L.height;
                                        Ha(xb);
                                        K < hb.width && 0 > Ea && (Yt(a, -Ea, 0, pa, xa - 1), Zt(A, -Ea, 0), Zt(C, -Ea, 0), Ea = 0)
                                    }
                                    Ma.S.h(Ea, V);
                                    w = Math.max(w, G);
                                    y = Math.max(y, z + (0 === Q ? 0 : q) + hb.height);
                                    K = G
                                } else {
                                    0 < n && 0 < ca && V + p + hb.height > n && (V < f && Vt(a, k, 0, f - V, pa, xa - 1), Q++, ca = 0, pa = xa, z = w, V = 0, K = 135 < e ? -w - q : w + q);
                                    Wt(this, Ma, K, 0);
                                    Ea = 0;
                                    if (0 === ca) {
                                        if (A = Ma.vq, C = Ma.Iq,
                                            G = hb.width, L = hb.height, null === A || null === C || e !== It(Ma)) A = Ut(this, 2), C = Ut(this, 2), A[0].h(0, 0), A[1].h(G, 0), C[0].h(0, L), C[1].h(G, L)
                                    } else xb = Fa(), L = Xt(this, a, Ma, A, C, G, L, xb), Ea = L.x, A = xb[0], C = xb[1], G = L.width, L = L.height, Ha(xb), V < hb.height && 0 > Ea && (Yt(a, 0, -Ea, pa, xa - 1), Zt(A, 0, -Ea), Zt(C, 0, -Ea), Ea = 0);
                                    Ma.S.h(K, Ea);
                                    y = Math.max(y, L);
                                    w = Math.max(w, z + (0 === Q ? 0 : q) + hb.width);
                                    V = L
                                }
                                ca++
                            }
                        0 < Q && (b ? (y += Math.max(0, c), K < w && Vt(a, k, w - K, 0, pa, h - 1), 0 < u && (l || Yt(a, u, 0, 0, h - 1), w += u)) : (w += Math.max(0, c), V < y && Vt(a, k, 0, y - V, pa, h - 1), 0 < u && (l ||
                            Yt(a, 0, u, 0, h - 1), y += u)));
                        u = l = 0;
                        switch (k) {
                            case $t:
                                b ? l += w / 2 - a.focus.x - r / 2 : u += y / 2 - a.focus.y - r / 2;
                                break;
                            case au:
                                0 < Q ? b ? l += w / 2 - a.focus.x - r / 2 : u += y / 2 - a.focus.y - r / 2 : b ? (O = g[0].S.x + g[0].da.x, l += O + (g[h - 1].S.x + g[h - 1].da.x + 2 * g[h - 1].focus.x - O) / 2 - a.focus.x - r / 2) : (O = g[0].S.y + g[0].da.y, u += O + (g[h - 1].S.y + g[h - 1].da.y + 2 * g[h - 1].focus.y - O) / 2 - a.focus.y - r / 2);
                                break;
                            case Rt:
                                b ? (l -= r, w += r) : (u -= r, y += r);
                                break;
                            case Jt:
                                b ? (l += w - a.width + r, w += r) : (u += y - a.height + r, y += r);
                                break;
                            case At:
                                b ? 1 < h ? l += O + p / 2 - a.focus.x : l += g[0].focus.x - a.focus.x + g[0].da.x :
                                    1 < h ? u += O + p / 2 - a.focus.y : u += g[0].focus.y - a.focus.y + g[0].da.y;
                                break;
                            case Bt:
                                b ? l += w + p / 2 - a.focus.x : u += y + p / 2 - a.focus.y;
                                break;
                            case Ct:
                                break;
                            default:
                                B("Unhandled alignment value " + k.toString())
                        }
                        for (r = 0; r < h; r++) O = g[r], b ? O.S.h(O.S.x + O.da.x - l, O.S.y + (135 < e ? (m ? -y : -O.ta.height) + O.da.y - c : v + c + O.da.y)) : O.S.h(O.S.x + (135 < e ? (m ? -w : -O.ta.width) + O.da.x - c : d + c + O.da.x), O.S.y + O.da.y - u);
                        h = g = 0;
                        m ? b ? (w = bu(a, w, l), 0 > l && (l = 0), 135 < e && (u += y + c), y += v + c, k === Ct && (g += p / 2 + a.focus.x), h += v + c) : (135 < e && (l += w + c), w += d + c, y = cu(a, y, u), 0 > u && (u = 0),
                            k === Ct && (h += p / 2 + a.focus.y), g += d + c) : b ? (null === a.comments ? d > w && (w = du(k, d - w, 0), g = w.x, h = w.y, w = d, l = 0) : w = bu(a, w, l), 0 > l && (g -= l, l = 0), 135 < e && (u += y + c), y = Math.max(Math.max(y, v), y + v + c), h += v + c) : (135 < e && (l += w + c), w = Math.max(Math.max(w, d), w + d + c), null === a.comments ? v > y && (y = du(k, 0, v - y), g = y.x, h = y.y, y = v, u = 0) : y = cu(a, y, u), 0 > u && (h -= u, u = 0), g += d + c);
                        if (0 < Q) e = Ut(this, 4), Q = Ut(this, 4), b ? (e[2].h(0, v + c), e[3].h(e[2].x, y), Q[2].h(w, e[2].y), Q[3].h(Q[2].x, e[3].y)) : (e[2].h(d + c, 0), e[3].h(w, e[2].y), Q[2].h(e[2].x, y), Q[3].h(e[3].x, Q[2].y));
                        else {
                            e = Ut(this, A.length + 2);
                            Q = Ut(this, C.length + 2);
                            for (k = 0; k < A.length; k++) m = A[k], e[k + 2].h(m.x + g, m.y + h);
                            for (k = 0; k < C.length; k++) m = C[k], Q[k + 2].h(m.x + g, m.y + h)
                        }
                        b ? (e[0].h(l, 0), e[1].h(e[0].x, v), e[2].y < e[1].y && (e[2].x > e[0].x ? e[2].assign(e[1]) : e[1].assign(e[2])), e[3].y < e[2].y && (e[3].x > e[0].x ? e[3].assign(e[2]) : e[2].assign(e[3])), Q[0].h(l + d, 0), Q[1].h(Q[0].x, v), Q[2].y < Q[1].y && (Q[2].x < Q[0].x ? Q[2].assign(Q[1]) : Q[1].assign(Q[2])), Q[3].y < Q[2].y && (Q[3].x < Q[0].x ? Q[3].assign(Q[2]) : Q[2].assign(Q[3])), e[2].y -= c / 2, Q[2].y -=
                            c / 2) : (e[0].h(0, u), e[1].h(d, e[0].y), e[2].x < e[1].x && (e[2].y > e[0].y ? e[2].assign(e[1]) : e[1].assign(e[2])), e[3].x < e[2].x && (e[3].y > e[0].y ? e[3].assign(e[2]) : e[2].assign(e[3])), Q[0].h(0, u + v), Q[1].h(d, Q[0].y), Q[2].x < Q[1].x && (Q[2].y < Q[0].y ? Q[2].assign(Q[1]) : Q[1].assign(Q[2])), Q[3].x < Q[2].x && (Q[3].y < Q[0].y ? Q[3].assign(Q[2]) : Q[2].assign(Q[3])), e[2].x -= c / 2, Q[2].x -= c / 2);
                        eu(this, A);
                        eu(this, C);
                        a.vq = e;
                        a.Iq = Q;
                        a.da.h(l, u);
                        a.ta.h(w, y)
                    }
                    break;
                default:
                    B("Unhandled compaction value " + a.compaction.toString())
            }
        }
    };

    function Gt(a, b) {
        if (0 === b.childrenCount) {
            var c = !1,
                d = 0;
            null !== b.parent && (d = b.parent.angle, c = b.parent.alignment, c = zt(c));
            var e = Et(b);
            b.S.h(0, 0);
            b.ta.h(b.width, b.height);
            null === b.parent || null === b.comments || (180 !== d && 270 !== d || c) && !e ? b.da.h(0, 0) : 180 === d && !c || (90 === d || 270 === d) && e ? b.da.h(b.width - 2 * b.focus.x, 0) : b.da.h(0, b.height - 2 * b.focus.y)
        } else {
            d = It(b);
            c = 90 === d || 270 === d;
            var f = 0;
            e = b.children;
            for (var g = e.length, h = 0; h < g; h++) {
                var k = e[h];
                f = Math.max(f, c ? k.ta.width : k.ta.height)
            }
            var l = b.alignment,
                m = l === Rt,
                n = l ===
                Jt;
            h = zt(l);
            var p = Math.max(0, b.breadthLimit);
            k = Kt(b);
            var r = b.nodeSpacing,
                q = Qt(b),
                u = m || n ? 0 : q / 2,
                v = b.rowSpacing,
                w = 0;
            if (m || n || b.Fm || b.Gm && 1 === b.maxGenerationCount) w = Math.max(0, b.rowIndent);
            m = b.width;
            var y = b.height,
                z = 0,
                A = 0,
                C = 0,
                G = 0,
                L = 0,
                K = 0,
                V = 0,
                Q = 0,
                ca = 0;
            h && !Dt(l) && 135 < d && e.reverse();
            if (Dt(l))
                if (1 < g)
                    for (var pa = 0; pa < g; pa++) {
                        var O = e[pa],
                            xa = O.ta;
                        0 === pa % 2 && pa !== g - 1 && (ca = Math.max(ca, (c ? xa.width : xa.height) + fu(O) - r))
                    } else 1 === g && (ca = c ? e[0].ta.width : e[0].ta.height);
            if (h) switch (l) {
                case At:
                case qt:
                    A = 135 > d ? St(b, e, ca,
                        z, A) : Tt(b, e, ca, z, A);
                    ca = A.x;
                    z = A.width;
                    A = A.height;
                    break;
                case Bt:
                    for (a = 0; a < g; a++) p = e[a], u = p.ta, C = 0 === V ? 0 : v, c ? (p.S.h(f - u.width, L + C), z = Math.max(z, u.width), A = Math.max(A, L + C + u.height), L += C + u.height) : (p.S.h(G + C, f - u.height), z = Math.max(z, G + C + u.width), A = Math.max(A, u.height), G += C + u.width), V++;
                    break;
                case Ct:
                    for (f = 0; f < g; f++) a = e[f], p = a.ta, u = 0 === V ? 0 : v, c ? (a.S.h(r / 2 + b.focus.x, L + u), z = Math.max(z, p.width), A = Math.max(A, L + u + p.height), L += u + p.height) : (a.S.h(G + u, r / 2 + b.focus.y), z = Math.max(z, G + u + p.width), A = Math.max(A, p.height),
                        G += u + p.width), V++
            } else
                for (pa = 0; pa < g; pa++) {
                    O = e[pa];
                    xa = O.ta;
                    if (c) {
                        0 < p && 0 < V && G + r + xa.width > p && (G < f && Vt(b, l, f - G, 0, Q, pa - 1), K++, V = 0, Q = pa, C = A, G = 0, L = 135 < d ? -A - v : A + v);
                        var Ma = 0 === V ? u : r;
                        Wt(a, O, 0, L);
                        O.S.h(G + Ma, L);
                        z = Math.max(z, G + Ma + xa.width);
                        A = Math.max(A, C + (0 === K ? 0 : v) + xa.height);
                        G += Ma + xa.width
                    } else 0 < p && 0 < V && L + r + xa.height > p && (L < f && Vt(b, l, 0, f - L, Q, pa - 1), K++, V = 0, Q = pa, C = z, L = 0, G = 135 < d ? -z - v : z + v), Ma = 0 === V ? u : r, Wt(a, O, G, 0), O.S.h(G, L + Ma), A = Math.max(A, L + Ma + xa.height), z = Math.max(z, C + (0 === K ? 0 : v) + xa.width), L += Ma + xa.height;
                    V++
                }
            0 <
                K && (c ? (A += Math.max(0, k), G < z && Vt(b, l, z - G, 0, Q, g - 1), 0 < w && (n || Yt(b, w, 0, 0, g - 1), z += w)) : (z += Math.max(0, k), L < A && Vt(b, l, 0, A - L, Q, g - 1), 0 < w && (n || Yt(b, 0, w, 0, g - 1), A += w)));
            w = n = 0;
            switch (l) {
                case $t:
                    c ? n += z / 2 - b.focus.x - q / 2 : w += A / 2 - b.focus.y - q / 2;
                    break;
                case au:
                    0 < K ? c ? n += z / 2 - b.focus.x - q / 2 : w += A / 2 - b.focus.y - q / 2 : c ? (l = e[0].S.x + e[0].da.x, n += l + (e[g - 1].S.x + e[g - 1].da.x + 2 * e[g - 1].focus.x - l) / 2 - b.focus.x - q / 2) : (l = e[0].S.y + e[0].da.y, w += l + (e[g - 1].S.y + e[g - 1].da.y + 2 * e[g - 1].focus.y - l) / 2 - b.focus.y - q / 2);
                    break;
                case Rt:
                    c ? (n -= q, z += q) : (w -= q, A +=
                        q);
                    break;
                case Jt:
                    c ? (n += z - b.width + q, z += q) : (w += A - b.height + q, A += q);
                    break;
                case At:
                case qt:
                    c ? 1 < g ? n += ca + r / 2 - b.focus.x : n += e[0].focus.x - b.focus.x + e[0].da.x : 1 < g ? w += ca + r / 2 - b.focus.y : w += e[0].focus.y - b.focus.y + e[0].da.y;
                    break;
                case Bt:
                    c ? n += z + r / 2 - b.focus.x : w += A + r / 2 - b.focus.y;
                    break;
                case Ct:
                    break;
                default:
                    B("Unhandled alignment value " + l.toString())
            }
            for (q = 0; q < g; q++) l = e[q], c ? l.S.h(l.S.x + l.da.x - n, l.S.y + (135 < d ? (h ? -A : -l.ta.height) + l.da.y - k : y + k + l.da.y)) : l.S.h(l.S.x + (135 < d ? (h ? -z : -l.ta.width) + l.da.x - k : m + k + l.da.x), l.S.y +
                l.da.y - w);
            c ? (z = bu(b, z, n), 0 > n && (n = 0), 135 < d && (w += A + k), A = Math.max(Math.max(A, y), A + y + k)) : (135 < d && (n += z + k), z = Math.max(Math.max(z, m), z + m + k), A = cu(b, A, w), 0 > w && (w = 0));
            b.da.h(n, w);
            b.ta.h(z, A)
        }
    }

    function St(a, b, c, d, e) {
        var f = b.length;
        if (0 === f) return new N(c, 0, d, e);
        if (1 === f) return a = b[0], d = a.ta.width, e = a.ta.height, new N(c, 0, d, e);
        for (var g = a.nodeSpacing, h = a.rowSpacing, k = 90 === It(a), l = 0, m = 0, n = 0, p = 0; p < f; p++)
            if (!(0 !== p % 2 || 1 < f && p === f - 1)) {
                var r = b[p],
                    q = r.ta,
                    u = 0 === l ? 0 : h;
                if (k) {
                    var v = fu(r) - g;
                    r.S.h(c - (q.width + v), n + u);
                    d = Math.max(d, q.width + v);
                    e = Math.max(e, n + u + q.height);
                    n += u + q.height
                } else v = fu(r) - g, r.S.h(m + u, c - (q.height + v)), e = Math.max(e, q.height + v), d = Math.max(d, m + u + q.width), m += u + q.width;
                l++
            } l = 0;
        r = m;
        p = n;
        k ?
            (m = c + g, n = 0) : (m = 0, n = c + g);
        for (q = 0; q < f; q++)
            if (0 !== q % 2) {
                u = b[q];
                v = u.ta;
                var w = 0 === l ? 0 : h;
                if (k) {
                    var y = fu(u) - g;
                    u.S.h(m + y, n + w);
                    d = Math.max(d, m + v.width + y);
                    e = Math.max(e, n + w + v.height);
                    n += w + v.height
                } else y = fu(u) - g, u.S.h(m + w, n + y), d = Math.max(d, m + w + v.width), e = Math.max(e, n + v.height + y), m += w + v.width;
                l++
            } 1 < f && 1 === f % 2 && (b = b[f - 1], f = b.ta, h = null === b.parent ? 0 : b.parent.rowSpacing, k ? (b.S.h(c + g / 2 - b.focus.x - b.da.x, e + h), k = c + g / 2 - b.focus.x - b.da.x, d = Math.max(d, k + f.width), 0 > k && (d -= k), e = Math.max(e, Math.max(p, n) + h + f.height), 0 > b.S.x &&
            (c = gu(a, b.S.x, !1, c, g))) : (b.S.h(d + h, c + g / 2 - b.focus.y - b.da.y), d = Math.max(d, Math.max(r, m) + h + f.width), n = c + g / 2 - b.focus.y - b.da.y, e = Math.max(e, n + f.height), 0 > n && (e -= n), 0 > b.S.y && (c = gu(a, b.S.y, !0, c, g))));
        return new N(c, 0, d, e)
    }

    function Tt(a, b, c, d, e) {
        var f = b.length;
        if (0 === f) return new N(c, 0, d, e);
        if (1 === f) return b = b[0], d = b.ta.width, e = b.ta.height, new N(c, 0, d, e);
        for (var g = a.nodeSpacing, h = a.rowSpacing, k = 270 === It(a), l = 0, m = 0, n = 0, p = 0; p < f; p++)
            if (!(0 !== p % 2 || 1 < f && p === f - 1)) {
                var r = b[p],
                    q = r.ta,
                    u = 0 === l ? 0 : h;
                if (k) {
                    var v = fu(r) - g;
                    n -= u + q.height;
                    r.S.h(c - (q.width + v), n);
                    d = Math.max(d, q.width + v);
                    e = Math.max(e, Math.abs(n))
                } else v = fu(r) - g, m -= u + q.width, r.S.h(m, c - (q.height + v)), e = Math.max(e, q.height + v), d = Math.max(d, Math.abs(m));
                l++
            } l = 0;
        r = m;
        p = n;
        k ? (m =
            c + g, n = 0) : (m = 0, n = c + g);
        for (q = 0; q < f; q++)
            if (0 !== q % 2) {
                u = b[q];
                v = u.ta;
                var w = 0 === l ? 0 : h;
                if (k) {
                    var y = fu(u) - g;
                    n -= w + v.height;
                    u.S.h(m + y, n);
                    d = Math.max(d, m + v.width + y);
                    e = Math.max(e, Math.abs(n))
                } else y = fu(u) - g, m -= w + v.width, u.S.h(m, n + y), e = Math.max(e, n + v.height + y), d = Math.max(d, Math.abs(m));
                l++
            } 1 < f && 1 === f % 2 && (h = b[f - 1], l = h.ta, q = null === h.parent ? 0 : h.parent.rowSpacing, k ? (h.S.h(c + g / 2 - h.focus.x - h.da.x, -e - l.height - q), m = c + g / 2 - h.focus.x - h.da.x, d = Math.max(d, m + l.width), 0 > m && (d -= m), e = Math.max(e, Math.abs(Math.min(p, n)) + q + l.height),
            0 > h.S.x && (c = gu(a, h.S.x, !1, c, g))) : (h.S.h(-d - l.width - q, c + g / 2 - h.focus.y - h.da.y), d = Math.max(d, Math.abs(Math.min(r, m)) + q + l.width), n = c + g / 2 - h.focus.y - h.da.y, e = Math.max(e, n + l.height), 0 > n && (e -= n), 0 > h.S.y && (c = gu(a, h.S.y, !0, c, g))));
        for (a = 0; a < f; a++) g = b[a], k ? g.S.h(g.S.x, g.S.y + e) : g.S.h(g.S.x + d, g.S.y);
        return new N(c, 0, d, e)
    }

    function fu(a) {
        return null === a.parent ? 0 : a.parent.nodeSpacing
    }

    function gu(a, b, c, d, e) {
        a = a.children;
        for (var f = a.length, g = 0; g < f; g++) c ? a[g].S.h(a[g].S.x, a[g].S.y - b) : a[g].S.h(a[g].S.x - b, a[g].S.y);
        b = a[f - 1];
        return Math.max(d, c ? b.da.y + b.focus.y - e / 2 : b.da.x + b.focus.x - e / 2)
    }

    function bu(a, b, c) {
        switch (a.alignment) {
            case au:
            case $t:
                return c + a.width > b && (b = c + a.width), 0 > c && (b -= c), b;
            case Rt:
                return a.width > b ? a.width : b;
            case Jt:
                return 2 * a.focus.x > b ? a.width : b + a.width - 2 * a.focus.x;
            case At:
            case qt:
                return Math.max(a.width, Math.max(b, c + a.width) - Math.min(0, c));
            case Bt:
                return a.width - a.focus.x + a.nodeSpacing / 2 + b;
            case Ct:
                return Math.max(a.width, a.focus.x + a.nodeSpacing / 2 + b);
            default:
                return b
        }
    }

    function cu(a, b, c) {
        switch (a.alignment) {
            case au:
            case $t:
                return c + a.height > b && (b = c + a.height), 0 > c && (b -= c), b;
            case Rt:
                return a.height > b ? a.height : b;
            case Jt:
                return 2 * a.focus.y > b ? a.height : b + a.height - 2 * a.focus.y;
            case At:
            case qt:
                return Math.max(a.height, Math.max(b, c + a.height) - Math.min(0, c));
            case Bt:
                return a.height - a.focus.y + a.nodeSpacing / 2 + b;
            case Ct:
                return Math.max(a.height, a.focus.y + a.nodeSpacing / 2 + b);
            default:
                return b
        }
    }

    function du(a, b, c) {
        switch (a) {
            case $t:
                b /= 2;
                c /= 2;
                break;
            case au:
                b /= 2;
                c /= 2;
                break;
            case Rt:
                c = b = 0;
                break;
            case Jt:
                break;
            default:
                B("Unhandled alignment value " + a.toString())
        }
        return new I(b, c)
    }

    function Vt(a, b, c, d, e, f) {
        b = du(b, c, d);
        Yt(a, b.x, b.y, e, f)
    }

    function Yt(a, b, c, d, e) {
        if (0 !== b || 0 !== c)
            for (a = a.children; d <= e; d++) {
                var f = a[d].S;
                f.x += b;
                f.y += c
            }
    }

    function Wt(a, b, c, d) {
        var e = b.parent;
        switch (a.$c) {
            case $s:
                for (a = b.sourceEdges; a.next();) b = a.value, b.fromVertex === e && b.relativePoint.h(c, d);
                break;
            case gt:
                for (a = b.destinationEdges; a.next();) b = a.value, b.toVertex === e && b.relativePoint.h(c, d);
                break;
            default:
                B("Unhandled path value " + a.$c.toString())
        }
    }

    function Zt(a, b, c) {
        for (var d = 0; d < a.length; d++) {
            var e = a[d];
            e.x += b;
            e.y += c
        }
    }

    function Xt(a, b, c, d, e, f, g, h) {
        var k = It(b),
            l = 90 === k || 270 === k,
            m = b.nodeSpacing;
        b = d;
        var n = e;
        d = f;
        var p = g,
            r = c.vq,
            q = c.Iq;
        g = c.ta;
        var u = l ? Math.max(p, g.height) : Math.max(d, g.width);
        if (null === r || k !== It(c)) r = Ut(a, 2), q = Ut(a, 2), l ? (r[0].h(0, 0), r[1].h(0, g.height), q[0].h(g.width, 0), q[1].h(q[0].x, r[1].y)) : (r[0].h(0, 0), r[1].h(g.width, 0), q[0].h(0, g.height), q[1].h(r[1].x, q[0].y));
        if (l) {
            p = 9999999;
            if (!(null === n || 2 > n.length || null === r || 2 > r.length))
                for (e = c = 0; c < n.length && e < r.length;) {
                    f = n[c];
                    var v = r[e];
                    k = v.x;
                    l = v.y;
                    k += d;
                    var w =
                        f;
                    c + 1 < n.length && (w = n[c + 1]);
                    var y = v;
                    v = y.x;
                    y = y.y;
                    e + 1 < r.length && (y = r[e + 1], v = y.x, y = y.y, v += d);
                    var z = p;
                    f.y === l ? z = k - f.x : f.y > l && f.y < y ? z = k + (f.y - l) / (y - l) * (v - k) - f.x : l > f.y && l < w.y && (z = k - (f.x + (l - f.y) / (w.y - f.y) * (w.x - f.x)));
                    z < p && (p = z);
                    w.y <= f.y ? c++ : y <= l ? e++ : (w.y <= y && c++, y <= w.y && e++)
                }
            p = d - p;
            p += m;
            c = r;
            e = p;
            if (null === b || 2 > b.length || null === c || 2 > c.length) d = null;
            else {
                m = Ut(a, b.length + c.length);
                for (d = f = k = 0; f < c.length && c[f].y < b[0].y;) l = c[f++], m[d++].h(l.x + e, l.y);
                for (; k < b.length;) l = b[k++], m[d++].h(l.x, l.y);
                for (k = b[b.length - 1].y; f <
                    c.length && c[f].y <= k;) f++;
                for (; f < c.length && c[f].y > k;) l = c[f++], m[d++].h(l.x + e, l.y);
                c = Ut(a, d);
                for (k = 0; k < d; k++) c[k].assign(m[k]);
                eu(a, m);
                d = c
            }
            f = q;
            k = p;
            if (null === n || 2 > n.length || null === f || 2 > f.length) e = null;
            else {
                m = Ut(a, n.length + f.length);
                for (e = l = c = 0; c < n.length && n[c].y < f[0].y;) w = n[c++], m[e++].h(w.x, w.y);
                for (; l < f.length;) w = f[l++], m[e++].h(w.x + k, w.y);
                for (f = f[f.length - 1].y; c < n.length && n[c].y <= f;) c++;
                for (; c < n.length && n[c].y > f;) k = n[c++], m[e++].h(k.x, k.y);
                f = Ut(a, e);
                for (c = 0; c < e; c++) f[c].assign(m[c]);
                eu(a, m);
                e = f
            }
            f =
                Math.max(0, p) + g.width;
            g = u;
            eu(a, b);
            eu(a, r);
            eu(a, n);
            eu(a, q);
            h[0] = d;
            h[1] = e;
            return new N(p, 0, f, g)
        }
        d = 9999999;
        if (!(null === n || 2 > n.length || null === r || 2 > r.length))
            for (e = c = 0; c < n.length && e < r.length;) f = n[c], v = r[e], k = v.x, l = v.y, l += p, w = f, c + 1 < n.length && (w = n[c + 1]), y = v, v = y.x, y = y.y, e + 1 < r.length && (y = r[e + 1], v = y.x, y = y.y, y += p), z = d, f.x === k ? z = l - f.y : f.x > k && f.x < v ? z = l + (f.x - k) / (v - k) * (y - l) - f.y : k > f.x && k < w.x && (z = l - (f.y + (k - f.x) / (w.x - f.x) * (w.y - f.y))), z < d && (d = z), w.x <= f.x ? c++ : v <= k ? e++ : (w.x <= v && c++, v <= w.x && e++);
        p -= d;
        p += m;
        c = r;
        e = p;
        if (null ===
            b || 2 > b.length || null === c || 2 > c.length) d = null;
        else {
            m = Ut(a, b.length + c.length);
            for (d = f = k = 0; f < c.length && c[f].x < b[0].x;) l = c[f++], m[d++].h(l.x, l.y + e);
            for (; k < b.length;) l = b[k++], m[d++].h(l.x, l.y);
            for (k = b[b.length - 1].x; f < c.length && c[f].x <= k;) f++;
            for (; f < c.length && c[f].x > k;) l = c[f++], m[d++].h(l.x, l.y + e);
            c = Ut(a, d);
            for (k = 0; k < d; k++) c[k].assign(m[k]);
            eu(a, m);
            d = c
        }
        f = q;
        k = p;
        if (null === n || 2 > n.length || null === f || 2 > f.length) e = null;
        else {
            m = Ut(a, n.length + f.length);
            for (e = l = c = 0; c < n.length && n[c].x < f[0].x;) w = n[c++], m[e++].h(w.x, w.y);
            for (; l < f.length;) w = f[l++], m[e++].h(w.x, w.y + k);
            for (f = f[f.length - 1].x; c < n.length && n[c].x <= f;) c++;
            for (; c < n.length && n[c].x > f;) k = n[c++], m[e++].h(k.x, k.y);
            f = Ut(a, e);
            for (c = 0; c < e; c++) f[c].assign(m[c]);
            eu(a, m);
            e = f
        }
        f = u;
        g = Math.max(0, p) + g.height;
        eu(a, b);
        eu(a, r);
        eu(a, n);
        eu(a, q);
        h[0] = d;
        h[1] = e;
        return new N(p, 0, f, g)
    }

    function Ut(a, b) {
        a = a.Uu[b];
        if (void 0 !== a && (a = a.pop(), void 0 !== a)) return a;
        a = [];
        for (var c = 0; c < b; c++) a[c] = new I;
        return a
    }

    function eu(a, b) {
        var c = b.length,
            d = a.Uu[c];
        void 0 === d && (d = [], a.Uu[c] = d);
        d.push(b)
    }
    Ys.prototype.arrangeTrees = function () {
        if (this.Ab === ft)
            for (var a = this.Hb.iterator; a.next();) {
                var b = a.value;
                if (b instanceof et) {
                    var c = b.node;
                    if (null !== c) {
                        var d = c.position;
                        c = d.x;
                        d = d.y;
                        isFinite(c) || (c = 0);
                        isFinite(d) || (d = 0);
                        hu(this, b, c, d)
                    }
                }
            } else {
                a = [];
                for (b = this.Hb.iterator; b.next();) c = b.value, c instanceof et && a.push(c);
                switch (this.sorting) {
                    case vt:
                        break;
                    case wt:
                        a.reverse();
                        break;
                    case xt:
                        a.sort(this.comparer);
                        break;
                    case yt:
                        a.sort(this.comparer);
                        a.reverse();
                        break;
                    default:
                        B("Unhandled sorting value " + this.sorting.toString())
                }
                c =
                    this.arrangementOrigin;
                b = c.x;
                c = c.y;
                for (d = 0; d < a.length; d++) {
                    var e = a[d];
                    hu(this, e, b + e.da.x, c + e.da.y);
                    switch (this.Ab) {
                        case ct:
                            c += e.ta.height + this.zd.height;
                            break;
                        case iu:
                            b += e.ta.width + this.zd.width;
                            break;
                        default:
                            B("Unhandled arrangement value " + this.Ab.toString())
                    }
                }
            }
    };

    function hu(a, b, c, d) {
        if (null !== b) {
            b.x = c;
            b.y = d;
            b = b.children;
            for (var e = b.length, f = 0; f < e; f++) {
                var g = b[f];
                hu(a, g, c + g.S.x, d + g.S.y)
            }
        }
    }
    Ys.prototype.commitLayout = function () {
        this.fw();
        this.commitNodes();
        this.hv();
        this.isRouting && this.commitLinks()
    };
    Ys.prototype.commitNodes = function () {
        for (var a = this.network.vertexes.iterator; a.next();) a.value.commit();
        for (a.reset(); a.next();) this.layoutComments(a.value)
    };
    Ys.prototype.hv = function () {
        if (this.layerStyle === nt) {
            for (var a = this.Lw, b = [], c = null, d = this.network.vertexes.iterator; d.next();) {
                var e = d.value;
                null === c ? c = e.bounds.copy() : c.Hc(e.bounds);
                var f = b[e.level];
                void 0 === f ? f = Kt(e) : f = Math.max(f, Kt(e));
                b[e.level] = f
            }
            for (d = 0; d < b.length; d++) void 0 === b[d] && (b[d] = 0);
            90 === this.angle || 270 === this.angle ? (c.Vc(this.nodeSpacing / 2, this.layerSpacing), d = new I(-this.nodeSpacing / 2, -this.layerSpacing / 2)) : (c.Vc(this.layerSpacing, this.nodeSpacing / 2), d = new I(-this.layerSpacing / 2, -this.nodeSpacing /
                2));
            e = [];
            c = 90 === this.angle || 270 === this.angle ? c.width : c.height;
            f = 0;
            if (180 === this.angle || 270 === this.angle)
                for (var g = 0; g < a.length; g++) f += a[g] + b[g];
            for (g = 0; g < a.length; g++) {
                var h = a[g] + b[g];
                270 === this.angle ? (f -= h, e.push(new N(0, f, c, h))) : 90 === this.angle ? (e.push(new N(0, f, c, h)), f += h) : 180 === this.angle ? (f -= h, e.push(new N(f, 0, h, c))) : (e.push(new N(f, 0, h, c)), f += h)
            }
            this.commitLayers(e, d)
        }
    };
    Ys.prototype.commitLayers = function () {};
    Ys.prototype.commitLinks = function () {
        for (var a = this.network.edges.iterator; a.next();) a.value.commit()
    };
    Ys.prototype.fw = function () {
        for (var a = this.Hb.iterator; a.next();) {
            var b = a.value;
            b instanceof et && ju(this, b)
        }
    };

    function ju(a, b) {
        if (null !== b) {
            a.setPortSpots(b);
            b = b.children;
            for (var c = b.length, d = 0; d < c; d++) ju(a, b[d])
        }
    }
    Ys.prototype.setPortSpots = function (a) {
        var b = a.alignment;
        if (zt(b)) {
            var c = this.$c === $s,
                d = It(a);
            switch (d) {
                case 0:
                    var e = fd;
                    break;
                case 90:
                    e = gd;
                    break;
                case 180:
                    e = ed;
                    break;
                default:
                    e = dd
            }
            var f = a.children,
                g = f.length;
            switch (b) {
                case At:
                case qt:
                    for (b = 0; b < g; b++) {
                        var h = f[b];
                        h = (c ? h.sourceEdges : h.destinationEdges).first();
                        if (null !== h && (h = h.link, null !== h)) {
                            var k = 90 === d || 270 === d ? ed : dd;
                            if (1 === g || b === g - 1 && 1 === g % 2) switch (d) {
                                case 0:
                                    k = ed;
                                    break;
                                case 90:
                                    k = dd;
                                    break;
                                case 180:
                                    k = fd;
                                    break;
                                default:
                                    k = gd
                            } else 0 === b % 2 && (k = 90 === d || 270 ===
                                d ? fd : gd);
                            c ? (a.setsPortSpot && (h.fromSpot = e), a.setsChildPortSpot && (h.toSpot = k)) : (a.setsPortSpot && (h.fromSpot = k), a.setsChildPortSpot && (h.toSpot = e))
                        }
                    }
                    break;
                case Bt:
                    d = 90 === d || 270 === d ? fd : gd;
                    for (f = c ? a.destinationEdges : a.sourceEdges; f.next();) g = f.value.link, null !== g && (c ? (a.setsPortSpot && (g.fromSpot = e), a.setsChildPortSpot && (g.toSpot = d)) : (a.setsPortSpot && (g.fromSpot = d), a.setsChildPortSpot && (g.toSpot = e)));
                    break;
                case Ct:
                    for (d = 90 === d || 270 === d ? ed : dd, f = c ? a.destinationEdges : a.sourceEdges; f.next();) g = f.value.link,
                        null !== g && (c ? (a.setsPortSpot && (g.fromSpot = e), a.setsChildPortSpot && (g.toSpot = d)) : (a.setsPortSpot && (g.fromSpot = d), a.setsChildPortSpot && (g.toSpot = e)))
            }
        } else if (c = It(a), this.$c === $s)
            for (e = a.destinationEdges; e.next();) {
                if (d = e.value.link, null !== d) {
                    if (a.setsPortSpot)
                        if (a.portSpot.Mb()) switch (c) {
                            case 0:
                                d.fromSpot = fd;
                                break;
                            case 90:
                                d.fromSpot = gd;
                                break;
                            case 180:
                                d.fromSpot = ed;
                                break;
                            default:
                                d.fromSpot = dd
                        } else d.fromSpot = a.portSpot;
                    if (a.setsChildPortSpot)
                        if (a.childPortSpot.Mb()) switch (c) {
                            case 0:
                                d.toSpot = ed;
                                break;
                            case 90:
                                d.toSpot = dd;
                                break;
                            case 180:
                                d.toSpot = fd;
                                break;
                            default:
                                d.toSpot = gd
                        } else d.toSpot = a.childPortSpot
                }
            } else
                for (e = a.sourceEdges; e.next();)
                    if (d = e.value.link, null !== d) {
                        if (a.setsPortSpot)
                            if (a.portSpot.Mb()) switch (c) {
                                case 0:
                                    d.toSpot = fd;
                                    break;
                                case 90:
                                    d.toSpot = gd;
                                    break;
                                case 180:
                                    d.toSpot = ed;
                                    break;
                                default:
                                    d.toSpot = dd
                            } else d.toSpot = a.portSpot;
                        if (a.setsChildPortSpot)
                            if (a.childPortSpot.Mb()) switch (c) {
                                case 0:
                                    d.fromSpot = ed;
                                    break;
                                case 90:
                                    d.fromSpot = dd;
                                    break;
                                case 180:
                                    d.fromSpot = fd;
                                    break;
                                default:
                                    d.fromSpot = gd
                            } else d.fromSpot =
                                a.childPortSpot
                    }
    };

    function It(a) {
        a = a.angle;
        return 45 >= a ? 0 : 135 >= a ? 90 : 225 >= a ? 180 : 315 >= a ? 270 : 0
    }

    function Kt(a) {
        var b = It(a);
        b = 90 === b || 270 === b;
        var c = a.layerSpacing;
        if (0 < a.layerSpacingParentOverlap) {
            var d = Math.min(1, a.layerSpacingParentOverlap);
            c -= b ? a.height * d : a.width * d
        }
        c < (b ? -a.height : -a.width) && (c = b ? -a.height : -a.width);
        return c
    }

    function Qt(a) {
        var b = It(a),
            c = a.nodeIndent;
        if (0 < a.nodeIndentPastParent) {
            var d = Math.min(1, a.nodeIndentPastParent);
            c += 90 === b || 270 === b ? a.width * d : a.height * d
        }
        return c = Math.max(0, c)
    }
    ma.Object.defineProperties(Ys.prototype, {
        roots: {
            get: function () {
                return this.Hb
            },
            set: function (a) {
                this.Hb !== a && (this.Hb = a, this.C())
            }
        },
        path: {
            get: function () {
                return this.ap
            },
            set: function (a) {
                this.ap !== a && (this.ap = a, this.C())
            }
        },
        treeStyle: {
            get: function () {
                return this.Xp
            },
            set: function (a) {
                this.Ab === a || a !== at && a !== tt && a !== ut && a !== st || (this.Xp = a, this.C())
            }
        },
        layerStyle: {
            get: function () {
                return this.Yr
            },
            set: function (a) {
                this.Ab === a || a !== bt && a !== ot && a !== nt || (this.Yr = a, this.C())
            }
        },
        comments: {
            get: function () {
                return this.Zc
            },
            set: function (a) {
                this.Zc !== a && (this.Zc = a, this.C())
            }
        },
        arrangement: {
            get: function () {
                return this.Ab
            },
            set: function (a) {
                this.Ab === a || a !== ct && a !== iu && a !== ft || (this.Ab = a, this.C())
            }
        },
        arrangementSpacing: {
            get: function () {
                return this.zd
            },
            set: function (a) {
                this.zd.w(a) || (this.zd.assign(a), this.C())
            }
        },
        rootDefaults: {
            get: function () {
                return this.T
            },
            set: function (a) {
                this.T !== a && (this.T = a, this.C())
            }
        },
        alternateDefaults: {
            get: function () {
                return this.U
            },
            set: function (a) {
                this.U !== a && (this.U = a, this.C())
            }
        },
        sorting: {
            get: function () {
                return this.T.sorting
            },
            set: function (a) {
                this.T.sorting === a || a !== vt && a !== wt && a !== xt && !yt || (this.T.sorting = a, this.C())
            }
        },
        comparer: {
            get: function () {
                return this.T.comparer
            },
            set: function (a) {
                this.T.comparer !==
                    a && (this.T.comparer = a, this.C())
            }
        },
        angle: {
            get: function () {
                return this.T.angle
            },
            set: function (a) {
                this.T.angle !== a && (0 === a || 90 === a || 180 === a || 270 === a ? (this.T.angle = a, this.C()) : B("TreeLayout.angle must be 0, 90, 180, or 270"))
            }
        },
        alignment: {
            get: function () {
                return this.T.alignment
            },
            set: function (a) {
                this.T.alignment !== a && (this.T.alignment = a, this.C())
            }
        },
        nodeIndent: {
            get: function () {
                return this.T.nodeIndent
            },
            set: function (a) {
                this.T.nodeIndent !==
                    a && 0 <= a && (this.T.nodeIndent = a, this.C())
            }
        },
        nodeIndentPastParent: {
            get: function () {
                return this.T.nodeIndentPastParent
            },
            set: function (a) {
                this.T.nodeIndentPastParent !== a && 0 <= a && 1 >= a && (this.T.nodeIndentPastParent = a, this.C())
            }
        },
        nodeSpacing: {
            get: function () {
                return this.T.nodeSpacing
            },
            set: function (a) {
                this.T.nodeSpacing !== a && (this.T.nodeSpacing = a, this.C())
            }
        },
        layerSpacing: {
            get: function () {
                return this.T.layerSpacing
            },
            set: function (a) {
                this.T.layerSpacing !==
                    a && (this.T.layerSpacing = a, this.C())
            }
        },
        layerSpacingParentOverlap: {
            get: function () {
                return this.T.layerSpacingParentOverlap
            },
            set: function (a) {
                this.T.layerSpacingParentOverlap !== a && 0 <= a && 1 >= a && (this.T.layerSpacingParentOverlap = a, this.C())
            }
        },
        compaction: {
            get: function () {
                return this.T.compaction
            },
            set: function (a) {
                this.T.compaction === a || a !== Ft && a !== Ht || (this.T.compaction = a, this.C())
            }
        },
        breadthLimit: {
            get: function () {
                return this.T.breadthLimit
            },
            set: function (a) {
                this.T.breadthLimit !== a && 0 <= a && (this.T.breadthLimit = a, this.C())
            }
        },
        rowSpacing: {
            get: function () {
                return this.T.rowSpacing
            },
            set: function (a) {
                this.T.rowSpacing !== a && (this.T.rowSpacing = a, this.C())
            }
        },
        rowIndent: {
            get: function () {
                return this.T.rowIndent
            },
            set: function (a) {
                this.T.rowIndent !== a && 0 <= a && (this.T.rowIndent = a, this.C())
            }
        },
        commentSpacing: {
            get: function () {
                return this.T.commentSpacing
            },
            set: function (a) {
                this.T.commentSpacing !==
                    a && (this.T.commentSpacing = a, this.C())
            }
        },
        commentMargin: {
            get: function () {
                return this.T.commentMargin
            },
            set: function (a) {
                this.T.commentMargin !== a && (this.T.commentMargin = a, this.C())
            }
        },
        setsPortSpot: {
            get: function () {
                return this.T.setsPortSpot
            },
            set: function (a) {
                this.T.setsPortSpot !== a && (this.T.setsPortSpot = a, this.C())
            }
        },
        portSpot: {
            get: function () {
                return this.T.portSpot
            },
            set: function (a) {
                this.T.portSpot.w(a) || (this.T.portSpot =
                    a, this.C())
            }
        },
        setsChildPortSpot: {
            get: function () {
                return this.T.setsChildPortSpot
            },
            set: function (a) {
                this.T.setsChildPortSpot !== a && (this.T.setsChildPortSpot = a, this.C())
            }
        },
        childPortSpot: {
            get: function () {
                return this.T.childPortSpot
            },
            set: function (a) {
                this.T.childPortSpot.w(a) || (this.T.childPortSpot = a, this.C())
            }
        },
        alternateSorting: {
            get: function () {
                return this.U.sorting
            },
            set: function (a) {
                this.U.sorting === a || a !== vt && a !== wt &&
                    a !== xt && !yt || (this.U.sorting = a, this.C())
            }
        },
        alternateComparer: {
            get: function () {
                return this.U.comparer
            },
            set: function (a) {
                this.U.comparer !== a && (this.U.comparer = a, this.C())
            }
        },
        alternateAngle: {
            get: function () {
                return this.U.angle
            },
            set: function (a) {
                this.U.angle === a || 0 !== a && 90 !== a && 180 !== a && 270 !== a || (this.U.angle = a, this.C())
            }
        },
        alternateAlignment: {
            get: function () {
                return this.U.alignment
            },
            set: function (a) {
                this.U.alignment !==
                    a && (this.U.alignment = a, this.C())
            }
        },
        alternateNodeIndent: {
            get: function () {
                return this.U.nodeIndent
            },
            set: function (a) {
                this.U.nodeIndent !== a && 0 <= a && (this.U.nodeIndent = a, this.C())
            }
        },
        alternateNodeIndentPastParent: {
            get: function () {
                return this.U.nodeIndentPastParent
            },
            set: function (a) {
                this.U.nodeIndentPastParent !== a && 0 <= a && 1 >= a && (this.U.nodeIndentPastParent = a, this.C())
            }
        },
        alternateNodeSpacing: {
            get: function () {
                return this.U.nodeSpacing
            },
            set: function (a) {
                this.U.nodeSpacing !== a && (this.U.nodeSpacing = a, this.C())
            }
        },
        alternateLayerSpacing: {
            get: function () {
                return this.U.layerSpacing
            },
            set: function (a) {
                this.U.layerSpacing !== a && (this.U.layerSpacing = a, this.C())
            }
        },
        alternateLayerSpacingParentOverlap: {
            get: function () {
                return this.U.layerSpacingParentOverlap
            },
            set: function (a) {
                this.U.layerSpacingParentOverlap !== a && 0 <= a && 1 >= a && (this.U.layerSpacingParentOverlap = a, this.C())
            }
        },
        alternateCompaction: {
            get: function () {
                return this.U.compaction
            },
            set: function (a) {
                this.U.compaction === a || a !== Ft && a !== Ht || (this.U.compaction = a, this.C())
            }
        },
        alternateBreadthLimit: {
            get: function () {
                return this.U.breadthLimit
            },
            set: function (a) {
                this.U.breadthLimit !== a && 0 <= a && (this.U.breadthLimit = a, this.C())
            }
        },
        alternateRowSpacing: {
            get: function () {
                return this.U.rowSpacing
            },
            set: function (a) {
                this.U.rowSpacing !== a && (this.U.rowSpacing = a, this.C())
            }
        },
        alternateRowIndent: {
            get: function () {
                return this.U.rowIndent
            },
            set: function (a) {
                this.U.rowIndent !== a && 0 <= a && (this.U.rowIndent = a, this.C())
            }
        },
        alternateCommentSpacing: {
            get: function () {
                return this.U.commentSpacing
            },
            set: function (a) {
                this.U.commentSpacing !== a && (this.U.commentSpacing = a, this.C())
            }
        },
        alternateCommentMargin: {
            get: function () {
                return this.U.commentMargin
            },
            set: function (a) {
                this.U.commentMargin !== a && (this.U.commentMargin = a, this.C())
            }
        },
        alternateSetsPortSpot: {
            get: function () {
                return this.U.setsPortSpot
            },
            set: function (a) {
                this.U.setsPortSpot !== a && (this.U.setsPortSpot = a, this.C())
            }
        },
        alternatePortSpot: {
            get: function () {
                return this.U.portSpot
            },
            set: function (a) {
                this.U.portSpot.w(a) || (this.U.portSpot = a, this.C())
            }
        },
        alternateSetsChildPortSpot: {
            get: function () {
                return this.U.setsChildPortSpot
            },
            set: function (a) {
                this.U.setsChildPortSpot !== a && (this.U.setsChildPortSpot = a, this.C())
            }
        },
        alternateChildPortSpot: {
            get: function () {
                return this.U.childPortSpot
            },
            set: function (a) {
                this.U.childPortSpot.w(a) || (this.U.childPortSpot = a, this.C())
            }
        }
    });
    var Zs = new D(Ys, "PathDefault", -1),
        $s = new D(Ys, "PathDestination", 0),
        gt = new D(Ys, "PathSource", 1),
        vt = new D(Ys, "SortingForwards", 10),
        wt = new D(Ys, "SortingReverse", 11),
        xt = new D(Ys, "SortingAscending", 12),
        yt = new D(Ys, "SortingDescending", 13),
        $t = new D(Ys, "AlignmentCenterSubtrees", 20),
        au = new D(Ys, "AlignmentCenterChildren", 21),
        Rt = new D(Ys, "AlignmentStart", 22),
        Jt = new D(Ys, "AlignmentEnd", 23),
        At = new D(Ys, "AlignmentBus", 24),
        qt = new D(Ys, "AlignmentBusBranching", 25),
        Bt = new D(Ys, "AlignmentTopLeftBus", 26),
        Ct = new D(Ys,
            "AlignmentBottomRightBus", 27),
        Ft = new D(Ys, "CompactionNone", 30),
        Ht = new D(Ys, "CompactionBlock", 31),
        at = new D(Ys, "StyleLayered", 40),
        ut = new D(Ys, "StyleLastParents", 41),
        tt = new D(Ys, "StyleAlternating", 42),
        st = new D(Ys, "StyleRootOnly", 43),
        ct = new D(Ys, "ArrangementVertical", 50),
        iu = new D(Ys, "ArrangementHorizontal", 51),
        ft = new D(Ys, "ArrangementFixedRoots", 52),
        bt = new D(Ys, "LayerIndividual", 60),
        ot = new D(Ys, "LayerSiblings", 61),
        nt = new D(Ys, "LayerUniform", 62);
    Ys.className = "TreeLayout";
    Ys.PathDefault = Zs;
    Ys.PathDestination = $s;
    Ys.PathSource = gt;
    Ys.SortingForwards = vt;
    Ys.SortingReverse = wt;
    Ys.SortingAscending = xt;
    Ys.SortingDescending = yt;
    Ys.AlignmentCenterSubtrees = $t;
    Ys.AlignmentCenterChildren = au;
    Ys.AlignmentStart = Rt;
    Ys.AlignmentEnd = Jt;
    Ys.AlignmentBus = At;
    Ys.AlignmentBusBranching = qt;
    Ys.AlignmentTopLeftBus = Bt;
    Ys.AlignmentBottomRightBus = Ct;
    Ys.CompactionNone = Ft;
    Ys.CompactionBlock = Ht;
    Ys.StyleLayered = at;
    Ys.StyleLastParents = ut;
    Ys.StyleAlternating = tt;
    Ys.StyleRootOnly = st;
    Ys.ArrangementVertical = ct;
    Ys.ArrangementHorizontal = iu;
    Ys.ArrangementFixedRoots = ft;
    Ys.LayerIndividual = bt;
    Ys.LayerSiblings = ot;
    Ys.LayerUniform = nt;

    function dt(a) {
        Qp.call(this, a)
    }
    la(dt, Qp);
    dt.prototype.createVertex = function () {
        return new et(this)
    };
    dt.prototype.createEdge = function () {
        return new ku(this)
    };
    dt.className = "TreeNetwork";

    function et(a) {
        Tp.call(this, a);
        this.Ha = !1;
        this.Ic = null;
        this.I = [];
        this.jd = this.Za = this.Y = this.Ia = 0;
        this.Zc = null;
        this.S = new I(0, 0);
        this.ta = new M(0, 0);
        this.da = new I(0, 0);
        this.Gm = this.Fm = this.rA = !1;
        this.Iq = this.vq = null;
        this.Qc = vt;
        this.Kc = $p;
        this.Yb = 0;
        this.vb = au;
        this.ks = this.js = 0;
        this.ls = 20;
        this.me = 50;
        this.Xr = 0;
        this.jr = Ht;
        this.br = 0;
        this.ys = 25;
        this.ir = this.xs = 10;
        this.hr = 20;
        this.Ks = !0;
        this.us = Zc;
        this.Js = !0;
        this.er = Zc
    }
    la(et, Tp);
    et.prototype.copyInheritedPropertiesFrom = function (a) {
        null !== a && (this.Qc = a.sorting, this.Kc = a.comparer, this.Yb = a.angle, this.vb = a.alignment, this.js = a.nodeIndent, this.ks = a.nodeIndentPastParent, this.ls = a.nodeSpacing, this.me = a.layerSpacing, this.Xr = a.layerSpacingParentOverlap, this.jr = a.compaction, this.br = a.breadthLimit, this.ys = a.rowSpacing, this.xs = a.rowIndent, this.ir = a.commentSpacing, this.hr = a.commentMargin, this.Ks = a.setsPortSpot, this.us = a.portSpot, this.Js = a.setsChildPortSpot, this.er = a.childPortSpot)
    };
    ma.Object.defineProperties(et.prototype, {
        initialized: {
            get: function () {
                return this.Ha
            },
            set: function (a) {
                this.Ha !== a && (this.Ha = a)
            }
        },
        parent: {
            get: function () {
                return this.Ic
            },
            set: function (a) {
                this.Ic !== a && (this.Ic = a)
            }
        },
        children: {
            get: function () {
                return this.I
            },
            set: function (a) {
                if (this.I !== a) {
                    if (null !== a)
                        for (var b = a.length, c = 0; c < b; c++);
                    this.I = a
                }
            }
        },
        level: {
            get: function () {
                return this.Ia
            },
            set: function (a) {
                this.Ia !==
                    a && (this.Ia = a)
            }
        },
        descendantCount: {
            get: function () {
                return this.Y
            },
            set: function (a) {
                this.Y !== a && (this.Y = a)
            }
        },
        maxChildrenCount: {
            get: function () {
                return this.Za
            },
            set: function (a) {
                this.Za !== a && (this.Za = a)
            }
        },
        maxGenerationCount: {
            get: function () {
                return this.jd
            },
            set: function (a) {
                this.jd !== a && (this.jd = a)
            }
        },
        comments: {
            get: function () {
                return this.Zc
            },
            set: function (a) {
                if (this.Zc !== a) {
                    if (null !== a)
                        for (var b =
                                a.length, c = 0; c < b; c++);
                    this.Zc = a
                }
            }
        },
        sorting: {
            get: function () {
                return this.Qc
            },
            set: function (a) {
                this.Qc !== a && (this.Qc = a)
            }
        },
        comparer: {
            get: function () {
                return this.Kc
            },
            set: function (a) {
                this.Kc !== a && (this.Kc = a)
            }
        },
        angle: {
            get: function () {
                return this.Yb
            },
            set: function (a) {
                this.Yb !== a && (this.Yb = a)
            }
        },
        alignment: {
            get: function () {
                return this.vb
            },
            set: function (a) {
                this.vb !== a && (this.vb = a)
            }
        },
        nodeIndent: {
            get: function () {
                return this.js
            },
            set: function (a) {
                this.js !== a && (this.js = a)
            }
        },
        nodeIndentPastParent: {
            get: function () {
                return this.ks
            },
            set: function (a) {
                this.ks !== a && (this.ks = a)
            }
        },
        nodeSpacing: {
            get: function () {
                return this.ls
            },
            set: function (a) {
                this.ls !== a && (this.ls = a)
            }
        },
        layerSpacing: {
            get: function () {
                return this.me
            },
            set: function (a) {
                this.me !== a && (this.me = a)
            }
        },
        layerSpacingParentOverlap: {
            get: function () {
                return this.Xr
            },
            set: function (a) {
                this.Xr !== a && (this.Xr = a)
            }
        },
        compaction: {
            get: function () {
                return this.jr
            },
            set: function (a) {
                this.jr !== a && (this.jr = a)
            }
        },
        breadthLimit: {
            get: function () {
                return this.br
            },
            set: function (a) {
                this.br !== a && (this.br = a)
            }
        },
        rowSpacing: {
            get: function () {
                return this.ys
            },
            set: function (a) {
                this.ys !== a && (this.ys = a)
            }
        },
        rowIndent: {
            get: function () {
                return this.xs
            },
            set: function (a) {
                this.xs !==
                    a && (this.xs = a)
            }
        },
        commentSpacing: {
            get: function () {
                return this.ir
            },
            set: function (a) {
                this.ir !== a && (this.ir = a)
            }
        },
        commentMargin: {
            get: function () {
                return this.hr
            },
            set: function (a) {
                this.hr !== a && (this.hr = a)
            }
        },
        setsPortSpot: {
            get: function () {
                return this.Ks
            },
            set: function (a) {
                this.Ks !== a && (this.Ks = a)
            }
        },
        portSpot: {
            get: function () {
                return this.us
            },
            set: function (a) {
                this.us.w(a) || (this.us = a)
            }
        },
        setsChildPortSpot: {
            get: function () {
                return this.Js
            },
            set: function (a) {
                this.Js !== a && (this.Js = a)
            }
        },
        childPortSpot: {
            get: function () {
                return this.er
            },
            set: function (a) {
                this.er.w(a) || (this.er = a)
            }
        },
        childrenCount: {
            get: function () {
                return this.children.length
            }
        },
        relativePosition: {
            get: function () {
                return this.S
            },
            set: function (a) {
                this.S.set(a)
            }
        },
        subtreeSize: {
            get: function () {
                return this.ta
            },
            set: function (a) {
                this.ta.set(a)
            }
        },
        subtreeOffset: {
            get: function () {
                return this.da
            },
            set: function (a) {
                this.da.set(a)
            }
        }
    });
    et.className = "TreeVertex";

    function ku(a) {
        Up.call(this, a);
        this.Ju = new I(0, 0)
    }
    la(ku, Up);
    ku.prototype.commit = function () {
        var a = this.link;
        if (null !== a && !a.isAvoiding) {
            var b = this.network.layout,
                c = null,
                d = null;
            switch (b.$c) {
                case $s:
                    c = this.fromVertex;
                    d = this.toVertex;
                    break;
                case gt:
                    c = this.toVertex;
                    d = this.fromVertex;
                    break;
                default:
                    B("Unhandled path value " + b.$c.toString())
            }
            if (null !== c && null !== d)
                if (b = this.Ju, 0 !== b.x || 0 !== b.y || c.rA) {
                    d = c.bounds;
                    var e = It(c),
                        f = Kt(c),
                        g = c.rowSpacing;
                    a.hj();
                    var h = a.curve === qg,
                        k = a.isOrthogonal,
                        l;
                    a.Nh();
                    if (k || h) {
                        for (l = 2; 4 < a.pointsCount;) a.Xv(2);
                        var m = a.i(1);
                        var n = a.i(2)
                    } else {
                        for (l =
                            1; 3 < a.pointsCount;) a.Xv(1);
                        m = a.i(0);
                        n = a.i(a.pointsCount - 1)
                    }
                    var p = a.i(a.pointsCount - 1);
                    0 === e ? (c.alignment === Jt ? (e = d.bottom + b.y, 0 === b.y && m.y > p.y + c.rowIndent && (e = Math.min(e, Math.max(m.y, e - Qt(c))))) : c.alignment === Rt ? (e = d.top + b.y, 0 === b.y && m.y < p.y - c.rowIndent && (e = Math.max(e, Math.min(m.y, e + Qt(c))))) : e = c.Fm || c.Gm && 1 === c.maxGenerationCount ? d.top - c.da.y + b.y : d.y + d.height / 2 + b.y, h ? (a.m(l, m.x, e), l++, a.m(l, d.right + f, e), l++, a.m(l, d.right + f + (b.x - g) / 3, e), l++, a.m(l, d.right + f + 2 * (b.x - g) / 3, e), l++, a.m(l, d.right + f + (b.x -
                        g), e), l++, a.m(l, n.x, e)) : (k && (a.m(l, d.right + f / 2, m.y), l++), a.m(l, d.right + f / 2, e), l++, a.m(l, d.right + f + b.x - (k ? g / 2 : g), e), l++, k && a.m(l, a.i(l - 1).x, n.y))) : 90 === e ? (c.alignment === Jt ? (e = d.right + b.x, 0 === b.x && m.x > p.x + c.rowIndent && (e = Math.min(e, Math.max(m.x, e - Qt(c))))) : c.alignment === Rt ? (e = d.left + b.x, 0 === b.x && m.x < p.x - c.rowIndent && (e = Math.max(e, Math.min(m.x, e + Qt(c))))) : e = c.Fm || c.Gm && 1 === c.maxGenerationCount ? d.left - c.da.x + b.x : d.x + d.width / 2 + b.x, h ? (a.m(l, e, m.y), l++, a.m(l, e, d.bottom + f), l++, a.m(l, e, d.bottom + f + (b.y - g) /
                        3), l++, a.m(l, e, d.bottom + f + 2 * (b.y - g) / 3), l++, a.m(l, e, d.bottom + f + (b.y - g)), l++, a.m(l, e, n.y)) : (k && (a.m(l, m.x, d.bottom + f / 2), l++), a.m(l, e, d.bottom + f / 2), l++, a.m(l, e, d.bottom + f + b.y - (k ? g / 2 : g)), l++, k && a.m(l, n.x, a.i(l - 1).y))) : 180 === e ? (c.alignment === Jt ? (e = d.bottom + b.y, 0 === b.y && m.y > p.y + c.rowIndent && (e = Math.min(e, Math.max(m.y, e - Qt(c))))) : c.alignment === Rt ? (e = d.top + b.y, 0 === b.y && m.y < p.y - c.rowIndent && (e = Math.max(e, Math.min(m.y, e + Qt(c))))) : e = c.Fm || c.Gm && 1 === c.maxGenerationCount ? d.top - c.da.y + b.y : d.y + d.height / 2 + b.y, h ?
                        (a.m(l, m.x, e), l++, a.m(l, d.left - f, e), l++, a.m(l, d.left - f + (b.x + g) / 3, e), l++, a.m(l, d.left - f + 2 * (b.x + g) / 3, e), l++, a.m(l, d.left - f + (b.x + g), e), l++, a.m(l, n.x, e)) : (k && (a.m(l, d.left - f / 2, m.y), l++), a.m(l, d.left - f / 2, e), l++, a.m(l, d.left - f + b.x + (k ? g / 2 : g), e), l++, k && a.m(l, a.i(l - 1).x, n.y))) : 270 === e ? (c.alignment === Jt ? (e = d.right + b.x, 0 === b.x && m.x > p.x + c.rowIndent && (e = Math.min(e, Math.max(m.x, e - Qt(c))))) : c.alignment === Rt ? (e = d.left + b.x, 0 === b.x && m.x < p.x - c.rowIndent && (e = Math.max(e, Math.min(m.x, e + Qt(c))))) : e = c.Fm || c.Gm && 1 === c.maxGenerationCount ?
                        d.left - c.da.x + b.x : d.x + d.width / 2 + b.x, h ? (a.m(l, e, m.y), l++, a.m(l, e, d.top - f), l++, a.m(l, e, d.top - f + (b.y + g) / 3), l++, a.m(l, e, d.top - f + 2 * (b.y + g) / 3), l++, a.m(l, e, d.top - f + (b.y + g)), l++, a.m(l, e, n.y)) : (k && (a.m(l, m.x, d.top - f / 2), l++), a.m(l, e, d.top - f / 2), l++, a.m(l, e, d.top - f + b.y + (k ? g / 2 : g)), l++, k && a.m(l, n.x, a.i(l - 1).y))) : B("Invalid angle " + e);
                    a.rf()
                } else a = this.link, f = It(c), f !== It(d) && (g = Kt(c), h = c.bounds, c = d.bounds, 0 === f && c.left - h.right < g + 1 || 90 === f && c.top - h.bottom < g + 1 || 180 === f && h.left - c.right < g + 1 || 270 === f && h.top - c.bottom <
                    g + 1 || (a.hj(), c = a.curve === qg, b = a.isOrthogonal, d = zt(this.fromVertex.alignment), a.Nh(), 0 === f ? (f = h.right + g / 2, c ? 4 === a.pointsCount && (c = a.i(3).y, a.K(1, f - 20, a.i(1).y), a.m(2, f - 20, c), a.m(3, f, c), a.m(4, f + 20, c), a.K(5, a.i(5).x, c)) : b ? d ? a.K(3, a.i(2).x, a.i(4).y) : 6 === a.pointsCount && (a.K(2, f, a.i(2).y), a.K(3, f, a.i(3).y)) : 4 === a.pointsCount ? a.m(2, f, a.i(2).y) : 3 === a.pointsCount ? a.K(1, f, a.i(2).y) : 2 === a.pointsCount && a.m(1, f, a.i(1).y)) : 90 === f ? (f = h.bottom + g / 2, c ? 4 === a.pointsCount && (c = a.i(3).x, a.K(1, a.i(1).x, f - 20), a.m(2, c, f - 20),
                        a.m(3, c, f), a.m(4, c, f + 20), a.K(5, c, a.i(5).y)) : b ? d ? a.K(3, a.i(2).x, a.i(4).y) : 6 === a.pointsCount && (a.K(2, a.i(2).x, f), a.K(3, a.i(3).x, f)) : 4 === a.pointsCount ? a.m(2, a.i(2).x, f) : 3 === a.pointsCount ? a.K(1, a.i(2).x, f) : 2 === a.pointsCount && a.m(1, a.i(1).x, f)) : 180 === f ? (f = h.left - g / 2, c ? 4 === a.pointsCount && (c = a.i(3).y, a.K(1, f + 20, a.i(1).y), a.m(2, f + 20, c), a.m(3, f, c), a.m(4, f - 20, c), a.K(5, a.i(5).x, c)) : b ? d ? a.K(3, a.i(2).x, a.i(4).y) : 6 === a.pointsCount && (a.K(2, f, a.i(2).y), a.K(3, f, a.i(3).y)) : 4 === a.pointsCount ? a.m(2, f, a.i(2).y) : 3 === a.pointsCount ?
                        a.K(1, f, a.i(2).y) : 2 === a.pointsCount && a.m(1, f, a.i(1).y)) : 270 === f && (f = h.top - g / 2, c ? 4 === a.pointsCount && (c = a.i(3).x, a.K(1, a.i(1).x, f + 20), a.m(2, c, f + 20), a.m(3, c, f), a.m(4, c, f - 20), a.K(5, c, a.i(5).y)) : b ? d ? a.K(3, a.i(2).x, a.i(4).y) : 6 === a.pointsCount && (a.K(2, a.i(2).x, f), a.K(3, a.i(3).x, f)) : 4 === a.pointsCount ? a.m(2, a.i(2).x, f) : 3 === a.pointsCount ? a.K(1, a.i(2).x, f) : 2 === a.pointsCount && a.m(1, a.i(1).x, f)), a.rf()))
        }
    };
    ma.Object.defineProperties(ku.prototype, {
        relativePoint: {
            get: function () {
                return this.Ju
            },
            set: function (a) {
                this.Ju.set(a)
            }
        }
    });
    ku.className = "TreeEdge";
    Oa.prototype.initializeStandardTools = function () {
        this.Va("Action", new Eg, this.mouseDownTools);
        this.Va("Relinking", new Xe, this.mouseDownTools);
        this.Va("LinkReshaping", new cg, this.mouseDownTools);
        this.Va("Rotating", new Cg, this.mouseDownTools);
        this.Va("Resizing", new vg, this.mouseDownTools);
        this.Va("Linking", new Wf, this.mouseMoveTools);
        this.Va("Dragging", new Qe, this.mouseMoveTools);
        this.Va("DragSelecting", new Hg, this.mouseMoveTools);
        this.Va("Panning", new Ig, this.mouseMoveTools);
        this.Va("ContextMenu", new Kg,
            this.mouseUpTools);
        this.Va("TextEditing", new Vg, this.mouseUpTools);
        this.Va("ClickCreating", new Fg, this.mouseUpTools);
        this.Va("ClickSelecting", new Dg, this.mouseUpTools)
    };
    An("Horizontal", new xm);
    An("Spot", new zm);
    An("Table", new Dm);
    An("Viewbox", new Im);
    An("TableRow", new Gm);
    An("TableColumn", new Hm);
    An("Graduated", new Sm);
    An("Grid", new Jm);
    qi.add(br.type, sq);
    qi.add(fr.type, Gq);
    var lu = x.go,
        mu = {
            get licenseKey() {
                return R.licenseKey
            },
            set licenseKey(a) {
                R.licenseKey = a
            },
            get version() {
                return R.version
            },
            Group: T,
            EnumValue: D,
            List: E,
            Set: F,
            Map: H,
            Point: I,
            Size: M,
            Rect: N,
            Margin: oc,
            Spot: P,
            Geometry: td,
            PathFigure: ke,
            PathSegment: le,
            InputEvent: ne,
            DiagramEvent: pe,
            ChangedEvent: qe,
            Model: Z,
            GraphLinksModel: br,
            TreeModel: fr,
            Binding: Ji,
            Transaction: ve,
            UndoManager: we,
            CommandHandler: Rk,
            Tool: ye,
            DraggingTool: Qe,
            DraggingInfo: df,
            LinkingBaseTool: Kf,
            LinkingTool: Wf,
            RelinkingTool: Xe,
            LinkReshapingTool: cg,
            ResizingTool: vg,
            RotatingTool: Cg,
            ClickSelectingTool: Dg,
            ActionTool: Eg,
            ClickCreatingTool: Fg,
            HTMLInfo: Oe,
            ContextMenuTool: Kg,
            DragSelectingTool: Hg,
            PanningTool: Ig,
            TextEditingTool: Vg,
            ToolManager: Oa,
            Animation: yh,
            AnimationManager: uh,
            AnimationTrigger: $h,
            Layer: ei,
            Diagram: R,
            Palette: Jk,
            Overview: Mk,
            Brush: tl,
            GraphObject: Y,
            Panel: X,
            RowColumnDefinition: Rj,
            Shape: Lf,
            TextBlock: Wg,
            TextBlockMetrics: jo,
            Picture: kk,
            Part: U,
            Adornment: Je,
            Node: W,
            Link: S,
            Placeholder: xg,
            Layout: Ci,
            LayoutNetwork: Qp,
            LayoutVertex: Tp,
            LayoutEdge: Up,
            GridLayout: Lk,
            PanelLayout: Ol,
            CircularLayout: gr,
            CircularNetwork: yr,
            CircularVertex: Lr,
            CircularEdge: Mr,
            ForceDirectedLayout: Nr,
            ForceDirectedNetwork: Or,
            ForceDirectedVertex: $r,
            ForceDirectedEdge: as,
            LayeredDigraphLayout: bs,
            LayeredDigraphNetwork: gs,
            LayeredDigraphVertex: Ws,
            LayeredDigraphEdge: Xs,
            TreeLayout: Ys,
            TreeNetwork: dt,
            TreeVertex: et,
            TreeEdge: ku
        };
    lu && lu.version !== mu.version && B("WARNING: a `go` object on the root object is already defined with a version mismatch." + lu.version + ". Replaced with version: " + mu.version);
    x.go = mu;
    ("undefined" === typeof x || "undefined" === typeof x.module || "object" !== typeof x.module.exports) && x.define && "function" === typeof x.define && x.define.amd && x.define(mu);
    'undefined' !== typeof module && 'object' === typeof module.exports && (module.exports = 'undefined' !== typeof global ? global.go : self.go);
})();